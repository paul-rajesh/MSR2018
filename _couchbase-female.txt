===Database gerrit_couchbase

== Dumping data for table inline_comments

|it will be always skipped, because it doesn't have this attribute yet
|value is not defined at this point
|no need in else statement, currAdmins are defined in the top of function and they are not changed
|Sangharsh's comment from 5th patch set. Delete assignments
|less code is always better, just return your expression, there is no need to put if else block
|there is no need to do json.loads(). Content is a string
|assertTrue
|assertTrue
|don't use async rebalance if you don't want to use it in parallel, just use self.cluster.rebalance
|assertFalse
|same
|add finally block
in your case if you have an exception it won't be disconnected and connection will be kept alive
|same
|for next commit : please use regexp for that things
|what is done? nothing is changed
|list2_usernames = [user.userName for user in list2] list1 == list2_usernames
|less code is more readable, but is up to you
|this will be eliminated if first comment will de addressed
|same as above
|why _http_request is not used?
|I think this has to be a parameter but with default value
|can this be handled by parameters for tests case? i think there is no need to have it hardcoded
|a message will be usefull here
|this can be handled by self.nodes_init param
|this is second case, isn't it?
|handled by common tear down
|same
|for all asserts it is good to have a message
|this case is equal to previous except user, so it can be a parameter
|also equal
|could you please explain what does this assert try to do? and the one from else clause also
|equal to previous, can be handled in one
|at least do a common function with steps, right now it looks like copy paste
|at least do a common function with steps, right now it looks like copy paste
|also equal
|handled by nodes_init
|handled by tear down
|same as above
|same comments are applicable
|in your case if you have an exception it won't be disconnected and connection will be kept alive
|disconnect has to be in finally block i think
|in your case if you have an exception it won't be disconnected and connection will be kept alive
|same as above
|variables names have to give more sense of what they are meaning
|check at least the length
|how does response looks like? can we simplify this?
|list2_usernames = [user.userName for user in list2]
list1 == list2_usernames
|for user in list1:
    if user not in list2:
       return False
or actually may be list1 == list2
or if you need just names compare list of names
|return flag == len(list1)
|less code is more readable, but is up to you
|skip_rebalance option is not needed here, it is always skipped unless nodes_init is provided
why do you skip_cleanup?
|self._http_request(api, 'POST', params=params, headers=header)
will do exactly you are doing
|return (status ['status'] == &quot;400&quot; and login == False)
|delete whitespaces
|extra whitespaces
|what i was asking is about Sangharsh's comment, why you are using if-else
|extra whitespaces
|still don't understand why you cannot do 1 line 
return if (status ['status'] == &quot;400&quot; and login == False)
instead of 4
|extra whitespaces
|whitespaces
|there is no need in resetting cluster, tear down will do it for you
|whitespaces
|whitespaces
and a typo: reblance fn, not async_rebalance
|whitespaces and also below
|shell should be defined prior to try block, otherwise finally won't see it
|same as above
|same
|n1ql port is not equal to servers port
|right, ignore this
|this won't work, lets say you start couchbase on port 9000 and then you are trying to start n1ql on the 9000, it won't start
|if not n1ql_port:
|it should have a default one
|if i would have no port n1ql will start, but according to this line it shouldn't
|you change implementation for my tests, please start it with port only if it is provided
|i had no n1ql_port, i start n1ql without it, now the code is started only with port, please don't change the initial logic
|seems like it has to be a list
|for key, value in map.iteritems():
|can we delete a service? only addition is handled
|it is self.fail, lowercase, not sure that it is not case sensative
|I think here can be useful a break
|should be true by default to follow logic that i had for n1ql
|i think it has to be [&quot;children&quot;] for rest api
|i think there should be self.assertEqual(actual_index_name, query_definition.index_name) and a break
|if you want to use return i think here should be self.fail(msg)
|does self.query exists here? may be we need to define it here also
|this one can be omitted, if there is no expected _result --&gt; create it and then run_cbq_query
|can be also run_cbq_query(query=self.gen_results.query)
|i think there should be a variable also, which will contain list of indexes currently created, because if for example we attempted create 3 indexes, 2 of them are cerated, and 1 no, there will be nothing to drop for 3d index and you will have one more trace
|we have this method again? may be is better to put it into a common class?
|do we need to raise an exception here that we don't have enough nodes for test?
|i think there need to be added a check for sherlock version, if i run tests with dp4 i would like to have this variable as False
|useless import
|doesn't exist yet
|not used
|also is not used
|useless import
|what for do we use it, i see setup but don't see usage
|is it run_cbq_query?
|we iterate definitions but don't use query_definition? we do same operation several times
|we iterate definitions but don't use  query_definition? we do same operation several times
|is it run_cbq_query?
|should be under verifydrop also, otherwise will fail
|will not gonna work for all indexes, structure of explain is dynamic
|actual_results['results']
|self.query_using_index_run_with_explain ? instead of two rows
|this method seems to be almost equal to previous, may be it will be better just to have a param like with_explain=True
|same as above, we can use just a list of ops
|same as above, we can use just a list of ops
|already have this method for n1ql, it is a duplicate
|i think we need an import
|I think we need an import
|useless import
|those 3 import are not used
|self.query_definitions are not defined
|self.query_definitions are not defined
expected result won't be {}, it will be almost same, because primary index exists
|self.query_definitions are not defined expected result won't be {}, it will be almost same, because primary index exists
|not used
|is it moxi also? usually it is kv only
|if expected_results: 
is shorter
and also if check same in query_definition there is no need to put an if here
|still valid comment, why we iterate definitions and then pass definitions and not definition to the function?
|same as above
|actually implementation still is not working so may be keys also will be changed, i would keep an eye on this
|this one is almost a copy of previous method, we can just pass a list of one bucket to this one
|same comment, just call run_multi_operations with self.buckets
|still valid: I think we need an import
|does it mean we expect empty results?
|is there any difference in both tests? we do same operations for all buckets
|does it mean we expect empty results?
|I see this:
self.query_using_index(bucket.name, query_definition, expected_results[query_definition.index_name])
and now it will be keyError
|this is starting commit, this week more tests will be added
|shell disconnect should be in finally. If there will be an exception it won't disconnect
|how do you handle if there is any exception in thread? currently thread just will be stopped, main thread don't know anything about child thread' exceptions
|for cluster run this won't work, port also has to be parametrized
|shell disconnect has to be in finally block
|I think is better to use rest api here to create buckets. We have separate tests for buckets. And here it will be quicker to use api.
|do we really need deinitialize nodes here? we can just delete buckets, isn't it?
|is there any specific reason why they should? Asking because TestInput parses messages with whitespaces as expected, the hole error is in variable. If I add quotes parser with think that error contains quotes.
|&gt;= will be shorter
|shouldn't be there, retry time is not handled if we add this. we will just stop execution with first try
|why do you delete the timeout?
|if you will get an exception in one of the threads Will it stop the test?
I think thread will be joint and no exception will raise, we need an event variable here I think
|here we also need to set is_crashed()
|here also should be event set
|extra whitespaces are still there
|we probably have to follow same logic in all functions of rest_client
so probably we have to add here also possibility of having bucket instance, like:
 if isinstance(bucket, Bucket):
	api = '%ssomeapi/%s' % (self.baseUrl, bucket.name)
|try:
            self.rest = RestConnection(server)
        except ServerUnavailableException, e:
            self.log.error(e)
            self.state = FINISHED
            self.set_exception(e)
if we don't try to catch exception here in case of server unavalability our test will hang
|same as above
|add shell disconnect at the end of test
|self.sleep should be here i think
|please add a description for new param
|here also there is one more param frag_value
|same
|add try-except block here, for rest connection, if there will be some issue with connection the task will hang.
|self.servers[0] may be is better to have self.master?
|may be better to have self.servers[self.nodes_init, self.nodes_in + 1 ]?
|add some message here for the assert
|is it same as in autocompaction? if so can we add it to some compaction_base_class?
|see next row
|I think that's ok, if we don't specify same builds we should specify number of nodes of build X and then number of nodes of build Y, so on. These tests can be run for mixed cluster
|create bucket in the test itself if you need it, also you can just run self._bucket_creation(), all necessary buckets will be created
|num_servers is len(self.servers) so
you can pass just self.servers
|i don't get the logic again, why we cannot here just put servrs_in = self.servers[:nodes_init]?
|per previous comment, second iteration will be with self.servers[self.nodes_init:self.nodes_init+self.nodes_in]
|what will happen with [self.servers[self.nu
m_servers-1] if i have nodes_init = 3, nodes_in =1, but in my conf file there are only 4 nodes?
|i think better to have restart_servers methos, I saw restarts  here at least twice
|this is fine, hostname can be 10.10.10.10:8091 (with port)
|i think here we need no run it only for self.servers[:nodes_init]
|sorry, skip my comment
|extra whitespaces
|cluster won't work after shutdown. I think shutdown should go it except block isn't it?
|I think there is a typo, there must be True, with capital t, isn't it?
|do not delete it, increase, or just pass None for your needs
|I would not change it, because we can run teardown prior to setup
|self.servers[:self.nodes_init]?
|query to master should be also passed
|it is better to make it a parameter taken from conf file, and much more better to make it parameter for all the class, but this can be another ticket
|self.create_views(from basetestcase) will create all views
there is no need in async query, they can be run just self.cluster.query_view
|I guess this will fail because it should fail and test expects num_items to be in results
|delete extra whitespaces
|we need an end time here for while cycle for cases when something will go wrong
and also just while set([task.state for task in tasks_ops]) != set([&quot;FINISHED&quot;]): query. There is no need in if else block
|bucket-size is like default value, no need to specify it here
|why 1392? may be better is to use self.quota?
|I think you don't use query in this test, delete it
|self.sleep(60, &quot;Your_message&quot;, no need to divide them in two lines
|still this pick a node part and warm up
and final verification part are the same, may be we can create private functions for  them to not to have duplicate code?
|return None or Exception if not status? right now we will have 'variable referenced before assignment' error if request fails
|same as above
|i think there is a typo, is comma needed here?
|remoteCluster = json.loads(content)?
|I think there is too much code for those cases. Load, ddoc ops and verifications are the same (at the start and at the end of test cases) So I think we just can add param like 'ops' = ['warmup', 'delete'] or something like that. And run test case like if ops == 'blabla', then run this action.
|please add BUGS param here
|add bug comment here(we have param BUGS)
|you don't use dest_buckets
|why do you use QueryView object and not View from document.py? QueryView is designed and used only for viewquery class
|do not hardcode names, especially view_name
|actually, useless check, because it checks for all files in LOG_FILE_NAME_LIST and there is no need to check again one particular file
|node_down is not used
|self.shell already created in parent setup()
|if you are not using output and error -just delete them
|Do we need this file in commit?
|no need in \ in comments
|according to code above this one is not dev_view, so no need in full_set param
|it was false for all unidirection tests, but now you want to check source also. Why?
|if you follow verify_src variable approach, so here also have to be this variable
|same as above
|same as above
|and what if test is ok with empty cluster? and we want to check, there are no buckets? i think we haven't make an assert here
|ok, then it's same operation for both unidirection and bidirection, we can put it out of if block
|after, to make sure some vbuckets already are not in the previous node
|in this case test also have to be failed. We expect only memcached error
|same as above
|again, will this test fail if flush doesn't raise an exception? - No, but it have to.

It's ok to catch any exception. But still we need &lt;else&gt; block:::

    try:
        operation_that_can_throw_error()
    except Exception as exp:
        handle_the_exception_somehow() # assertEqual and other checks
    else:
         #no exception was raised
        operation_that_we_perform_if_we_have_no_error() # we have to fail test here, because we expect an error

and also does this &lt;else Exception&gt; expression exist in python?
|previous option was ok, what is wrong with it?
|there are still extra whitespaces
|we still need &lt;else&gt; block. Example: we expect that error ABC will raise. But it wasn't. Test should fail(expected results are not equal to actual), without &lt;else&gt; block test will pass, which is false positive
|delete extra whitespaces
|also we need &lt;else&gt; block,For the case when an exception will not raise. In this case the test should fail
|are you sure about this param? may just add an argument timeout=180?
|can we make it more logically?
like
end_time = time.time() + timeout
while time.time() &lt; end_time: ...
|just return True? no need in extra param
|just return False?
|may be we can add some timeout here? For cases when it will fail and queue size will not become 0.
|I think you can just wait for stats to match, observing all keys will be slower
|using hostname from the nodes/self will be quicker
|why it is hardcoded? you have self.product param
|if not servers:
    servers = self.servers ?
|if 
i will have only one version,for example 2.2.0. Couchbase will be installed only on one server?
|we don't need format here as i can see. Also do we really need to restart all server for all cases?
|what the difference self.initial_cluster and self.nodes_init
|did you build initial cluster? after changing hostnames servers are reinitialized
|servs_in = self.servers[self.nodes_init:self.nodes_in + self.nodes_init] ?
|cluster.rebalance(...)
we don't need asynchronous method here
|of {0}
|it seems like here should be nodes_in and above nodes_init
|no need in async method
|shell.disconnect
|please create one method for all clases for changing hostname
|again, create one method for all classes
|there is no initial_cluster, add nodes_init=2
|unnecessary
|delete it
|use wait_timeout param
|give more informative names, like for build in builds ...
|again, do we need to restart them for all cases?
|give more informative variable name
|self.sleep(timeout, &lt;your_message&gt;),
|no need in use_hostnames at all for this case use spesifically self.initial_use_ip and add_via_hostname
|please build initial cluster first!!! or is this rebalance when you are trying to build it? then no need in nodes_in here, servers_in = servers[:self.nodes_init]
|no need to pass None, timeout has a default value None in cluster.py
|per above comment, servers[nodes_init:nodes_init+nodes_in]
|same as above, and as i can see here we can use nodes_init+nodes_in, based on my comment above
and no need in None
|same as above - unnecessary total_servers variable
|no need in format
|self.sleep(30, &lt;your_message&gt;)
|you are disconnecting only one shell instance, finally instance should be last statement of your cycle
|give more informative variable name
|assertTrue(var.find(node.ip) == -1, &lt;message&gt;) no need in flag variable or ''.join(var).find ... if it's a list
server is listed with port in nodes/self. In clause will not work
|can our tests define hostnames themselves and do it manually as presetup? also this should work for ini files with ips
|please delete extra whitespace
|what for do you have it as separate function which is duplicated in every test? can we keep it in setUp?
|what will happen if I change order of servers? will be hostname defined as expected?
|why we cannot just self.log.info(master_rest.rename_node(username='Administrator', password='password', port=port, host
name=hostname)) ?
|why you don't use assertTrue or assertEquals here?
|to my mind hostname should be a parameter, and only one test method
|same as above
|delete variables num_items and wait_timeout, you already have them! in parent class
|no need to add self, it can be called like earlier
|xdcr base test already has the instance _timeout
|xdcrbasetests already have _num_items instance
|why False? you have an argument for that
|xdcr base has self._input
|_timeout
|self._num_items
|redundant copy, it's easier to add server argument to _run_observe, and put self.master as default and just call it here
|as the class has no special methods please do not create new conf file, just add a GROUP in conf file if you want to run them separately. And also as there are only 7 rows, i would not add a new class
|this will not gonna work if there bucket_to_load will be None, basically you should check that bucket_to_load is not None and not its name
The name can be only default
|why almost all is commented?
|there will be an exception if no default bucket will be found. I mean bucket_to_load is intoduced only in case it exists. So you should assign None value to it prior to the cycle and then check if bucket_to_load: ...
|create_dir and destination are equal expressions, so no need to put them in if clause
|use basicStats = rest.get_bucket_json('standard_bucket0')['basicStats'], no need a cycle
|probably disconnect should be in a finally block, if your test will fail it won't be disconnected with corrent implementation
|extra whitespace
|what for you are waiting 100 sec? If you want to wait for persistence - wait for it
|you already have an instance, what for you disconnected and connected again
|should this test go separately? RecoveryUseTransferTests exists
|this parameter exists in BaseTestCase
|self.master?
|execute_cbtransfer command exists
|what for do you create a new one?
|create 2 buckets putting a parameter into conf file (this option exists in basetestcase)
and then work with them for bucket in self.buckets: &lt;your_actions_items&gt;
|rest already exists
|bucket_info['basicStats'] is more understandable rather than cycles and ifs
|asserEqual(self.num_items, bucket_info['itemCount'], &quot;&lt;your_message&gt;&quot;)
but you don't really need all this, just call verify_cluster_stats, it will check items according to kv_store
|all tests are here, but tests were added to conf file some commits later
|why we cannot just do get_nodes_self().hostname?
|remove whitespaces
|unnecessary, BaseTestCase have such attribute
|same as above
|may be we can just put it in setup?
|self.master is already available in basetestcase
|what is var? i mean we don't use it, so can we just delete it?
|see above
|why there are two same rows
|and one more shell
|why exactly one?
|in the log is good to point exact ip
|remove whitespaces
|can we just raise exception in rename_node function? and then catch it here
|you can do it in cycle, or use hostname and errors as parameters of test
|add shell disconnect
|this one is not the right way, you should get domain part from for example nslookup, not hardcode it
|do we really need to run setup after renaming each of the servers and not all of them?
|delete whitespaces
|remove this import, all variables that you need has BaseTestCase
|input variable already exists in BaseTestCase
|do we need declare empty hostnames? next row is enough
|may be just to use boolean instead of strings will be better?
|It is usefull to add to log which spesifically ip is not converted, I mean for which node
|add to log the error expected and the error appeared
|same as above
|disconnect should go in finally statement. In case if test will fail it should be disconnected also
|we should not hardcode domain part
|you don't use win_info, do you need it here?
|need a bucket with a specific password, but this option is needed only for these tests
|no, we just want to start it if it is stopped
|The thing is that in setup nodes are rebalanced, bucket is created, it will take time(Filipe's requirement is that tests should pass quickly), so i just do it for the first test, and do clean up for the last test

Based on that I cannot add items in setup because we have tests for empty bucket
|verify_keys_are_sorted function verifies that keys are sorted only, no additional verifications will be performed. Query with 'keys' param should not be sorted
|they are parametrized, see below - nodes_to_add is a parameter to enable rebalance
|if endkey_docid do not exist engine will return all docs till end key and also docs for 1 next key
|this one is a get RQ
|May be you should create your own TimeoutError exception?
|according to code guideline:
Don't use spaces around the '=' sign when used to indicate a keyword argument or a default parameter value.
|the same
|code style
|code style
|rebalance can have 'running' status even with 100%
|do shell.disconnect()
|do shell.disconnect()
|they are different: one for create and one for delete
|no, we are using this function for stopping rebalance when some percentage is reached
|is not enough, monitor_rebalance fails only when percentage is &lt; 0
|code style
|code style
|servs_in = self.servers[1:self.nodes_in + 1]
|self.servers[0]
|servs_out = self.servers[-self.num_servers:]
|extra_servs_in = self.servers[1: i + nodes_init + self.nodes_in]
|the same
|this typo is propagated through all class, the method is named exactly in this way
|why do you have double curls?
|what prefix variable mean? it's not used
|when you will use this variable? it mentioned only in return statement
|xrange(count)
|xrange(num_views)
|the same as above
|the same
|these two loops are repeated 3 times, may be we can create a function?
|and what for you are running negative test with None invalid parameter?
|it will fail, but if you will go trough test you will see that at the end of the tests _check_view_integrity is run. It verifies that results do not contain any error or failures, so these cases are not designed for negative cases(including cases where reduce function is not defined). We need to rewrite all the flow for negative cases. Not sure if we should do it.
|i think here should be if (len(param) &gt; 0):
because earlier stmt was closed with '}' (line 201) so not all of statements should have another brace
|there is one already(prior to first_case)
|now throwing an exception
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1: Code-Review-1

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

force_clean=True,reload_data=True should be added to all tests in sanity, in that case they will run independently
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5ef146192ec4295ddb64643e490a7da1077a5a1c
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a7b8dddc8e539cba13c3e0ac399a95dcfd9d88f6
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Change has been successfully cherry-picked as ef92b5da511568ce6624f27b3d25f484849df3ea
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 0d467b7c9c415cdd8be3f69cf51b50a9c57b8aa3
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as a9197e4ebc1608d2fd3d74d4662ea583c091fce9
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 68eba415769d839b3a2410e12e601821ae206f58
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 0749710fe17da9380318bbddf830a69b4a63fd7e
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 9fe97e9b79b20806d4002928d5a5733d4417364f
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Change has been successfully cherry-picked as bfc050405c7d2065c83109b5f1a0e5fba1ab5965
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as cdad5372a7891e6644dbf302504b8f99d0fa1413
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 6413e2da631e26af0f142b8083a0c792c62a84f1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as dc210e6a152bad97bae59cc17f0f47eb26fbabdf
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d89f765f9eb64369f966168d26964f8367d750a5
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3a6de4ba95229ad1370edb0d0600f300f0213beb
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7b3f664872de4c43223d9784b0f6b2f368492963
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 11fbf9e3f75fe9d69130a0cb9409ffbe66acf428
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3dff9f27a6c58d640b654dff21b7219ee655e0c4
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1229cf6fe74c387aaaa07576740c2e8605efc58a
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e30ff43874aa19a0a5898b28b4d1ffca33ac4668
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Change has been successfully cherry-picked as 4270c2abc47301fbe97410295db002124ae2b9da
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f9156f6d5316794ba357fd26468c6e7524fa001c
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 4e24c2f6ec9d98432367c8562f1ced35916e59e9
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 71e94d39cd3d8944c1e882421ff1888f202a5585
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 8211c1a21df7fcb81d5ba34ca8ed9dffeb26a7ea
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d950d93d2c6c84b433fb05c7c6f8eb41a577d4b8
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 28b0ae63b8102184282606f72c2327f8d3e4db9d
|Uploaded patch set 1.
|Abandoned
|Patch Set 1:

(26 comments)
|Patch Set 1:

(6 comments)
|Patch Set 5:

(7 comments)
|Patch Set 7:

(15 comments)
|Patch Set 7:

(2 comments)
|Patch Set 8:

(10 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cf4aad79c55e73396124555400425d3fd0203c5a
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8cf522cf51893bcd5ce772f76ec830f59204444b
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 16cb4aad6323ac67ed98d865f27238550ab59649
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as d96886d1cf07994ba0fa68e0391979114347ff39
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bc1090a84233d6c1fc69ae9d06384c77efc87859
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as d7230fac1cdc134f409abe6316b6b626b182c63a
|Patch Set 2:

(4 comments)
|Patch Set 2:

(3 comments)
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2:

can you describe deeper what exactly is wrong? Is cbq-engine started? is path calculated correctly? any errors? i test it with linux and it works
|Uploaded patch set 3.
|Patch Set 3:

can you try again? perhaps it is not started for first call
|Patch Set 4:

[tuq_client]
goroot:/tmp/tuq_git/go
gopath:/tmp/tuq_git/gocode
sherlock_path:/tmp/tmp
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6dff16da49a33b27fdd392afbc5d366cd9bbaeba
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ab6714da6de4ef5bdbe35962c1d46d36835f4558
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a70e9c5225f12b68cfda6a6a9e675580d9b4256f
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e53a09a617ca228d50f1608f9a28cc9e0c136828
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d883eaaccf33b3960ef92c162352fb9daf0f4a7e
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 00b71c1ee3eec075108c72632ad2681756727be0
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 2256c8598c763f02141834924e868be20b055dae
|Patch Set 3:

(3 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 27a69c64d8f6aef249daaa2a04d21149bb130e96
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 37fb90b081f6d0ae43c0b51676326cd0eaeb6c5f
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as a4511e241b07d1611b32291afc38723eeb51db25
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 15a7f1de058fa29ec9027c09790d661b7d3f08e6
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c1a1678ef94ffa6e79bf47923010c41a3f768f88
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 77b39a54b34ce42aacef48320eba54d782668842
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 42695436c599f546c33707f64eea123a587835bf
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 38c79d4b896bc5615b3baa418108a59dfc4d232a
|Patch Set 1: Code-Review-2

per my understanding this code doesn't check that it have to check.
I understand it like:
1- there are 1 ddoc with 1(or more) valid views and 1(or more) views with invalid map fn
2 - we query valid views - we see all expected docs
3 - we query view with invalid map fn - it returns an error in query, we catch it. If there is no exception we fail the test
|Patch Set 1:

as per Filipe it have to return error even if we see error during indexing phase
|Patch Set 1:

per my understanding, as of a user, If something is wrong, I want to see an error. It doesn't matter for me if it is an index error or query error.
|Patch Set 1:

From email thread (Meenakshi and Filipe):
&gt; Here when we query view test1 run time error is being generated and gets
&gt; logged in the mapreduce_errors log file (present in
&gt; /opt/couchbase/var/lib/couchbase/logs) and query results displayed is
&gt;
&gt; {&quot;total_rows&quot;:0,&quot;rows&quot;:[
&gt; ]
&gt; }
&gt;
&gt; Thus here we would like to confirm that whether this is expected behaviour
&gt; or we should expect an error to be displayed for the user too while
&gt; querying, as in this case no error is getting displayed to user that there
&gt; is some error in map function. Please suggest
No, it is not supposed.
Try 2.5.0 or any previous release. 3.0/master is currently broken when
using the full stack (couchdb standalone has unit tests for that and
they pass). There's a couple jira tickets open for 3.0 where under
several cases view results are empty.
|Patch Set 1: -Code-Review
|Patch Set 6:

(12 comments)
|Patch Set 9:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 30f2a0e115cc883404ba0101ba0941a467f78c7d
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d58e4a641f3ea91ed178d43d3a6cc580e80ff643
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 42a27c0281d1b116b1ac5974728253b09a9e1e93
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2777fa6601eaa5a9e37a948b3fd8547f551483fe
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as d28ecc8a042c70a4b5cddad85cd22b93e38f6778
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 82634fa1abe9395208736847da251f0030b973df
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 046c03fa154c3e2e29aa7b5d6574d2186cc10adf
|Uploaded patch set 1.
|Change has been successfully cherry-picked as aedd2e3cc5e29164c42e4e6adea65c42a844f8ce
|Patch Set 4:

(27 comments)
|Patch Set 11:

(9 comments)
|Patch Set 12:

(1 comment)
|Patch Set 14: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 6624f66e84c452accef913d81c480feef6607a82
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 0b2bb7a53e350f90737112457877ef2c05ca482a
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 36106b92948bd1557df27a9ab8ae581ed6b75dac
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8e3df2f2b57b7f57dcf739e8c5bba320306a52e6
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8d918de12bf6287ce523101559b2d06db2a83e02
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2344e818b4201ffdcaa0f886c78cef149078887c
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c46f6ab21dc999cd4c1f4c263046496f2fa0305c
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9120cbcd53ae89ee97d30e2ab3f3f6fb47e31286
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 8424d921641ed059e01c8fe5a8f81f8ca1e136d7
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as a53dd4dfd7d6b9802e20b7a169b3d5a1964cff84
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 6: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 8b519f22c82279e6ba2f008f59b9f309eb052499
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 31615f51aa5ebfdee98665b2526114df1a2eea4c
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 26c6819c9c18c81b4d56ba3e7c3e046c0bfde541
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 7e431629885b3ef07ebd626a1c199f3a3fd01e21
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b224dad69ae7914d27ba76a804988e613155852b
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7447af34d0c7d792f2a4bcc2f44f5edd698c507e
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 1394025cb6cce9b500455343b12ed32212c66d6c
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 17446a94033a19e471fd231f8a50ed8dee51d7fc
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 65af7d91cbe2239c78e1462699fd1c2427c8a723
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 61aee56cbc3345457da51b1b06e26dd63d286d1b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 750b25cd5da1669411d51359175c6dc5206140c1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4c22bfc1690b91e1a671af0b0bb0fd792832df31
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9e55f86b841f7cb7f8ab5ef7af9dffb33be3e9da
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 26c281f37f6a9ec4369e922b51385bdea3973d17
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8600baa521d4f9c0b4368b23a20ec4bccf0b0221
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e9daaa3ddd40874629a10faf6b987fe58a2a4921
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as ebeb55cd7cd3e0d01d2bc01147c360cf095ba870
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9392202a410ee1476fbc47c2edeb1969b531a3b1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 5f81e24583637ac22fa23699cb985a0a71960997
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as a0fa7aa8fefd009b4bf5493b4e35032af3a05df5
|Patch Set 2:

(4 comments)
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

i am waiting for explain bug to fix to add those tests to a suite, as of now they will fail, we actually don't know if queries use index or not
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 5915dcfc72a4f9f5645c8197f30fdbeebd661d18
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 6c54ed5cb7bdd873a4949fd20dfe0ee5492a9bd2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 7dc0d2a96241b630667e0ba19ea82632dd75a0c1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 5262e31eaacb516b2f24470c3cbb4b526d29f0f3
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as dd48635f522af2748d22a1fa45f54d57cb92114b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as ba280321f98fd9652e347a176e6bb4217bf757b0
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 81a02fb9bee849ed4ed5afdc5ab9f3841bd0843f
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as e8af1e1da308f406a96b65abcc1308a85771a0af
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 3889f8de574c3a610470d823c8de74ccb6c11b33
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as ec17f464be23af362c26d8d892dc95201a5273fb
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 84f9022e326e843dc4732569694066850ef524fd
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ecde5e1308ccb7cf24f2e5f99b9f7a7d1e70df7d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 989be5a3c928d314b3577ef451dc4d15e06aa50c
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as 79fd7838b1639e0379bc36d05244e676566a3f72
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as 81325134ff155a5a5cb91dce10a8718f1715ab0b
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Change has been successfully cherry-picked as 8a443e37589f1bfbee662de3e058e6fcdbf53186
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Change has been successfully cherry-picked as 1ded970ac679f081594aeb4a6ab4a1fc0a9d7862
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8b5813944eef0d4d2f4274f7eb5ab8820d84ab94
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c019bf6d4b626310d7ebb50ea871750d8861e49b
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c88e024528496ebe1525733278a01a05e22f40ec
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c6dd3de64cfe1733978674761c674acabcbb44cd
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 903296b93917eda006a74b18ad15e1e9711e68b8
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1c6e63c368ca7ce78f57033e2fd1db67c7b5b120
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5af8926fe344040f296898ca87dc93c4137f3cbb
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 62a4fa28a15ab8d37ec8efe6954d71f4ebcb9897
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 84255c5411dc064e4d70f265e6640515b4fd2e01
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 43c3d5a6bcb215e3d7224ae4eaf0bebbd70d5f19
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6f2f269c123cbdb2a49b9a00bccf4adf2d6c0cda
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0e54f998428a5f895cee42cec2007bd9d30c9692
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bb736645e7144eb9b3d3b9ecd6dea59ba217ad6f
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 57bba5ec682e8d2654cb6aba698eba470bee9548
|Uploaded patch set 1.
|Change has been successfully cherry-picked as a51efd6c36f99cef4ff6514a12e5fcc152621eb9
|Uploaded patch set 1.
|Uploaded patch set 1.
|Change has been successfully cherry-picked as c8a271c463cb94263e6dfa08a3b55e28b8c6d93b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 579feb96042126271e6dde2512354e9a0973f7c6
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 2884ab387360e6c5b424900c8b53dc56144947ed
|Uploaded patch set 1.
|Change has been successfully cherry-picked as a506f1cf37a5edebed5103e7eb71928792869c55
|Patch Set 16:

(2 comments)
|Patch Set 17: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 0dc850474723205aca2e9654158484f9e053ef0c
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1b4142a2d4c66bce9609ae5322a7435d7197c738
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as de03d450196d2e8129e1d2129196574e5d118123
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as f860bdeaaf14bd32a8af53180ce07bf059119f2d
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as f488a03353e31c56a08f15c4de4160f6efed38d4
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as e70a1d2185f87f2414209c15963f7fc141bffee3
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 5a00d613c3b10af2b5d88c9de2cee61c8f182908
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 1902439b686fcf63422eb7d551805522dbb6896d
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as b51f53f68c7600c622e0dedcaf0003db3fb8e03c
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as a0b9658191dae67ef486877a1c3810cd7a8679cb
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 894d2a670df6fcc643d8d0e87d0691a00f0125aa
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0014490b1430f52dc75fbb188b2256d092e86bf7
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 1bd8f4984e3258ac97176b12f07bb603a51039d7
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 2f7163c69b42dde737adfba188aa47b051fe53fa
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 26dd6ac4fb70a8968775ed16de99b36cf214129a
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 9bd193376923268908b0958905345d36e5fd375b
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3001d23d5e6f9859132c404f39d9f6bccc112dec
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4d5b1afc12f7a96519f95b295a0acbba811bedcd
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 21d037d7f0d7c5f7578f9c32de12743ec258878b
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a7798af9840d855c75d0a1d79e918e5b2c9b5221
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 23174e8fba8f95271662e2163efd61ce7d8cfb00
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 4ac596673912c657493831dca51463daee15e43c
|Patch Set 6: Code-Review+2

(1 comment)
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 8705c4a30e82900a1fecd65e2f019000c8de310b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as b03dc10926464a94f178a9490730be6bed6292e8
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 540befe03e30a69486bc425a016ce93791952445
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 2e7f789fdf8c1c82aa6bbd7de7dd72e5a6982ea3
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 5f09e89cda8176fa147aa408e4bae136130855cf
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 0ab139344040aeee81c098f7bcd5ff7067cb10cc
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 58198adc000ad913d24b9cb4117e78cb42e99e3c
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 976dc5893a16b4ae06cb34e6c432be6967402991
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as 546f342113511869b0b8f949df378ba564e16600
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully cherry-picked as 241707bafa067ece42303e3cc84e2b3de4e55d2c
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as c07aa0d11861861bc4f65bbdc1a274a339f4780c
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 4:

(2 comments)
|Patch Set 6:

(2 comments)
|Patch Set 7: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 8b911d3778e42a87543e38b620ae2467ae5696f1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 0fd0e37c6c7344e3f6f0445681db4f03d54fbaeb
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 654af3758e54948195cfc7e94a6152ae640cae91
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 08c1e8049a2f81bf7cf87e458db3ec8798e6e7d3
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 20a3d6ddb254f11a15a9c644b40f237e68506818
|Patch Set 6:

(5 comments)
|Patch Set 9: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 74890cdf964b1b10deba5ed8319bd953744b0a8b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 51a9d81c536692ef584160c96e2f563dd760c451
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 332d23ab245a104d8f0c87bf1d94eee19d8ee7a1
|Patch Set 4: Code-Review+2

(1 comment)
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as af338ae6936d29f6e40099a0548f42c1a0cea301
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 47649b9d1da7e6688290b309235ab38f8b7facec
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 42c3b0c2ec3c18dcce0f036414675a43388763b8
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as 9e0d0fd6cb526ad5e52fc3a33049802c887348ed
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as f5b5bab0ff9868f12a51c838b4e9d8113125d72d
|Patch Set 1:

(8 comments)
|Patch Set 10: Code-Review+2
|Patch Set 11: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 4d395157b5bb4d54eafc668108e0f657b967c666
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 3ffacd485fdbd535d0d27f8add634b010d5adda9
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Change has been successfully cherry-picked as 7d51191b80898cc52b86ffa8401f6d71096b7883
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as dfeb5b0b902d989843720c6d79727044fc56aa41
|Uploaded patch set 1.
|Change has been successfully cherry-picked as d2f4f17e3151a67d6505c08cee89c554737d1e97
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as d2fec4947acd696c3307ccaf52d5465212f98c6a
|Patch Set 1: Code-Review-1

(8 comments)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 1d7af5b238e5ff6009719d4d683f64bed4d69549
|Uploaded patch set 1.
|Change has been successfully cherry-picked as d88cc7c80afe370e4bd1068153c20ef65ecbf400
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as bcb913eac18ff04a61f0d16a230e5fd77fa0ad68
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully cherry-picked as f193ef92899825010f605ff19f4fe9d8930fd2be
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as cd4239d56fd7854faadd8579099dfd63af0ffd67
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 9635b40a5916c015d5ff661d11c549f96bdf2d9e
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 2e01050ce506f0679428de28a3ceba6d9c9d791f
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as acc76a8ff9be514fbc62a6e5a56f0d1466672e8a
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 3f4fbd1d1ff108bb8b4082d5b78f7f742cc0d880
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully cherry-picked as 8bbbe98c1d5b891557f074210e32cb05eda6b2c2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as c9e5f82a089f88b7ab7f0046c5bcb8c1fea069b7
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 4d6c29c1a99f626b61d1037f21bf97bc13ea4d70
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as 66e7c1e9951f6976b353061cbef422498c76e0e6
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as d9d9309166cc8a837a6a3e1b46f95ae4117b8f30
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 4cad380c7e08601a2f249d0f5be90ccd39d70241
|Uploaded patch set 1.
|Change has been successfully cherry-picked as cc0287a9b944ae9fdb12ca1e064be2688b0c97ae
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as c05be213fe8becb4c6e13a1bb99588d121f1a574
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 6899de328b9b5e2f740a155b894563a3fb7ff682
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as 23ed8f84fb3c7760226b7c5c5e8f73c18e829eae
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8cd22610ce040777a779ea91ab9b148f7ec651a9
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as f12aaaf5cadb87da98d117ccd013de3e64a4ea49
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as 4767bc8b1f83ccda9f045a7e44baa879223e5eff
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as 653feabc149d95abdf183e58b6d357244f8c38b5
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as de126055ac5051d17af4adf17eb99b5f3c4e7c04
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 8093108b9ced6af894c778d3396950c4d2c22c4d
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 7fa31c9f7b6777ed4a394a9e954ee7a44048f657
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as a99bb1cbb54e8585aebe2d4876f77e2ffae40216
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 48351227a95cc9f3fa2b4c59797846821de8b7b7
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3c47f1f9c4a758129abedac33388ad9595d30225
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ee163c1ea5e870c8534e12f2b495723084ff8225
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8e2d9416cd045c0484c559dd063de1b1c44d6500
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as 3ed8740ab4f362f4fbc3929cb300106b56344bde
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 62b3f8cd3190223d46ffc1fea0f33aa32c2ebb46
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as ac9fa8f16835d63da397caa9617f1076298ad9e7
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as 4008daf63387640a456c40a7eb3935f768049e28
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f2f814b8b44df8d03c0ad1c1791787bc0fa7fc14
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 08ecd34dbcb5d37ed2c31b0bd092b0ef18e36d0e
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c9273d9ed3dc4f2fe32d07cfaa45fe32dc0bbd32
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Change has been successfully cherry-picked as f3ab9d3df5724ca9e403400862f3ebb8a6e6ea99
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 485a82db0c529024e79feff615258c41bf5e9fbf
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 4: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 82b28b96cd1effce7ea60d87be32f165a2b3a48e
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 69b2a6e693ccb5c89c04d5bb7bef7043c05f024a
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9108619e938bded2ddebe459ef829a6699d9e7e0
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2314d7a73be5975a78e1cc0ec39e1b7dc918c14b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 8b05f69fba703123446aa6e53e2159358c8f91b8
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Code-Review+2
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as 9e20533929a8f7f1a0779b37c571595b7b4cb595
|Uploaded patch set 1.
|Abandoned

already merged in other commit
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 82482803dea995d262f4716224189fe6388e8e54
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2

merged
|Change has been successfully cherry-picked as d8c6ac4cc6448d0488c050667f56ef31c3838e33
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 6f33699379f98e47b603b80d1af934b9ff3aa39d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2

merged conf file
|Change has been successfully cherry-picked as c2fb954bb902c594073211062f0af5633f318b05
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 4bb32576b5f6507d551bf103664fbb04370a2f39
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 445915e0377caacb4b36079c882ff9b4c193ce4e
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 3d089da11f608efcc2b7f10de22ffc5964d8e703
|Patch Set 2: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 7: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as 80602fa424726f54a218e76f41131dbe3f14b7c6
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as b0d1c4aac7f6bd2021e3c3e00bc9dee5a16d3174
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 720c57e32fbf737200761460a926b768331e9493
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as e4fa808a08b0b4a7678d343671c782ac65da7804
|Patch Set 1: Code-Review-2

(1 comment)
|Patch Set 2: Code-Review-1

as far as i understand this changes are valid only for dgm, if so set timeout to none if dgm is true
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as d34f7a9efeddf88dc8089d9aa939868d78acc426
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 39ef85b8d793efcc33a280e2e8d5e7fd477d9c84
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 3ded1266d99157766e10f348c3d7a74b04da0ce7
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as eb4f43f406fb4f2ec4e24b7b0c2c71bb22f865ee
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Change has been successfully cherry-picked as 84b2f770df6d6a1da4c4d3d2426c787aaee0c1e0
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 7fe1bcf22f52bb233c394ca48c01954c08580c9c
|Uploaded patch set 1.
|Change has been successfully cherry-picked as cb6e55ac8ce0aada8478e3a6db26f5ae29bc095f
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 0c9197f8485741ed5e5796382ca8f933e1a05d12
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 92ddd188543fdb857b150beac1133b293d5de1d3
|Uploaded patch set 1.
|Change has been successfully cherry-picked as c11c7031358a72b2bf7482fc18b7a3fe2d0eb5bf
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 24064addb8b5d126fdb166a22b0d01d70fac220b
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as e9f4f5dc0f866f5cacc4dbdefec83fe2160f45cc
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 9aa543d74f679b00b48a395b36d68f4de57a1935
|Uploaded patch set 1.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as e4cf1d22986e72097ae9da8dc0ac1c9ea75cb5fe
|Uploaded patch set 1.
|Change has been successfully cherry-picked as f80ddba8709e11104e817d157bbea1cb40f916ba
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 1c82724ade3c68e628c30c95f2a7d21deeee8ba9
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as b9cdf169ae832d37d51101f1fe7894a1afc123c1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 35926b525655c9a7cbfade1e9a78eeab6851d9d2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f22e0eac3bcf4e9e6f6ba19548661c030b661111
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Change has been successfully cherry-picked as 8c6df5a967610ffb68cd44b72ebec6863d92c7d1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

To check performance test output please check with Pavel
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3736940ccc0d4f444a191800aa94ccc94ec178bf
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1b30e9d4440f2d20b33d41ee887c13c170255245
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e0199ab65150dcdf6312e21ae8d656d42512389e
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5557951c43fc93562f757ce14cdfd0b78f46b2a9
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d99118491e43e5c1f368a1ac1cd424a1921f5f3e
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f9951947dca9c57d5d614f9d6f755cb86ad33412
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f0787e8ad60ec55174365a9c8376b475fcf6ddd0
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as faa25c39097b04fba87fefccb5c6e3cd0c07127e
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f2413e2b5e47f0dd4ac9c38bcfbaabbecb3fa57d
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as b22494fe9743b80d75386772c08823ee948f1ef0
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cb1c4a477606152ade44b5bc09269f931d58a008
|Abandoned
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 1: Code-Review-1

(3 comments)
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 61666c315bf0635f9bbf4ae4c3943ffbaf0958f4
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d6ec48660c74dddd3a9896f413ad7a97edc0aed8
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

approved by Andrei
|Change has been successfully cherry-picked as 1157eda14e25d2f52c8fa54ad7efd974f481f207
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased, approved by Andrei
|Change has been successfully cherry-picked as 27e24c94e28208bedaf8f47fbfa9ef8ba545e30c
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

approved by Andrei
|Change has been successfully cherry-picked as 35684592607f5b22adb16ef5fa3d0c6c5579a366
|Patch Set 2: Code-Review+2
|Abandoned

already fixed
|Uploaded patch set 2.
|Abandoned

already fixed
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2

Looks good, but still we need to add tests to conf file
|Patch Set 4: Code-Review+2
|Patch Set 6:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 736b7efa1a562d260f06bf9dc10b2381a3a88961
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 36fd17d417bc26d7cbedfc903d7841f96fd479fa
|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased, approved by Ketaki
|Change has been successfully cherry-picked as 6dad12a4a2840d603c23e8161a4f7682e8c49e40
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 312c13d70706ee0269a7619557f1f823d1a7c68c
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cf5c8130baa444695d053bcdbb2b80ad2d320f5b
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

approved by andrei, rebased
|Change has been successfully cherry-picked as 4711776d60edb01940a34ea2ddb3e9f40dcc68a3
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

approved by andrei, rebased
|Change has been successfully cherry-picked as 1c10cef43e686c541d7a8b39ecf640574a42790b
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a81faaa6e7826666fa3bc2537e5abd0043c37763
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b7076485442f9515c7e67dddff365c738419308e
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as f94b0c826a3743a8acdc33c964261f007a6eb82b
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as d38512fcbbb1e67320afb86a71cae9f446a44be5
|Patch Set 2: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 2c4c48eb0c10e3be582238319987214e2f1b5ca8
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 78b6218f0cfc43839093e3fc6421ecf298f0485d
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f17d9399dfae9f4767dfb013d459c07c13634c4d
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6415d5b183e13b5a59d4174c6b4dbb0186f82689
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9192723f59c4971d973e5811bfb1b0f8eccd0f98
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d2450431201f7e777aa34ca632a4a9115710ed1c
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

approved by Ketaki, rebased
|Change has been successfully cherry-picked as d56284c59fffe555a80a6c6c40f56578f22770e4
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7ad12bf7b9335e0e779df83981735b602d15db17
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d186b1721453d85e938b97fc1c891d2cee770add
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a1cc0d12cb687dec597a705c5f2bd02909bc6084
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4f732c967605c235ab22a9c230fa8c81f43f8e99
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 0af8f92ee9aeb6d271e8e3384278efcd2a42d593
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as a394e55a6b9b0f146d034373b3e8c3c191317f66
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e4c774cf4a889a89f44a63c05b88415156875601
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9e61fdc709a30f434f0b9f42327a62807febfee1
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 3c2cabc3a4c480113b2a42e069852478962ddd48
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as be52fdeceec2929d3dc50c1a43d8d5eb73a7b042
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as b7a84fccdd9f204a9443f1e51e595814514bcecc
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as a50b561f92481936ce414ca6065c1b8dd62f0f7a
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 06819fd4674a0506ca3a5c2628b6fe6dbba6482d
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 356b1630a2af12ae7e9366618479758a9936dced
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 7705cebc3b7488371eccbbbd209bab0999baf35c
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as b0681bf421db5d585af0049e24a508e13a86bb21
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as cc3ab537fbaca136203b34dc8d92b00d8bec88d1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as dec2f9898b8a975a5fe348510fefb1fc21c9f632
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as fa3a06b9af8ea383fc2656d142b5994046f1e5a3
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as f16bd638de58419f359c8e88a67540331497545c
|Patch Set 1:

please add also conf file
|Patch Set 3:

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as ebd4ee10bf3ba3544c902a85d3779efcd42b6efb
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f1142f95be5829195230e67cb47e30a8b9b4cbb1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as f6c98d6458dfa6fff1466594ab809469c0ea6e69
|Uploaded patch set 2.
|Patch Set 2:

approved by Andrei, rebased
|Patch Set 2: Verified+1

approved by Andrei, rebased
|Patch Set 2: Code-Review+2

approved by Andrei, rebased
|Change has been successfully cherry-picked as c7e4d9af4decd10cf702df505f6756c3da74654f
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as ec3ed06fd60643d409607a458e5a9249094ee8d8
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 008ea3115b695fe99dedc6c43f5f08ac06ade6d5
|Uploaded patch set 2.
|Change has been successfully cherry-picked as d27f1f145ec71ea0cd0f46692b845cd937431f63
|Patch Set 1:

minor comment:
if you add new scenarios it would be good if you would include also conf files in your commit
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 22174007b4310fb7313d0d9c5bc664810af090cb
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as d50a257cececb8a43bc7330abc460a081a9d1f49
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2fa3899c4db374eedd99c9910fe1bf8cbf3bf758
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as eb030d44f7d61efa82397e1ce116384f3eed2fc8
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 41c49c3805e66d32a9a0268cc00beff8b59e5a51
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4b6d0b39af8457ba7b5b77ff3247610239da058a
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 315c61ce066bf115426a22588f7e43f0ebedca95
|Patch Set 2: Code-Review-1

(3 comments)
|Patch Set 5: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9720923865d147953f4bce7f79f01f184023c541
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a7d0f235e22f1b6bd63064fb4dadb92820e9049b
|Change has been successfully cherry-picked as 315b2880515316d7830af4f3301424dc3474312f
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 97d759f4e2a30188d0f4b977c7f2b8f28c75b0b7
|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 6e5ea3b2c2d784ed4dd072858a3e9c73335af0a5
|Patch Set 1: Code-Review-1

(4 comments)
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review-1

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

reviewed
|Change has been successfully cherry-picked as a437d22311f07795fc16da58628ee52a8f3c3cef
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as d91345084c49675c94b2481624d63b3cd4fa07ab
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 4ea34683f7477302c77d7315bff24afe6b9242ae
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 4ac6729328ef30995ff03df9cafdc8ff3bcb1687
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 321f01c504cdaae1690d9f65732481745eeaaedd
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as ce750fa426934d9a41a1118913aadec711f9bff2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 820cbcb74b69df1eb84e32ae80e1e3a32c61c91e
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 666c81fd0db7ebbe4f31b380e99f39ae9f0a60c3
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f04ae894c2c7e46948a2422ad5752b5fd0b3033e
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as fb6cbe9427aafe07466b5f5c078b38007ddc6945
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 2724a9f16d2fdc8da71b2917861ec938f1d5d249
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 245b8236b8f818a53b9e3562467044e65876f825
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 499c3aad89d7c728a15e28ed09f78ee2615fd86c
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4c7f6a2c5bfddb12651b2d3f69b5e965a11e3a76
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 4cdda163df5db76ff2400bb483bfef7573df9f21
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 19fdcc6423e7a20551ccaf926b7fdc6db67442c1
|Patch Set 3: Code-Review-1

(2 comments)
|Patch Set 5: Code-Review-1

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c70de1f381ab0de4d3adebc39c579780356edcae
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 4db846587e8451bc849a565b722cde143f5fa617
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as ad7c07b16e86563fb5b4400719e8560a7935049f
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b6ee41c018f1432e3e6269bf13ec2d6752ad3149
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6d6d4f1ac1d806cebf2b6ef178150bdbae0bafda
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 2ca7f9abb511f1e04477f28a24f1e9ee903bbcdc
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 3181b590a8309160ed9fdce07dc3a3ebc9483313
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 478ec332a252c0489e53e7c212622031aef5a7c3
|Patch Set 4: Code-Review-1

(6 comments)
|Patch Set 5: Code-Review-1

(2 comments)
|Patch Set 6: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review-1

(5 comments)
|Patch Set 7:

(1 comment)
|Patch Set 10: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

approved by Andrei, rebased
|Change has been successfully cherry-picked as aa0336b3d2e4356f799a72106f2e7544917381fd
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 96f84b15b60f95fd5623f186c2990b5a4284f949
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as dbe4c334e33fd2ae3a32c6e3f9db44694920461b
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 80bf336ee7440357339349048d0d3f35070716f5
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 23917edf20fd09bf063c48f60e964de330c32de3
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 2957430c529c5b9afb008cb0e046d9087e92e6d5
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 0f2d4acc2b4fd34ef0fd5a6cae76042822a148c9
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 4cb2616349c2764be22ba76a14ac268a71b566ae
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as bc5f4cb4728cb868ae19bc30bae524d6ce51c539
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 4ddb10b264b3098739289c13fe03e6020b5e01ba
|Patch Set 1: Code-Review-1

(2 comments)
|Patch Set 2: Code-Review-1

(2 comments)
|Patch Set 3: Code-Review-2

(2 comments)
|Patch Set 6: Code-Review-1

(2 comments)

looks almost good, but need one more patch
|Patch Set 7: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Change has been successfully cherry-picked as 9d1e335e245bccc4f043f2671f6ce2a0d651aab7
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d293f68bdaa187188cf1c992b307ee12f95d4d3f
|Patch Set 1: Code-Review-1

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 3f56cf3e403a059542cc8351ba018101072e1cac
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as bc2c8c5dd4ac8c881453d2325c1452ea0c0e5cb5
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c9146e4fcd7c05b0774f9ac396311ffad80b8a53
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 880b02a00fef31fe6752d5ba102ca0e374165144
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as d731f0431c289882802eac9785b34651abcc0676
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1500a8aa54ddef0e6ee87c5777edaeae64f257ab
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as b702b017a33712683bca12dc49336795d6ae5831
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified-1

frozen until MB-9428 will be resolved
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Change has been successfully cherry-picked as 9c045be00e25e874f6b19296c839e63225856107
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 823114e2774aeef9c64228a3c6657359131b4172
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d5cb16341e09173d12c7bdbfa8a6c6c621aaf4a7
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review-1

(15 comments)

CBQE part of commit message should go first
And as I can see this commit should depend on http://review.couchbase.org/#/c/29059/
|Patch Set 4: Code-Review-1

(19 comments)
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 95b939e26e8e4cd39ce3ff3a5e59aea4b6ef3993
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as ff94fb15d2da8c2cbd44367c8b027d9e96bd0e6d
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f844f65a92d21d49e1278992957a9ea77241464c
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 35df97742afed8c4f69418cd94946fb1e0c19407
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 63375df5609875bd75597cba029ceb21d690c680
|Patch Set 3: I would prefer that you didn't submit this

(8 inline comments)


|Patch Set 4: I would prefer that you didn't submit this

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 002747b72f27123767669b8e951d1e63b2893bc4
|Patch Set 1: Code-Review+2
|Abandoned
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0a07ba19bda3203119c2c8694d6430c08432c9ae
|Patch Set 2: Code-Review-1

(5 comments)
|Patch Set 3: Code-Review-1

(4 comments)
|Patch Set 4: Code-Review-1

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a6cbc33d4ab62ed66ae215a9a7a4f96f740d1603
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 3505ea5448952f94990d714677813b2c52e79d0a
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as aeaf1141c8570571ad47552a48c5339963e278ad
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 14cdd4608ae93773dc618c0998bdf7b40a941715
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 4d04337f50dbffb05ab3aaacd8cda6ee163fb1a6
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 8a975e218b609c2c898327c70485c39374ad13e2
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as acd68a809ce44d22c2a511e9b9dc95b27a4b0a96
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as fabef348d825ca3dac7983cb8afe0361d185405d
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 390c09394a0e36d3da37080b4f4916c0c4b64638
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a54abe5d618c0a5cf33313df1fbb6b1b4d4ff1db
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 32c05e84b9a58b77ff70b77c4e1f356b47749da3
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ed676db7b653ce9d706edbb1a18452e8fc741e65
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9535194c1b3d85d47da67132b365f9cdd15d5231
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 29fbaf27f79ee7f776da12486d0858389ad9f226
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bca34d51176f44d4ff4b41d8a0465409e862f6a0
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 90864ecf681b4880c2cc7ec68cd116312d94547e
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9fcce53f99dc1e24ab49d576bab18b4542ee3703
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review-1

(9 comments)

CBQE reference should go first, prior to message
|Patch Set 2: Code-Review-1

(3 comments)
|Patch Set 7: Code-Review-1

(5 comments)
|Patch Set 12: Code-Review-1

(1 comment)
|Patch Set 13: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f849b121a2d8e8fb5f86ef5bd948acef8ced8f05
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cceee601ca61b34f89f336f67b93fd9367c922c8
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5591d08d4782c98438e12f89e2064f34cb8b7d92
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 0a6d6c3a3ef0794430d2611314ec28a54bdaa27c
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as a38b6ea8783dc151d487c6ac41e0f3e9d208688d
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 540911c76a81728f86752980db848568f48b70f8
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 50289a46ba110887f3bc72888b6326924a5b1d14
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 586de7ba6bc070edfb8bc7db5e0c7212a8a3d251
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9b932228c456e0776a3331aa5a7d30396891b03f
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ef7c75b019553f5999a2d9b5269a98902109565f
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as bcba884e326bd7ea139d77e776644556ea4accbe
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e78c6c8d35ff3eabce76b0e79b0c0e21ac0af0b7
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d12ea78fc2287442d0bf6fae15100bceeebedbf1
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 085af83c0a6b1d2f7c8806c3bc5f464d8f2cd947
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully cherry-picked as 7b0adfe6097b5ec90974c42956df4e4f3b7e9b71
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0e70fabca822ad73353922c2c2d07467fac20021
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 09b8dd2774dde8397214e7ad6eee96a87fbbee03
|Patch Set 1:

this test is for entire cluster, but we can set different number of nodes  in cluster (nodes_init param)
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as e8e9287c65749ab6cb2b65025e8d4b3eb9885d24
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 76222b7fec3de669aaa70d746ff2798a12a670d2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7138c414e9b43ae9c7a10af94c986b33bbe88ef2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 251c6a6c8426aa83c735016999e003768de91e8a
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6ec429d93274f272417375033fa525d4679f1b9a
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 004cdd9730e1253f82281b592878f84c64086a3c
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 82bfb7a87fac626c2375a2a2db1bc30274f595da
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d773d34d008b642b86601af28f8366360d7106bf
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1d07fd527eb6c7d92a4a24dfa26f19052a5102b6
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 81d5e478d1fdcf5731a2d798b5ea1c67ab6e0484
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a9e1271fbc7b27ab7542172514e420e5541c448e
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 79c48a651f22c53e318c8797765aa75e1ef7a418
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 206266d51b051c669fd12cbba54ecb807a4bbc22
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 0c7e5790e4f66eb5be672d0a7bb009dd72ea77e8
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c612a3e733adae766ccb5aa462fb89ed93756aa6
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bd7bbb5883df82fec0ba52b1a54e9541d19d5774
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f1d3392d5409cb8f2e9bfbcd94fc259e2a0cdad8
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a46bd3c9dd3f5fd840ca491c89636100e56eb7c8
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 322dabdbbbfc0be23b275007fbb749cb7c8de638
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 259b4931e3f331c9161009381477886c6f9eff07
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1b816062685c15c88bf165b7e65827cbb5f33f7d
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d77d4894f217e734da13f46512c47840114477a6
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as e15ed1c1304f382777c8f57b248b012816bfdf8d
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as d0bc4641cf2c147b14cfe7aebafe4a9cee7fa847
|Patch Set 2: Code-Review-1

(19 comments)
|Patch Set 5: Code-Review-1

(9 comments)
|Patch Set 8: Code-Review+2

(1 comment)
|Patch Set 9: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d7d1b96fea3d9d9b75271cdd637dfb30e8de767c
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 04ea82fb8565e5965b110f557ced0eaacd68b0fa
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7fbb9609e033f4d44f1063c3228c89e4d914c79d
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 26fcd0e90e37d5cdf824dea48aa2c9a4accfb926
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 22b58900c92e83770e2c40377f23b85a2f6e0e13
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 088d43ab72efedcf8c5414a553aec7b90e35a770
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 170fc268f1d1a0571788d2ee5adc2eaf78657181
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 656e0119b876af22f8bb7e485ecd8a5fafedcbcf
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3c065fad8baf1c5aaad15c55346a829939a650e5
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2d3f232fc149b87d8d6b543b9d5bc854a39970d9
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ccd54e4d1af4d397de45c4b0d66ecc3587fba71c
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 84fedb71eb5d39f054c2696cbe9c1f9fe9a5ac6f
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e29b2296e5ac26dec3033c74946cbf986196b974
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 06cd3db7138b61441b2915f85b6497777c892666
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9e91d11cfff55f83b279fea167c103d0f122234e
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 226c8e66b17847f02062586352f649a797eb7a5a
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 95b2b405faed24a4c918b9f23b29c5d14764fc9b
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 97595f648902111c5cf42b885d910bd693cf790b
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 26a7af7cf16cd5049d2c39392eb1f5568c307b91
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 0ce6f13e793afad131e4ef016cf741c27af93c1f
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 1a5d23a63c050e1deeb32d4c26eec6921f481800
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Change has been successfully cherry-picked as 6e33dccf94770c8d9835ae5d3a1d2fb92a473c37
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b8bb7ecc879d53198a27c3d674805bed05d75046
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 644a3a5f54620a71daf6daee8ba25db2158b472b
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a390edcc73e2551fd31def54bb65440230d9b99a
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 2fa6744a8a66c4e53ea71819f6c0dd2297a2e02a
|Abandoned

new fix uploaded
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 4562df0ef0b11b90ea1d850e8e3dcde35665c251
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c1d15d3f6ee4572e2fab8b2f2ea914c672e47c19
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5d077dab519f05bb06c1046b14b4b0108d2721c6
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0e2c43b96a64f215664495986551f7d70c0d0c67
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9ebd36ca1d2fdffb1d740ae6581014f0ab2051b2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cf5a3c66221317f24a4ca87cf6ed2de963f7cb9f
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0cea4972f73c9e85c95d59ea2c114350a3d850eb
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 7bf35217cf4c024316ba5c51715e46ab1e961e63
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as e7d04eb3a13052fb050ccfd0a1b02e1165b530de
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8371aa1cc3a21650b3a9f81ba422ec9ac3151cfc
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c34b1b2bc90575206e18de45311295f3b56ee098
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

already reviewed, merged
|Change has been successfully cherry-picked as cadf4efe2625343061d8eacbad654a4ca029a157
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

approved by Andrei, merged
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

approved by Andrei, merged
|Change has been successfully cherry-picked as b4777408df5bd9e07af7a58c1ac99eb9b3b5c8a7
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7b4f9782955faa4e1390a12ef1e9f7cc2eb0c67c
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d34e19ad84cf92a28db5c198eb0e8990bc746c43
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1b025712ad39d3c0a382160e4c2021ff3f6135c0
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 996adfe28604f37b949d412a0b515f2e2f33e5f5
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as ee581af91521ccbb5b699062c42b45e141784ea1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as b96de8ccd5e5bd2535c1e83c0eeb11899e6afcd4
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cc3757b5cec1d54d549892b34467bf9ee6cc27de
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 960c4fac4c1424961bef7e3f3839cf4600461b02
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as ef78979a490eb87ae7888626bcd7882d59c5a9ad
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2

approved by Andrei, rebased
|Change has been successfully cherry-picked as a9318c94b84da79d013e0d2e1a6411c1b7f53392
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 88a2c1be9b99b19868933bd583b8966ba178c62f
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b96aaf7043d6f0780e32d0f2417fad6c6dddbe2a
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2

approved by Andrei, rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

Approved by Andrei, rebased
|Change has been successfully cherry-picked as ce58e592725c6651ca64611fe2ce0e8ae9f3df38
|Uploaded patch set 2.
|Abandoned

too old
|Uploaded patch set 2.
|Abandoned

too old
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2

approved by Andrei, rebased
|Change has been successfully cherry-picked as 954f9a5cc4fcb469f9d7d214dd4af64aa162cfdd
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Change has been successfully cherry-picked as 52c9559e75adbc633de2b8a068048a36497ca8b7
|Abandoned

is too old, a new one was approved
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 07f0e68d0c8dd5a722b874adb6ff9a3dbe10159c
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 533d2d6b9c81c27e28c2ca4e809b548cfb634a30
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 59c43f943ffcb12915586f1b8e16a4a114a89e2b
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as e8573dde3ccdffe6b60cb634cf4263bd06d70277
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as a5663ba6e0ba66e9b0663575d3298942ad415dd4
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 25c3801f5901b871f77c6b555602f191a1b0e7c0
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 5a5df20d539959c33d3dffd1f8ff37e2b8f30323
|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Patch Set 2: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Abandoned

already implemented
|Uploaded patch set 2.
|Patch Set 2: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1:

for production views is invalid
|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 5a9245d98b906eccb804dff391b7d0470684ad27.
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Patch Set 2: Abandoned
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Change has been successfully cherry-picked as a08cd60e633ab8a0fd33c5d6a8becddcffea5b53.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 3065861dbe4a3858781f8cf83f16d848c735a4be.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as a755c125ee97a5ef8ee9a4590a630a2357a4fbb1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (1 inline comment)


|Patch Set 5: (1 inline comment)


|Uploaded patch set 6.
|Patch Set 6:

verify_keys_are_sorted function verifies that keys are sorted only, no additional verifications will be performed. Query with 'keys' param should not be sorted
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 356a1069c6a6a3c1387b5a8d5673b6099882c2ee.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Change has been successfully cherry-picked as 18351c9082508045a491c4be3895dd91d31f962f.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as fe0aec475a2fe34a95b758045a233befe76b11eb.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 77dfd16e1d62ab9489a9cf01eb3419416918945f.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 5daa5f17e30a9ad07591b2dcde092457ec277456.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as e4f5bf728240a2fd548077dc870a94d3a303edc5.
|Change has been successfully cherry-picked as 9e6df43f67b27d4f160f00f8c048894fcb1c6fe6.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as f187e71826e3230eab9f859feb94906bf110cc8b.
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Change has been successfully cherry-picked as 2aeed2b8ad8083f897894339e718f73aa6b2fe3d.
|Patch Set 3: (1 inline comment)


|Patch Set 3: Looks good to me, approved


|Uploaded patch set 4.
|Patch Set 4: Looks good to me, approved


|Change has been successfully cherry-picked as da2cf262fad3327dcda3849ac9f2b8fcb68827e3.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 0ec37afc098d6ce1ea12a4bfea3f5e968a1de6cf.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as 3b2eae98d24dfe2fd481825d37a0add180eca95a.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: Abandoned
|Patch Set 1:

I wanted to recreate situation when 1 stale=false and 1 stale=false\update_after\ok queries are running simultaniously. First stale=false will trigger indexing, while indexind is building old  index should be returned for update_after and ok queries
|Patch Set 1: Abandoned
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as d1840f07cb114172b0576b1e7794eb1ceb57e0f5.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 723a3809b22552f34a560ca6bf0d5e9ddf9965eb.
|Change has been successfully cherry-picked as 1c833cac82692644293598790bcc81bf1cb99233.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 9f96d9023648fc72f4c50b11bf2933cb466087b2.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 62394e7fb09a17db6719b0db8d87acd78fbe385b.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 3426dd3c376fc2330ac454576d2696218cac0e5c.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Change has been successfully cherry-picked as 589e520222b1cfe6dae633987ba52017447cc26a.
|Patch Set 2: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Change has been successfully cherry-picked as e4edac621abf0632c54e8479f5319aa18cac3fed.
|Change has been successfully cherry-picked as 466f13ac85e4cfd51e0122acc7f9ed2a12ca18f3.
|Change has been successfully cherry-picked as f4574fd246771a6f96787e4c5f7687b82c225485.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 103a04988d06d990f4b2afef1c1e78e37a4ebe38.
|Patch Set 1:

will be changed, waiting for Deep's changes
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 7c2bc608ad13b55a7017cbb213240f9d9702c3ef.
|Patch Set 1:

will be changed, waiting for Deep's changes
|Patch Set 1: I would prefer that you didn't submit this


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

merged
|Change has been successfully cherry-picked as 84b93f4bf0835c21bd5f12dd99e5cad4a75b7e2f.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as e4ac9914d6be6bd08942c07e08c35c05f4a8a083.
|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 4: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 5: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2:

will be changed, waiting for Deep's changes
|Patch Set 2: I would prefer that you didn't submit this


|Patch Set 2: No score

Thanks Deep, but I still need delete ddoc and not to add to empty one, please review
|Patch Set 2: Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Change has been successfully cherry-picked as a465b2e279b0fc3f614cac01fed9de2284e08fd4.
|Change has been successfully cherry-picked as 1880a12cb563fc90c307275d7b6bea0678f35d89.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Change has been successfully cherry-picked as 165ad966cb79d6c74e96b3a58407dabaa369d7f1.
|Patch Set 1: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 1: Verified


|Change has been successfully cherry-picked as 07d0df0e2c9bf8fc2a2df9e4f3a18455a8a86138.
|Patch Set 1: (2 inline comments)


|Patch Set 2: I would prefer that you didn't submit this

(3 inline comments)


|Patch Set 3: Looks good to me, approved


|Patch Set 4: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 49feda7197cf82f2cce69658e03824050c0ea60b.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged conf file
|Change has been successfully cherry-picked as de65599a89dc5c5134f1aa0ba7d4c37e343992d1.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Change has been successfully cherry-picked as 281eb4f17b312face61d58ee92869d4522605ce3.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 2ee3d346516d2d7796b767fe67d333bf07d71d9a.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Looks good to me, approved

merged
|Change has been successfully cherry-picked as 09fdfcd737bebbd6e60dd91292d531bb2e27891c.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

removed a log
|Change has been successfully cherry-picked as ecf3c38149f9270a9a56856a12a3d4051003d3aa.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as d99ee0d16e3032e20a86ffdb54eea6cafd6ac737.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 2e5a6513e4b314bdb2e2621ad5cf7838576db5e8.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 77c71b72e17700337d83fe5f5cf09ed44c469489.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as f0f50033a9c78b73bdc55306be21137e89500507.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

test will fail because of MB-5823
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 0aff8e50644fde8b4dae4b2a76a766d517de5a61.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Change has been successfully cherry-picked as f9c45d4be3b1522b3933a759b19cd2f7f388f627.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 95f975071262c1fb787b6381c7399af5902f41f4.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 5136d9b3b0265e41629f77179a21e0f60fe9ff17.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 14744640b583372c1702bd8644f7c24b3bda5eb0.
|Patch Set 1: I would prefer that you didn't submit this

actually  it will not help, as cluster.shutdown contains bucket delete action and remove nodes action, so i think we need to add try block to cluster.py, not in viewquerytests.py
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as c9951641d308dd06980075bff565c7c3ebc7e096.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 900d31689509c40f536d40720b9003de6870d184.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 27d65261b845feb157d53cd2f3e3a7f7b8dcf891.
|Patch Set 1: Looks good to me, approved


|Patch Set 1:

yes, it will
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 37f128185562f8b2c7bfd35536fe129e45a935bc.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 33c9ae7eb756391f70576afef1604c85e8178eb5.
|Uploaded patch set 2.
|Patch Set 2:

test will fail because of MB-5823
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

just merged
|Change has been successfully cherry-picked as 6ace9aa34c6185e28b106a2f2006228997a1d9ed.
|Change has been successfully cherry-picked as c0488a2f300f8bb5cf07a53fcc192d1506e5009c.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as a61eb9a6b18c3b5a5a024732feb4ef9d357e57cf.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Change has been successfully cherry-picked as debeaa95a7383ae458df8e4f4655dcfe8e1038ec.
|Patch Set 4: (3 inline comments)


|Patch Set 5: Looks good to me, approved

(2 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Change has been successfully cherry-picked as 2dfd34589a42eb88751aa2e4be8d772e4a249ba8.
|Patch Set 1: Abandoned

see details http://www.couchbase.com/issues/browse/MB-5840
|Patch Set 1: (2 inline comments)


|Patch Set 3: Looks good to me, approved


|Patch Set 1:

they are verifying now, once job is finished i will add a comment
|Patch Set 1: Verified

verified http://qa.hq.northscale.net/view/All/job/testrunner-gerrit-view-master/36/console
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified


|Uploaded patch set 9.
|Patch Set 9: Verified


|Uploaded patch set 10.
|Patch Set 10: Verified


|Change has been successfully cherry-picked as 14beccdf0b9bce490fc1d92d4f31a7566217cd88.
|Patch Set 1:

test are failing because of http://www.couchbase.com/issues/browse/MB-5823 and http://www.couchbase.com/issues/browse/MB-5826. I don't have a green run for now
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as a5056451b8a9b2cbd73b0a5fd4071e86aa409699.
|Uploaded patch set 2.
|Patch Set 2:

should i verify it against cluster run? cluster run does not support start/stop of couchbase server, does it?
|Patch Set 2:

test are failing because of MB-5823&quot;&gt;http://www.couchbase.com/issues/browse/MB-5823 and MB-5826.&quot;&gt;http://www.couchbase.com/issues/browse/MB-5826. I don't have a green run for now
|Change has been successfully cherry-picked as f9969ffe111125ea512a6dda338a0b8081ce1e88.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as fdbe70a421926ab4d3ef12c265d12486e75aa758.
|Change has been successfully cherry-picked as 529b418040f7942909d4835b0552be6d77d0889b.
|Change has been successfully cherry-picked as b843b933f1e3cc63b79fcafdfda02895909030bd.
|Patch Set 2: Verified

verified under ubuntu for stale=ok with limit
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(7 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 6: Looks good to me, approved


|Patch Set 8: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

just merged
|Change has been successfully cherry-picked as 3f2760b470c65a7250cb8175be688375aa25bc41.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Change has been successfully cherry-picked as 860a9b83daa87253234741686e5c242bea53b69b.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Abandoned

moxi is used
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 0feff0d5c59443d70641046e9c4bd25ece673de8.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 746b81e1ce6dcf92e631ab1e15966c2bbf15b1f4.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 71b9cfa3ee37555e4af4c5f3cd2eaa0c54d7a35f.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Abandoned

another one is merged
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified

verified on CentOs VMs for change 
also verified for last code version for cluster run and centOS vms: http://qa.hq.northscale.net/job/irynas-job/19/  http://qa.hq.northscale.net/view/All/job/testrunner-gerrit-view-master/36/console
|Uploaded patch set 6.
|Patch Set 6: Verified


|Change has been successfully cherry-picked as 015ba16e14e2b1b30cf39871c70d6960db74035a.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Patch Set 1:

on vms (CentOS) 1 case(with rebalance out) is failed
error 'view engine failed to index doc' appears. Errors during client connection or data loading didn't appear.
|Patch Set 1:

if you run this patch and don't see data loader crash anymore we will push it. This change should resolve data loader issue
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as fde5d9f04de531af900195b91bf94b424100aea5.
|Patch Set 1:

It is new config file, for development tests.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

just merged
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as c9dd756a95b1a8caac022c60cf60e552d9363bd7.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 446da5e29ca6f55d742b65194fdb2fb4f04d449b.
|Change has been successfully cherry-picked as 7da80c32156ad3e5051394acb43721cf767c2053.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Change has been successfully cherry-picked as 49ea1f10f6278f95c0afc817562ce303dba3caaa.
|Patch Set 1: Looks good to me, approved


|Change has been successfully cherry-picked as 68f781a981f9f69991867c4b9b969cbbca53aa6d.
|Patch Set 1: Looks good to me, approved


|Change has been successfully cherry-picked as e15562e07f9b53685ef4f4102b0a6cbceb4bac43.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as b469f3c649f04aed49a8370433382cbfafc138ac.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Change has been successfully cherry-picked as 29f38eb03fea910f966264363c5a9859442fcb55.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as ad36405b756924ff7772420912c998444159b14b.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

There are positive and negative testing. Positive means that you do right things and expect some right actions to be done. Negative cases means that we try to execute something wrong, in this case for limit parameter. For example, limit=a, limit=-4, limit=%, etc. We expect that error will be appeared in the result. If no errors will be raised so this is incorrect behaviour
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

merged
|Change has been successfully cherry-picked as 592e41dec9a51c8b396d2c6889090e5f62053967.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as aad1d14835f6f010e6c3d7d58dae802417eaf907.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as c91c0c42bffded50edd15dfe3a1f82bc72ededa4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Change has been successfully cherry-picked as a706a2f1f4cb05b920db18a4098cbd6272965c8c.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Change has been successfully cherry-picked as 980dc3487a449f087c1bb7d420b42c3166e68b42.
|Change has been successfully cherry-picked as 46cf2a9885181245e25faf81f02a6a45239c2bfd.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Looks good to me, approved

just merged
|Change has been successfully cherry-picked as 66ec496c34f1ccfb00457c0b5b1b26541b6db37b.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Change has been successfully cherry-picked as ecc25518cb25e47832326976340a6a24979e0834.
|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Change has been successfully cherry-picked as 47743cd1576e7fa8fc2ec017b74bbb056a308b7e.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 11f30a5961acc52e852a67a9ded540602da7d4cd.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as bb87dfe057521c11fdd096b5c27764653618c4f8.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Patch Set 8: Verified


|Uploaded patch set 9.
|Patch Set 9: Verified


|Change has been successfully cherry-picked as f10672788f69fea03d8dd2e7999f0620dbc0ad55.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 7fd39bf61f116b5448a5102f680e03d626193ab6.
|Change has been successfully cherry-picked as 8b2c31d00aca95097fc0899a752b638415afb622.
|Change has been successfully cherry-picked as 7eec684bda8c6e9ec463d74be85196c69a4dcfbd.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Change has been successfully cherry-picked as 3aa5e0afbfe4e414eb819a1539e441346730b103.
|Uploaded patch set 2.
|Change has been successfully cherry-picked as 8dba816adcd967295551426bbc6630a4457284f8.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2:

No, it doesn't
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

yes, runtime will be increased because TCs with new data(according test plan) are added
|Uploaded patch set 5.
|Change has been successfully cherry-picked as 6980ce8d372e493793e45f8ac8539c8cc047cd59.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Change has been successfully cherry-picked as 2fcc007a847827841d7ce7a74a168ec547d1ca83.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Change has been successfully cherry-picked as 46b9fe393d306927f620b1e73178af9c69a843f8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1: Abandoned

commited as patch
|Patch Set 1: Abandoned

AutoCompaction will be reimplemented in CBQE-162: Reimplement autocompaction methods for rest client
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned

added in another commit
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

http://review.couchbase.org/#/c/52491/
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

per previous comment
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2

rebased, approved previously
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2

just rebased, approved by Ketaki
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|doc-per-day was 49 before..should I change it back to 49?
|I was thinking that I can make a particular test fail if covers/cover is not found in first operator..where it is needed.
|are you planing to use this second index in another checkin?
what is the purpose of this index?
|shouldnt verify result take care of converting expected_result in a format required to compare?
|Please check the change here,you are changing primary_index_type i.e. a specific index to a general index, is the check required for secondary index or primary as before?
|looks good but can you also add the check for intersect scan here.
|yes will change it once all jenkins jobs pass with this, thanks .
|sure.
|load_sample_buckets loads only beer-sample.
|Removing run_cbq_query and inheriting from QueryTests.This class was created only for tokens test and there was no need of inheriting query tests class initially.
|u left this on purpose?
|This is the only user you created, if I need to add more roles and users is this going to be the format?
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1

This is to make jenkins job faster.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Abandoned

Not to be reviewed
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Abandoned

Added another review for it
|Uploaded patch set 1.
|Abandoned

Not needed as of now
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Abandoned
|Restored
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

Parag: I am getting this error that &quot;not verified&quot;
I did review it.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

not needed.
|Uploaded patch set 1.
|Abandoned

Not needed anymore
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: Ieecc960f32a6053cdfa621cb865f658df30c51a1
|Patch Set 2: Reverted

This patchset was reverted in change: Ie870c52ab6ccf71146186061113a45164de3ac22
|Patch Set 2: Reverted

This patchset was reverted in change: I1f3edec710a8b2489776c868bfe361b0f0352315
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Restored
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Restored
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;
* Well-Formed-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;
* Well-Formed-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: I932e5939c5fb2a1dea8de60a0a5c142ef3e3bc10
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Restored
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Restored
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified-1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Restored
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2 Verified-1
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned

check changes.
|Restored
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

Looks good.
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Reverted

This patchset was reverted in change: I361778b2795fe4bc5f55e97957b30de41409a944
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Abandoned
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Restored
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 74133729ef499c5fd10805b102f5324f041fd395 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 02b33b5a84e105d5ae2a3726c16cec54836e0fac by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5c4e5f4bfd19621ba962e3f477abef290ec26aec by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 18943bef9fab7dd1fb9569f8781045b3e0872489 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 544fa7db4b083a0eaf26bfe198d73a30f5a10676 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d2b01f5efe39c90f13284d48ed1121385a6a00d6 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Removed Verified+1 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Abandoned
|Restored
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 7a10f174cf60f7206f0a621c0cf526d443aadddf by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5ca96fc161bf044d0204c255e38931bddd917f4c by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 8f72c0c9d7630345d3218216a5457391f799e166 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5598ff4b24aa14f9bbd42266fcb8ffe17f5851cc by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 9c802b426a2d9df93b29cd20ba5bea8f72ac2856 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 139d0001c0e8a48c0bc025c5abbac2fe32293219 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 3727cde08f6b0ba71d6cc42930ddd35ef0ca113d by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 16815bbf4aa2c2636c8f99a48aa2e44ebb0ca7aa by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as b675093341e667a5c429c517ac84ce0e411b156a by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5fc087c37abeb9e5e24d2bc1404e7dff5e481df9 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as f5e23cc2c66a545f98cdbae66c59d2e6d7ce9868 by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 58eda0b5edc001f7e8716d99bc2012aa93edaf6e by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 3016b184682918202380768e73fce301777450d4 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Created a revert of this change as Ib83dbca5257759f64a9d40627800ad2b5f17a063
|Created a revert of this change as I8f4f4e19c36dae01634ed706482ce63dcad9f657
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as e210f51ba0f357a1962627700a88036fcfaf15f0 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5a0b8025efe8e0a00e5f835345c2f561b2ae4596 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d5d61de69109b0e4689ea3fd7079dec27a08a012 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 3ecba92fc36f2287ecd9ff2abbae462522a44682 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 03612514ae219b7d2c23d8c699a8a8cda20bb928 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 4ac15cf199749ef8a5c8722cf77473deb09a4efa by Prerna Manaktala
|Created a revert of this change as I2717d632c5291752ff8c8ec79d639ccd301edfa7
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

This will be code reviewed in Monday code review meeting.
|Change has been successfully cherry-picked as 6b7ef304966c5a764e70c69e294394ab34b7eaad by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as f8d894c8b06a2e9e6554dbca60f796922c6dac42 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 4a740e2db48b3c43e0e6073af34898544a6144a9 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as dc0fdaf37083bd2bd2ca711db5ce42be0188d8c3 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 62340742bccee31ebcfe7ebbe5f47a08066e60c4 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 063e65367e2ca5f4209bafb59cacc051b8aef99a by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0554543786c2c76110c3d40b872fe750efe81cda by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified-1
|Removed Verified-1 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 7a4d7de275746f0b7029727cadae9625a58fb78a by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 8ac1984949d2e9d9fb0efa4398a181e42658b8cc by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 7185ecf28bdd05486a71dfbe9705452e69e0cfcc by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 097ffb89419eecf95cc3a7143b0546d1d5a28703 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d75e5b6f0433cbaec208a2b8d64378c3be53f657 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as eccdbdd79811e83791f49e97cdedc0a21e066a87 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 3d4a3bf6295f9caf5afb9b0732f797a8ea4d30ea by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 05ed25eada82fe5fe06e9ab92fe0bece37a75e42 by Prerna Manaktala
|Patch Set 1:

Please change the static comparison to some evaluated expression in verifying results.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 9efb83703f6d46f3b2d603d6fdb223428d5446df by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d3e8d78c17fb50d72354b8ba00fa5546e7252c43 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as b612cb6f299e28956721be3f06e5271b1dbd7d77 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0844f11b5b96d870bb57cb57e378402d09698cd5 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 558d3c0fa8e00a7faf6b685b0db613c541689b04 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 8cd85cce3a95cd009f78c5746f2dbc3e6ad98eb6 by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified-1
|Removed Verified-1 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 934e7ff8376f05aaa09af775df246404a915bc08 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a5b849fe9ba07d6ca0e8b457ac2f3fbb6c148461 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5506f259f813969678d8a0b4cfd7fca2828373b8 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as dc6b3e0f7701f870967c3ff2b4bd54d472ba9c5e by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a2609c0542f67a45a70ec031c858bb1151beb55d by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as c1e2381a7e900adbbea0491da15a7386ff5be227 by Prerna Manaktala
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as ad776ca125cf6a9540fef1208495adededafba10 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Restored
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Restored
|Patch Set 5: Patch Set 3 was rebased
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as ac0e45d86e2ec9b6859ed22c3160c7ee902f1768 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 150587f22118b8a9ac8273d978a5cf2b484b9999 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Restored
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1

(1 comment)
|Change has been successfully cherry-picked as a5f12d9582944b9e9335189da02bf3408e04739a by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 6a9336b3a27d3303c9c1462b82e96f2a6e1aa624 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as bb3d446b1637d55787a964823dbcee34ff0905a5 by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 842da06c2092e8dde19600150740fbea4afdd988 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch master as commit 9534a0f08c0fb62f2406de9572fc3bfcf5a3ee91
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 7b49f1f64632a41908c7eb54dbe5ab4f757d2542 by Prerna Manaktala
|Patch Set 1: Cherry Picked from branch watson.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as fbea282dd0698fb586b8734196bb0cd5e729c4e2 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review-1
|Patch Set 1:

Please add verification for results also.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 342c959f0e1f058efdc8e4a773b6caa63583e086 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Change has been successfully cherry-picked as b766aa0503f3956fb3ce9922b3881218d1fa7637 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as ab1020bfe73bc01bd2266c4ae758b48efd5fd42b by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as dacdcda0af09ad6bcd2231e488d2df4d7b6d6436 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 7812dafdafe24525b4783a79502eb1482ffa8f3f by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 84a159aeeb99f731fef9baca1709ec4af4138776 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 4a2bc68e1b58528e95ffc8438c09811d1c4c70e3 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 529e84d75d20a6c5ec7393396e8c632ffa47fd3e by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 4a2aa9937a9a1d4e4ac2676bc9a6cecc6b39a32f by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as dbf4a9333460e831b0e580d2aedd0009dabbc3ac by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d2657444fab716a6e8d92f1a0b977457c00c66b2 by Prerna Manaktala
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as cb2e5dddfc32e259ceb663a25735c4abc1cb43cc by Prerna Manaktala
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0c3ca08c15ac992c43b6655c8470d98c4e7f2dce by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as e4f0ad67900cb34eefc059195bcae6f37969b531 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 5b555feead092fd7f67ef5a27eb5e41281e999ea by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d16081d2e3e9b798c0307ae882dbc5e9d55f6fba by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 7b28152afd4aebed79554bc5d6705780f26c32b5 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0def4f8ee7a24e75e9577a445ea2d2fd1e836760 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 894b59df2264e66709a1fdd7a998b9ebf5114a63 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0bf4cccf011b1acbbd8dcd7a8770872800d582ab by Prerna Manaktala
|Created a revert of this change as I41d1ba0bff90737a32927a56dc06c91de56dfca5
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as ac202303c516f022347f86f6e0ff0c4eb3003b82 by Prerna Manaktala
|Created a revert of this change as Ie9f64e1bdfbf062371b21e477e95f94f69e32395
|Created a revert of this change as Id86ce7b145ef6ec4f357d7cd41570d4457b1e7fe
|Created a revert of this change as Iba59fff0004884ffbd59af93af463821b2557d9e
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Abandoned
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 17bd0538f6ced66973945e7570f68b05548fd47b by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Change has been successfully cherry-picked as 6e3275aa58dedea09ddbd68f0a70a7af966f16e5 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as e5542a72e58f6cfc48d83de33983827a5753e658 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 7ace88bf214732337449639c7a91c47bfcef4be0 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 472f31d3a251fdad1fcde57c04956e465a6cd87e by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Change has been successfully cherry-picked as f211b72cf20e4c8928d7f2195b5fa939c30dec6c by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 8d80e2f08da3f72bc7bcdd420bbd979ce8084a28 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 915c4db9891c20021152ffffc598b7a5bf26cee9 by Prerna Manaktala
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 1d8058885a710604ebe20392865cfb2505d366e8 by Prerna Manaktala
|Patch Set 4: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 189eccdebeb4d6d992a1b1a3a2e68c88c344d550 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 54b2f544be8c30c28a6d1696d1e94ca17b1b11c3 by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c7ca74e6b5e5a4e37b7d5f9cd912aa989ab4c4ee by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f75814c7389f5dfa3b0b3fbd3b4eb8c1c47b7e5b by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 55575b8c833a541d9eacee28413b1da0d8a3633c by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 812d13f6f1b2a40950687cc47849f942efe062dd by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a5b170d8a1567a45cd94607871076283ff8e36e3 by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as bd24d0610d2114c3953789d2c2697380f8d5e418 by Prerna Manaktala
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 94481eb1e740ee2112e964a2f1fa81792a15e08a by Prerna Manaktala
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Change has been successfully cherry-picked as 29c41d19d9a25ea754cf4ba6b72262690f31e8e3 by Prerna Manaktala
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+1 Verified+1
|Patch Set 2:

&gt; Is Order by column is unique. If not results will be different may
 &gt; not match with MySQL

I ran 50k queries generated by this grammar and results were matching with mysql.
|Change has been successfully cherry-picked as c10268b6fe5e074d582687dedc9a03e6757632cf by Prerna Manaktala
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

Fixed spaces in patchiest 3. Pachset2:spaces were showing up as red though they were fixed in vi.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+1 Verified+1
|Change has been successfully cherry-picked as e50660fb28cdac34b015852c0133a7541cd9f099 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Change has been successfully cherry-picked as 533c9a6bc0f3d223674e34c85c48bcdb78c1a1fe by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 9bc666706b4f77fcef784bebb04ae6f76c2d2276 by Prerna Manaktala
|Created a revert of this change as I6534dc5075f76c37c4f40ce6fcfa58c6e4f5aed3
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Change has been successfully cherry-picked as d93731d46a990314c1d55b96cca3debb68394f95 by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f50f55e7e436501be57fa42c8d395225a2b59c1b by Prerna Manaktala
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as aecd4ab88272f813311429fecea17769d4f4cd1b by Prerna Manaktala
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as bdcc76ded2364633ff6eeb180dcc558aecfb6c3a by Prerna Manaktala
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as b2c92d666eff4179c727f56be47e84d658d5dae9 by Prerna Manaktala
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as ad4baab21a95739186235a01c8f9a1cf5832b66c by Prerna Manaktala
|the old xdcr test can be removed
|same here, commented out/obsolete tests can be removed from this conf
|As discussed, this check was put in place as requested by Alk so we know which keys were missing and if updates were missing too (from revIDs).
|every bucket needs to have its own gen to avoid sharing updates/deletes with other buckets.
|adding sleep to avoid false alarms
|Isn't audit, a cluster level setting? If yes, how is it enabled/disabled per cluster? Should there be a rest call to enable it?
|Can you pls review Ritam's code? If you two work together in India time, this can get done by Friday. Feel free to merge this code.
|Isn't audit a cluster level setting? Do you need a class for it?
|I don't think a class is necessary to specify this setting. I don't see this class expanding in future either. Pls add as a param in XDCRNewBaseTest class. It can be called check/verify_audit_event.

Also can we have auditing by default? Say
self.check_audit_event = self._input.param(&quot;check-audit-event&quot;, 1)
|do we need so many single line static methods? Can we instead directly call ValidateAuditEvent.validate_audit_event which can be made static?
|has this been tested?
|Sangharsh I was thinking, instead of adding a separate class, why not verify audit records by default in all tests. I mean we could just add 
self.verifyLastCreateReplicationEvent()
self.verifyLastCreateClusterEvent()
:
:
self.verifyDefaultReplSettingsChangeEvent()	 to xdcrnewbasetests and call them inside methods like pause(), start_replication(), create_remote_cluster_ref() etc and call them if audit is enabled, so we can audit all tests by default.

What do you think?
|Also adding kill_goxdcr support for use in tests.
|That's what we're using in install.py. This is just another method in the kill_ series :)
|Eric, is there really a case where a duplicate entry is present in the bucket stats returned by rest? Which ones are those?
|pls add method to load items and perform key verification. let's also add placeholder for test hooks. If you send me a consolidated list of test hooks needed for verification, I will pass them on to ep-engine.
|The concept of src and dest will not allow for flexibility on complex topologies. It's ok to use src_cluster and dest_cluster for porting 2 cluster tests but it's better new classes have a generic design.
|time_sync_flag - can we name this time_sync_enabled? 
there's an internal time_synced flag which can confuse.
|how to specify C2 is faster? Is it better to take delay the way we accept topology? Say
1. ctopology=chain, chain_length=3 (C1-&gt;C2-&gt;C3), clocks=+60:-10:0
meaning clocks in C1 are 60 mins ahead of C3. C2 is 10 mins behind C3.

You can take any cluster with 0 as reference. 

2. In cases like C1&lt;--&gt;C2, clocks=+30:-40.

Of course before we do any of this moving clock forward/backward, we must sync up wall clocks on all clusters during setup()
|maybe we can call __setup_wall_clocks() here in setup() itself?  __setup_time_sync_flag() (can it be renamed- enable_time_sync()?) can also be called before that.
|In tests where we expect xdcr to do time sync, we have to load some data. And let's make sure &quot;items&quot; is scalable. As unit tests, we can run with say items=1 and later we should be able to run with items=50000. Same goes for updates/deletes before/after resuming replication.
|would a simple ntpdate ntp.ubuntu.com do?
Also ntp won't work on Windows, how do we sync time on windows?
|&gt; Ex-1-UniXDCR (No Delete)
1. K1 at Cluster1 but not on C2. -&gt; Condition will work fine.
Yes, we will copy K1 to dest bucket's kvs because of timestamp condition

Ex-2- BiXDCR (No Delete)
2. K1 at Cluster 1 and K2 at Cluster-2 -&gt; Condition will work fine.

I think you meant K1 with D2 at C2. It won't work because control wont even reach here simply because it is inside &quot; if key not in valid_keys_dest and key not in deleted_keys_dest&quot;

I'm not saying the logic of lww condition is wrong. The only point I'm trying to make here is the lww if condition will _only_ get executed for cases where key is not present on C2 because of the __main condition under which it is nested__.

Same with ex- 3
1. Pause. Replication. 2. Load K1 at Cluster-1 @ timestamp T1. 3. Load K1 at Cluster-2. @ timestamp T2.

K1 is present on both source and dest kv_store. So 
&quot;if key not in valid_keys_dest and key not in deleted_keys_dest&quot; (inside which lww condition has been nested) will be false.

If you test this piece of code, this might become clear to you.
|My point here is -you have added this if condition inside a segment which will not have a single run where

partition1.get_timestamp(key) &lt; partition2.get_timestamp(key)

which is why I'm recommending moving this condition to a case where key is present atleast in valid_keys_dest or deleted_keys_dest, then we know partition2.get_timestamp(key) will not return 0.
|same as above.
|looks good.
|In some uni-xdcr cases, we make a load at the destination too to demonstrate a case where the key is already present. So we may want to break this down to setup_xdcr and how we load could be customized in every testcase.
|Sangharsh, correct me if Im wrong.
the control reaching this part would mean the key is not present at destination bucket right? (if key not in valid_keys_dest and key not in deleted_keys_dest) if so, partition2.get_timestamp(key) will always return 0. partition1.get_timestamp will have to be negative for continue to be executed right?

I think we must move to the code under a new condition like -
for key in valid_keys_src:
   if key in valid_keys_dest or key in deleted_keys_dest:
        &lt;new code&gt;
|same here, the key should be present in deleted_keys_dest or valid _keys_dest to be able to compare timestamp.

What do you think of - 
if lww:
    for key in valid_keys_src:
         if key in valid_keys_dest or key in deleted_keys_dest:
              if partition1.get_timestamp(key) &lt;                partition2.get_timestamp(key):	
                    ignore_merge_on_keys.append(key) #put the keys in a list)

    # same for deleted_keys_src
    for key in deleted_keys_src:
         if key in valid_keys_dest or key in deleted_keys_dest:
              &lt;new code&gt;

Then later where we are merging keys we can check if it is present in the above list and ignore.
|oh I thought this was merged already and started regression again. Anyway, I don't think we should remove tests where we perform updates/deletes on clusters at the same time. Instead, we can catch any exceptions that arises to make sure we just have the same doc on both sides - say a verify_random_resolution() that just checks revID and cas on both sides for the same key. What do you think?
|Yes, this is a global replication setting. Individual replication settings can be specified like bucket_name@cluster_name=checkpoint_interval:60

eg.
./testrunner -i ${ini_file} -t xdcr.filterXDCR.XDCRFilterTests.test_xdcr_with_filter,items=50000,rdirection=unidirection,ctopology=chain,replication_type=xmem,default@C1=filter_expression:C1-key-1,checkpoint_interval:60
|Done
|Done
|Handled.
|Handled
|Handled
|Handled.
|Done
|these are input params, rest params cannot be defined here. They need to be a part of rest_client.py. Rest params do not resemble input params either. start_replication in rest_client is called outside of this class too. So only test specific input params need to be defined here.
|will need it for sherlock features and backward compatibility.
|Done
|I tried that, it requires every key and string value to be enclosed in quotes which I thought increases the complexity of input as opposed to one-time handling of input without quotes.

say this would work-
default@C1=&quot;{'filter_expression':'loadOne','checkpoint_interval':60}&quot;
but even if a single quote goes missing, eval() will throw an error after bucket creation which is a lot of time to say input is wrong.
|ok
|oops, I did not realize that.
|yes, it can also have regex.
|we usually only specify a pattern. If no key matches the pattern, filtered_src_keys will be empty so we will not merge anything with dest bucket kvstore. This is correct because replication would not have happened for the same reason.
|ok
|And who takes care of start_replication calls outside of new xdcr basetests? like from system tests. I understand what you are saying but that is not correct. I'm merging my changes.
|what about xdcr upgrade tests? what's the problem in adding extra methods that are going to be used soon?
|These are not xdcr params these are per replication params.
|I particularly wanted to avoid complex test params like these. Pls see all the test params. We dont need xdcrMaxExpectedReplicationLag to mean replication_lag.
|Apparently, it calls set_internalSetting(param, value) which only sets cluster-level hidden parameters @ localhost:8091/index.html?enableInternalSettings=1 -&gt; edit internal settings.

So 
1. These are cluster level settings not replication specific.
2. Not all replication settings (say filter expression) are/will be present
|Oops! Done.
|it doesn't matter which node it is. this is just to get an idea of whether loading is happening at the time of failover.
|self.cluster.methods need not be called from multiple places. It's better if maintained in one method so changes can be made more easily.
|yes I know that but pls note that this method is called independently in so many places outside of verify_results. Pls lets not argue about this. We dont need to throw an exception.
|Done
|Most importantly, do you even see this is exactly why we are not seeing missing keys in most test cases?
|This is not the first time I'm pointing out that I don't see a single case where an exception should be thrown. Why waste time arguing on this point? If there are cases that need this exception, I need you to point those to me and not make patches incorporating your comments on my patches.
|we are only printing the number of keys loaded, not the list.
|instead of calling the cluster method directly, I'm having it call a base class class method. Async is any day better than sync right
|Looks like there is no &quot;synchronous&quot; failover. Even cluster.failover internally calls async_failover. So keeping _async_failover for added logging. However completing failover before rebalance (in next patch).

2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._async_failover] Printing pre-failover stats
2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._get_active_replica_count_from_cluster] Keys loaded into bucket default:7744
2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [data_helper.direct_client] creating direct client 127.0.0.1:12000 default
2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._get_active_replica_count_from_cluster] Cluster stat: vb_active_curr_items = 7594
2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [data_helper.direct_client] creating direct client 127.0.0.1:12000 default
2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._get_active_replica_count_from_cluster] Cluster stat: vb_replica_curr_items = 7732
2014-12-01 13:01:53 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._async_failover] Gracefully failing over node(s) [ip:127.0.0.1 port:9001 ssh_username:Administrator]
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [task._failover_nodes] Failing over 127.0.0.1:9001 with graceful=True
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client.fail_over] fail_over node n_1@127.0.0.1 successful
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [task.execute] 0 seconds sleep after failover, for nodes to go pending....
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests.__async_rebalance_out_cluster]  Starting rebalance-out nodes:['127.0.0.1'] at source cluster 127.0.0.1
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._async_failover] Printing pre-failover stats
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._get_active_replica_count_from_cluster] Keys loaded into bucket default:8329
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [data_helper.direct_client] creating direct client 127.0.0.1:12004 default
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._get_active_replica_count_from_cluster] Cluster stat: vb_active_curr_items = 7914
2014-12-01 13:01:54 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [data_helper.direct_client] creating direct client 127.0.0.1:12004 default
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._get_active_replica_count_from_cluster] Cluster stat: vb_replica_curr_items = 7981
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests._async_failover] Gracefully failing over node(s) [ip:127.0.0.1 port:9004 ssh_username:Administrator]
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client.rebalance] rebalance params : password=welcome&amp;ejectedNodes=n_1%40127.0.0.1&amp;user=Administrator&amp;knownNodes=n_0%4010.17.2.125%2Cn_1%40127.0.0.1
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client.rebalance] rebalance operation started
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [task._failover_nodes] Failing over 127.0.0.1:9004 with graceful=True
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client.fail_over] fail_over node n_4@127.0.0.1 successful
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [task.execute] 0 seconds sleep after failover, for nodes to go pending....
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests.__async_rebalance_out_cluster]  Starting rebalance-out nodes:['127.0.0.1'] at source cluster 127.0.0.1
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [xdcrbasetests.sleep] sleep for 5 secs.  ...
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client._rebalance_progress] rebalance percentage : 84.38 %
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client.rebalance] rebalance params : password=welcome&amp;ejectedNodes=n_4%40127.0.0.1&amp;user=Administrator&amp;knownNodes=n_2%4010.17.2.125%2Cn_4%40127.0.0.1
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client.rebalance] rebalance operation started
2014-12-01 13:01:55 &#124; INFO &#124; MainProcess &#124; Cluster_Thread &#124; [rest_client._rebalance_progress] rebalance percentage : 0.00 %
|will there ever be a case where we need to break here and not print the missing keys?
|Thats the whole point. If we raise an exception here, the metadata validation does not happen. We don't want to call timeout an error. That doesn't provide useful information. We want to point to the resulting metadata mismatch as error.
|break after 'and' bring len to next line.
|what is the default chain length? user should be able to specify that.  Say chain_length=2 would mean we have C1-&gt;C2-&gt;C3. I understand this depends on how many clusters they specify in .ini file but the implementation must support chain_length&gt;=2.

Pls add a brief comment here on how to specify the required topology. This is very important.
|This file can be named xdcrTopologyTests.py. We never had complex topology tests before. Or in keeping with other files in /xdcr, you could name it complexTopologyXDCR.py
|How about &quot;Atleast 3 clusters are needed to run this test. Please specify cluster information in .ini file&quot;

Also, I was hoping this code could be used to move the existing C1-&gt;C2, C1&lt;-&gt;C2 tests else it will lead to code duplication. We can take the chain_length param and check the number of clusters available in .ini file.
|These 3 calls can be grouped into a method say setup_xdcr_and_load() and called in all tests.
|I think this was also changed thinking existing 2 cluster tests will never use this code. In the longer run, we should aim at moving all tests to new basetests.
|As far as possible, try to use the 79/80 per line limit. I see many function calls spanning many lines only containing one argument per line. While this is a programming style, it requires frequent scrolling and makes files very long.
Small methods are inviting to read.
|If we upgrade Celery to a higher version, Ofair will not get appended. We have to check for &gt; 3.1.0 I guess.
|RestException instead?
|Is the missing 'l' intentional?
|meant &lt; or &gt; ?
|mean &lt;&gt; ?
|would  C1 &lt;&gt; C2 &lt;&gt; C3 &lt;&gt; C1 also be considered hybrid?
|&lt; is also possible, &quot;token&quot; is a generic name, I think it would be a list like [C1, &gt;, C2, &lt;&gt;, C3..] right? This is where adding a comment above the method helps to make code reading easier.
|If topology = C1&lt;C2 &lt;&gt;C3&gt;C4, this would end up pairing C1 &gt; C2. What's source and what's destination would totally depend on the symbol connecting C1, C2 etc.
|This method would very soon accept filter expression as an argument. With filters in xdcr, we would have to merge buckets based on filter expression. Say we have 1000 items in C1, C1 &gt; C2 and filter all keys ending with 0, dest bucket would only have 100 keys. I can implement this, this is just heads up.
|what does this continuous mean ?
|This is actually a REST exception. Can we have one such exception type?
|XDCRRemoteClusterRef instead?
|Pls add one line description above every class and method.
|I like this composition - nesting XDCReplication object inside XDCRemoteRef.
|This needs to be clearly mentioned as remote_cluster_ref. Remote_cluster sounds like a cluster object and I was wondering why you were doing 
self.__remote_cluster.get_src_cluster().get_master_node().

Also it would be great if you can avoid the get_src_cluster() in RemoteRef class.  get_src_cluster() methods in different classes is affecting readability.

say the above can be written as -
master = self.__remote_cluster_ref.src_cluster.get_master_node().

OR 

we can have the src_cluster and dest_cluster defined inside XDCReplication class itself like -
src_cluster = self.__remote_cluster.get_src_cluster().
So it would be easier to reference source cluster of a replication as 
replication1.src_cluster
|in previous method, you've declared master as src_master. In all other methods of this class it is master.
|FYI - active_vbreps is going away in Sherlock. We may have to rewrite the pause resume verfication logic but then again we need to keep active, waiting vb_reps for backward compatibility esp during upgrades(a particular scenario where we pause an older version, upgrade and resume replication on newer version.
|Pls add one line description for all methods. We want new users of this class also to understand the functionality.
|Can we change the batch size to 1000 or higher(if there's significant improvement in loading speed). THis is imperative to avoiding the not_my_vbucket errors as discussed before. We have to do this sooner or later, better done now with the rewrite.
|nice, like this method, not sure if it existed earlier. can this be renamed load_all_buckets_till_dgm?
|active_resident_threshold should probably be less than 100 as default value? say 90 or 95? Reason being, the method does nothing when active_resident_ratio = 100 anyway.
|Well, I had to google to http://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python to understand how exactly you are generating the keys. :)  I was thinking why not keep it simple by just using load key prefix as &quot;loadDgm&quot; and suffix with this logic- 

Instead of having a random key for every load of the while loop, can we start where we stopped and load more instead?

say we loaded 100K, key suffix 0-99K, if we have not reached dgm, can we load from suffix 99001 keeping the same prefix? It would tell us which key was loaded first.
|why have a public wrapper for these commonly called methods? Can we not make them public? If we are looking to only change the private method the I understand. Say for adding 'graceful' option, we would have to edit both the methods. I would like to understand your point of view in making these methods  private and adding a public wrapper.
|pls also include delta recovery. We need to have 2-3 tests with delta recovery after failover
|where will revID comparison among clusters be handled?
|can this not be a part of Couchbase cluster class?
|With more than 2 clusters in the picture, One Two and Three can be confusing. How about making gen_create, gen_delete etc part of CouchbaseCluster itself? If every cluster is referenced by a name, we can have load&lt;cluster_name&gt; as key name for gen_*.
|I like this selective initialization of required values.
|I see that  A ---&gt;B &lt;---&gt;C would not work.
|call it hub instead of main_cluster?
|Same problem as above, bi-xdcr from B/D/C would not work. To address this problem, we need to have a topology keyword that could probably do a second pass and create bi-xdcr for required clusters.
|remote_cluster to remote_cluster_ref again.
|Ok I see that you are defining the prefix cluster-wise here. Looks ok. Then why are we defining gen_create etc above?
|Need to support bi-xdcr from some and all spoke clusters, will need to support loading. However this can be done separately.
|Can __merge_keys take a bucket list instead for merging? So we don't have to do 2 buckets at a time. But then, if we are planning for bi-xdcr in the middle, then we have a problem.
|Deletes are optimistically replicated. So it would be good to test with just updates. Also, are 300, 400, 128 random values? What is the avg size of items we load? We can test with 0, &lt;avgsize, &gt;avgsize as optimistic_xdcr_threshold.

Also expect compressed value size and not the actual size to be compared with optimistic_xdcr_threshold. So unless you know what the snappy compressed value size for an item is, it's hard to say what should be optimistically replicated and what shouldn't.

In 3.0 we expect uncompression of docs by ns_server. Refer MB-10205. I recommend holding your changes before a decision is made on that.
|Add support for delta recovery also.
|when did this get renamed to python2.7 on centOS? 

Do we run 
# python2.7 runsystest.py?
|explain the need for passing username and password. Once set for linux and windows in testcfg, it is going to remain unchanged.
|does adding 0 make any difference? Even if many params are passed, the flower braces are populated with args in the same order passed. More of a programming style not needed to add '0' while passing just one arg.
|pls see comment on testcfg.py. This segment is not needed.
|see below. how different is COUCHBASE_SSH_USER from SSH_USER? Same for pwd. If you prefer to keep couchbase as prefix, make that change instead. There is no need to maintain 2 sets of credentials to ssh.
|pls replace IP with that of rabbitmq for windows tests
|this IP should point to dest worker VM
|same here
|change here
|change this IP to point to the rabbbit mq of source cluster
|same comments as in testcfg/xdcr/testcfg_win_dest.py. Change all IPs.
|Add methods for killing erlang and memc?
|to inherit Cluster class?
|some other name maybe? The current base class is called XDCRBaseTest()
|let's have classes for these topologies as opposed to having a method. The setup() in these classes could take care of initializing the clusters as per topology.
|why was this segment removed?
|&quot;st_thread&quot; is not intuitive. Pls have stat in the name.
|Just to avoid the time taken in setting up and tearing down, can we have just one test that tests loading of various sizes?
Say
Load 1000 1K keys, check if replicated, recreate buckets if needed
next load 1000  keys multiply previous value size by 100, check replication
:
:
load 20MB keys, check for replication
|Nice, can we atleast load 100 items with 1B and 10MB?
|I think* we've discussed this once before. If possible we should expand the mb9502 into very short summary. Say &quot;test_xdcr_within_same_node&quot; so we don't have to look up mb9502 everytime.
|same-node?
|assert to read &quot;...greater than 1&quot;?
|10 buckets is too much of an over-kill even for our system test VMs. What was the beam.smp's mem consumption during xdcr? Testing 10 buckets is ok, but this isnt the right hardware to do it. It is handled by performance anyway. I think we can skip it.
|Hi Andrei, good question but I don't think so because if you see a job execution, test params are passed in the beginning for every test. Every test is a new run of testrunner so the value we change here will hold good only for one run. Makes sense?
|This change will ignore a case where memcached returns &quot;not_found&quot; even before it is deleted on either sides. As I had explained on Skype, ignoring err_not_found should be applicable only to second delete and since it is not predictable which thread will delete first, locked delete is the correct way to deal with this problem. 

This change will still work but will not cover the scenario mentioned above.
|Could we instead check if conflict resolution is random? But that would involve saving the hash value of first updated key to compare against if hash exception is thrown. By 3.5.0 timeframe we are expected to have time-stamp based conflict resolution. So it's ok if we want to comment this too.
|Agreed, the naming convention is same in the whole of xdcr suite. It needs to be changed separately.
|this is the default value in base class, so we can ignore this param of we are passing the same value.
|same here.
|Exactly my point. There's no need to modify in all classes. I do not see any impact in changing the default batch_size in  def _async_load_all_buckets. And moreover batch_size=1 forces serialized loading into a bucket. It's a bug. What problems do you expect to see as a result of this change in base class?
|We added sleep for this reason I put as the commit msg - &quot;Sometimes replicators might take longer to sleep after previous operation so add some buffer time before loading any mutations&quot;

wait_timeout would make sense if we know for sure we're waiting for the server to complete some operation. But when a replicator goes to sleep after finishing its work is not exactly deterministic. When I run the same test on my environment, it passes, sometimes fails and the logs in the latter case show that there wasn't enough time gap between replicator sleep time and wake-up time to expect a checkpoint. And there's nothing to timeout on. This is just buffer time to make sure checkpointing happens.

So would prefer to keep just the sleep. Copied the same comment from below in next changeset.
|Saw your comment, have asked Alk if any specific change has gone in, will revert if checkpointing now addresses these scenarios, consistently.
|We can but it would not be useful. Here we have to add this because post dest rebalance/failover of node containing vb0, we will get 404 and that failure is not recorded on the new node containing vb0. So the first pre-replicate to new node will pass.
|ok, got you.
|Done
|yes, ordered to some extent, not completely though.
|This being a unit test class with limited abilities, I do not expect this class to be largely inherited by test classes. So it may not make a difference.
|I intended these to be class variables, one is being used outside this method. Others might be used in future. Added initialization in init()
|timestamp is a part of record itself. end_time records when exactly checkpointing happened.
|Done
|ok
|ok
|ok
|yes, or num of keys
|no, this method might be called post topology change too in which case, if it is not 60s past the last checkpoint, checkpointing will not happen. Waiting for 60s before inducing mutation can ensure checkpointing will always happen. Also, when replication is first created, a checkpoint for seq 0 is created. If you wait for another 60s to insert a key, another checkpoint is created. So this is intentional.
|Done
|Agree with Andrei.
|I tried using but it results in replication being created twice causing an exception. Didn't dig into that further. Since RestConnection class is anyway used here, using its method doesn't hurt.
|because the source bucket is being deleted and recreated in which case it will lose its keys. So we reset key_counter = 0 and set keys_loaded to empty list.
|Ideally if it's a 2 node cluster, and the node containing the vb0 is not the master, then we call self._async_rebalance_out() which will rebalance out non-master node. These are unit tests, I dont intend using more than 2 nodes per cluster for the same.
|No, we load very few keys(less than 6). In such cases, a simple loop should do instead of incurring the overhead of too many function calls to achieve the same result.
|ok
|Again with 5-6 keys, that level of dissection may not be needed. When revID verification fails, just by looking at the metadata once can say what field is incorrect.
|We print that above.
self.log.error(&quot;Key {} is missing at destination&quot;.format(key))
This is just to fail the test if there is atleast one missing key.
|ok, ONLY for XDCR_USE_OLD_PATH: per Alk, setting this variable to any value will force disk based xdcr until he removes support for this variable(which is a matter of days). So in my opinion, for now the code should read :

if xdcr_upr is not None:   # assumes if xdcr_upr not none, it can only be false.
      XDCR_USE_OLD_PATH = &quot;true&quot;		
      output, error =  self.execute_command(&quot;sed -i 's/ulimit -c unlimited/ulimit -c unlimited\\n    export XDCR_USE_OLD_PATH={1}/'\	
                                                                    /opt/{0}/etc/{0}_init.d&quot;.format(server_type, XDCR_USE_OLD_PATH))                    

Btw, upr=True, xdcr_upr=True are both default now, should not be passed to any job. Kindly remove these params from all xdcr jobs. xdcr_upr = false is not going to be used as often as upr=false. It is assumed that if xdcr_upr is even passed to installer, it is to force disk based xdcr (xdcr_upr=false) and the above recommendation is based on that.
|checkpoint_interval is now 60 by default, you can remove these
|I like the part on verifying if both clusters have checkpoints. We no more replicate checkpoint documents to dest. So only replicating end will have checkpoints. Ns_server will give us private api for number of failed/successful checkpoints per vbucket. Also there are 2 checks on checkpointing we can do for all xdcr tests -

1. For every key updated/deleted(assuming there is atleast 60s between load and update so the vb gets a checkpoint), get the vbucket_id, use private API to see if number of successful checkpoints != 0.
2. Assert if number of failed checkpoints &gt; successful checkpoints for any vb.

The rest of the checkpointing checks(above) can only be part of unit tests.

So I recommend-
1. For all xdcr tests - adding _verify_checkpoint() in xdcrbasetests.py which can call its rest API (from rest_client.py).
2. Unit tests+their verification methods can be kept here or moved to checkpoint.py. I'm not particular about that but since checkpoint.py deals with ep-engine checkpointing tests, I think it would be more organized to keep ep-engine and ns_server checkpointing separate to avoid confusion.
|Comments:

1. Apart from the node crashing scenarios and bucket flush, I think other tests already exist. Can we just refer the testcase in conf instead of duplicating code? Infact I'm wondering what we would achieve by rerunning the scenarios especially when there are no checkpoint specific validations for items in order of 1000s. So I'm more interested in the unit tests where actual checkpoint verification can be done.

Copying from my mail -

As long as you want to induce mutations
{
	Load(once, thereon update) an item into vbucket0
 	if checkpointing happened (for now, let us rely on changes in time_committing stat/secs in checkpointing, I've asked ns_server team for stats on total successful and failed checkpoints at vbucket level, this will be private API)
		Validate most recent checkpointing doc for the vb
		Check if replicator starts from the next sequence number specified in checkpoint document 
	Else
		Raise &quot;no checkpoint made&quot; exception
	Sleep for 60s
        &lt;do_nothing/restart node/rebalance/failover node as needed by test&gt;
}

So it would be good to create methods for these steps. I would also appreciate Andrei's input on the above.
|It gets printed only once when this condition is met. I've tested this.
|Because I think we should verify source items in any XDCR test without a choice. MB-10856 was one case (no topology changes) where only items at dest were checked while the items at source did not match the value expected. And testrunner did not catch it.
|in future you mean?
|We return true when there are no exceptions, false when there are.
|Ok
|Ideally we could skip this check because it comes after item count check. Can we? Or if we should keep it, it must precede item count verification.
|why uni-xdcr? why not bi-xdcr?
|We may not need to load after crash, so do a blocking load before crash. You may see some exceptions after crash, pls handle those exceptions.
|why stop couchbase when already killed? Also there is no waiting till warmup here.
|Same as above
|One thing I don't understand is - self.collect_data_files is set to True and False in the beginning and end of this method unconditionally. But teardown only happens after this method is executed not between setting the variable to true and false. This results in data files never being collected even in mismatch scenarios.

2014-04-22 11:04:42 &#124; ERROR &#124; MainProcess &#124; load_gen_task &#124; [task._check_key_revId] ===== Verifying rev_ids failed for key: loadOne9389 =====
2014-04-22 11:04:42 &#124; ERROR &#124; MainProcess &#124; load_gen_task &#124; [task._check_key_revId] seqno mismatch: Source seqno:2, Destination seqno:3, Error Count:7
2014-04-22 11:04:42 &#124; ERROR &#124; MainProcess &#124; load_gen_task &#124; [task._check_key_revId] cas mismatch: Source cas:1535964422474215, Destination cas:1535964422474216, Error Count:8
2014-04-22 11:04:42 &#124; ERROR &#124; MainProcess &#124; load_gen_task &#124; [task._check_key_revId] Source meta data: {'deleted': 1, 'seqno': 2, 'cas': 1535964422474215, 'flags': 0, 'expiration': 1398188779}
2014-04-22 11:04:42 &#124; ERROR &#124; MainProcess &#124; load_gen_task &#124; [task._check_key_revId] Dest  meta  data: {'deleted': 1, 'seqno': 3, 'cas': 1535964422474216, 'flags': 0, 'expiration': 1398188731}
2014-04-22 11:04:42 &#124; WARNING &#124; MainProcess &#124; Cluster_Thread &#124; [task.check] Not Ready: vb_active_curr_items 13999 == 14000 expected on '172.23.106.45:8091''172.23.106.46:8091', default bucket
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; load_gen_task &#124; [task.has_next] Verification done, 17000 items have been verified (3000 of them deleted)
FAIL
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rebalanceXDCR.tearDown] ==============  XDCRbasetests stats for test #1 async_rebalance_out ==============
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rebalanceXDCR.tearDown] Type of run: BIDIRECTIONAL XDCR
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] STATS with source at 172.23.106.45 and destination at 172.23.106.47
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] Bucket: default
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Average local replica creation rate for bucket 'default': 33.1874371234 KB per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Median XDC replication ops for bucket 'default': 0.631 K ops per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Mean XDC replication ops for bucket 'default': 0.686947115581 K ops per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Average XDCR data replication rate for bucket 'default': 32.8257327327 KB per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] STATS with source at 172.23.106.47 and destination at 172.23.106.45
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] Bucket: default
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Average local replica creation rate for bucket 'default': 31.2656969766 KB per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Median XDC replication ops for bucket 'default': 0.0885311871227 K ops per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Mean XDC replication ops for bucket 'default': 0.24540443094 K ops per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [xdcrbasetests._print_stats] 	Average XDCR data replication rate for bucket 'default': 31.2116690665 KB per second
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rebalanceXDCR.tearDown] ============== = = = = = = = = END = = = = = = = = = = ==============
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rebalanceXDCR.tearDown] ==============  rebalanceXDCR cleanup was started for test #1 async_rebalance_out ==============
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [bucket_helper.delete_all_buckets_or_assert] deleting existing buckets [u'default'] on 172.23.106.45
2014-04-22 11:04:42 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [bucket_helper.delete_all_buckets_or_assert] remove bucket default ...
2014-04-22 11:04:46 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [bucket_helper.delete_all_buckets_or_assert] deleted bucket : default from 172.23.106.45
2014-04-22 11:04:46 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [bucket_helper.wait_for_bucket_deletion] waiting for bucket deletion to complete....
2014-04-22 11:04:46 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rest_client.bucket_exists] existing buckets : []
2014-04-22 11:04:46 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [cluster_helper.cleanup_cluster] rebalancing all nodes in order to remove nodes
2014-04-22 11:04:46 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rest_client.rebalance] rebalance params : password=password&amp;ejectedNodes=ns_1%40172.23.106.46&amp;user=Administrator&amp;knownNodes=ns_1%40172.23.106.46%2Cns_1%40172.23.106.45
2014-04-22 11:04:46 &#124; INFO &#124; MainProcess &#124; MainThread &#124; [rest_client.rebalance] rebalance operation started
|Pls look at http://qa.sc.couchbase.com/view/3.0.0/job/centos_x64--00_00-XDCR-UPR-sanity/11/consoleFull

There are 2 testcases that failed due to item mismatch(grep:mismatch). In neither of the two scenarios, data files were collected. In your testing, were you able to collect data files?
|xdcrbase test teardown is also failing. Pls see XDCR upr sanity job(latest). Can you also enclose the collect data files in try except, add a log stmt that we are collecting data files, so we know why teardown is failing?

Also, we now seem to be collecting data files even for disk drain queue not getting flushed or when other basic calls fail. We can turn on self.collect_data_files = True in except block as in - 
http://review.couchbase.org/#/c/36167/   so we collect only when item counts/values don't match.
|Done
|looks like you've added this already, thanks.
|Done
|Done
|Can we also append the key to this msg?
|We also need to log vbucket id for missing and meta-mismatched keys.  Can we call get_vbucket_id?
|Need to locally merge this code with my other merge today.
|If they key is not present in source cluster but is in kv_store what would happen? We would get an ERR_NOT_FOUND Memc exception and if it is not a deleted key, the test would just stop there.
|Does Memcached return ERR_NOT_FOUND error for getMeta() on deleted keys?
|Done
|yes, it uses default value of 360secs to check if the node has warmed up. Since wait_if_warmup has been set to True, the wait comes into effect.
|This call should not be mandatory. Unless the checkpoint interval is not 1800, this call need not be made.
|oops, sorry will fix.
|No, the problem here is - loading is happening in parallel to rebalance. So load_tasks sees a lot of not_my_vbucket errors during load_task.result() even after rebalance.  Although I tested 3.0 for post rebalance not-my-vbucket errors where I saw none, I'm not sure why I'm seeing them here. I think tasks is now throwing the previously encountered exceptions.

If we fail this test here, all rebalance related tests fail. If we stop the load at this point and proceed with verification, we're good.
|Got it, saw your comment in the other file.
|I agree we have to do this refactoring to remove duplicated code, but I'm afraid we're shifting focus from testing Pause-Resume to refactoring xdcr tests. 

IMHO, we should not change rebalanceXDCR.py before signing off this feature.
|Now I see why you said threading is not needed. I'll add this.
|ok
|Maybe add some more buckets?
|Probably add a comment on what this class does?
|Like the concept of class for this feature, good idea.

Can we have 2 classes? 
1. xdcrPauseResume(XDCRReplicationBaseTest) that serves as API class for pause-resume containing methods like-
setup()
teardown()
pause_all_replications()
resume_all_replications()
bidirectional_pause_all_replications()
bidirectional_resume_all_replications()
post_pause_validations() - move them here?
post_resume_validations()

2. PauseResumeTests( xdcrPauseResume) which will contain tests that use parent methods for uni/bi xdcr - containing methods
setUp() - just call base setUp()
teardown() 
replication_with_pause_and_resume()
- load
- call pause_all_replications() or bidirectional_pause_all_replications() based on rdirection param
- do test operation - reb-out/in/failover, 
- resume_all_validations()
- loop pause-resume in case of consecutive_pause_resume
- end load
- post resume ops if any
- merge and verify xdcr stats 

can we call this file xdcrPauseResume.py, there's pause-resume for rebalance too so if this file was moved out of xdcr folder for some reason, it might help.
|Suggestion- if we called reb-out, swap rebalance and reb-in in here keepin this as parent function, do you think we can avoid duplicating code for starting load, ending load, pause-resume and xdcr verification?
|Do we have to add test for pause after rebalance is initiated?
|for self._num_rebalance &gt;= len(self.src_nodes), can we log that's the case and we're skipping rebalance and failover?
|Most of the code from here is duplicated in every method.
|reb-in only one node at a time?
|Done
|Tried, didn't work. str(value).lower() is used in so many places here and looks like a std convention of input text. The chances of the value being a caps string are very low.
|Done
|what would the method do? It can be added when there is a need.
|Done
|Done
|None is returned in cases where no replication exists between src_bucket and dest_bucket. False cannot be returned here since it would be handled as a param value.
|Done
|Done
|Please note it returns false if timeout is observed. I did not return inside the loop so validation for other nodes can happen.
 if timeout_observed:	
            return False
|Modified
|Done
|Done
|Done
|I want &quot;per_replication_settings&quot; to be reflected by the function name
set_xdcr_param_for_replication might even mean setting global params. I want the name to clearly tell between the two.
|Done
|used get_replications() which internally calls ns_server_tasks()
|Done
|This has now anyway been replaced with get_replications()
|the first item always contains details about whether rebalance is running. Only starting second item, replication details are present in the dictionary.
|Done
|[same as above]
I want &quot;per_replication_settings&quot; to be reflected by the function name
get_xdcr_param_for_replication might even mean getting global params. I want the name to clearly tell between the two.
|Done
|Done
|Rest does not return anything if the replication param is not different from default or global value. A wrapper method to get such a setting is responsible for making sure the right value is fetched by this method. If a future implementation called this method without calling is_replication_paused, it would have to handle this case. Unless paused, 'pauseRequested' will not be present in replication URI in which case we return false.
|Nice idea to reduce indentation effort. However I find if-else constructs more readable so I will retain it here.
|Well, that's what I thought initially but since it has to do with xdcr stats, it makes sense to keep this method in xdcrbasetests.py. This is very similar to _wait_for_replication_changes_left(). Scattering these nuclear methods related to xdcr across many files may make it not-traceable and hence not-reusable.

Also, it uses get_xdcr_stat() which is defined in xdcrbasetests.py. Importing xdcrbasetest class in tasks.py or cluster.py is not a good idea.
|Good idea. Done
|Well, these checks are usually done in less than 5 secs. So I think it's ok to validate pause and resume by default instead of adding the option to validate it unlike verifying items which is time-consuming.

Also, anytime there is a regression, we would know immediately.
|Done
|Done
|Done
|Done
|Done
|Good catch. Added.
|which is why we check if there are any outbound mutations in the above if.
|Valid concern. If you load smaller no. of items you will see this. I've modified this segment in validate_active_replicator method as you can see.
|Usually vb_reps come up in less that 2 secs. So I did not add sleep. Also, I saw only 3-4 rest calls during this period.
|Done
|I'm afraid we're again generating the same set of 10000 keys in which case it becomes an update. Has this code loaded more than 10000 keys in your testing?
|What case was this else meant for? Is the 'continue' for the while loop? I understand you have paired it against for but a more elegant construction would be -

load all buckets with 1M items
for every bucket
{
while stat_value&gt;55 :
 { 
  load more items into current bucket
 }
} // just move to next bucket
|This wait is not needed. Persistence can happen in parallel. In DGM, there's anyway a lot of data to replicate. So just directly jump to setting up replication after loading.
|Why are we adding a sleep here?
|Maybe we want to pull up the enoent log check before we call self.verify_results()? The reason being- verifying results can be time consuming for &gt;1M items and any exception raised in this method can be attributed to the enoent that we checked for before verification.
|'else' is not indented against if. why is there a break at end of for? the break inside if should do, else we continue.
|The test does not check if 'enoent' has been encountered. Enoent does not always result in data mismatch. So if we dont have that check, this test is as good as any other test in dgm scenario. Can we pls add that check?

Junyi, is there any API call that returns the xdcr errors?
|this code will probably never run on the ES node. Same in connect. no localhosts in any part of the code
|break line
|these are static by definition, you can move them under __init__()
|Something wrong in this comment, break line.
|Why not just use dictionary instead of namedtuple here? 1. It's easier for understanding 2. saves the conversion back to dict.

Any spl reason for using namedtuple?
|Why are all the above static variables? Instance variables are defined using self. under init()
|In testrunner, to manage nodal info, we use TestInputServer class. Pls see how to import and pass the instance. Alternatively, use a constant for port, i don't see us changing the default port for ES in our tests, in which case, you can just pass IP as string.
|In python, empty strings need not be declared explicitly. And in any case, if you are initializing a variable before referencing it, you can skip initializing to null/default values.
|return False or raise Exception? If you've planned for the caller to raise an exception, the callee may as well do it.
|Use IP form for uniformity. 127.0.0.1.
|use the logger you have imported. Prints, warnings can be replaced with log.info and log.warn
|I see that you have raised an Elasticsearch Exception below. You may want to do the same, print the exception also.
|There should be a clean way of disconnecting ES client from Server.

Server process must not be killed after every test. Bringing up a clean server at the beginning of the next test calls for unrequired complexity.
|unlike Java, Python devs usually use underscored lower case for method naming.
|&quot;index=&quot;not required unless it is not the first argument in the callee
|print the exception also
|Thinking about it, we will need a ESDocLoaderTask class like -
LoadDocumentsGeneratorsTask in tasks.py which can handle
1. loading in the background given generator.
2. load into multiple indexes in parallel.
|len() need not be used. Python allows us to do just:
if not indexType:
which equals:
if len(indexName) = 0
|we may not use this one, but it's ok to keep it.
|break the line as per pep8 standards
|the method name does not read well. Did you mean get_doc_inserts?
|to much space between def and method name
|use logger
|pep8 line break
|follow pep8
|Add a newline
|what are the possible values? Pls add in comment.
|pls add a method to delete all indices, will be useful during teardown phase of tests.
|Spanish, german names - good idea, adding.
|Yes, we can, I will add.
|It's usually never none, by default it's [&quot;match&quot;].
|for now, just testing a complex query upto 3 match queries. When we are ready for more complex queries, we can change later.
|discussed.
|there is no concept of cache in testrunner with every test being a separate invocation of testrunner. Generation involves zero overhead on the other hand. Also with the concept of seeding, every test will have its own set of repeatable queries.
|this returns only one random value from a list. We are not populating list, only retrieving values.
|not needed but good to have, to run as a standalone script say to generate valid bleve queries. Easier to test and enhance.
|discussed
|We will most probably only change the above 2 values as plan params. No more enhancement planned for this method.
self.index_replicas	and self.partitions_per_pindex are passed in the test as cmd line params.
|I see json.dumps used only in 2 places in query generator for the same reason.

json.dumps is used to replace some patterns in the dict with another. You are right that i need to return json, perhaps i can use json.loads()
|good idea, done
|Random query generator generates a valid Bleve query. construct_query_json encloses the bleve query in a json format fts understands. The format is different - see QUERY.JSON class.
|this is the same value as 'x' in &quot;x matches found&quot; for any query. If null is returned for any case, it's a bug and code should break to bring it to our attention.
|Good catch. All our slaves are on python2.7. range() is not memory efficient in &lt;  python 3. However this is a small list so I will use range()
|defined in FTSBaseTest class.
|this causes no wiki queries to be generated anymore when &quot;all&quot; is passed.
|Contrary to the assumption, support for &quot;all&quot; was present and tested before this change. Check Jenkins run on older builds or run this program standalone to verify.

It's best to have all changes reviewed by the original author before merging.
|I still don't understand how we are changing the default here. Isn't this a rewrite of the same if condition?

We probably need to change the testconstants.TESTRUNNER_CLIENT assignment(where we detect sdk installation and do testconstants.TESTRUNNER_CLIENT] = testconstants.PYTHON_SDK) .
At this point, it has already happened. 

What am I missing?
|Can we always print which client is being used? The above if forces printing only when mc_bin_client is used.
|this is not referred anywhere, are you sure this changeset is complete?
|from xdcr.xdcrnewbasetests import XDCRNewBaseTest, OPS?
|You have removed ddoc_ops and ddoc_ops_dest from .conf, so no need to declare these here.
|where is self.cluster used?
|self.gen_create is not needed unless you want to redefine the generator.
|pls remove whitespace
|the previous step self.setup_xdcr_and_load() handles load as well based on the topology. So load from generator is not needed. The following 2 lines are not needed either.
|why not just use self._wait_timeout? If ok, pls remove 
self.wait_timeout = self._wait_timeout;
|Based on first comment, self.ddoc_ops and self.ddoc_ops_dest will always be None. Just calling self.async_perform_update_delete() instead of 

tasks = []	
:
:           
task.result(self._poll_timeout)

should do.
|by this, you are redefining the &quot;items&quot; parameter value passed to the test.
in basetestclass, it is defined as -
self._num_items = self._input.param(&quot;items&quot;, 1000)
Why do we need this _num_items here?
|verify_src used to be a param we passed before. Earlier, this was used to skip validations for source cluster. Now, we need to validate both src and dest clusters. So pls pass &quot;True&quot; to _verify_views.
|if suffix_dns_row: will do. Rest looks good.
|Can you share the distribution of the randomness in the index definition? By that I mean, can you share the testrunner log of the index definition for some of these tests. This is just to ensure we're not over-doing the number of tests for any unique combination.
|Break lines &gt; 80 chars. Here the comment can be moved above too.
|can this entire segment be rewritten as -

while len(self.custom_analyzers) &lt; num_custom_analyzers:
      #body

for readability?
|Another way of writing this if is &quot;if self.num_custom_analyzers:&quot; but this is fine too. Just fyi.
|what is the role of 'n' here?
|why is this line needed?
|break line pls
|since the 'map' definition alone marks the difference between this method and above, would it make sense to reuse the previous method and make es_mapping and fts_mapping as dummy params to the same method? Like, add the too params as arguments defaulting to 'None' and then an if condition inside to define &quot;map&quot;. Rest of the code is same.
|Pls add method description for readability.
|break line
|made a related comment on es_base.py
|pls remove
|in this case, the preceding if is not needed.  range(0,0,1) is an empty list.
|please remove commented method after testing.
|ok, can we just call es load method?
|do you want to enclose this in a try except as well to see how many queries fail?
|why not raise error here directly? there's no rqg in this test.
|is it the same list of stopwords supported by Bleve? I have the same copied to es_base.py to create a custom analyzer on ES with the bleve stop words so we can compare results for standard analyzer.
|what does this mean?
|maybe leave a comment that you are doing a deepcopy of child_map only because child map and field map have same fields?
|fr wiki?
|i think* I saw these in last review of another test as well. If I'm not wrong, maybe these can be moved to fts_base.py?
|I don't understand this part. I don't see lang=FR being passed(you are loading EN wiki) so why is it that &quot;Republic&quot; does not show up with en analyzer but FR?
|Can you please paste the sample test method here so folks will know how to use the APIs? Thanks.
|what's this class for?
|for create, we are returning just the doc whereas for delete, we still seem to be returning a list of docs.
|the update method needs iterator style implementation too. I suggest we tackle this as a separate commit. For now, we can just focus on subprocess to merge things sooner.
|The reason we don't do that for any of the methods here is - we expect a json when api/nsstats is requested. And in case, we don't get a valid json, we want the test to break with an exception. Putting the call under try would just log the error and continue with the test since we do nothing based on the stat than just print it.
|The test will break at the point of exception itself, the control does not return back to this code.
|pls follow pep8 stds: line length must not be over 79 chars, i.e, all text needs to be within the red line you see at 80 chars.
|Correct, you may want to set your pycharm preferences to set line length to 79 chars.Pls see- http://stackoverflow.com/questions/17319422/where-to-set-maximum-line-length-in-pycharm
|Sure, pls create a method inside rest_client.py. Talks a great deal about code reusability. Others can use your method too going forward.
|It's not a good idea to curl from a test code. The rest_client.py should house the code. And it should be called from test class as rest.create_beer_sample_bucket or something if not present already.
|it is said  the %s format will likely go away in py 3.x, so the more the %s in our code, harder the transition to py3 in future. Fine for now, going forward, we may want to use string .format() method to print.
|Trying to understand prefixes and suffixes - what are we validating here?
|ok, thanks
|ok
|why is there an option to delete sample bucket?
|I'm sure there's an existing delete bucket method that takes bucket name. Kindly use that.
|Can we also test a variety of values like - {&quot;a&quot;:1, &quot;b&quot;:2, &quot;c&quot;:[2,3], &quot;d': &quot;str', &quot;e&quot;:2, &quot;f&quot;: {&quot;a&quot;:1}} ?
|why load all sample_buckets if test is specific to beer-sample?
|why is there a run_cbq_query() here? It goes back to why this class does not inherit QueryTests class?
|oh, yes, I meant sorting, let me fix the commit msg.
|The test tries to sort on a field&quot;invalid&quot; that's not present in any of the documents. You mentioned that in such cases, the docs can get highest or lowest values. Hence removing the expectation of the sorted order of results - expected=emp10000071,emp10000001,emp10000042. &quot;Tolerance&quot; relaxes the order of documents specified under it, usually the ones with the same score.
|why are these params passed from inherited class? These should be declared in QueryTesrts to prevent redefinition in test classes inheriting it.
|I meant inheriting* class
|why in teardown are we logging into a server and sleeping for 20s?
|Comparing results against primary index is not good enough, because the only difference is the fields indexed. The sorting code path is same for fields in the index. RQG is the best way to test this. For non-rqg tests, we need to have static results comparison - say pass a set of doc-ids as expected results. the order must be manually verified before passing to test.

Please add the new validation and upload a changeset.
|20 mins? 20 mins for a query is not an acceptable timeout.
|Good comment, thanks. This test runs in the middle of a suite, with single and multi-node clusters. So it should not affect the cert.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested locally and confirmed by Yu.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

sample run, tested - https://friendpaste.com/1AZHKyp2AquzZuNg8ATkhe
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2:

Sample run - https://friendpaste.com/7AwltcVDisao6NDoqyVLj6
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

Verified locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Reverted

This patchset was reverted in change: Idb0c7ce20d6cd9dbcd093a06b411d4c7b103a767
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

tested locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1

Tested locally
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1

Tested locally.
|Patch Set 1: Code-Review+1

(2 comments)

just a minor comment.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

Verified locally.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1

Tested locally. Rebasing approved change.
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested on 10000 keys. Now runs fine.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

Rebasing approved patchset.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

thank you!
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

A very trivial change to use base class method.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Patch Set 4: Commit message was updated
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

(1 comment)

Tested the changes.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2

Ran 2 P0, 7 P1 tests - topology changes with pause/resume, all passed.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2

Ran make simple test.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Parag verified and +2'ed the fix.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Fixing -

2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateTimeStamp] Matching values found for timestamp
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - False -- actual value -- False - eventName - is_encrypted
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - remote_cluster_C1-C2 -- actual value -- remote_cluster_C1-C2 - eventName - cluster_name
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - internal -- actual value -- internal - eventName - source
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - Administrator -- actual value -- Administrator - eventName - user
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - 16384 -- actual value -- 16384 - eventName - id
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - 172.23.107.120:8091 -- actual value -- 172.23.107.120:8091 - eventName - cluster_hostname
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Match Found expected values - created remote cluster ref -- actual value -- created remote cluster ref - eventName - description
2015-02-24 17:29:42 &#124; INFO &#124; MainProcess &#124; test_thread &#124; [auditmain.validateData] Value of flag is None
ERROR
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1:

(3 comments)
|Patch Set 1: Code-Review+1
|Patch Set 1:

Pls review Ritam's audit code and agree on the interface. That would help you complete this task on time. Thanks.
|Patch Set 5:

(3 comments)
|Patch Set 5:

Were we able to run any basic tests in audit? Can you pls include test run in friendpaste?
|Patch Set 15: Code-Review+2
|Patch Set 15:

Let's also add a conf file if this is the case and have a job configured. Pls merge. Thanks.
|Patch Set 16: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(1 comment)

2015-02-11 12:36:09,501 - root - INFO - running command.raw on 10.3.4.187: killall -9 vbucketmigrator
2015-02-11 12:36:09,535 - root - INFO - command executed successfully
2015-02-11 12:36:09,535 - root - ERROR - memsup: no process killed
2015-02-11 12:36:09,536 - root - INFO - running command.raw on 10.3.4.188: killall -9 cpu_sup
2015-02-11 12:36:09,564 - root - INFO - command executed successfully
2015-02-11 12:36:09,564 - root - ERROR - cpu_sup: no process killed
2015-02-11 12:36:09,564 - root - INFO - running command.raw on 10.3.4.189: killall -9 goxdcr
2015-02-11 12:36:09,601 - root - INFO - command executed successfully
2015-02-11 12:36:09,602 - root - ERROR - vbucketmigrator: no process killed
2015-02-11 12:36:09,602 - root - INFO - running command.raw on 10.3.4.187: killall -9 couchdb
2015-02-11 12:36:09,631 - root - INFO - command executed successfully
2015-02-11 12:36:09,631 - root - ERROR - cpu_sup: no process killed
2015-02-11 12:36:09,631 - root - INFO - running command.raw on 10.3.4.188: killall -9 goxdcr
2015-02-11 12:36:09,637 - root - INFO - command executed successfully
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Change has been successfully cherry-picked as 9d57645f53dd924f30da51690d4b0876e6b1c9f5
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7b8ab4d29d495d0864f85d9bd02ac0b073651cf6
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ef75053dc902632e63801f534107dd2aba5b41fc
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e2c2c6265038c4a91107c1dfa72adb5f7f2583d4
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Run - https://friendpaste.com/mTdjXilQ0bVQJpsoDSmdS
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7238304869e182043783e4205622ebf8048e4c02
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5037a02df72d40b8cb7bd00ebb1aedd1c6d3584b
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Reason (see test run) - http://qa.sc.couchbase.com/view/BY%20COMPONENT/job/cen006-p0-xxdcr-vset01-01-goxdcr-filtering/8/consoleFull
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 15d9dc6a3fc847bc47aa84385a7b0cbf9974a192
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6bc7382237568e58ddd4179873c466feec4ebfc1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 12d6acd3803019904558c60027370cc5f42dede9
|Patch Set 3:

(6 comments)

Added comments. thanks!
|Patch Set 6:

(1 comment)
|Patch Set 10:

(4 comments)
|Patch Set 13:

(2 comments)
|Patch Set 13:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6de752ee8206a98a9c66ccde03387794d878c03b
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 08b56a082bfa941467b55b250efadc86fbd9a8e8
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bfb67972bfd9b3a61024709bb62bd3eae9f6b895
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c1f53cd7544a21ee39f72ebfcf2128dd28e80b83
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 31624757340692120be79e39a72a1f7fa0330fb9
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 81e21aca55d2738358f3ac32953e9d9138af2767
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 0958f48687baadda1f8b3df302ee35b9d4f5b975
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as 1e4cc8ce6a9f3310798692779d834e99c2dcefbd
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a9df4adb1dea7ea0158631a86b14b0a2a1294eba
|Patch Set 2: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bfd595cfd17e86605bd556598795e63b6b80342b
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 483081396c327e4cb6ad5de55c3691c6dff620fe
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

See log collection in unixdcr failed testcase in 
http://qa.sc.couchbase.com/view/BY%20COMPONENT/job/cen006-p0-xxdcr-vset01-00-dev-sanity/56/consoleFull

1. cbcollect does not run on target cluster
2. datafile collection does not happen on source cluster.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

Comment addressed.
|Change has been successfully cherry-picked as 99a46762f0ddd7091c43ed58460b2707f92624a7
|Uploaded patch set 1.
|Patch Set 1: Code-Review-2

new_unixdcr.py is a placeholder. Once tested will be named unixdcr.py and old file will be removed.

Not ready for review, not verified, still making changes. Feel free to pull and add code.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 045eaa4ffbb7ebcda6c2223bc26587ea4bdbed79
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as ed55267f47a74621e230b5d7d3d54b40c1149118
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Passes acceptance tests #7 and #10.
|Patch Set 2:

(1 comment)
|Change has been successfully cherry-picked as 8d0ae99791bb74acf852bb0bd1cacf50bf67cd24
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ea20cfd0d248c6875daabaad2043057dd6179512
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2

Merging to have acceptance tests(http://qa.sc.couchbase.com/view/BY%20COMPONENT/job/cen006-p0-xxdcr-vset01-00-dev-sanity ) running
|Change has been successfully cherry-picked as 11a1379bfcce58d39bffbc6a604b7ee95e185f7d
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Merging to get tests running.
|Change has been successfully cherry-picked as a2783a177d126882decb38f9c96c32837ab470ad
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d1d03ae7b142f0d2cecefd54636d6a27f8ccc938
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Submitting to start all downstream jobs that are failing.
|Patch Set 2: Verified+1 Code-Review+2

Submitting to start all downstream jobs that are failing.
|Change has been successfully cherry-picked as 44eec789ecc560eb62fad1ca1b6a8735aa1abf0c
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Submitting in Sangharsh's absence.
|Change has been successfully cherry-picked as 28bbd9e6df7adeab5d04ca7af1648969a6935414
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4579f280b2546b812eff84f3622cf0fd5a24073b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Patch Set 2:

(2 comments)
|Patch Set 4:

Sorry, left my comments in draft mode.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 4:

(7 comments)
|Patch Set 8:

Also added support for filtering -
https://friendpaste.com/1D0LvBNVeu2tAxID9Zedek
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 8:

(9 comments)
|Patch Set 11:

(3 comments)
|Abandoned
|Patch Set 13:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as aca659ec3e0b4aee8fd4418e9e3a2c523cacc190
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 2:

(2 comments)
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 5:

(4 comments)
|Patch Set 8:

(1 comment)
|Abandoned
|Patch Set 8:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bd5ab3874c03fc0afe14e3e7cac592f9e35e196f
|Patch Set 2: Code-Review+2
|Patch Set 10:

We haven't created 3.0.2 branch yet. This merge has gone into master. Maybe we should hold off until branches are created?
|Patch Set 5: Code-Review+2
|Change has been successfully cherry-picked as e3424233982827e948241193a61024204d3a6d29
|Patch Set 11:

(6 comments)
|Patch Set 15:

(1 comment)

The chain_length is for someone looking at the conf to immediately know how many clusters are being tested in a particular test. Ideally this must be &lt;= the number of clusters specified in ini file. Say I have 4 clusters defined in .ini. I have 3 tests- 1. chain_length=1 (C1-&gt;C2) 2. chain_length=2 (C1-&gt;C2-&gt;C3) 3. chain_length=3 (C1-&gt;C2-&gt;C3-&gt;C4) All the above must be possible.
chain_length=1 must be supported so we can move existing tests to newxdcrbasetests.py. This can be done in a separate commit too. Feel free to merge.
|Patch Set 15: Code-Review+2
|Patch Set 16: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Change has been successfully cherry-picked as 47d8bf57d3026bc091f1ae5217abc98d68af41c3
|Patch Set 4:

(1 comment)
|Patch Set 1:

(6 comments)

I'm not completely done with the code review. I'm done reading just 1/3rd of the code.

It's good that we've been able to get the concept of source and dest down to the replication level as opposed to cluster level. Im still analyzing the design of classes. Expect to have the code reviewed completely by Monday/Tuesday.

Meanwhile, can you attach a sample run?
|Patch Set 3: Code-Review-1

(20 comments)

Overall looks good except for some minor changes. If you are planning to extend the topologies to include bi-xdcr, feel free to merge and then add code after addressing comments on existing code.
|Patch Set 6:

(8 comments)
|Patch Set 10:

these comments hold good for the latest patchset as well.
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Code-Review+2
|Patch Set 16: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 17: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2:

Why do we run this with root user privileges?
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9815b4d17977a662e6ff0692466c15fc36e99f1c
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 50f071fbc06337c666dfb436e42c2541d55b387c
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2fd9552890f49199989fe4dc324c1aaaf58e47e7
|Patch Set 1:

(1 comment)

1. Deletes are optimistically replicated. So it would be good to test with just updates. Also, are 300, 400, 128 random values? What is the avg size of items we load? We can test with 0, &lt;avgsize, &gt;avgsize as optimistic_xdcr_threshold.

2. Also expect compressed value size and not the actual size to be compared with optimistic_xdcr_threshold. So unless you know what the snappy compressed value size for an item is, it's hard to say what should be optimistically replicated and what shouldn't.

3. In 3.0 we expect uncompression of docs by ns_server. Refer MB-10205. I recommend holding your changes before a decision is made on that.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 8ef3a0f24800414692d550b6dbbdbda37ab6fc73
|Uploaded patch set 1.
|Abandoned

The message box ideally must not be thrown during silent install. This has been assigned back to Dev and Bin is correcting the code. Abandoning the change.
|Uploaded patch set 1.
|Abandoned
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 42c3dceeb91f09d6a97c1601e759bc567e5b4be9
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as ecb04b7b85f216dd03121482e60d6a1dee2d1b4a
|Patch Set 1: Code-Review+2

(1 comment)
|Change has been successfully cherry-picked as 45e5e9e4fbdb6d0d35dda17d9795f746aae688eb
|Patch Set 3:

Causing job to fail even when all tests passed -http://qa.sc.couchbase.com/job/centos_x64--00_00-XDCR-sanity/79/console

apparently we are looking for files that have been deleted already.
|Patch Set 3:

Let us pleeeasse have a code review before a merge. Not after.
|Patch Set 1:

(6 comments)
|Patch Set 1:

pls also try a test run locally.
|Patch Set 9: Code-Review-1

(5 comments)
|Patch Set 10: Code-Review-1

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2

(4 comments)

Left some comments. Since this is a skeleton, pls merge.
|Patch Set 3:

Sangharsh, what we currently have is the complete run. If something is incomplete, we can add the specific testcases to conf.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1

yes, separately.
|Change has been successfully cherry-picked as 0f2f6c136896756b786b981a9069fcd7c8fb66dc
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Self-reviewing because
1. I could not reproduce it in 3 local runs with this change
2. this is a blocker and I need to push this code immediately into repo so it can be run on jenkins.

Verified that xdcr tracing is enabled after node restart.
|Change has been successfully cherry-picked as 6db288fb43f0e69b293c0b21961d5ff83b688e10
|Patch Set 2:

Feel free to post comments if any, will be addressed separately.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Patch Set 10:

Hi Sangharsh,

Pls do not self-approve unless it's a very very trivial (1-2 line) change. I understand I was added as reviewer but there are days when Im caught up with other work and am unable to respond. In such cases, pls send a reminder or add Andrei as reviewer for quicker check-ins.

Thanks,
Aruna
|Patch Set 10:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+1

(1 comment)

Nice, +2 if we atleast load 100 items with 1B and 10MB? Did we see any issues?
|Patch Set 4: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 6: Code-Review+2
|Change has been successfully cherry-picked as dcba8044cbd4c84124f3fc6a69636902d8f260c4
|Patch Set 3:

The stat has been fixed, yes but it can happen again and should not be a reason to fail the test. Now that we verify get meta of keys from both clusters, if there's mismatch, we would have to check the outbound mutations queue. If there was a timeout it would mean some mutations have not been replicated.
Failing a test because outbound mutations is not zero is not correct and is not good enough to prove xdcr malfunctioned. An XDCR test should only fail if keys-values are not up-to-date or are not equal on both sides.
|Patch Set 3: Code-Review-1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(3 comments)
|Patch Set 1: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 3c7ba9e8fdc2564e2907365c565d3e2a9dfa971e
|Uploaded patch set 1.
|Patch Set 1:

&quot;space between Program and Files, couchdb*&quot; caused the grep to not work on windows.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 6a1b3d41f5374180f151ff85f2035163342ab4b1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

Hi Andrei, can you pls re-review this code? Thanks
|Patch Set 1:

[8/19/14 11:34:12 AM] Aruna Piraviperumal: yeah, it's best to try when we both are not sure
[8/19/14 11:41:11 AM] Aruna Piraviperumal: actually you are correct, I see ./testrunner.py for every test which means main will have to executed for every test but if I see a job execution, I can see &quot;Global Test input params&quot; printed only once
[8/19/14 11:41:31 AM] Andrei Baranouski: right
[8/19/14 11:42:10 AM] Aruna Piraviperumal: let me try testing this before checking in
[8/19/14 12:06:53 PM] Aruna Piraviperumal: no wonder, we are printing ./testrunner
[8/19/14 12:06:53 PM] Aruna Piraviperumal: print &quot;\n.{3}testrunner -i {0} {1} -t {2}\n&quot;\
              .format(arg_i or &quot;&quot;, arg_p or &quot;&quot;, name, os.sep)
[8/19/14 12:24:11 PM] Aruna Piraviperumal: https://friendpaste.com/3O0qIwJU1p1dT1JdRvLl6b
[8/19/14 12:24:14 PM] Aruna Piraviperumal: it works because
[8/19/14 12:25:01 PM] Aruna Piraviperumal: https://github.com/couchbase/testrunner/blob/master/testrunner.py#L325-331
[8/19/14 12:25:35 PM] Aruna Piraviperumal: we are initializing TestInputSingleton.input.test_params for every test in the lines above
|Patch Set 1: Verified+1

Diag is getting collected after tear down, will fix that separately. Thanks.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 9036786746a324b65f608796356578217e797da2
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Run - https://friendpaste.com/ccGNpEXkQVvE2Y0L546F2
|Patch Set 1:

These tests conceptually have to do with checkpointing however making them a part of the checkpointing classes implements some setup and tear functions specific to checkpoint unit tests. So keeping the code in unixdcr and maintaining it using checkpoint job.
|Patch Set 1:

Andrei, Sangharsh, can anyone of you review this pls? Thanks.
|Change has been successfully cherry-picked as 18b6d5f93331c5275b566adcc074de3c7431e068
|Patch Set 3:

Hi Sangharsh,

1. If the entire commit was reverted, I'm not sure how https://www.youtube.com/watch?v=HSp9pA_o1XQ&amp;index=3&amp;list=PLaL-60nZw5Qel8INfF7VJDOBOGj6zZXfQ will help with new changes in _merge_keys.
If I understand correctly, the error was thrown during delete which happens well before we merge keys prior to validation. If you can also add a line explaining your solution, it will be easy to follow/review.

2. Did the test pass in your testing? If possible, if you could include a run of the test(friendpaste or the like) with the changes, it might be easier to see how the changes impact the result. If a quick check-in is needed, pls add Andrei as reviewer for changes like these. 

Thanks,
Aruna
|Patch Set 3:

sorry about the link, I meant http://review.couchbase.org/#/c/40495/
|Patch Set 3:

Ok looks like you've merged keys before update and deletes but I'm wondering what that will do to avoid the race between delete at source and destination. Even after merging, we are interested in source kv_store only for updates and deletes. As a result, for updates we will be updating loadOne set of keys and deleting last 30% (loadTwo) keys. That's ok but still the probability of race between two delete threads remain. Also, two merge_buckets is quite expensive.

The problem in short is this. Source delete is propagated even _before_ source KV store is updated. We should not let this happen. The solution is to have the destination delete thread wait till then.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7191f852a4b462376eb7324fe3c1b1da161f00bc
|Patch Set 10:

(1 comment)
|Patch Set 2: Code-Review+1

(1 comment)
|Patch Set 3: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Change has been successfully cherry-picked as 57ceaa0288fe7cc9b5afbace031d3d5da9cd8394
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

This change should fix the make-simple failure.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 319f21e802338bdfa0193abbb256ede7028c093d
|Patch Set 2:

(2 comments)
|Patch Set 2: Reverted

This patchset was reverted in change: I6d898f029f6e83ed99cc127a443942b32d5225f1
|Patch Set 2:

See sanity for build 1104-


Test Input params:
{'doc-ops': 'update-delete', 'logs_folder': '/root/jenkins/workspace/centos_x64--00_01--qe-sanity-P0/logs/testrunner-14-Aug-04_14-23-21/test_8', 'replicas': '1', 'items': '10000', 'failover': 'source', 'get-delays': 'True', 'conf_file': 'conf/simple.conf', 'num_nodes': 4, 'cluster_name': '4-centos64-view-simple-3.0', 'ctopology': 'chain', 'rdirection': 'unidirection', 'ini': '/tmp/4-centos64-view-simple-3.0.ini', 'case_number': 8, 'get-cbcollect-info': 'True', 'spec': 'simple'}
[2014-08-04 14:40:25,249] - [xdcrbasetests:242] INFO - Initializing input parameters started...
[2014-08-04 14:40:25,250] - [xdcrbasetests:351] INFO - Initializing input parameters completed.
[2014-08-04 14:40:25,250] - [xdcrbasetests:96] INFO - ==============  XDCRbasetests setup is started for test #8 load_with_failover==============
[2014-08-04 14:40:25,306] - [xdcrbasetests:462] INFO - cleanup cluster1: [ip:172.23.106.191 port:8091 ssh_username:root, ip:172.23.106.192 port:8091 ssh_username:root]
[2014-08-04 14:40:25,338] - [bucket_helper:137] INFO - deleting existing buckets [] on 172.23.106.191
[2014-08-04 14:40:25,365] - [cluster_helper:78] INFO - waiting for ns_server @ 172.23.106.191:8091
[2014-08-04 14:40:25,373] - [cluster_helper:80] INFO - ns_server @ 172.23.106.191:8091 is running
[2014-08-04 14:40:25,389] - [bucket_helper:137] INFO - deleting existing buckets [] on 172.23.106.192
[2014-08-04 14:40:25,427] - [cluster_helper:78] INFO - waiting for ns_server @ 172.23.106.192:8091
[2014-08-04 14:40:25,434] - [cluster_helper:80] INFO - ns_server @ 172.23.106.192:8091 is running
[2014-08-04 14:40:25,434] - [xdcrbasetests:462] INFO - cleanup cluster2: [ip:172.23.106.193 port:8091 ssh_username:root, ip:172.23.106.194 port:8091 ssh_username:root]
[2014-08-04 14:40:25,464] - [bucket_helper:137] INFO - deleting existing buckets [] on 172.23.106.193
[2014-08-04 14:40:25,501] - [cluster_helper:78] INFO - waiting for ns_server @ 172.23.106.193:8091
[2014-08-04 14:40:25,514] - [cluster_helper:80] INFO - ns_server @ 172.23.106.193:8091 is running
[2014-08-04 14:40:25,530] - [bucket_helper:137] INFO - deleting existing buckets [] on 172.23.106.194
[2014-08-04 14:40:25,566] - [cluster_helper:78] INFO - waiting for ns_server @ 172.23.106.194:8091
[2014-08-04 14:40:25,578] - [cluster_helper:80] INFO - ns_server @ 172.23.106.194:8091 is running
[2014-08-04 14:40:26,262] - [rest_client:764] INFO - settings/web params on 172.23.106.191:8091:username=Administrator&amp;password=password&amp;port=8091
[2014-08-04 14:40:26,286] - [rest_client:784] INFO - pools/default params : memoryQuota=2069&amp;username=Administrator&amp;password=password
[2014-08-04 14:40:26,307] - [rest_client:764] INFO - settings/web params on 172.23.106.192:8091:username=Administrator&amp;password=password&amp;port=8091
[2014-08-04 14:40:26,330] - [rest_client:784] INFO - pools/default params : memoryQuota=2069&amp;username=Administrator&amp;password=password
[2014-08-04 14:40:27,342] - [task:300] INFO - adding node 172.23.106.192:8091 to cluster
[2014-08-04 14:40:27,342] - [rest_client:933] INFO - adding remote node @172.23.106.192:8091 to this cluster @172.23.106.191:8091
[2014-08-04 14:40:32,877] - [rest_client:1095] INFO - rebalance params : password=password&amp;ejectedNodes=&amp;user=Administrator&amp;knownNodes=ns_1%40172.23.106.191%2Cns_1%40172.23.106.192
[2014-08-04 14:40:32,886] - [rest_client:1099] INFO - rebalance operation started
[2014-08-04 14:40:32,897] - [rest_client:1216] INFO - rebalance percentage : 0 %
[2014-08-04 14:40:42,915] - [task:411] INFO - rebalancing was completed with progress: 100% in 10.0288820267 sec
[2014-08-04 14:40:43,932] - [rest_client:1524] INFO - http://172.23.106.191:8091/pools/default/buckets with param: bucketType=membase&amp;evictionPolicy=valueOnly&amp;threadsNumber=3&amp;ramQuotaMB=2069&amp;proxyPort=11211&amp;authType=sasl&amp;name=default&amp;flushEnabled=1&amp;replicaNumber=1&amp;replicaIndex=1&amp;saslPassword=None
[2014-08-04 14:40:43,945] - [rest_client:1530] INFO - 0.0124418735504 seconds to create bucket default
[2014-08-04 14:40:43,945] - [bucket_helper:305] INFO - waiting for memcached bucket : default in 172.23.106.191 to accept set ops
[2014-08-04 14:40:45,203] - [data_helper:295] INFO - creating direct client 172.23.106.191:11210 default
[2014-08-04 14:40:45,298] - [data_helper:295] INFO - creating direct client 172.23.106.192:11210 default
[2014-08-04 14:40:45,486] - [data_helper:295] INFO - creating direct client 172.23.106.191:11210 default
[2014-08-04 14:40:45,607] - [data_helper:295] INFO - creating direct client 172.23.106.192:11210 default
[2014-08-04 14:40:46,179] - [task:204] INFO - bucket 'default' was created with per node RAM quota: 2069
[2014-08-04 14:40:46,228] - [rest_client:1111] INFO - /diag/eval status on 172.23.106.191:8091: True content: ok command: ale:set_loglevel(xdcr_trace, debug).
[2014-08-04 14:40:46,238] - [rest_client:1111] INFO - /diag/eval status on 172.23.106.192:8091: True content: ok command: ale:set_loglevel(xdcr_trace, debug).
[2014-08-04 14:40:47,189] - [rest_client:764] INFO - settings/web params on 172.23.106.193:8091:username=Administrator&amp;password=password&amp;port=8091
[2014-08-04 14:40:47,208] - [rest_client:784] INFO - pools/default params : memoryQuota=2069&amp;username=Administrator&amp;password=password
[2014-08-04 14:40:47,223] - [rest_client:764] INFO - settings/web params on 172.23.106.194:8091:username=Administrator&amp;password=password&amp;port=8091
[2014-08-04 14:40:47,250] - [rest_client:784] INFO - pools/default params : memoryQuota=2069&amp;username=Administrator&amp;password=password
[2014-08-04 14:40:48,257] - [task:300] INFO - adding node 172.23.106.194:8091 to cluster
[2014-08-04 14:40:48,257] - [rest_client:933] INFO - adding remote node @172.23.106.194:8091 to this cluster @172.23.106.193:8091
[2014-08-04 14:40:51,313] - [rest_client:1095] INFO - rebalance params : password=password&amp;ejectedNodes=&amp;user=Administrator&amp;knownNodes=ns_1%40172.23.106.193%2Cns_1%40172.23.106.194
[2014-08-04 14:40:51,320] - [rest_client:1099] INFO - rebalance operation started
[2014-08-04 14:40:51,325] - [rest_client:1216] INFO - rebalance percentage : 0 %
[2014-08-04 14:41:01,344] - [task:411] INFO - rebalancing was completed with progress: 100% in 10.0230739117 sec
[2014-08-04 14:41:02,362] - [rest_client:1524] INFO - http://172.23.106.193:8091/pools/default/buckets with param: bucketType=membase&amp;evictionPolicy=valueOnly&amp;threadsNumber=3&amp;ramQuotaMB=2069&amp;proxyPort=11211&amp;authType=sasl&amp;name=default&amp;flushEnabled=1&amp;replicaNumber=1&amp;replicaIndex=1&amp;saslPassword=None
[2014-08-04 14:41:02,378] - [rest_client:1530] INFO - 0.0158112049103 seconds to create bucket default
[2014-08-04 14:41:02,379] - [bucket_helper:305] INFO - waiting for memcached bucket : default in 172.23.106.193 to accept set ops
[2014-08-04 14:41:04,087] - [data_helper:295] INFO - creating direct client 172.23.106.193:11210 default
[2014-08-04 14:41:04,209] - [data_helper:295] INFO - creating direct client 172.23.106.194:11210 default
[2014-08-04 14:41:04,363] - [data_helper:295] INFO - creating direct client 172.23.106.193:11210 default
[2014-08-04 14:41:04,479] - [data_helper:295] INFO - creating direct client 172.23.106.194:11210 default
[2014-08-04 14:41:05,094] - [task:204] INFO - bucket 'default' was created with per node RAM quota: 2069
[2014-08-04 14:41:05,109] - [rest_client:1111] INFO - /diag/eval status on 172.23.106.193:8091: True content: ok command: ale:set_loglevel(xdcr_trace, debug).
[2014-08-04 14:41:05,119] - [rest_client:1111] INFO - /diag/eval status on 172.23.106.194:8091: True content: ok command: ale:set_loglevel(xdcr_trace, debug).
[2014-08-04 14:41:05,120] - [xdcrbasetests:1089] INFO - Setting xdcrFailureRestartInterval to 1 ..
[2014-08-04 14:41:05,130] - [rest_client:1732] INFO - Update internal setting xdcrFailureRestartInterval=1
[2014-08-04 14:41:05,130] - [xdcrbasetests:1089] INFO - Setting xdcrCheckpointInterval to 60 ..
[2014-08-04 14:41:05,144] - [rest_client:1732] INFO - Update internal setting xdcrCheckpointInterval=60
[2014-08-04 14:41:05,154] - [rest_client:828] INFO - adding remote cluster hostname:172.23.106.193:8091 with username:password Administrator:password name:cluster1 to source node: 172.23.106.191:8091
[2014-08-04 14:41:05,199] - [rest_client:874] INFO - starting continuous replication type:capi from default to default in the remote cluster cluster1
[2014-08-04 14:41:05,252] - [xdcrbasetests:372] INFO - sleep for 5 secs.  ...
[2014-08-04 14:41:10,258] - [xdcrbasetests:114] INFO - ==============  XDCRbasetests setup is finished for test #8 load_with_failover ==============
[2014-08-04 14:41:10,373] - [data_helper:295] INFO - creating direct client 172.23.106.191:11210 default
[2014-08-04 14:41:10,496] - [data_helper:295] INFO - creating direct client 172.23.106.192:11210 default
[2014-08-04 14:41:11,102] - [task:770] INFO - Batch create documents done #: 0 with exp:0
[2014-08-04 14:41:13,446] - [task:770] INFO - Batch create documents done #: 10000 with exp:0
[2014-08-04 14:41:13,446] - [xdcrbasetests:372] INFO - sleep for 60 secs.  ...
[2014-08-04 14:42:13,507] - [uniXDCR:140] INFO -  Failing over Source Non-Master Node 172.23.106.192:8091
[2014-08-04 14:42:14,211] - [task:2254] INFO - Failing over 172.23.106.192:8091
[2014-08-04 14:42:14,956] - [rest_client:1040] INFO - fail_over node ns_1@172.23.106.192 successful
[2014-08-04 14:42:14,957] - [task:2234] INFO - 0 seconds sleep after failover, for nodes to go pending....
[2014-08-04 14:42:14,957] - [uniXDCR:143] INFO -  Rebalance out Source Non-Master Node 172.23.106.192:8091
[2014-08-04 14:42:15,983] - [rest_client:1095] INFO - rebalance params : password=password&amp;ejectedNodes=ns_1%40172.23.106.192&amp;user=Administrator&amp;knownNodes=ns_1%40172.23.106.191%2Cns_1%40172.23.106.192
[2014-08-04 14:42:15,989] - [rest_client:1099] INFO - rebalance operation started
[2014-08-04 14:42:16,001] - [rest_client:1216] INFO - rebalance percentage : 0 %
[2014-08-04 14:42:26,019] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:27,023] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:28,027] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:29,030] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:30,033] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:31,036] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:32,040] - [rest_client:750] ERROR - socket error while connecting to http://172.23.106.192:8091/nodes/self error [Errno 111] Connection refused 
[2014-08-04 14:42:33,058] - [task:411] INFO - rebalancing was completed with progress: 100% in 17.0691058636 sec
[2014-08-04 14:42:33,059] - [xdcrbasetests:372] INFO - sleep for 10 secs.  ...
[2014-08-04 14:42:43,171] - [data_helper:295] INFO - creating direct client 172.23.106.191:11210 default
[2014-08-04 14:42:43,326] - [data_helper:295] INFO - creating direct client 172.23.106.191:11210 default
[2014-08-04 14:42:44,072] - [task:770] INFO - Batch update documents done #: 0 with exp:0
Build timed out (after 120 minutes). Marking the build as aborted.
|Patch Set 2: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

Hi Andrei, yes - http://qa.sc.couchbase.com/view/BY%20COMPONENT/job/centos_x64--00_03-xdcr-pause-resume-P1/lastCompletedBuild/testReport/xdcr.pauseResumeXDCR/PauseResumeTest/xdcr_pauseResumeXDCR_PauseResumeTest_replication_with_pause_and_resume_cluster_name_centos_x64__00_03_xdcr_pause_resume_P1_pause_source_destination_GROUP_P1_items_30000_case_number_6_conf_file_conf_py_xdcr_pause_resume_conf_num_nodes_6_pause_wait_10_ctopology_chain_rdirection_bidirection_stop_on_failure_False_ini__tmp_centos_x64__00_03_xdcr_pause_resume_P1_ini_replication_type_xmem_get_logs_False_rebalance_in_source_destination_get_cbcollect_info_True_logs_folder__root_jenkins_workspace_centos_x64__00_03_xdcr_pause_resume_P1_logs_testrunner_14_Jul_28_17_05_03_test_6_spec_py_xdcr_pause_resume/
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4d19c9ebea59b44d43360151b108184f1a88ab56
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as f9904f0840534ef9afaa6ba84885e3d3099d8ae2
|Uploaded patch set 1.
|Patch Set 3:

why can we not change batch_size in xdcrbase tests for async_load_all? pause-resume also uses same method and now I'm getting not_my_vbucket from pause-resume code. Future implementations will run into same issue if batch size is not specified. Moreover there's no point in keeping batch_size as 1 in baseclass. Like other loading methods, we should maintain a batch_size of 1000.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

These tests fail on Jenkins but not when run locally. On analyzing logs, it was found that there was not much time gap between the replicator going to sleep and waking up for the next mutation.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

Andrei, pls review. Thanks!
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Got you, made the change. Thanks.
|Patch Set 4: Code-Review+1
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as c65c0ed6d8b79fb802d66d5da5f0c9f88c74b3ca
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 777f3fcc55b45224070a86ac9cc76e408ff404e5
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 392f4681768124b04ca393a9e115df541dbaf3bb
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 9cf2d6e15814f38dfa48e64f32abdb4ba167a13f
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b3e0f0fc05abd826c40deba80a12ace105db4472
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5d28eab93672f2b230014c9113ae6ec0de64f952
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

build failed due to cmake error, merging code.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as d471c26c49af6e4c8caabcfa61d384e88cbb391a
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 871d5596288e704ca8d060144b236ad1d09029b7
|Patch Set 1:

(1 comment)
|Patch Set 3:

Merged for now, so I can start tests on new code. Thanks.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6b73fb2dc036a35ab28ed72f3ed236dc05166545
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

(1 comment)
|Change has been successfully cherry-picked as f427a5a99c9f60bada64a9b5220db33d9ecc6d8b
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2eb276643860129bc475f00771c17089f430a332
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)

Uploaded new patchset keeping default as 'None'.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Patch Set 8:

Thanks, merging this changeset.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9d867a7959900cae708efecc7083c2418c35e09b
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 9b17c428788f400b44ef158d8195dc695812d9df
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as eb0ca0f652b5e072105f125ff6b73e5f53e050d1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 79562e059c58530315e00e99368d27ff040e34eb
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 3a2496a277f99b4325aa38be6d017675fa6233ef
|Uploaded patch set 1.
|Patch Set 1: Verified+1

http://review.couchbase.org/#/c/38450/ from ns_server to add json logging for easy debugging. Dev requests that this tracing be enabled so all master events can be logged.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 6a6cc0f74e55f6bfdf5656bc17ebec7159c8d6c7
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 310c906a634ce88e0b7574dc733432014f57ca34
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as c381a034d75d221406f1208656a3924dceae575e
|Patch Set 1: Code-Review+2

Do you also want to consider the possibility of 'xdc_ops', '&gt;=', 0 (See two lines below your change)?
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as a21a79e59239f9ec9d08ec3549366ff6f16964ca
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review-2

Not ready for review yet.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6:

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7:

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 7: Verified+1

Ready for review
|Patch Set 7: -Code-Review

Unit test complete run - https://friendpaste.com/7YeB7EN8o8vIqb4jFW4IBi
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 8:

(20 comments)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1
|Patch Set 12: Code-Review+2
|Change has been successfully cherry-picked as 55c5022d3cae49540e2f8cd2291f5d8f9eb8b108
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 1:

The changes look good but the enclosing while(True) will never help iterate twice. If try block does not invoke an exception, we break. If there's an exception, we raise it and exit. Can you pls check if the while is needed?
|Patch Set 1: Code-Review+2

Ok, I see the if under the last except condition.
|Patch Set 2: Code-Review+2
|Patch Set 2: -Code-Review

Tony, looks like you need to rebase again. And since Andrei had a comment, I defer the approval to him. Thanks.
|Patch Set 9:

(2 comments)

Comments:
1. Apart from the node crashing scenarios and bucket flush, I think other tests already exist. Can we just refer the testcase in conf instead of duplicating code? Infact I'm wondering what we would achieve by rerunning the scenarios especially when there are no checkpoint specific validations for items in order of 1000s. So I'm more interested in the unit tests where actual checkpoint verification can be done.
Copying from my mail -
As long as you want to induce mutations
{
	Load(once, thereon update) an item into vbucket0
 	if checkpointing happened (for now, let us rely on changes in time_committing stat/secs in checkpointing, I've asked ns_server team for stats on total successful and failed checkpoints at vbucket level, this will be private API)
		Validate most recent checkpointing doc for the vb
		Check if replicator starts from the next sequence number specified in checkpoint document 
	Else
		Raise &quot;no checkpoint made&quot; exception
	Sleep for 60s
        &lt;do_nothing/restart node/rebalance/failover node as needed by test&gt;
}
So it would be good to create methods for these steps. I would also appreciate Andrei's input on the above.
|Patch Set 9: Code-Review-1
|Patch Set 9:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

For cases like MB-10856 where uni-xdcr causes data inconsistency at source but all is well at destination.
|Patch Set 1:

Will do it in a better way.
|Abandoned
|Patch Set 1:

this is how we handled it in http://review.couchbase.org/#/c/37055/

verifying source items is an important check which we havent been doing so far in uni-xdcr tests. pls refer MB-10856.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)

Verified on cluster run with 2 * 2 xdcr.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(5 comments)
|Uploaded patch set 5.
|Patch Set 5:

I have no CBQEs created for this but I'm not sure how CBQE-0 will help. I used to do this before but then started wondering what purpose it serves.
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5: Code-Review+2
|Patch Set 5:

I see, will include CBQE-0 in next patch. But buildbot has verified patchset5 as you can see.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9:

Merged and rebased after most recent merge by Sangharsh.
|Patch Set 9: Code-Review+2
|Change has been successfully cherry-picked as cade62079b3fdb829e17d71bdbfe472ecb7f21a3
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review-1

(4 comments)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Per Dev folks, it looks like any number  &lt;=4 is treated as low and  &gt;4 is treated as high, the numbers is only for mapping during upgrades. So bucket with threadsNumber =1 is considered to have priority as a bucket with threadsNumber =4.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 79abe9a6d5d828c5f7ceb4bdf340e0a7f032cce5
|Uploaded patch set 1.
|Patch Set 1:

Delete + recreating vhost and trying to establish connection to vhost, 7/10 times results in &quot;Connection reset by peer&quot; error. Also in some times, vhost doesn't get added. This is sporadic. So modified code to not add vhost if already present and to retry connection 5 times before aborting run.

Another minor change was to kill all celery processes which weren't getting killed when we did a screen kill.
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 3:

Patchset4 - a more meaningful way of retrying connection.  Btw, librabbitmq dependency requires librabbitmq to be installed on the Jenkins slave running this script.
|Patch Set 4:

preferably, to avoid ssh timeouts
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as 877d77eba30367d292614e1b936e46196fc1d4d6
|Patch Set 6:

Actually there was no need to run runsystest.py in screen. Worked well even without it.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d112a86269d5b24bcf3273bb7e200bb7078c2539
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b3601f33ae32a261d30fc4ae288f31f294c175cc
|Patch Set 1: Code-Review+2
|Patch Set 1:

Andrei, the changes look good but currently there are no dgm tests in our functional suite. So wouldn't the addition of this param only be relevant to those cases? I also hoping there are full eviction functional tests somewhere.
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 19eb0ada8add62214230d47bfa31971bf0b88710
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6bf580f579c3accc2a4fffa7300d5d21b582670d
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 09339a8700a53ee460602dd1a4d5ac021b2591b4
|Patch Set 5: Code-Review+2
|Change has been successfully cherry-picked as 3b48849da24c8d7314890831c7b89f0b13087066
|Uploaded patch set 1.
|Patch Set 1:

Untested, only for an example.
|Abandoned
|Patch Set 10:

I had already noted this in my comment on MB-10792 -

&quot; Pls note _all_docs is not functional anymore, for manual tests use views, for test runner implementation, we need to do getMeta() on all keys from cluster1, compare it against all keys in cluster2 i.e, force control to verify revids and log keys that are not present in the other cluster when item counts don't match between clusters(and not just stop the tests there).&quot;
|Patch Set 16:

(1 comment)
|Patch Set 16:

(1 comment)
|Patch Set 16:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4:

Can we see if we can accommodate testcfg for every test in pysystest? Say for xdcr, we need two- one for source and other for dest.
|Patch Set 5: Commit message was updated
|Uploaded patch set 6.
|Patch Set 7: Commit message was updated
|Patch Set 8: Commit message was updated
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Thanks for the review Tommie, added a rabbitmq connection check. There was minor correction I made for setting vhost permissions - the rabbitmqctl keyword was missing so permission was not set correctly. Is why you were not able to connect to rabbitmq from worker?
|Patch Set 9:

(4 comments)
|Uploaded patch set 11.
|Uploaded patch set 13.
|Patch Set 13:

sorry, messed up my repo and uploaded old file.
|Uploaded patch set 14.
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Verified+1

Verified cbmonitor setup and push stats. CBFS is now down for some reason. Otherwise this script should work from inspection to uploading stats. Thanks.
|Change has been successfully cherry-picked as f777085353a2871817058799c69f09c981bb8c4f
|Uploaded patch set 1.
|Patch Set 1:

Maria,

I checked in xdcr code, build failed because make-simple failed on a views test

summary so far suite rebalance.rebalancein.RebalanceInTests , pass 1 , fail 0
summary so far suite performance.eperf.EVPerfClient , pass 1 , fail 0
summary so far suite memcapable.WarmUpMemcachedTest , pass 1 , fail 0
summary so far suite view.createdeleteview.CreateDeleteViewTests , pass 1 , fail 0
summary so far suite view.viewquerytests.ViewQueryTests , pass 1 , fail 1
failures so far...
view.viewquerytests.ViewQueryTests.test_employee_dataset_startkey_endkey_queries_rebalance_in
summary so far suite xdcr.uniXDCR.unidirectional , pass 2 , fail 0

Should I merge?
|Patch Set 1: Verified+1

Tested with cluster run.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3fdd36a69c8d648fe80732f4c6295d278e231b23
|Patch Set 5:

It's a typo - it's MB 10868
|Patch Set 3:

(3 comments)

Pls merge the code with the new changes. Otherwise looks ok to me.
|Patch Set 3: Code-Review-1

(2 comments)

Just remembered 2 more things while driving home.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 6006b092145b0fbee7b5b6cbb8eceaa042f0b199
|Abandoned
|Patch Set 1:

Tommie, I remember you saying coq will be deprecated soon. Or was it ccq? in which case we can remove coq or ccq altogether. 

Parag, there are no post-upgrade phases. Can we add rebalance-in, out, failover and restart phases?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

A simple variation of collect_server_info.py to collect data files from every node.

Usage: python collect_data_files.py -i &lt;ini&gt;
|Patch Set 2:

That's a good idea too. For now this is a standalone script. Any comments?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 289e4a4fa3b9b6c574b42e80ab1a818eacc80f7d
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as e565be9573f8adeef68ed7f6c74bf19874a74d6f
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 4785bdc32d650f9acb90cf1178a8c0ddd97223d2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2

Sangharsh and I discussed these comments on call yesterday night.  He has approved the changes.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2

Rebased
|Patch Set 6:

Rebased
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 194c8e5a81775d6c59a27c6483a0efb6dd3bf137
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6843a630f963ae009e0110411bd8b15166405c81
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Andrei,

I'm not sure about UPR but XDCR on UPR is not a permanent option during installation in 3.0. Customers will not use this. It's a temporary solution to enable UPR path until the code is stable. Also, it doesn't have any default value. As per Dev, setting the variable to any value will enable the code for UPR. This being the case, should we still set it to None?
|Patch Set 1:

&quot;Customers will not use this&quot; --&gt; I meant the environment variable.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 557e032231f0a2582503a6c9318adfc7de8fa1d6
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Based on the above comment, can one of you approve the code so I can get the new tests running?
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Verified+1 -Code-Review
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 7a5ea055d1af77900b8100f59611fa61b36c4b0f
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 717436641655c4d109de3293693d5d02bb1cfe78
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review-1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as a7898907e1953ecda682285d5bfaec4ccfa81583
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 997ba2d84090487f34d8776a5e6e9675edf4143d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9045a5091d55532e6c18fe8b735ed83886d62a82
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

I've increased item count in tests where I need more data to replicate after resume. I've decreased it in cases where there are 3 buckets and we're loading 100K in each bucket. In that case due to bi-dir, merging buckets takes a lot of timeâ€¦so reduced to 50K per bucket. If there's any other change you want me to make I can.
|Change has been successfully cherry-picked as e1012af56c75b19ee7cb47615f14b0cb2528e6a2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Minor change - Corrected typo in comment.
|Patch Set 2: Verified+1

Minor change - Corrected typo in comment.
|Patch Set 2: Code-Review+2

Minor change - Corrected typo in comment.
|Change has been successfully cherry-picked as cb63fd9973f3ffe1e44fe49633c879bece2f1198
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9726a2da8c1817e1da7d438a661cf8fee967a1fb
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5bc07d43275cb0d78bbde428332cf496ea17d911
|Uploaded patch set 1.
|Patch Set 1:

(4 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

I modified the _async_rebalance_out and other methods to returns tasks. Earlier I used a thread in the caller to wait till the tasks ended inside the method...but this would necessitate always following a similar approach of threading to parallelize operations.
In the caller, I need to do tasks.result() but _not_ wait. Say I want to resume replication and not wait for rebalance to end. In this case, I created methods inside pause_resume that would run these tasks till end and assigned them to a thread. I'm still unable to get rid of threads.

Are there better alternatives with tasks?
|Patch Set 4:

But here resume_xdcr starts before rebalance starts. I want it the other way around. Appending tasks does not ensure tasks are kicked off, right? task.result() is when rebalance is initiated and forced to wait.
|Uploaded patch set 5.
|Patch Set 5:

Got it, my bad, that's how we load anyway. Made changes.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 450d28572eb2081de6399d5e58a8444698337022
|Patch Set 2:

(8 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 31e095ed98b8d8dee1f99872c46df53162941c34
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Restored
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Verified all tests.
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as e1a5499659cc91870228b375c3413970b3eeaa1a
|Uploaded patch set 1.
|Patch Set 1:

Not ready for code review yet. Uploading code to share with Sangharsh.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Sangharsh, Andrei,

The code is now ready for review. Kindly review the code and leave your comments.

I've moved pause_replication() and resume_replication() to xdcrbasetests.py from my initial implementation in rest_client.py so we can call post_pause_validations() and post_resume_validations inside the respective functions to reduce the complexity of coding in the caller because in bi-directional replication the concept of source and destination is based on a reference and this is dynamic based on the which side the operation is performed. 

I've added comments as needed. 

The method to test the framework(by adding pause and resume steps in a test) and the output seen in testrunner can be found at -
https://github.com/arunapiravi/bitsofcode/blob/master/testing_pause_resume.txt

Thanks.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Removed biXDCR.py which contained sample test code from patchset 3.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 5:

(25 comments)
|Patch Set 5:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 6:

(13 comments)
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 932d40ee008ca2095363d617669c47d882ab5e47
|Patch Set 3:

I didn't know you were working on this too. My code here at - http://review.couchbase.org/#/c/33914/ (rest-client.py is ready and tested, others are not) I'm working on post-pause and resume validation functions based on the my implementation.

We can see what we need and merge accordingly although we should try to avoid this duplication of effort in future. Thanks.
|Change has been successfully cherry-picked as 044ef8796fa075e8590cae6ec6213996b2d686f0
|Patch Set 4: Reverted

This patchset was reverted in change: Ie1620adcd7faa6e9b659099754e8faa63e963cb1
|Patch Set 4:

oops, sorry, I clicked on publish and submit by mistake. We will discuss this tonight.
|Patch Set 1: Code-Review+2

Approving now so Sanity can run. Kindly check with Iryna if CCCP.py needs to be put in a directory. Thanks.
|Change has been successfully cherry-picked as fbc5a5030d1f702239bfef9bf639985955fd48ba
|Patch Set 15: Code-Review-1

(2 comments)
|Patch Set 15:

Also, would be able to make the method name more meaningful - say instead of test_verify_mb9693, can we say test_verify_enoent so by just looking at the test we know what it will do. Now that we are going to be automating so many bug verifications, we will lose track of the mb number.

Thanks,
Aruna
|Patch Set 27: Code-Review-1

(5 comments)
|Patch Set 33: Code-Review+2
|Patch Set 1:

Merged - http://review.couchbase.org/#/c/33057/
|Patch Set 1: Code-Review+2
|Patch Set 3:

Sangharsh, the changes for async_load looks fine, but there's a sleep soon after load -
self.sleep(self._timeout / 2)

By this, we are actually not rebalancing when data load is on. For 10K items, it would take less than 10s to load, so for these cases where we want rebalance to happen when data-load is going on, we can
1. increase the no. of items to ~3M
2. remove the sleep stmt

Thanks,
Aruna
|Patch Set 1:

Reverting back my change because build failed.
|Abandoned
|Patch Set 1: Verified+1 Code-Review+2

Reverting the previous change as it renders xdcr-conflict resolution void. Thanks.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 09efad93c7cb67b6c1040dbf54790a2e787e5ebc
|Patch Set 3: Reverted

This patchset was reverted in change: I2057059129dd742e7f6f4f38047b81cd5ba1b26e
|Patch Set 1: Code-Review+2

Would adding the modified conf file to the changeset be a good idea?
|Patch Set 2: Code-Review+2

Thanks, approved.
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9a779cd8773ce516a49ff55ccae132dd504d4b1a
|Patch Set 3: Reverted

This patchset was reverted in change: I4c6fa75deb1721e753f06c7ce1813889e0d7eec6
|Uploaded patch set 2.
|Patch Set 2:

Removed whitespaces and added a generic except to catch all exceptions that occur under try block. Thanks.
|Abandoned
|Restored
|Uploaded patch set 3.
|Patch Set 3:

I get it now, Iryna. Added else block and removed white spaces, thanks!
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5: Verified+1

Iryna, sorry about the too many back and forths. I was just wondering if we should fail the test if an expected exception was not seen. I wasn't sure if there could be a scenario where a different or no exception is thrown but the statements in the try block are successfully executed (that is how this has been originally coded).

I've anyway added a generic exception exception handler and the else block causing the test to fail. Right now, when I execute the test, I only see the expected exception handled. So long as we see exceptions, we are good. I've tested the changes, the else exception was a good catch.

I've repeated the same changes at another function which makes use of  'with AssertRaises()' .Thanks.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+2

A minor change to print the unexpected exception.
|Change has been successfully cherry-picked as 209165ecdea8ee02f8247df0b266de24caa93f4d
|Abandoned
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Tested locally.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 4: Reverted

This patchset was reverted in change: Ibb3c73157b331f2e39d01cef9fc1d7f16774f216
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Verified locally.
|Patch Set 2: Code-Review+2
|Patch Set 2:

removing unsupported params makes sense. Thanks.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2

Thanks for adding windows support for disabling firewall.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Verified - https://friendpaste.com/3D3wcKheUgrigqEdQthc3H
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

tested locally
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2

Sandip has +2ed, merging.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Code-Review+2
|Patch Set 13: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(23 comments)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4:

(4 comments)
|Patch Set 7:

(1 comment)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 4:

(16 comments)
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Minor changes, verified.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2

Minor changes, verified.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

verified locally with and without replicas.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 10: Patch Set 9 was rebased
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1 Code-Review+2

Approved by Sandip.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

tested locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

verified locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1

tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

verified locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

verified locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2

Verified and run locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

Tested locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

tested locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 5: Reverted

This patchset was reverted in change: I3067bc795f2f6cf40abd91b3edeffec59fc13fbb
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2:

(2 comments)
|Patch Set 2: Reverted

This patchset was reverted in change: I2b53ef6700a85e8d457a33c82ed0dcb2f2945bd0
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 1: Code-Review-1

(2 comments)
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1

Sample output of test being failed because a breakpad dmp file was detected, even though the run was functionally successful - https://friendpaste.com/4gpK3xqGU811nQDfW58hOd
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review-1

Hi Arun, I've left some comments. Pls address. Thanks.
|Patch Set 2:

Also, pls run the entire .conf and make sure there are no test code failures.
|Patch Set 1:

(10 comments)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested locally.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: Ia8fe3c1a656f270243a3500140078f2ecfadaaa4
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Looks good, Prathibha, pls merge.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Patch Set 2:

1. Pls pass items=1000 for all sanity tests
2. Pls test once before merging. Let's see how much time we gain by these changes.

As pass 2, we can maybe limit the number of tests per component or remove some tests that are not very basic but test advanced functionalities.
|Patch Set 2: Code-Review-1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Verified locally.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2

Spoke with Prathibha over chat, I agree with her approach.

It's better to fix the problem at the source instead of having to handle the exception inside every base test class. When there's no kv, there are no vbuckets, running expiry pager or setting its params does not make sense.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2:

Removing an extra ',' that caused replication 'type' to become invalid.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

tested locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1

tested locally.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Thanks Eric, missed adding another file to the patchset. Will merge.
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

verified locally.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

tested locally.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1

verified locally.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: -Code-Review
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 2: -Code-Review
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2 Verified+1

verified locally
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1

tested locally
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1

tested locally
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+1

Removed blank lines. Merging now, thanks.
|Patch Set 6: -Code-Review Verified+1
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2 Verified+1

whitespace removed.
|Patch Set 1:

Thanks for this write-up, Steve. This will be very useful.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1:

(12 comments)
|Patch Set 3: Code-Review+1

(2 comments)

Minor comments. Please address and merge. Thanks.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Will add dgm tests soon.
|Patch Set 2:

Also removing dgm tests from simpletopology.conf because I've moved them to a separate dgm.conf file already under conf/fts/
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1

Minor conf changes, self-approving.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1

Minor bug fix, merging to allow tests to pass in Jenkins.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2

(3 comments)

leaving some minor comments. looks good to me anyway.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+1

(6 comments)

mostly ok, just some minor qns.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

An attempt to fix cluster run error reported by Marty.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

Verified locally.
|Patch Set 2:

Mihir on Skype - &quot;Hi Aruna, I reviewed your change, and it looks good.&quot;
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Code-Review-2

Waiting for Eric's changes to cluster.py so bucket_type can be passed to it.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: -Code-Review Verified+1
|Change has been successfully cherry-picked as 527c11429c7e1d9a9ecc91b5a79d67e86501cae8 by Aruna Piravi
|Patch Set 3:

(2 comments)
|Patch Set 6: Code-Review-1

please remove fts_base.py from this changeset or make changes similar to xdcrbasetests.py.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 29154005d15458ece52111e7e6b84011308182fa by Aruna Piravi
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 5d05fb24eaa10364c2a3e1afec6a843902fbec35 by Aruna Piravi
|Patch Set 1: Code-Review+2

Looks good, please verify and mark as verified and merge.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 279838b92331ec1e7724b0bc01b69e0d61923726 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 73664293c9f376d9862c83df797cee2f99901f90 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d3981cc9ccec6fb47b7c4d763ecec95a914d062c by Aruna Piravi
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as f2bfb8e63c1ec7e9ea747e57fbe9d68e692ff03a by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Change has been successfully cherry-picked as 60c99f6f9102ce0072988d39f2a48c8150b1ed8b by Aruna Piravi
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 8b337d2a532df99610195cadeb6866fcbc62180d by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 415cfd1de525b73c72aaeaa2c5d56a1b2f880961 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as ff234e7e2440eeed457f4ce0ea06fd607388ad7d by Aruna Piravi
|Patch Set 2: Code-Review+2

I was uploading a conflicting change to unblock myself and gerrit brought this up. I'm +2ing this. Not sure if you were planning on doing more testing but I tested HTP=False and True on the conflicting changeset which I will now abandon. Thanks.
|Change has been successfully cherry-picked as f5b130624ea19cc175b26731302c7b29bc2ebf3a by Aruna Piravi
|Patch Set 3:

Thank you Tommie, I merged the change to get unblocked. If something comes up, will let you know.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as e7e2d2c9d85b3102694f5a42850f1e244edec784 by Aruna Piravi
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as b12c7e09c0c7f6467ad4ff0f7126d2b1d6201cb9 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 49128c8aa5e574f2c4010899c7e2350cdd7ac16c by Aruna Piravi
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1

Minor
|Change has been successfully cherry-picked as ec1df2273a3cb0381ab3ad5d77deb104402d6537 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

Minor- catch for cases where user is not found(typically when we're firing this rest call against a node that is no longer in the cluster)
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully cherry-picked as c30cbb4227a22047cfe062ff7e0ea516c6fda233 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1

Verified with the exact testcase that was consistently failing. It now passes.
|Change has been successfully cherry-picked as 480abc70a9e195721dbf1eedc514ddbf4ba49608 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1

minor and verified locally
|Change has been successfully cherry-picked as 0da7f602d44614eac51e7f9a76676b5642b0a3d1 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1

minor, reducing bulk load docs for wiki dataset to avoid overloading ES that causes job to hang
|Change has been successfully cherry-picked as 5766ca1c21e87668cf83942d716df2311fdf7d1f by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1:

minor conf change, +2ing
|Change has been successfully cherry-picked as b980a73be122ecd6d52a7c24a98a606f7a223c32 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d9e29a809645b3eac6755bd6568ef9267d6e4540 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1

Minor change
|Change has been successfully cherry-picked as c6eb343bd93412a28d3a77bb4f368be10fa62d08 by Aruna Piravi
|Patch Set 2: Verified-1

(6 comments)
|Patch Set 2:

(4 comments)
|Patch Set 4: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review-1

(2 comments)
|Removed Code-Review+2 by Prerna Manaktala &lt;prerna.manaktala@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1

(1 comment)
|Change has been successfully cherry-picked as f38423e982b94e03a879126d93bd1c39de2cf76f by Aruna Piravi
|Patch Set 1: Code-Review+1

I still need to catch up n1ql concepts of covering indexes and distinct scans. The code looks ok to me otherwise. Prerna can +1 for the n1ql logic/correctness.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

minor change to conf
|Change has been successfully cherry-picked as 0a10f6b2aea78a6b87a11be1489799eadff94fb1 by Aruna Piravi
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 497b74616c32f99b8c86ad51d19047615e8b37e7 by Aruna Piravi
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

This happens on faster machines where python load tasks complete faster on the machine running testrunner but load actually takes time to hit the cluster.

Should help with the build sanity failures you see. Thanks.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 275b4e5e91d00ea7e31f018147e768bf5a7beef0 by Aruna Piravi
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

minor, tested locally.
|Change has been successfully cherry-picked as 35fa8c836436c4266a8607bd1423aec22dd0a705 by Aruna Piravi
|Patch Set 2:

(3 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 62afae0b41822e81824f58c70c61edc0915e7149 by Aruna Piravi
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1

Rebased code, reinstating Tommie's +2.
|Patch Set 4: Code-Review+2
|Change has been successfully cherry-picked as 1f9cc664ec07c5fba3466e985326c93704fbd54f by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as d07fc187b6762ba54bf969fff687b45bb6e383e3 by Aruna Piravi
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1

Reinstating Tony's +2.
|Change has been successfully cherry-picked as 701f9af59ccf89680d46ceb41f70d8c80baff1a2 by Aruna Piravi
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as d9903a0a9896962d5ad1034791ab93e924efbea6 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 7b246a188540319c54547cbd35e1d4e18b390221 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 652f6ef26e4d111b3658f9ef7200d0966ef8bac8 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 4998352e22b969cc08f774810184d0ca471e2aa2 by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 48f8507d4b8f2c0546507c3308e54ee20c7ed830 by Aruna Piravi
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 79fec4a99083a0bfa0c2f8d108110dffa5fbb2dd by Aruna Piravi
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1:

Reducing data nodes and increasing data load so rollback is more prominent.
|Change has been successfully cherry-picked as 796e6b2ac547e6f6baca2933edc5f61426e6ec99 by Aruna Piravi
|Can this be applied to more queries, besides this one?
|There could be 2 types of failures.
1. Expected rows != returned rows (In this case, the results will contain information)
2. Returned rows =0 - the error condition where results{} is empty.

I would prefer keeping this output for condition #1 - we have used similar error outputs for views-where it was useful to debug how many missing rows/ v/s expected rows on the test.
|Might need to resize this, 2G might be a little small, check if you can upgrade this to 3G for a replica=2 count.
|Add datasets 128 , 256, 512 bytes.

Please use mcsoda on one of the buckets.
|Check XDCR replication queue draining. Replication rate. Drain rate on 200 cluster
|Maybe move this in a baseclass/ common class for views.
The below tests for in-memory indexing should be added to more than createdeleteview tests.
|try/catch to catch exceptions in running the command success/not.
|Remove white spaces
|Rest comments from the email:

- Please add disk_drain wait phase before any rebalances, refer kv_linux or views_ssd for an example.

- Please bump up the ops/sec on access phase to 10k , 10k and 3k for the last is ok.

+ Yes, access/dgm only for the remote test cfg works.
|Please add this conf file under view-conf.
|ah yes!
|@Junyi: This is in context of another fix, please ignore.
|Add likewise for other uni/bi and rebalance test, once value &amp; usage of flags is confirmed
|P0
|Can you add one of the AGGREGATE as P0
|One of ARRAY_FN also as P0
|delete whitespace
|here too.
|typo : defaul should be default
|remove whitespace
|Please grep for this module and make sure this breaks nothing else.
|whitespace
|Please add more functional/features tests on this conf file when you add the rest of the code.
|Could you remove these un-needed test placeholders?
|Refer/ Add these from the test constants.py - Avoid hardcoded values on the test.
|Will do.
|This is done at startup, so the old logs contain only the pre-cluster state of the nodes. Can add, but imo not necessary for the current tests.
|Nopes, Can add that. Did not since, this was for a specific customer usecase and I wanted to reduce the stop/start couchbase on each node. 

Will separate this out for more generic availability.
|Yes, I wanted to minimize function overlap, so added this here.
Added more changes to have all the existing tests to support change_max_buckets which is based of total_buckets as on the BaseTest.

If you recommend keeping SwapRebalance out of BaseTestCase extension, I can add that change - but will duplicate the change_bucket module again here.
|incremental*
|these sleep calls should be moved out eventually. 

Can we use disk_write_queue emtpy instead of sleep here?
|Can use the common definition of create views, instead of replicating code here.
xdcrbasetests.py:    def async_create_views(self, server, design_doc_name, views, bucket=&quot;default&quot;):
|To Do: Add Concurrent queries w/ backup, when concurrent queries are working in-code.
|Can you add a test to warmup entire cluster?
|Please check on the system-spec if you need to name with all &quot;_&quot; underscores for the graphs.
|initial load : s:100? Here g:90 and s:15.
|ops: 4000
|ops: 4000 for bucket1
|g+s+d !=100. Please add more sets or more updates on this.
|Name phase _with_ underscores.
|same as east cost - first phase sets:100
|g+s+d !=100
|Hi Iryna, 

Are all the tests on tuq on this file? Can you point me to the conf file for all the tests added so far?
|Will need to add more coverage on this. For now this works as a sample.
|Why do the older calls exist then? Did the functionality/params change since they were last used?

The es_rest.client shows this definition for the all_docs

lib/membase/api/esrest_client.py:    def all_docs(self, keys_only = False, indices=[&quot;default&quot;],size=10000):

Do we want to change the values to all default?
|Is the ep-engine code on this merged yet?
|Can you add this testcase for biXDCR as well?

Also please reflect this additional testcase on the individual conf files.
|Please dont hard-code these values. Add this is a multiple of self.timeout.
|yep!
|Well, in that case all the other ones(uniXDCR and biXDCR) need to be modified as well.
|100k items
|Will add same tests with uni and rebalance xdcr. Can you move this to xdcrbasetest class?
|self._load_all_buckets(self.src_master, self.gen_create, &quot;create&quot;, 0) make self.expires=0, since we do not want to expire all created items.
|fragmentation_value can be moved to xdcrbasetest class.
and num_views.
|this should have self.expires
|Does this not work with async_update_delete_data here?
|Have we verified if 120 sec, is enough to replicate upto 10k items?
|Change the indent to change only your code.
|can you rename this as -&quot;overlapping_ops&quot;
|remove this
|delete this
|Dont add loadTwo on this. Lets work only with loadOne
|Wait for stats to be zero at the destination node .. ie the data is replicated to the destination node.
|Remove prints
|Change this per the latest code change on above bidirectional functions.
|Change this number to original value
|Avoid dups
|remove white space
|Yes.
|Ah, yes.
|please revert this space-change
|revert this space-change
|Do not hard-code this as any server-names, we generally add them to be compatbile with cluster_run ie 127.0.0.1:9000 onwards
|This file cannot be deleted.
|Please reverrt this change, since this is not directly impacting xdcr or related changes.
|I could be missing this, but where is the create load here? ie which documents are being updated here? Does this show mutation on the same prefix?
|self.pause is a much smaller value than poll_timeout and timeout, using this here temporarily until the race/ timing issues are fixed.
|Failing test, due to mismatches on XXX error.
|Can we increase the item count to 25k or 50k here. We would like to have atleast 100k items in total on any bucket.
|I still see a lot of tests with 10k or lower than 50k items. Is this for any specific reasoning on the conf/ file?
|Done
|Done
|How does merge_buckets apply on uniXDCR?
|self.expires on creates to be zero everywhere.
|self.verify_results() used here?
|this should also be self.verify_results?
|Nice!
|create should be with &quot;0&quot; as self.expires as well.
|Change the num_items to 10k
|if self._failover is not None:
            self._timeout*= 2

I think this check is not included on this change.
|If this function is exactly same for both uni and biXDCR, can you move it to XDCRREplication class instead?
|This is the rebalance-modified xdcrbasetest class. Does this reflect any of warmup/conflict resolution changes that you ve made? If not, please upload the one, which has only your changes.
|Done
|Yes, moving only the repetitive load part to Setup. The src/dest keys are specific to each testcase and need to be handlede from within the function.
|change this to self.failover parameter
|Add separate params for master and non-master node failover
|Yes, looks like a merge issue. Will address this.
|Yes, looks like a merge issue. Will address this.
|For Q, seqno = struct.unpack('&gt;Q', meta_data[:8])[0]
|The code can support more than 1 remove, but on the tests I am removing only 1 node. Multi-node failover will not ensure data-consistency.
|Yes, it is added as a TODO above.
|Ok.
|yes.
|Test and add for items =100000
|Rename as VerifyRevIdTask
|rename variables to more logical names
|Print what &quot;key&quot; was mismatched. Add check for upto 10 mismatched keys and then exit with exception.
|check -error condition - this is not correct
|Not needed here.
|Comments change to &quot;python stds&quot; desc on coding stds
|initRebalance=False, is the temp fix for 1:1 cluster?
|I think, it should be ok, since we are going to anyways update these tests w/ QE test this week.
|Are the reverted changes supported on this file? [ ie no ordered dictionary and/or a replacement of 2.7 ordered dictionary with a structure we can support for a lower version of Python?
|Please add function descriptions for any newly added functions - refer http://hub.internal.couchbase.com/confluence/display/QA/QE+Coding+Guidelines#QECodingGuidelines-PublicModuleFunctions%3A
|extra spaces here
|The description should indicate that this tests (rebalanceInOut) will simultaneously rebalance in- and rebalance out a node
|extra space here
|delete this
|Changing this to :-
def _failover(self, master, failover_node):
        rest = RestConnection(master)
        result = rest.fail_over(failover_node)
        return result

and the invocation :
#Failover slave1
        if self._failover(master, slave1) is True:
            log.info(&quot;Failed over slave1[node  %s] and loading %s items&quot; % (slave1, self.items))
        else:
            self.fail(&quot;Error! Unable to failover node %s&quot;%slave1)


The rest_client raises an exception i-If there is one during failover. This should raise an exception only on Failover actual errors.. and not on any programming/input errors.
|Changing this function to only resturn the rest_call.
[return None/ result variable etc is not valid in that case.]

def _failover(self, master, failover_node):
        rest = RestConnection(master)
       return rest.fail_over(failover_node)
|Done
|Done
|Done
|Done
|Yes, you are right. I had a check in there earlier, which asserted True for this. I ll add it here.
|Done
|true. Editing this one.
|This is different from StatsWaitTask wrt to the tasks - specifically the &quot;cluster.async_wait_for_stats&quot; task. The earlier run w/ StatsWaitTask timed-out while collecting stats from the master node.Also this function was likely to change(?).. So we agreed it would be a better idea to write another separate function to read the stats here and use it for this function.
|ok
|yes
|I am adding a log.fail on the function _failover to fail if the failover does not happen - in the else/exception portion. This should take care of the test not proceeding ahead in case of any failures during failover-call.
|The rest_client does raise an exception for the failover error. Do you recommend not having any exception call on the checkpoint._failover call? 

def fail_over(self, otpNode=None ):
        if otpNode is None:
            log.error('otpNode parameter required')
            return False
        api = self.baseUrl + 'controller/failOver'
        params = urllib.urlencode({'otpNode': otpNode})
        status, content = self._http_request(api, 'POST', params)
        if status == True:
            log.info('fail_over successful')
        else:
            log.error('fail_over error : {0}'.format(content))
            raise FailoverFailedException(content)
|if self.input.param(&quot;skip_cleanup&quot;, True): also works here, right?
|We need to take out the extra &quot;&gt;&gt;&quot; characters here?
|ok
|Done
|Done
|Done
|Done
|Done
|Can you check-in every different area change separately.

Also, while changing default values, it would be good to not keep the doc-per-day to 1, it reduces the volume by default to 2016 please move to this to 5.
|Can you check for covers in res instead of checking for &quot;not&quot;
|trivial : please change this to self.log. and avoid using print.
|Yes, the stmt has 2 selects and 2 indexscans.

Need to check 2 indexes on each indiv stmt and this create index2 satisfies the 2nd stmt.
|It should, but this has worked on the earlier test and I dont want to change the format for 1 test only.

I plan to modify all if I change the format on any one.
|it is first 6 vars from the version.

The version is 3.0.0-419-rel, so version[:5] = 3.0.0
|Ah, I did not quite get the question- could you point me to an existing such build name.

And with the current setup, how do we install such builds ie do we get it from get_all_builds then?
|Ok. Will retain.
|Done
|Doesnt work for some reason.

Also services is not None : ( which is std syntax doesnt work.)

I ll retry, but cannot ascertain if the above will work.
|Yes, agree.

Will change to 
if service in cluster:
      clusterMsg[services] =  cluster[services]
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: I324b57ce11159bfdf48eaec75d0758b8a57e0f45
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

Please also add the conf file on this.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

Hi Iryna, Could you also enabled the RO, Admin tests you had on the previous review, or are they a part of another suite.
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 9898a2aa72ca0fc07cdc22d4867b5e0745adb732
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as a1bef575dfe8b2777be49061818bc6408f2a258f
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 50e7d42ff171b8af505a2da2a8e51c60dc0b1d39
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as be6a3501c5a68b66404a8f575e86bb8f3c306e90
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 9c77cb1281cc3b1a77553c97ae1decf7ddc6f370
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Abandoned

Abandoning this change
|Patch Set 4: Reverted

This patchset was reverted in change: Ib494e5a79dc2295ef453769c5e4755cbac2584b3
|Patch Set 4: Reverted

This patchset was reverted in change: Iae2afa9bf53c109bb79bbc8ad264f6fc2ae38907
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 4: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 5: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2

Self-checking code, since
1. Holidays, so dont want to lose this work
2. Non-overlapping code base w/ other testrunner stuff, so less severe a self-checkin commit.
|Change has been successfully cherry-picked as 3e1ec6b1df989bf997e6ef7857cd4da429aa7095
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as f7b136291473182dc7be27dfb1284c79f09616e6
|Patch Set 1: Code-Review+2

Hi Volker, 

I recollect reviewing the exact same changes a while back.

Are these a follow up on the earlier ones or a newer commit?
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 6429bbfb6dce163e3daf5c98c18f89e564ec0667
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as f41a60c9bfe5ab46ee28b10f9372a4a88ad779ee
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 087dbd5632b9a9b58a119ac80075ad155589401d
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as ce91383d29c02c4991966f33c80c50c2a6143f8c
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1

Approved from me. I would prefer Thomas however to +2 it.
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2

Hi Meenakshi, 

Can you merge this change?
|Change has been successfully cherry-picked as c1f9a2360b46d9717dc39a2171ffdada3cb5edec
|Patch Set 1:

Hi Iryna, 

Can you add a corresponding with the above tests?
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 6c0fd1de599921c178720362a75ea69d4b25bce3
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2

Yes, good find!
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1:

This is owned by different QE, I would prefer you check with the QE engineers for the changes - Aruna/Sangharsh.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 8d63dd626df7c7edd95f5ddd73206530067af8ec
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Hi iryna, please add the conf/ files to run these tests as well.
|Patch Set 1: Code-Review+2

Ignore above : the tests are updates.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as bdae66c0d2983a8c34763e191bfc3a22efdc6c07
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 96479e3c5dbd826079f3435a612670e1f815b3c9
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

XDCR is maintained by other QE , yes please let the xdcr test maintainers make necessary changes for the es(elastic search ) + xdcr changes.
|Patch Set 2:

Please contact Aruna/Sangharsh for xdcr-dependencies.
|Patch Set 2:

Hi Volker, please go ahead and merge the changes. Subhasini runs the esbases tests, but based on test history, this should not be actively running and hence will not break any additional tests.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 8453de6320dffd3d0dfcd0f7814ed982f09c3d5f
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as dbb5a599331ff46016d8d37ca2cf2e31a8e10f75
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as a2030a5799842b4d65ec67c9223959224b551ad6
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as d59fc75fc2a2e33f53ad8b23271a0cf36da7c213
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 7535c6b13b76ef4485a68cf98d0bcce1991b078c
|Patch Set 4: (3 inline comments)


|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review-1

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 320fb40c5bdb6cbcc68997d3de5cea2bce427453
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 7: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 7: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 2dce792e49f2cf77523f2da1b4d8111101384780
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as af50e0413ede36f9dcce8085e1fe268e8cafac39
|Patch Set 3: Code-Review+2
|Patch Set 1:

Also edit this  on lib/builds/build_query.py

        # this should be done w/ more generic rule for toy-split
        elif &quot;cent54&quot; or &quot;cent58&quot; in build_id:
             list = build_id.split(&quot;-toy&quot;)
             return list[0]
         else:
             return list[0]
|Patch Set 2: Code-Review-1

(1 comment)

All the view related tests, please add under view-conf.

Also, could you post results of a 20% DGM run, with runtime?
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Yes, I think this is a better way to do it.

@Meenakshi : Can you update existing ones inplace of adding new ones.
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 1688ee2fbbd30f0a821b3443cf250e9403318d60
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

very trivial change, hence self-attest.
|Change has been successfully cherry-picked as 684a112b8f03b4d7030465291991fc189c1c967c
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2

Please add more context or description to the related fix. It is easier to review, keeping the context as reference.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

trivial change, hence self-commit.
|Change has been successfully cherry-picked as 28011682dffa9785211ef90064306278fea50b61
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 95970f03068c89a53ace116a86b285ab52582a4f
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2287928bb3bc9d225530ef80dcecd10cb6ad1db4
|Patch Set 1: Code-Review+2

Please add more information on the fix, for the next commit.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Pushing this change in as #1 to set of tunable tests.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0faf2032daa0a2e03da5a011f8dccaee7365b638
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)

Hi Andre, 

Removed the e.

I need this change for tunable mem, where a smaller bucket quota is preferable over using 2G bucket size with 10 percent DGM. 

While running these tests, I noticed the quota is the default value, no matter what quota_percent is passed

&quot;quota&quot; is set using initialize_node function, where no &quot;quota_percent&quot; is passed explicitly. It picks up default value &quot;None&quot; .. and this imo is incorrect.

Could you explain how this works for you? I have printed the values below which match the above obsv.

self.quota = self._initialize_nodes(self.cluster, self.servers, self.disabled_consistent_view,
                                          self.rebalanceIndexWaitingDisabled, self.rebalanceIndexPausingDisabled,
                                            self.maxParallelIndexers, self.maxParallelReplicaIndexers, self.port)


    def _initialize_nodes(self, cluster, servers, disabled_consistent_view=None, rebalanceIndexWaitingDisabled=None,
                          rebalanceIndexPausingDisabled=None, maxParallelIndexers=None, maxParallelReplicaIndexers=None,
                          port=None, quota_percent=None):
|Patch Set 1:

Yes, that is the better way to handle it.

Will push changes with the initialization code change.

thanks!
Ketaki
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as eb8caf3837c2333c6b3f2f0bce88271c676adade
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as d51006f72eb9c6c7c66722a1486e28d3e6965a04
|Uploaded patch set 1.
|Patch Set 1:

Good point Volker.

Py-regression_views. was not being actively run on any Jenkins jobs. By numbers, you mean - item_count? If yes -  yes, the plan is to cleanup first and then enhance/add or as recommended above have larger tests inplace of existing tests.
|Uploaded patch set 2.
|Patch Set 2:

Added py-views-premerge.conf back on the conf file, until http://review.couchbase.org/#/c/33822/ is cleared out.
|Change has been successfully cherry-picked as 1a1bc8bdfd33c1c417117a566e1de4554f424ecc
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2:

Yes Volker, this looks good. thanks!
|Change has been successfully cherry-picked as e71f0c0d1f4b0e70f385d188f79a3c581e98e150
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2

Minor changes on build number and hence self-approved.
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Uploaded patch set 2.
|Abandoned

Change no longer relevant
|Abandoned

Change no longer relevant
|Patch Set 1: Verified

(1 inline comment)

Copying over from email ..

@Junyi

What would the value of flags typically vary in range?

i.e. From what I know it is a 32bit number and generally is set to 0/1, based on the information that we receive from the loading client?
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Abandoned

Change no longer relevant
|Abandoned

no longer needed.
|Patch Set 1:

Hi Filipe, 

Adding updated info now from the CBQE.

----

Moving out below files as a part of code-cleanup.

- py-views.conf - file does not exist
- py-viewquery.conf - removing this from being a part of Make tests. This test exists on a separate Jenkins job run regularly.
 
Based on discussion w/ dev, it is easier to have a singular set of tests to run before merge changes, and the current makefile contains multiple such tests.
The below tests are removed from the makefile as a part of code-cleanup

@Filipe : if you prefer running view-queries as a part of pre-merge tests, I can include that under the same set of &quot;test-premerge&quot;


----
|Abandoned

Abandoning this , instead refer http://review.couchbase.org/#/c/33822/
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2:

Okayed by testrunner commit validation

http://factory.couchbase.com/view/3.0.0-Commit%20Validation/job/testrunner-gerrit-master/569/
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a761c57297d82290e9570ebfd521030d6d93f2ee
|Patch Set 1: Code-Review+2
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

With 3.0 the new param : evictionPolicy=fullEviction is enabled. This change adds this option to the basetests and related file changes.
|Patch Set 1:

Will do as the last argument.

However, the new param eviction_policy by default is assigned 'valueOnly' on the basetests.

self.eviction_policy=self.input.param(&quot;eviction_policy&quot;, 'valueOnly')

But I get your point of other tests, so will change this across the calls.
|Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Change has been successfully cherry-picked as b84397f3e4245b8af868f2c3c4b551c3cdca3fdf
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 002436382dad9f03ca5fd7bbcacf3db187821da9
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(3 comments)

Can you also add the additional tests to the P0 suite.
|Patch Set 2: Code-Review+2
|Change has been successfully cherry-picked as 1f39b21cc85565645e3bbb89c1b84b0fd53550e0
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

Looks good.

Will be helpful for review, if some details on change is mentioned in addition to the fix on the code-comment.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(3 comments)
|Patch Set 1: Code-Review+2
|Patch Set 2:

ion(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 503, '__bootstrap', 'self.__bootstrap_inner()'), ('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 530, '__bootstrap_inner', 'self.run()'), ('lib/tasks/task.py', 413, 'run', 'self.next()'), ('lib/tasks/task.py', 850, 'next', 'self._check_valid_keys(keys_batch)'), ('lib/tasks/task.py', 869, '_check_valid_keys', 'self._check_validity(partition, keys, key_vals)'), ('lib/tasks/task.py', 884, '_check_validity', &quot;self.set_exception(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 503, '__bootstrap', 'self.__bootstrap_inner()'), ('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 530, '__bootstrap_inner', 'self.run()'), ('lib/tasks/task.py', 413, 'run', 'self.next()'), ('lib/tasks/task.py', 850, 'next', 'self._check_valid_keys(keys_batch)'), ('lib/tasks/task.py', 869, '_check_valid_keys', 'self._check_validity(partition, keys, key_vals)'), ('lib/tasks/task.py', 884, '_check_validity', &quot;self.set_exception(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[2013-03-04 13:08:38,861] - [rest_client:657] INFO - removing remote cluster name:cluster1
[('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 503, '__bootstrap', 'self.__bootstrap_inner()'), ('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 530, '__bootstrap_inner', 'self.run()'), ('lib/tasks/task.py', 413, 'run', 'self.next()'), ('lib/tasks/task.py', 850, 'next', 'self._check_valid_keys(keys_batch)'), ('lib/tasks/task.py', 869, '_check_valid_keys', 'self._check_validity(partition, keys, key_vals)'), ('lib/tasks/task.py', 884, '_check_validity', &quot;self.set_exception(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 503, '__bootstrap', 'self.__bootstrap_inner()'), ('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 530, '__bootstrap_inner', 'self.run()'), ('lib/tasks/task.py', 413, 'run', 'self.next()'), ('lib/tasks/task.py', 850, 'next', 'self._check_valid_keys(keys_batch)'), ('lib/tasks/task.py', 869, '_check_valid_keys', 'self._check_validity(partition, keys, key_vals)'), ('lib/tasks/task.py', 884, '_check_validity', &quot;self.set_exception(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 503, '__bootstrap', 'self.__bootstrap_inner()'), ('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 530, '__bootstrap_inner', 'self.run()'), ('lib/tasks/task.py', 413, 'run', 'self.next()'), ('lib/tasks/task.py', 850, 'next', 'self._check_valid_keys(keys_batch)'), ('lib/tasks/task.py', 869, '_check_valid_keys', 'self._check_validity(partition, keys, key_vals)'), ('lib/tasks/task.py', 884, '_check_validity', &quot;self.set_exception(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 503, '__bootstrap', 'self.__bootstrap_inner()'), ('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py', 530, '__bootstrap_inner', 'self.run()'), ('lib/tasks/task.py', 413, 'run', 'self.next()'), ('lib/tasks/task.py', 850, 'next', 'self._check_valid_keys(keys_batch)'), ('lib/tasks/task.py', 869, '_check_valid_keys', 'self._check_validity(partition, keys, key_vals)'), ('lib/tasks/task.py', 884, '_check_validity', &quot;self.set_exception(Exception('Bad hash result: %d != %d' % (crc32.crc32_hash(d), int(value))))&quot;), ('lib/tasks/future.py', 263, 'set_exception', 'print traceback.extract_stack()')]
Mon Mar  4 13:08:38 2013
[2013-03-04 13:08:38,928] - [rest_client:657] INFO - removing remote cluster name:cluster0
[2013-03-04 13:08:39,004] - [xdcrbasetests:396] INFO - cleanup cluster1: [ip:127.0.0.1 port:9000 ssh_username:Administrator, ip:127.0.0.1 port:9001 ssh_username:Administrator]
[2013-03-04 13:08:39,024] - [bucket_helper:136] INFO - deleting existing buckets [u'default'] on 127.0.0.1
[2013-03-04 13:08:39,025] - [bucket_helper:138] INFO - remove bucket default ...
[2013-03-04 13:08:39,382] - [bucket_helper:146] INFO - deleted bucket : default from 127.0.0.1
[2013-03-04 13:08:39,383] - [bucket_helper:216] INFO - waiting for bucket deletion to complete....
[2013-03-04 13:08:39,386] - [rest_client:109] INFO - existing buckets : []
[2013-03-04 13:08:39,398] - [cluster_helper:259] INFO - rebalancing all nodes in order to remove nodes
[2013-03-04 13:08:39,401] - [rest_client:804] INFO - rebalance params : password=asdasd&amp;ejectedNodes=n_1%4010.17.39.63&amp;user=Administrator&amp;knownNodes=n_1%4010.17.39.63%2Cn_0%4010.17.39.63
[2013-03-04 13:08:39,404] - [rest_client:808] INFO - rebalance operation started
[2013-03-04 13:08:39,408] - [rest_client:905] INFO - rebalance percentage : 0 %
[2013-03-04 13:08:43,416] - [rest_client:864] INFO - rebalance progress took 4.01105880737 seconds 
[2013-03-04 13:08:43,416] - [rest_client:865] INFO - sleep for 4.01105880737 seconds after rebalance...
[2013-03-04 13:08:47,439] - [cluster_helper:288] INFO - removed all the nodes from cluster associated with ip:127.0.0.1 port:9000 ssh_username:Administrator ? [(u'n_1@10.17.39.63', 9001)]
[2013-03-04 13:08:47,443] - [cluster_helper:84] INFO - waiting for ns_server @ 127.0.0.1:9000
[2013-03-04 13:08:47,448] - [cluster_helper:86] INFO - ns_server @ 127.0.0.1:9000 is running
[2013-03-04 13:08:47,453] - [bucket_helper:136] INFO - deleting existing buckets [] on 127.0.0.1
[2013-03-04 13:08:47,465] - [cluster_helper:84] INFO - waiting for ns_server @ 127.0.0.1:9001
[2013-03-04 13:08:47,468] - [cluster_helper:86] INFO - ns_server @ 127.0.0.1:9001 is running
[2013-03-04 13:08:47,468] - [xdcrbasetests:396] INFO - cleanup cluster2: [ip:127.0.0.1 port:9002 ssh_username:Administrator, ip:127.0.0.1 port:9003 ssh_username:Administrator]
[2013-03-04 13:08:47,477] - [bucket_helper:136] INFO - deleting existing buckets [u'default'] on 127.0.0.1
[2013-03-04 13:08:47,477] - [bucket_helper:138] INFO - remove bucket default ...
[2013-03-04 13:08:47,832] - [bucket_helper:146] INFO - deleted bucket : default from 127.0.0.1
[2013-03-04 13:08:47,832] - [bucket_helper:216] INFO - waiting for bucket deletion to complete....
[2013-03-04 13:08:47,835] - [rest_client:109] INFO - existing buckets : []
[2013-03-04 13:08:47,847] - [cluster_helper:259] INFO - rebalancing all nodes in order to remove nodes
[2013-03-04 13:08:47,850] - [rest_client:804] INFO - rebalance params : password=asdasd&amp;ejectedNodes=n_3%4010.17.39.63&amp;user=Administrator&amp;knownNodes=n_3%4010.17.39.63%2Cn_2%4010.17.39.63
[2013-03-04 13:08:47,853] - [rest_client:808] INFO - rebalance operation started
[2013-03-04 13:08:47,855] - [rest_client:905] INFO - rebalance percentage : 0 %
[2013-03-04 13:08:51,862] - [rest_client:864] INFO - rebalance progress took 4.00872802734 seconds 
[2013-03-04 13:08:51,862] - [rest_client:865] INFO - sleep for 4.00872802734 seconds after rebalance...
[2013-03-04 13:08:55,884] - [cluster_helper:288] INFO - removed all the nodes from cluster associated with ip:127.0.0.1 port:9002 ssh_username:Administrator ? [(u'n_3@10.17.39.63', 9003)]
[2013-03-04 13:08:55,889] - [cluster_helper:84] INFO - waiting for ns_server @ 127.0.0.1:9002
[2013-03-04 13:08:55,893] - [cluster_helper:86] INFO - ns_server @ 127.0.0.1:9002 is running
[2013-03-04 13:08:55,898] - [bucket_helper:136] INFO - deleting existing buckets [] on 127.0.0.1
[2013-03-04 13:08:55,910] - [cluster_helper:84] INFO - waiting for ns_server @ 127.0.0.1:9003
[2013-03-04 13:08:55,913] - [cluster_helper:86] INFO - ns_server @ 127.0.0.1:9003 is running
[2013-03-04 13:08:55,913] - [xdcrbasetests:145] INFO - ==============  XDCRbasetests cleanup was finished for test #3 load_with_async_ops_and_joint_sets ==============

======================================================================
ERROR: load_with_async_ops_and_joint_sets (xdcr.biXDCR.bidirectional)
----------------------------------------------------------------------
Traceback (most recent call last):
  File &quot;pytests/xdcr/biXDCR.py&quot;, line 87, in load_with_async_ops_and_joint_sets
    self.verify_results(verify_src=True)
  File &quot;pytests/xdcr/xdcrbasetests.py&quot;, line 659, in verify_results
    self.verify_xdcr_stats(src_nodes, dest_nodes, verify_src)
  File &quot;pytests/xdcr/xdcrbasetests.py&quot;, line 638, in verify_xdcr_stats
    self._verify_all_buckets(self.src_master)
  File &quot;pytests/xdcr/xdcrbasetests.py&quot;, line 1019, in _verify_all_buckets
    is_verified = self._poll_for_condition(verify)
  File &quot;pytests/xdcr/xdcrbasetests.py&quot;, line 484, in _poll_for_condition
    return self._poll_for_condition_rec(condition, interval, num_itr)
  File &quot;pytests/xdcr/xdcrbasetests.py&quot;, line 490, in _poll_for_condition_rec
    if condition():
  File &quot;pytests/xdcr/xdcrbasetests.py&quot;, line 1012, in verify
    task.result(timeout)
  File &quot;lib/tasks/future.py&quot;, line 159, in result
    return self.__get_result()
  File &quot;lib/tasks/future.py&quot;, line 111, in __get_result
    raise self._exception
Exception: Bad hash result: 31540 != 15063

----------------------------------------------------------------------
Ran 1 test in 324.944s


Can you check the test code on this?

The input &quot;doc-ops=create-update,doc-ops-dest=create-update&quot; will update the same key once on each source and destination cluster. This means, the conflicts will be resolved on basis of CAS and not sequence id.

The above hash result mismatch could be a race condition. Can you confirm?
|Patch Set 2: I would prefer that you didn't submit this


|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as fa19994b6ae7363701c374fa041546a40740f2f8
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as ea865cfa5feff25fa3a52fdc5177802175b09749
|Abandoned
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 6b43d16e62b9df7aaa80def32c601df16a418a1f
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 52952eaf8373a29f324e3c7e71bdf8944596155c
|Patch Set 3:

(1 comment)
|Abandoned
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+1

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c1fd6b19cd5b45098674e0ed49b01c5dc47746aa
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a00324c5db40cbb53671c3494c9cf45b747edf56
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)

Please add additional test for entire cluster as well.
|Patch Set 1:

Yes, my bad, I missed the for server part.

Though, you can add diff num of nodes warmed on this as well.
|Patch Set 3: (8 inline comments)


|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2

looks good.
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2

Does this code still hold good? ie I see changes on some of these modules on later code but not all?
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

These changes look similar to the changes recently introduced on ES modules?
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 7: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1533605cbb96e4e5c6502c17b3d89204822be075
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c11f1d22d33cada6f0a5207aedfbb54e6be814fe
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7a0999bb115bf99bcf219297882da84769b87956
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

for pytest/xdcr  changes
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0a197cdc181ab2a9b962091358d7aae028aad081
|Patch Set 7: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Abandoned
|Patch Set 1:

Error on startup couchbase, erl_crash dump.

Please investigate.
|Patch Set 1: Abandoned

moved this to chef-couchbase repo
|Patch Set 1: Abandoned

Moved this to chef-couchbase repo.

Moving this out of testrunner-git.
|Patch Set 1: Abandoned

Too much un-related content.
|Patch Set 1:

Why are we not using COUCHBASE_VERSIONs which has the same content as COUCHBASE_RELEASES here?
|Patch Set 1: Abandoned
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 6: Looks good to me, approved


|Patch Set 1: Do not submit


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, approved


|Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Patch Set 2: Verified


|Patch Set 3: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as f328c068ee578bf6f00e5ec3251ae878a25ac3fe.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Hi, I want to push this code w/ changes soon. Can someone review this change?
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: (2 inline comments)


|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as f06fba216781aba232291ddc15fb7452e8f79537.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 1d33c693860caab23315156da8668d82415cb8e1.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Looks good to me, approved


|Change has been successfully cherry-picked as bc27f8e4519e47f1ffe759300e3625a41d78f009.
|Patch Set 1:

Yes, we can add this. But is the mismatch field not enough for debugging? ie we need to display all the other values as well ?
|Patch Set 1: Looks good to me, approved


|Patch Set 4: (1 inline comment)


|Patch Set 5: Looks good to me, approved


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 617efedc00b4c2acdbf86dd557e3a01d45df98ba.
|Patch Set 1: (5 inline comments)


|Patch Set 2: Looks good to me, approved


|Patch Set 3: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as e812aa272c4831bc3d1d0a95934824e262c569a8.
|Patch Set 1: (1 inline comment)


|Patch Set 1:

If this works with 120s , can we push this change to gerrit?
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 674d812b4639d01e4ef923883cd65ff18acaa245.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 6221af263c684e92deaaebe3ab90cef83b25f7da.
|Patch Set 1: (10 inline comments)


|Patch Set 1: Abandoned
|Patch Set 2: Abandoned
|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Abandoned
|Uploaded patch set 2.
|Patch Set 2: (2 inline comments)


|Patch Set 2: Abandoned
|Patch Set 2: (2 inline comments)

Yes Junyi. This is still WIP.
|Patch Set 2: Do not submit


|Patch Set 4: Abandoned
|Patch Set 1: Abandoned
|Patch Set 5: (4 inline comments)


|Patch Set 5: Abandoned
|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 5: Abandoned
|Patch Set 2: Looks good to me, approved


|Patch Set 3: (1 inline comment)


|Patch Set 2: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

Completed review on previous upload. Due to rebase issues, uploading this as another patch.
|Change has been successfully cherry-picked as acd1ca3f88db41c9803984005422f0bd424be263.
|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 3: Looks good to me, approved


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, approved


|Change has been successfully cherry-picked as e42e8e80172a97016933ad8bb899a84c98845b91.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7: Looks good to me, approved

I would like to push this chance, since another change is pending on this one. Any additional formating changes will be addressed in the next commit.
|Change has been successfully cherry-picked as ee61b52617167b9963943a2d7c19d9eb6158faea.
|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: (6 inline comments)


|Patch Set 2: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Patch Set 1: Verified


|Change has been successfully cherry-picked as 07d72b40ea303e1802ae855028a7629e06e85cb5.
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned

Resubmiting this change.
|Patch Set 3: Looks good to me, approved


|Change has been successfully cherry-picked as 70859a87d44f3e46fb25235d9872c8c8b0146417.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 1fa71d7ff872262413e338ec2be031c1fd76c365.
|Patch Set 1: Abandoned
|Patch Set 1: Looks good to me, approved

(1 inline comment)


|Patch Set 2: Verified; Looks good to me, approved

(1 inline comment)


|Change has been successfully cherry-picked as 7b64ab3972fae0b616c3d467bd71aa2e16502e71.
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 7b973feb9f816bbc0d5be060864ebdb96cc637d2.
|Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as fed2ed77a601690dca4a4c333c655cc0b77b093d.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 53f3db6621c9ea547417275eed0e46030694c5cf.
|Patch Set 1: Abandoned

Incorrect struct unpack command
|Patch Set 1: Verified


|Change has been successfully cherry-picked as 79e3b6dc69ca21bc1c3bd6d3576d0f71a4ce0a10.
|Patch Set 1: Reverted

This patchset was reverted in change: I8619e559779b4bdbf267c8025df94e144d175545
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as a56a1121c02e7ba8f5aed5d872dea0a35aab3037.
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 2: (2 inline comments)


|Patch Set 2: (2 inline comments)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as fca85c0e6cbeeffa401f09409bb5396b150205a9.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Abandoned
|Patch Set 7: (1 inline comment)


|Patch Set 1: (4 inline comments)


|Patch Set 1: Abandoned
|Patch Set 1: Looks good to me, approved


|Patch Set 1:

It passes on a 2.0 codebase.
|Patch Set 1: Abandoned

No longer valid change.
|Patch Set 1:

yes, abandoned.
|Patch Set 4: Verified

Verified the fix works for delete-tests.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 7b8d2b736b34f06408c4074ec331832b02ea0db3.
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as b22c198b7b6619d6f9fa724f0895e4d592a711ad.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Abandoned

wrong push
|Patch Set 4: Restored
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: (6 inline comments)


|Patch Set 6: (1 inline comment)


|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as e1c726175a4ac5d50f014a6339e3d42d1ac43b09.
|Patch Set 2: Looks good to me, approved

(2 inline comments)

Once verified, I will add this conf file on regular Jenkins run[ will run until we get a new Advanced tests delivered]
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as bb1793d7fa90fd678f3372a68c3d5aba8a190bb6.
|Patch Set 1:

What does this file do? pytests/xdcr-mod/__init__.py
|Patch Set 1: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Change has been successfully cherry-picked as 328337f5e56f87774d3f5e64c144ed7048e56348.
|Patch Set 1: (1 inline comment)

Please edit the conf to test xdcr with more than 1000 items on all tests - sets/deletes
|Patch Set 2: Looks good to me, approved

ok.
|Patch Set 2: Verified

ok.
|Change has been successfully cherry-picked as 20d30aa82917b69c8a4c9705a0fc22dfe34bbeda.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2:

This is tested on cluster_run and with 3 Vms ( same as jenkins) It runs clean from rebalance-cluster perspective. We see other errors on the delete tests -
which look more of a code issue. Will run this on jenkins.. once the test-code is delivered.

failures so far...
======================================================================
xdcr.XDCRTests.test_continuous_unidirectional_deletes_1
FAIL: test_continuous_unidirectional_deletes_1 (xdcr.XDCRTests)
testrunner logs, diags and results are available under logs/testrunner-12-Jun-20_12-03-50
----------------------------------------------------------------------
Traceback (most recent call last):
  File &quot;pytests/xdcr.py&quot;, line 439, in test_continuous_unidirectional_deletes_1
    &quot;Changes feed verification failed&quot;)
AssertionError: Changes feed verification failed

----------------------------------------------------------------------
Ran 1 test in 451.317s

FAILED (failures=1)

Process finished with exit code 0
|Patch Set 2: Verified


|Change has been successfully cherry-picked as 0119e32f6af8f3b8afcf77c09d2ba97fb85040ae.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved

Verified it with Makefile. 

Just a comment on the conf/file -
# Note: this test only passes after we manutally disable the compactor. Once the bug in
# compactor get fixed, we should turn on compactor. Look at test code for details

Is this still valid?
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, but someone else must approve

(3 inline comments)


|Patch Set 4: Looks good to me, approved


|Patch Set 4: Looks good to me, but someone else must approve


|Change has been successfully cherry-picked as 5e53802622a13ad08a7cc011ebff6125d43c49c1.
|Patch Set 1: Looks good to me, approved


|Change has been successfully cherry-picked as 8ac749dec5359ef0b0985955957a0d4250d0f0b5.
|Patch Set 1: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 5: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (1 inline comment)


|Uploaded patch set 6.
|Patch Set 6: Abandoned
|Patch Set 6: Restored
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8:

Verified the change(pick_nodes) with swap rebalance tests
swaprebalance.SwapRebalanceFailedTests.test_add_back_failed_node,replica=1,num-buckets=1,num-swap=3

Runs ok.
|Patch Set 8: Verified


|Uploaded patch set 9.
|Patch Set 9: Looks good to me, approved


|Change has been successfully cherry-picked as 219208dc5ec57c033dac89706600b3b3c25f4e31.
|Patch Set 1: (7 inline comments)


|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 2: (3 inline comments)


|Uploaded patch set 3.
|Patch Set 3: I would prefer that you didn't submit this


|Patch Set 3: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Uploaded patch set 4.
|Patch Set 4: Verified


|Change has been successfully cherry-picked as d06cc8848b385c5f8abd0993c313cb692be75118.
|Patch Set 1: Looks good to me, approved

(1 inline comment)


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 3: (1 inline comment)


|Change has been successfully cherry-picked as 0d3bd642288e1f001f8df4161970b6a8fce904d4.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 242006d34eaf66a4c38f2b334fe6c6036a5b93d6.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 2: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Edits done, runs clean on tested VMs.
|Patch Set 4: (5 inline comments)

edited
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 2003018172a1cc6d1f2d592702ecd9a520803215.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as d9ecd95fefdaaa57eea66e4f277cb3a494b97c4c.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 5824154642e5e11953726940b64ce4b9eb8ba471.
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Restored
|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1:

output from fragmentation print addition
---------

INCREMENTAL REBALANCE IN
2012-05-02 10:09:18,411 - root - INFO - tcmalloc fragmentation stats before Rebalance 
2012-05-02 10:09:18,444 - root - INFO - dict:{'username': 'Administrator', 'ip': u'10.1.3.67', 'password': 'password', 'port': 8091}
2012-05-02 10:09:18,444 - root - INFO - creating direct client 10.1.3.67:11210 bucket-0
2012-05-02 10:09:18,485 - root - INFO -  Stats {'total_fragmentation_bytes': '2917344', 'tcmalloc_current_thread_cache_bytes': '1280552', 'ep_mem_low_wat': '590767718', 'ep_overhead': '1762900', 'total_allocated_bytes': '5954592', 'ep_tmp_oom_errors': '0', 'total_heap_bytes': '9437184', 'ep_value_size': '106670', 'total_free_bytes': '565248', 'mem_used': '7569187', 'ep_max_data_size': '984612864', 'tcmalloc_unmapped_bytes': '0', 'tcmalloc_max_thread_cache_bytes': '33554432', 'ep_oom_errors': '0', 'ep_mem_high_wat': '738459648', 'ep_kv_size': '187000'}
ip:10.1.3.69 ssh_username:jenkins
2012-05-02 10:09:19,120 - root - INFO - adding node 10.1.3.69:8091 to cluster
2012-05-02 10:09:19,121 - root - INFO - adding remote node : 10.1.3.69 to this cluster @ : 10.1.3.67
2012-05-02 10:09:19,286 - root - INFO - rebalance params : password=password&amp;ejectedNodes=&amp;user=Administrator&amp;knownNodes=ns_1%4010.1.3.67%2Cns_1%4010.1.3.69
2012-05-02 10:09:19,294 - root - INFO - rebalance operation started
2012-05-02 10:09:20,310 - root - INFO - rebalance percentage : 0.0 %
2012-05-02 10:09:21,310 - root - INFO - doc-get-taskfd170f5: 800 ops completed
2012-05-02 10:09:21,310 - root - INFO - doc-load-task9e19fb1: 1000 ops completed
2012-05-02 10:09:21,318 - root - INFO - rebalance percentage : 14.5833333333 %
2012-05-02 10:09:22,334 - root - INFO - rebalance percentage : 29.1666666667 %
2012-05-02 10:09:23,347 - root - INFO - rebalance percentage : 45.8333333333 %
2012-05-02 10:09:24,356 - root - INFO - rebalance percentage : 60.4166666667 %
2012-05-02 10:09:25,364 - root - INFO - rebalance percentage : 68.75 %
2012-05-02 10:09:26,371 - root - INFO - rebalance percentage : 73.9583333333 %
2012-05-02 10:09:27,380 - root - INFO - rebalance percentage : 77.0833333333 %
2012-05-02 10:09:28,389 - root - INFO - rebalance percentage : 81.25 %
2012-05-02 10:09:29,397 - root - INFO - rebalance percentage : 86.4583333333 %
2012-05-02 10:09:30,405 - root - INFO - rebalance percentage : 90.625 %
2012-05-02 10:09:32,413 - root - INFO - rebalance percentage : 98.9583333333 %
2012-05-02 10:09:34,422 - root - INFO - tcmalloc fragmentation stats after Rebalance 
2012-05-02 10:09:34,455 - root - INFO - dict:{'username': 'Administrator', 'ip': u'10.1.3.67', 'password': 'password', 'port': 8091}
2012-05-02 10:09:34,456 - root - INFO - creating direct client 10.1.3.67:11210 bucket-0
2012-05-02 10:09:34,498 - root - INFO -  Stats {'total_fragmentation_bytes': '2260608', 'tcmalloc_current_thread_cache_bytes': '1607976', 'ep_mem_low_wat': '590767718', 'ep_overhead': '1840680', 'total_allocated_bytes': '6824320', 'ep_tmp_oom_errors': '0', 'total_heap_bytes': '9437184', 'ep_value_size': '213340', 'total_free_bytes': '352256', 'mem_used': '7848945', 'ep_max_data_size': '984612864', 'tcmalloc_unmapped_bytes': '0', 'tcmalloc_max_thread_cache_bytes': '33554432', 'ep_oom_errors': '0', 'ep_mem_high_wat': '738459648', 'ep_kv_size': '374000'}
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 6a867d067102e999f7ff9371b60ddfe10f0d9b2d.
|Patch Set 1: Abandoned

Did not contain a change-Id, abandoning this change
|Patch Set 1: Abandoned

incorrect version
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 9f10a07ab7498945ba79f92fd48eaf00aa8f53f1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Uploaded patch set 4.
|Patch Set 4: Abandoned
|Patch Set 4: Restored
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 442cb70fd7c353ac4f178a8527023c7f5c0cb7e1.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Abandoned
|Uploaded patch set 2.
|Patch Set 2: Abandoned
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as 3a68d925a1ce3060005807256aeb539809ea4da8.
|Patch Set 1: Abandoned
|Patch Set 1: Restored
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as b7fb16d30678f31883dd348e0be0a47e88fdcbba.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, approved


|Change has been successfully cherry-picked as fd9bcf2e57fba27d8d2e88b8b38cde031aa0980e.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as bb2558a9f69ef6dcea8ec184fdea51b9b9787be5.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Change has been successfully cherry-picked as 810d82dbee1f1cab99e464849ef58e1655b1327a.
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully cherry-picked as d4c235c675d10a0e48bb6c78fa61a7a21b3f7b6a.
|Patch Set 1: Abandoned

sample test check
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, approved


|Patch Set 1: Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

from build bot 
14:46:03 Archiving artifacts
14:46:21 Collecting metadata...
14:46:21 Metadata collection done.
14:46:26 Finished: SUCCESS
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1:

Hi Iryna, 

Is this still a valid commit?
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

(3 comments)

Hi Prerna, 

It looks good overal, though can you take a look at a few comments.
|Patch Set 1: Code-Review-1

Please modify the conf file to set expiry value.

Also, if this testcase currently does not pass ( feature not supported yet), please comment out the testcase from the conf file.

Also, for the review, please add CBQE : MB-15916 for related MB bug conversion testcases.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 2:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

Added changes to the n1ql.py to support super()
|Abandoned
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Modified existing spec to do 9000 Qops/sec and added beta_test.conf
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Work-In-Progress files for customer dataset
|Patch Set 1: Verified+1 Code-Review+2

Pushing first set of changes
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: I824e16d6d63ab3fe6104b59545e9c4b86f5e7ca4
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

This change was added initial to rename latency param, but it breaks existing test and hence the revert.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

note: Any system test user will be impacted w/ rebalance related changes. Please review.

it is tested for 
1. services specified
2. services not specified ( which is the default for any non-n1ql tests)
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2:

verified above with

1. no service specified :
add &quot;10.X.X.X&quot;,  rm &quot;10.X.X.X&quot; - works
2. services specified:
add &quot;10.X.X.X&quot;, services &quot;index&quot;, rm &quot;10.X.X.X&quot;- works.
|Patch Set 2: Verified+1

Viewmerge tests failure is unrelated to this change.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

view changes are not relevant to code changed.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2:

Hi Iryna, 

This is causing regression on the tuq tests.
un before suite setup for tuqquery.tuq.QueryTests.test_distinct_negative
Test tuqquery.tuq.QueryTests.test_distinct_negative was not found: 'module' object has no attribute 'tuq'

Please revert this change.
|Patch Set 2: Reverted

This patchset was reverted in change: If71570bee4408cc9a5fc7e72ddeedc1b73dce80b
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Will do.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

rebase changes, unrelated failures by buildbot
|Restored
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

buildbot failure is non-related to commit.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1: Code-Review-1

I have added changes to tpcc indexe on this case. Prefer if you could submit it w/ latest code change. 

http://review.couchbase.org/#/c/52264/3/pysystests/tests/n1ql/create_index.py
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

Will revisit the output to see if this can be better defined on the inner fields.
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2:

Hi Andrei, Could you provide some information on context of this change?
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

Reformat the input script.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned

Incorrect indentation
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: I1b97934f445dbd208f84f54e97ea94b7324017c5
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned

Might need to have a better way to deal with rebalance errors. Punting this change for now.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Trivial: IP address would change on node restart
|Comma separated list of bucket?
|gometa should also be in sync with 2i unstable/master
|Should we do this? or let the user of querycmd do list and figure out when the index is active?
|Ack. Sure Dave, will do.
|Adding change to fix this. It will be decided based on &quot;wtih&quot; clause from create index
|Adding change to fix this. It will be decided based on &quot;wtih&quot; clause from create index
|Because the breakpad.go has been moved to indexer dir. Hence the package name is indexer and not breakpad anymore. We do not want to have a new dir just for breakpad file. This is building fine and works as expected.
|Expression position used in creating cartesian product in case of composite index. Instead of computing everytime, I placed in index defn.
|Ack
|Ack
|We can discuss the comments in person as I have some questions. Thanks !
|These constants are not there in patch set 5
|Isnt it faster if condition is the one that is used most often? Array indexing is special case. Not every index has array expression.
I was thinking more on the lines of : http://stackoverflow.com/questions/1306158/best-practice-on-if-else-statement-order &quot;&quot;Put the case you normally expect to process first.&quot;

Will fix camel casing
|This is not for memdb. This is common for key size check
|It is required. we can discuss this part in person
|Right. Ack. Will remove
|Sizing is different for normal index key and array key. For normal key, the size limit is 4K . For array key it is, 4K * max_array_len.
|Yes will be removed as I mentioned in patch set 5
|idxDefnId is used in many places. Otherwise, everywhere code looks like idxDefn.DefnId
|I was thinking more on the lines of : http://stackoverflow.com/questions/1306158/best-practice-on-if-else-statement-order  
&quot;&quot;Put the case you normally expect to process first.&quot;
|Try enumeration
|Try enumeration
|Move to slice and create a new queryutil package in our common
|Is IndexDefn backward compatible? Look at restoreIndexMetadata
|maxArrayKeyLen + doc +
|Use from queryutil package
|Multiple expressions with ALL are found. 
Only one array expression is supported per index
|This is unused function. Will be removed.
|This will be reviewed. Missed removing it.
|Please provide feedback on error message or suggest a better error msg
|Please provide feedback on error message or suggest a better error msg
|if oldkey == newkey , then we simply return. Should nmut returned be 0?
|Does nmut indicate number of items added and deleted?
|Yes Deep, in this particular code path, we are encoding individual item of an array and not the entire array. Hence isArray should be false here. This is to enforce right size limit (ie 4K) gets applied here.
|No.. It does nothing. It was exposed earlier as we wanted to have two limits. Will remove now.
|No Sarath. I have just kept it in case we get that feedback and it is needed at later point
|Of course, thats right. Will do
|Missed removing. I have it removed now and will update the patch
|I made this change in index_entry.go but forgot to do here. Making the change
|DISTINCT is to be handled by indexer and not N1QL. We should have dup or no dup behaviour handled at indexer side
|Cool!! Will do.
|Done
|Done
|Sure will do
|Sure will do
|Done
|Done
|Okay. Will remove
|Done
|It is: 0111111 11111111
Typo in comment. Will be fixed in next iteration
|Sure Sarath. I will do that.
|nit: the shell script can be names runtest_clusterrun.sh as it works only locally
|Done
|Done
|Done
|Done
|I cannot use the same template because port numbers are different
|Made both the changes. Pls review
|Will fix the indentation. However, most arguments need to be passed even if I make a new helper function. Args like name, port and password need to be sent to helper function. I can one improvement to put password in variable and use that in invocations of make_curl_task
|Is one second enough?
|Does this fix scan consistency single bucket and multi bucket as well as basic integration failures?
|Will be nice to have a message - Expected error - &lt;&gt; but did not get any error. 

Or I can this message later. You can merge this for now.
|Sure will do.
|Ack. I will it configurable. Thanks!
|Ack, will do. Thanks!
|logging line can be removed if not needed
|This is to log all the 5 snapshot sequence numbers. I found this useful while debugging. This code path (GetOlderThanTS) is exercised only during rollback, so it should be safe to log.
|Pratap, please add error word so its clear the call failed. And also add word Retrying. Example:
log.Printf(&quot;client.Do(GET) Error: %v. Retrying&quot;, err)
For all the log messages
|Done
|Done
|Done
|In case of composite index, it is hard to predict how much buffer is needed. 2x the size of old key could be more or less. We depend on dynamic array size allocation of append in ArrayIndexItems()
|This check is a repetition. Will remove it.
|Will do
|Will do
|Yes the name of this will be changed by N1QL team. Until then, I am implementing the API name defined by them.
|Can we make it a variable and use it elsewhere in case it needs to change in future?
|This is for old back index entry Deep. If splitting old entries fails, we can skip the docid as that leads to inconsistency. Hence I am crashing. But error is not expected for old entries as buffer sizes are adjusted to be sufficient enough even in cases where users change buffer size settings
|Is this change enough?
|Refactor between three slices is a TODO
|Refactor between three slices is a TODO
|Should we give error - 
startkey expected as string ?
|The change in this file is actually not needed since the fix is made in n1ql evaluator.
|There is a codec in index_entry called jsonEncoder. Can it be used everywhere?
|We already have a codec in index_entry:
jsonEncoder = collatejson.NewCodec(16)
Can we use it instead of creating new one everytime?
|as far as I know, there is no way to specify equals values with middle as not specified. List if equal values is an array if interface. So if specified, it will be nil which means JSON NULL.
|Yes. This would be flipping logic:
incl 0 =&gt; incl 0
incl 1 =&gt; incl 2
incl2 =&gt; incl 1
incl 3 =&gt; incl 3
Will make that change. Missed out the if condition to optimize only if desc is false. But its better to make optimization by flipping incl
|I thought of that but the convention of Compare method is to return -1, 0 or +1 . If I return, k.cmp - key.cmp, I end returning -2 or +2 in two cases.
|Done
|Done
|yes and avoided code duplication
|Did code refactor
|Yes Deep. That is the intent of adding the new check. If composite index(a,b,c) gets entryKeys[0,1,2], it means, there is no need to do explicit projection. So all keys will anyway be returned to client. So entryKeys [0,1,2] is equivalent to projection being nil (ie project all).
|This is not repeated. It is calling projecyKeys function and is called only once. projectLeadingKeys is called thrice and I have done refactoring there
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 5: Code-Review+1
|Patch Set 2:

(3 comments)
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

Have missed a code change in a test. Will submit new review.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned

Will rebase and submit
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned

Will rebase and submit
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

Sure will run go fmt.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Abandoned
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)

Should querycmd create wait for index to get active OR let the user of querycmd do list &amp; figure out when the index is active?
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1:

I have verified all tests under secondary/protobuf and secondary/common. All tests are passsing.
|Patch Set 1:

Prathibha-Macs-MacBook-Pro:secondary prathibha-mac$ cd protobuf/
Prathibha-Macs-MacBook-Pro:protobuf prathibha-mac$ go test -v ./...
?   	github.com/couchbase/indexing/secondary/protobuf/data	[no test files]
=== RUN TestN1QLTransform150
--- PASS: TestN1QLTransform150 (0.00 seconds)
=== RUN TestN1QLTransform2000
--- PASS: TestN1QLTransform2000 (0.00 seconds)
PASS
ok  	github.com/couchbase/indexing/secondary/protobuf/projector	0.381s
?   	github.com/couchbase/indexing/secondary/protobuf/query	[no test files]
Prathibha-Macs-MacBook-Pro:protobuf prathibha-mac$ cd ../common/
Prathibha-Macs-MacBook-Pro:common prathibha-mac$ go test -v ./...
=== RUN TestLogLevel
--- PASS: TestLogLevel (0.00 seconds)
=== RUN TestLogIgnore
--- PASS: TestLogIgnore (0.00 seconds)
=== RUN TestLogLevelDefault
--- PASS: TestLogLevelDefault (0.00 seconds)
=== RUN TestLogLevelInfo
--- PASS: TestLogLevelInfo (0.00 seconds)
=== RUN TestLogLevelDebug
--- PASS: TestLogLevelDebug (0.00 seconds)
=== RUN TestLogLevelTrace
--- PASS: TestLogLevelTrace (0.00 seconds)
=== RUN TestPayloadVbmap
--- PASS: TestPayloadVbmap (0.00 seconds)
=== RUN TestKVEqual
--- PASS: TestKVEqual (0.00 seconds)
=== RUN TestPayloadKeyVersions
--- PASS: TestPayloadKeyVersions (0.00 seconds)
=== RUN TestNewStatistics
--- PASS: TestNewStatistics (0.00 seconds)
=== RUN TestStatMarshaller
--- PASS: TestStatMarshaller (0.00 seconds)
=== RUN TestStatIncr
--- PASS: TestStatIncr (0.00 seconds)
	stats_test.go:72: [12 1]
=== RUN TestStatDecr
--- PASS: TestStatDecr (0.00 seconds)
=== RUN TestStatSet
--- PASS: TestStatSet (0.00 seconds)
=== RUN TestSortTimestamp
--- PASS: TestSortTimestamp (0.00 seconds)
=== RUN TestCompareVbuuids
--- PASS: TestCompareVbuuids (0.00 seconds)
=== RUN TestAsRecent
--- PASS: TestAsRecent (0.00 seconds)
=== RUN TestExcludeStrings
--- PASS: TestExcludeStrings (0.00 seconds)
=== RUN TestCommonStrings
--- PASS: TestCommonStrings (0.00 seconds)
=== RUN TestHasString
--- PASS: TestHasString (0.00 seconds)
=== RUN TestExcludeUint32
--- PASS: TestExcludeUint32 (0.00 seconds)
=== RUN TestHasUint32
--- PASS: TestHasUint32 (0.00 seconds)
=== RUN TestRemoveUint32
--- PASS: TestRemoveUint32 (0.00 seconds)
=== RUN TestIP
--- PASS: TestIP (0.00 seconds)
=== RUN TestVbucketsSort
--- PASS: TestVbucketsSort (0.00 seconds)
=== RUN TestVbucketsIntersection
--- PASS: TestVbucketsIntersection (0.00 seconds)
=== RUN TestVbucketsUnion
--- PASS: TestVbucketsUnion (0.00 seconds)
=== RUN TestVbucketConversion
--- PASS: TestVbucketConversion (0.00 seconds)
PASS
ok  	github.com/couchbase/indexing/secondary/common	0.014s
Prathibha-Macs-MacBook-Pro:common prathibha-mac$
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Have run all tests against local cluster_run server. All pass.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

Built and tested. All tests working fine
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned

Will resend the changes for master branch
|Uploaded patch set 1.
|Abandoned

Will resend the changes for master branch
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned

Not the latest. Will resubmit
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5: Commit message was updated.
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Sue Pratap. Will do
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 5: Cherry Picked

This patchset was cherry picked to branch master as commit 27d81b4c1ad2debad8fae425523fcbef82054a9c
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+1
|Patch Set 6: -Code-Review
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Thanks for your comments Sarath. This is a 4.1 bug so I made the fix in testing branch. 

I will fix indentation and for cbindexperf, I will add program name with timestamp as requestID
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2
|Patch Set 6:

Have obtained a +1 from Sarath. Proceeding with merge
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: -Verified Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Aliaksey, I was going to include ns_server folks after confirming that sherlock was the right branch to make this fix in. I got that confirmation from Dave. 

Yes, this fix gets data from ns_server and this API returns all index informations which includes where the index is hosted. So there is no need to fetch from indexer process.
|Patch Set 1:

Thanks Dave for the clarification. I shall add a query task to get query's view of system:indexes.

I can query list of indexes from indexer port but need to ensure that the node on which cbcollect is being run should have index service enabled before fetching index list.
|Patch Set 1:

Sure Dave. Will rebase with the latest, will use index http port for getting index list and will fix the commit title.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Verified in a cluster on a node having index service and a node without index service. Verified both getIndexStatus API call as well as query for system:indexes
|Patch Set 2:

Yes Dave. I verified the exact patch set on a cluster with nodes, one with index and the other without. In both cases, I get expected information in the log file after running cbcollect_info.
|Patch Set 3:

Dave, I had actually verified the earlier merge too. But just before pushing to gerrit, due to my bad, a typo got introduced. Will be careful next time. Thanks for the review :)
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(3 comments)
|Patch Set 4:

(13 comments)
|Patch Set 5:

(1 comment)

I tried building with latest unstable. Works fine for me.
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Patch Set 8:

(7 comments)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1

Verified by building on Windows builder clone and testing on Win 64-bit machine
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Patch Set 4:

(5 comments)
|Patch Set 4:

(6 comments)

@Siri, Updating the commit msg with a bug I created for this MB-18122 .

@Sarath - All changes suggested are being taken care in upcoming patch
|Uploaded patch set 5.
|Patch Set 5:

(3 comments)
|Patch Set 5:

Sarath, Thanks. Ack for all the minor comments. Incorporating in next patch
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 8: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 10:

Deep, +1 for above changes but same needs to be done for perftests/common_test.go as well
|Patch Set 11: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

I have verified this fix by testing on single and multi node setup with different combinations of services enabled. Verified the go routine profiles for indexer and projector on appropriate nodes. Also, verified indexer stats for forestdb and MOI indexes.
|Patch Set 1:

Thanks Dave, Aliaksey. Will make the changes.

The typical sizes of go routine files are:  25KB projector go routine and 40KB for indexer go routine dump.
|Uploaded patch set 2.
|Patch Set 1:

(5 comments)
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

Dave, addressed the comments in Patch set 2. Please take a look. I have verified the changes by testing on a cluster. Thanks!
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Addressed comments in Patch set 3
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Verified locally by killing indexer and logging the node uuid read from medata store. Also verified contents of metadata store using forestdb_dump tool.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2:

I have tested this code change on windows and centos. For all platforms except windows, the code (the command to clean up files) remains the same. For windows, modified the command to look like :
rm -rf &quot;c:/Program Files/Couchbase/Server/var/lib/couchbase/data/&quot;*

which works for Windows.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Ritam had approved the same change in a different review http://review.couchbase.org/#/c/54211/
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Thanks Deep. In Patch Set 2, I am handling error returned from isIndexEntryArray. Also renamed the config knob to &quot;IndexArrayItems&quot; and create index with will look like -with=&quot;{\&quot;indexArrayItems\&quot;: true}&quot; . I can fix the naming in case there are other suggestions.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

Dave, I have some changes to the way diagnostic dir is obtained from ns_server through a switch. Hence used your change and modified it
|Patch Set 1:

Dave, you can update your review too to use diagDir as in this review? You can submit the same too. We first check in to &quot;testing&quot; branch of indexing project and then merge to sherlock.
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Uploaded patch set 1.
|Abandoned

Created another review with right description
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Deep, with the latest patch, final TS is computed from rollbackTs and restartTs. The final TS after Union will be like - 

    {  345     baec46cc654b       1077          0          0}
    {  346     be98b6d2541f       1093          0          0}
    {  347     2cc3846dc73d       1065          0          0}
    {  348     79a38075d2d2       1104       1103       1104}
    {  349     bba428d65b65       1091          0          0}
    {  350     7e6acbb92b72       1018          0          0}
    {  351     96c480d9610a       1031          0          0}
    {  352     ca939dd42015       1046          0          0}
    {  353     d64a69b8fdba       1032          0          0}
    {  354      a63755e04df       1039       1039       1039}
    {  355      13894be806b       1129          0          0}
    {  356     ab5c99671c1c       1064       1064       1064}
    {  357     46a18324e285       1134          0          0}
    {  358     13dd75637093       1063          0          0}
    {  359     dfb6253ca78e        981          0          0}

One VBs with snap-start and end are the ones which were missing in original rollbackTS
|Patch Set 2:

(1 comment)

Yes Pratap, that is done. Thanks for the review
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Abandoned

Abandoning. Will send out review for new fix based on discussion with N1QL team.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1

Indentation fixed
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

not required. another fix made
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Abandoned

Will submit a new patch
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 02da94c19d40345473a0d411b572a00993d8086c by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 8a42e44383052a9955c4a992d935705ca055ebb7 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 9be7b3b86c2443de6ca885fb5da573cdc9e0c081 by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1

+1 for CountIndex2 interface changes
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4: Commit message was updated.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 6: Code-Review+1 Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Verified+1
|Patch Set 7: Code-Review+2
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 6:

(2 comments)
|Patch Set 6: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 67ab0c552dc340307fa01e34d8bc67e089ebee79 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 4475087eb80f10db56acbd4244b28e616161cdc5 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Logged tracking bug MB-23326
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as eb79e6712e750f39b971df4a0c7fd098ad448eed by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 423acd3c7d6078c10716e32f3275ca14a8edf581 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(4 comments)
|Patch Set 5: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 15ce6ea29d2f3ee41af52af28fa3929e5e83b5fa by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

@Deep: 
&gt;&gt; It would be better to validate before setting all the parameters.
Thanks. I have moved it before fillRanges.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 194bb1096fcfdb39960c9f181ccf502443d840d1 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 6: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 1e07fed37b1b700a5508da4ae2fa98a0dea38a4a by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 997adea2ecc1aa3e936e078e29d64068db796ab5 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a0ac27bbd45aa7bb52c9032a0b5ab11cc970cffb by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 8159e46ae45d8912de39f89c2ad4ad6780f0089e by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as ffe539c082386eb22012d1a1350a49923d8d20a0 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 6aa316f3bfef9d2fb64b1a2b2f8e4089048d0c94 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0c1df6b4e733c074f79118a70912374543bff10c by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as cd987cafb04025ed97ed7d654f71e5a51f9f24b0 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as e632966b0dc83f847bdb4bf7aba5044abcd71a51 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 23159d8c4975b1536e7c449137311b55289dee8d by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 13e2464563cca21020a93bfd127ec9e1703ce250 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 1644c4317e5812b17e82611a77c180eaaf6831c0 by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as dd4fe7cae24eb1f05df129c8569f056592db7d7a by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 98332a3d6be1f57cd9e1941229654a9352f295af by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as fcf5d355bb2731ce48404fe2a7736866aaf9b108 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 65b29bfae165deee5bbf93c27c2ee3e2869a11b2 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as c57f149b53eea3a8e7a89c1fcae8461231590b18 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as c6c45e5366c12c91a6cd3f4a4865d3f3886cff50 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 0cd2835d56e8eefeb9f51077a25612c40b398785 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 4172635ecc7a80350f9dfb167b03a4586628ed03 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 52622346d200c94cae74e8b1eb521af589a0cba3 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 2a3a8ea25b18f452b0e74bb90af8dff4f347ee51 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 632fa533cc9f370b144d12e915298a9dac035a6c by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 3997c10f9fdb8a10a56a6e019d0e0d1f85380b8e by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 3e3ff388e5934c7268663b58356f1f92a6b62a3a by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as f6ec7131f5a7e59dd8b7468dbfb8e3ab1120ae02 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 9cc8340ce7199624ccef5f9dc66be013e4f8c28b by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as dab2d4d3a62f037022e7af753de4fceb1b958563 by Prathibha Bisarahalli
|Uploaded patch set 1.
|Abandoned

Sending out two new code reviews for this
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Abandoned

Need to fix Read me. Will submit new change
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully merged by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as e83bcdec876dc086507845d2ecd16f538787fe3c by Prathibha Bisarahalli
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as b8c0b18e1fff522b623fa7f49c17012c5a04a68f by Prathibha Bisarahalli
|Pep8 convention of 79 characters per line
|If there is any problem in stopping the server, it should be cought in that method itself. It is not the job of this test. If there is any particular exception this test is supposed to catch, then only we should add try block..
|Nope. It's just updating the query_definitions list.
|Acknowledged!
|Can we take docstrings for the method inside that method? 
The name of the method doesn't suggest what it is doing inside.
|Please close the bracket.
|Please close the bracket
|Calculate info.type.lower() only once to avoid multiple calls to lower() function. It is used 7 times in a method!
|No need of elif. Only else will serve the purpose.
|Triple quotes are always used to represent docstrings. For multiline comments (block comments) use # before the comment on each line.
|test name should start with &quot;test_&quot;
|Done
|Instread of this if, can we  initialize to_remove to [] (empty list) in the mothod call itself?
|name of the test method should start with &quot;test_&quot; keyword,
|instead of this clause, use &quot;if not servers:&quot;
Reason: If servers is empty list, it won't go inside if statement.
(Unless it is done Deliberately.)
|It is a good practice to provide error message in case assert fails.
|name if the test is not clear
|expected_result and expected_result2 looks identical. one of them can be removed.
|how is it made sure that REVERSE actually reverses the result?
|self.assertEqual can be used here
|There are empty lines here in code? Is that intentional?
|the commented out part can be totally removed from the code.
|self.assertIn() can be used instead of self.assertTrue
|Use the variable just defined above.
|Catch exception. That's standard
|This should be there in all recovery scenarios. I am starting with rebalance_in.
|Yes. With current design, replica indexes are being created in setup itself because of which, this method fails creating indexes since duplicate index already exists.
|Yes. Same reason as above
|method parameter should not have empty list as default value
|Catch a particular exception instead of keeping it open ended since nothing has been done after catching any kind of exception
|these parameters are specific to recovery tests. Please initialise them in gsi_replica_indexes.py
|log is a singleton object. Please don't import it. Use it as follows:

import logging
log = logging.getLogger(__name__) 

It uses the same object throughout the test run
|Thread is imported below from threading. So, these can be removed.
|Please remove since it is not used anywhere.
|Please remove since it is not used anywhere
|Please remove since it is not used anywhere
|Its is to make sure all documents in the memory satisfy the query used in multi_query_using_index.
|Let's not import anything outside 2i directory. Everything that QueryHelperTests has is present in newtuq.py. If not, please add there and this import can be removed.
|This is not used anywhere. If anything needs to be used from this class, please shift that method to base_2i and use.
|Can you make the same change in create_index() method?
|CQD operations go on. And Validating query results after operations. decrease memory with small intervals in case of DGM
|Done
|I'll add this method and send a new patch.
|I did. It verifies the result keeping everything in account.
|self.n1ql_node is already defined in newtuq.py. instead of duplicating, we can use self.n1ql_node.
|we can use a dictionary here instead of if statements where key is info and value is bin directory.
|We can use asserts here instead of failing the test. 
Fail represent something wrong with testcase. Assert output is a right way to validate the results in Unittest based freamework in python
|log is a singleton object which doestn't belong to any method/class. It remains unchanged throughout the run. So, we don't associate self with log. We just get the current log object using getLogger method at the beginning.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+1
|Removed the following votes:

* Code-Review+2 by Arunkumar Senthilnathan &lt;arun.couchbase@yahoo.com&gt;

|Patch Set 4: Code-Review+2 Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1

(3 comments)
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 2:

(7 comments)
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Removed the following votes:

* Well-Formed-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 2: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Restored
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2:

(8 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Removed the following votes:

* Well-Formed-1 by buildbot &lt;build@couchbase.com&gt;

|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Reverted

This patchset was reverted in change: Ia591d1038a712fff6598705bf6543ad0df5fbaa8
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Reverted

This patchset was reverted in change: I1151fc5b0edd3c9a7d8415b276a2524e4989ab1f
|Patch Set 2: Reverted

This patchset was reverted in change: I05b5a70461f3c0250b0e3d0fba28e033efa55d15
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Reverted

This patchset was reverted in change: I3d96e9453e96aede05e912b6501070aa944685fd
|Patch Set 2: Reverted

This patchset was reverted in change: I06349b0c8b96613ed67c3d619eccf31a353c8112
|Patch Set 2: Reverted

This patchset was reverted in change: I90b851b21e26422c9e8a478d92e9de441bda5ce5
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Patch Set 2: Published edit on patch set 1
|Uploaded patch set 3.
|Abandoned
|Abandoned
|Abandoned
|Abandoned
|Abandoned
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 6707cc9dfac836441d18806d3db439e3cf9bf4e5 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 36a68d1c22a58ff4d1725326efb3a0272cb4d6f9 by Prasanna Gholap
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as a8cf2600c37234d4c184ff51a4abd89df2bdd640 by Prasanna Gholap
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as feef39020891504bad0dac6155ab5ca071b74190 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c9fa7f092f7fccd350ee12a2b0bf49921d6935bb by Prasanna Gholap
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Change has been successfully cherry-picked as 8618683cd3d4a773c24433c2f51f98e2d52a4ea0 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d9421be5a1c27396ee0e76e3726cda13a1557697 by Prasanna Gholap
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as cb058efd84268a55e8ee665b5c54ae38a42c8304 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 7e50a53a2cb7c8a425faf83fb1ccbb0158ab3ec0 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 90c2414e73cf308770cfb8a8475161f78623aa86 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 447eb15c056748034d2d5cd2fdfe02df6ac8295e by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 54835a6c1afd2705e0d1e4e4cacac060586b50c8 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 97848a775d691cd61468f64ea00b8afd58e14aa4 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as da8060d759a2bb3a99843cd1cfd0d3b548b349e7 by Prasanna Gholap
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 7faf34f026812737f5646035e4c76494aae2da65 by Prasanna Gholap
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as be2f3db0d47a204fb2c93c5cb794658eb3846bcf by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a5ebaa642e522f5ec14e8f0f5dd66449ef52ceaa by Prasanna Gholap
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as fce23733b648ec6d07c62d9414622cadf3cd098a by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 9700b87727073f8ea8734c5e341dc5ad04bf2513 by Prasanna Gholap
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review-1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 36d5cb3917a5fe0a1b3243e119606910780644db by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c1b5111ecd37ede6b8d447981cf1336bcc4a2268 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as e24e756faf677968d217b3bb29179c0146752c62 by Prasanna Gholap
|Patch Set 1: Code-Review-1

(6 comments)
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 33368bea3c4452f7f936a08a66fc7c32a486b519 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 08346180a75d7ea112662a172ff4cbe6af0b842a by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as bf0a5a5223df858639403c0f2010b9a5a26be1ba by Prasanna Gholap
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

(1 comment)
|Change has been successfully cherry-picked as 4dd5215cf2b8983f4ebe87c6ad91e4919eebe0a0 by Prasanna Gholap
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 0c1dbfc0440dc9df5b98eab8c2c29bc63c63d157 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 42a89fc629de480f9b7f6c431f6099fb3073140b by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as cc22e8375d24b93319b80851b2efb873fa20365a by Prasanna Gholap
|Patch Set 1: Code-Review-1

(2 comments)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 0ea4f53e93d495993a9dc2faae485a4e2412b383 by Prasanna Gholap
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 14882e606f6b4365f5687ea3e8adb08f1bb7bf17 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 56a645fe4e7697f4e3f0b4bea8d343f43de13558 by Prasanna Gholap
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as b90f0c2b65e0410d5594129701c10ebbaa4ad65d by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as ba44a3637c4281b2b149dda4b75cd436df98d191 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 10e13ee539279715f78236567dcebcd949997c43 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as f75e3842b0b32eaf8aea15a702f107bcd7f9c445 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 187216a2efdb0d215e41144017dafb91d25c6681 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a7891b88995d657c029a59d0ba62c4ac76cb8535 by Prasanna Gholap
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 93a47c5a4e9bda43f1efb02395f2b066373980c2 by Prasanna Gholap
|Created a revert of this change as If826c121bd424652479d2e2b4b4912557f57e7ce
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c00419f4b652b20b0d1860e27317dcc5cee1f560 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 5543a41bd0555ec3865ab2a613592182fdfe307f by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f6ca0da801251d5d04092a488beb16c81fc1dea2 by Prasanna Gholap
|Patch Set 1: Code-Review-1

(4 comments)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as bd2e3dad7cf32b6c49dda241ebcb72695f055df4 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as ca413898e20ec630303be619c2cb1b5b3b59c4eb by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 80be623b73b6775eb4611f4e8dd1e53291085c1a by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 5039bd3e68e1b3fc35d849a368717afb76b1c9a3 by Prasanna Gholap
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as b0ecc4976b8fc3c11e4f2a655868305cf57669dd by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 54c81ad64b51cf56a7c669b5a20398ae6e1662fe by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 209ab2c2a52897da0983f3088c4e3c118f5df4df by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 1aef04c244c5f293004920e58da0c801e042e8c9 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as cf0f647fa31eb27e91eac5c106f646f6697745e3 by Prasanna Gholap
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 27642b8d7caf3a0b2d6edec95465d57e86ba27a6 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 30e1b948654201c712ba11dde64eaa4bb7f2f6cf by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 2ec17cca003aee6d022ce2430eaea6302765c73c by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 32cf06a6768e0e1684350f54617669b84c606ded by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 38be849f34348119834a7c06bc85fa87da59c5d8 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 6f96c9a26ecb6670b48b5cc6848021776a216107 by Prasanna Gholap
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 822ae303161bae2ca4de9c9461165fdf55641b82 by Prasanna Gholap
|Its a 100 lines without comments. If that seems long i could break it up into 2 functions.
|Yes. They are aliases. Both source and load read the commands from the input file and execute them.
|One reason I thought of keeping them separate was we might change how the -file option (inputFlag) is handled. In the event in the future we don't want to exit and directly go into interactive mode or do not want to add the -script option to history. 

If you feel we should still separate out, i can do that and upload a patch set.
|Need to use the SetWriter method in the tests for commands. Hence moved it to the command package from the main package.
|The code should error out if a password is specified without a username. Added this condition.
|Yes.. Because then it means its an unprotected bucket and cbauth expects to have an empty password in this case.
|Yes. This can change. It means the same thing though.
|Changing in Patch set 2.
|No. Since i am directly looking it up from the Alias map, newcommand will always be an alias. Aliases can be overwritten, so it won't be an unexpected alias even if its value is different.
|After my discussion with Marco, this needs to be !ok. Will change in Patch set 2.
|Yes. Its go way of saying that I will not be using the remaining 2 return values.
|Since its a test and I want to check if each type of value.Value input to StrToVal is converted correctly, I don't think it will be a good idea to factor out anything.
|Will change this with Patch set 2.
|No. It only tests the PrintError method to see if it prints in red. Am testing the handle error methods from all the other tests where I actually get errors.
|Addressed Johans comment to remove the repetitive nature of the code in TestStrToVal_toStr
|For \ECHo command, the exec command method doesn't return an error since there can be multiple errors for the multiple args to \ECHO and the command shouldn't fail. Hence it will directly output the error when it sees it and move to the next arg. Hence ==0 is correct. If you see line 59 in echo.go (in the method exec command), it will show this behavior.
|Will change this with the new patch set.
|This is a test to ensure that the commands are case insensitive. Hence the cases change throughout the tests. This is done only for the shell commands.
|Will add this to the next patch set.
|Testing case insensitivity of shell command execution.
|Ah.. Will changing it to 150 for each bucket be ok ? If so I will push it with the next patch set.
|Ok. Will push this change with the next Patch Set.
|Previously, for any queries that returned missing results, when go_n1ql returned a null row, we output the nulls directly. This is incorrect. This should be output only when the query specifies raw or element. Fixed this with this checkin. 

For more info see MB-17509.
|Checks if the query contains raw or element. Even for cases where these are random substring in the query, it will work because we use this value only when go_n1ql returns a null row.
|Row 0 represents the signature. Hence isRaw and isElement is false.
|Row 1 represents metrics. Hence isRaw and isElement is false
|This can be added into the backlog post dp.
|The Off, On and verbose options will be added post dp.
|Actually I am. What happens is when there is an error on the interactive shell, it is displayed in red. When this error is being written to a file those control characters cannot be interpreted correctly and are added as a string to the file. This unsets those values when in file mode and then resets the values when we switch back to os.StdOut
|I need this so that it doesn't keep resetting the output. Also we can have nested redirects in which case the set once is needed.
|Why do we have this return ? I would assume his would still return as a driver query error.
|Will change with the new patchset
|This fixes MB-19154
|This already handles relative and absolute paths in accordance with the document. 

The reason we can't check if the path is absolute directly is windows has many ways to give such a path - &gt; C:file, D:file .. C:/ .. D:/ ... \ etc.

The way the flow is now, gives the user the flexibility of just entering a value that is present in HOME by default unless a specific input path is given. (This was part of the design).

\set histfile newest; (This will create the newest file in the current directory unless it already exists in the HOME/ directory). 

This will create it in C:// :
\set histfile \newest;  


Description of what the code does now:
First we check if the file can be accessed, if so then this is a correct path to a file and we use the input path as is (This can be absolute or relative). If there is an error accessing, then it could be one of many errors, such as incorrect path, file not present, no permission to access path etc. 
It it is a not exists error, then we check for this in the home directory. If it exists there, only then we set the path by prepending the HOME. Otherwise we leave the path as is and return.  


**Would you like me to change it such that the user has to always give the correct path and the shell will not default to HOME ?**

So then if i say \set histfile newest; it will only create the history in the current dir and not home.

If so I will update the call from loadHistory() to pass the full path when loading the history file on startup.
|In the code above it (Exec shell command) i convert and reconstruct &lt;line&gt; before hasPrefix(). -&gt; Line 170. 

line = strings.TrimSpace(line)
	arg1 := strings.Split(line, &quot; &quot;)
	
* arg1str := strings.ToLower(arg1[0]) * 
line = arg1str + &quot; &quot; + strings.Join(arg1[1:], &quot; &quot;)
....

Is there any instance in particular that looks incorrect ?
|This refers to the parameter argument in the previous line which will read \POP parameter; Hence i left it lowercase. Should I still change it to uppercase ?
|Same as prev comment
|For the case where we have select 1; as the last line, After EOF, we still want to run this command which happens for each line at the end of the loop and only then break. So we only break if there is nothing read (path = &quot;&quot;) and if EOF is hit.
|Will change this with Patch set 2.
|each statement being run, needs to have a ; \n in the file. If the last line doesn't have a \n but has a ;, it is executed, if the file doesn't end with a ; then that line is discarded and not executed.
|That case is handled even now. We won't fail if last line with ; is a comment. 

Ok Will add that change into the patch set 2 also. 

Will also post a sample small demo test in the comments section, so you can see which cases work (to make sure all cases are handled. )
|When you say batch mode, is it the same as file input mode ? If so, yes this is the method we use to read each line till we form a statement (usually ; \n) and then execute. I like the idea of loading the last line, if there is no ; into the prompt and asking the user to choose what to do. 

But i am concerned about the case where we will have multiple files that call each other and if one of the intermediate files has this case (its last line doesn't have a ; ) . In which case we don't want to pause and take the user input and not execute the rest of the script. 

But i was thinking, what if instead of asking the user to decide, we put a ; ourselves and then execute ? That way the statement is not discarded. and for the above case we still end up running the whole script.
|Explanation : 

The connection logic was as follows : 
Connect to 8091, if this fails try connect to 8093. If this fails as well then we were returning an error. This worked for most general cases, but failed for the following case : 

If we try to connect to 8093 (for a case where we get an error for connecting to both 8091 and 8093) then the error message was incorrect since it cascaded the errors. 

Ishas-MacBook-Pro:cbq isha$ ./cbq http://localhost:8093
 No input credentials. In order to connect to a server with authentication, please provide credentials.
 ERROR 100 : Unable to connect to http://localhost:8093/. N1QL: Connection failed Post http://localhost:8093/query/service: dial tcp [::1]:8093: getsockopt: connection refused
N1QL: Unable to connect to cluster endpoint http://localhost:8093/. Error Get http://localhost:8093/pools: dial tcp [::1]:8093: getsockopt: connection refused 


Ideally it should have only displayed the first error for connecting to 8093/query/service and not 8093/pools. 

This check fixed that. 

Ideally we should have a better way to determine whether we are connecting to 8093 or 8091.
|Will change in patch set 2
|This function takes the input from the liner and decides whether it is a shell command or a n1ql query. Now since we have a batch mode, and we don't want to execute any of these queries whatever they might be, i had to add logic here so as to put those commands into a buffer for later execution, namely when we run \;

The flag is so that i can execute the\; command when in the batch mode. This means if i type \; and \set batch on (batch mode is on) instead of saving that to the buffer as well, i execute all the statements in the buffer.
|If we don't round here and instead cast to int() for the case in the forum, there is less than one nanosecond difference and the result of the query will be 0. 

select DATE_DIFF_MILLIS(1465634581881,1465634581880,'millisecond’); 


Value of Arg 1 :: 1.465634581881e+12 , 

millisToTime  value :: 2016-06-11 01:43:01.880999936 -0700 PDT 

Nanosecond component for 1 : 880999936 


Value of Arg 2 :: 1.46563458188e+12 , 

millisToTime value :: 2016-06-11 01:43:01.88 -0700 PDT  

Nanosecond component for 2 : 880000000  


difference between the nanosecond components : 999936 

With the above equation to fill up date.millisecond :: 0.999936 

(based on the diff in diffDate())


If we cast to int() here, then this value is zero and the above result difference for the query is 0.

Hence we need to round. This way when we get the resultant expression for the date we get 1.
|I can change this.
|The design is that when we have multiple -s options on the command line, even if one is incorrect the rest are executed. But we display the error for that command and move ahead. So it will look something like this : 

Ishas-MacBook-Pro:cbq isha$ ./cbq  -s=&quot;\SET v 1&quot; -s=&quot;\SET b 2&quot; -s=&quot;\PUSH b3&quot; -s=&quot;\SET b 5&quot; -s=&quot;\SET&quot;  -ne

 Path to history file for the shell : /Users/isha/.cbq_history 

 \PUSH b3
 ERROR 139 : Too few input arguments to command. 

 Query Parameters : 

 Named Parameters : 

 User Defined Session Parameters : 

 Predefined Session Parameters : 
 Parameter name : v
 Value : [1]

 Parameter name : b
 Value : [5]

 Parameter name : histfile
 Value : [&quot;.cbq_history&quot;]

 Parameter name : batch
 Value : [&quot;off&quot;]
|Yes, the MinArgs() function below.
|No Didn't add it to the tests. Should i add it in ?
|Yes with US/Eastern
|Also add ARRAY_DATE_RANGE as a synonym ?
|Ok. Would you like me to add code for date_Range_millis ? Since we now only have date_range_Str. (We could use str_to_millis on the result array.. )
|This is the silent check. Don't write into the output buffer if it says silent.
|It should be. (Though its easier to just implement it)Will upload a new patch set.
|Yes. Once we have implemented different auth mechanisms with query, like digest, then I will enable these. It took me a while to track down the bit masks, so I thought it'll be good to keep it in comment format in the code itself.
|MB-22128 fix
|22115 fix
|Change that has been added to support 1-based fun
|missingPort   = &quot;missing port in address&quot;
tooManyColons = &quot;too many colons in address&quot;

One of these 2. But for missing ports in the address, we still need to do something for http/https and couchbase/couchbases. Hence that check is pushed further down.
|Doesn't work for me, which is weird, since this wouldn't work with go 1.4.2 but should be fine with newer versions and I'm on 1.7.3. 

type *url.URL has no field or method Port

Shall investigate.
|It does. In such cases I print out an invalid port error 
 ERROR 100 : N1QL: Connection failed Post http://localhost:809!/query/service: invalid URL port &quot;809!&quot;
If i don't capture and look at the err here, then the code flows through, thinks it is a valid URL, tried to Ping that endpoint fails there and then errors out with the message
ERROR 100 : N1QL: Connection failure Requested resource not found.

It errors out both ways, but i feel that the error message is more descriptive in the case of us capturing the error using SplitHostPort.
|The Problem with using url.Port is that it doesn't return an error. So I have no way of knowing if the port is empty because it was an invalid port.
|It seems to change from the previous &quot;dfgabc&quot;.substr0() to substr0(&quot;dfgabc&quot;). Im not really sure why. Thats why i was stumped yesterday. I thought just changing it to substr0 should be enough. 
Let me see if i can figure that out.
|If i don't change it then this is the error i get
--- FAIL: TestConverter (0.00s)
	jsconverter_test.go:86:  mismatch s1 substr0(&quot;dfgabc&quot;, 1, 4) s2 &quot;dfgabc&quot;.substring(1,4)
FAIL
|Not yet. When we get an error from a n1ql statement, that populates the rows. 
Then since we want to print that, we copy to writer. Once this is done, we check to see if the n1ql statement actually returned an error. If it did, then we return an error code to track and exit. We have an empty error message since we only want to print the n1ql error / result object.
|The error mostly is a response code X error. We don't need to print this because we print the full error returned by n1ql.
|Errors returned from the query driver - in our case godbc.
|Same applies here.
|Done
|Its called slist in lib curl hence I kept the same variable name. Will change it.
|We are. X-N1QL-User-Agent is the custom header.
|It will help the internal localhost endpoints deny access to N1QL curl using the custom header. We can always change user-agent value so it will be easy to trick the localhost endpoint (some security endpoint) as to what the identity of the sender is because of that.

A custom header cannot be changed by the user. This prevents the above scenario.
|Will change.
|Done
|Done
|Yes. Even here it figures it out itself. This is how it works :
1. If data option and no request method is set, then it thinks it is a post request. That is why the value is called CURLOPT_POSTFIELDS. Thats what I set in curlData()
2. If data option and a request is set to GET, then we need to append all the string data into the url. 

Thats what lib curl expects as the value to its fields. 
Can I merge ?
|Im not calling post, but calling post fields. That is how we set data within lib curl. Maybe it'll be more understandable if I change the name of the function to curlData. Ill do that now. 

The thing is, we pass in multiple options, and there are 2 ways to set get. --get and -XGET. Data behaves differently depending on get or post within lib curl.

For Get, it appends to the url post a ?.
For post it sets post fields. 

Ive done this here, because its post processing all the options and we know what the request method is.
|It should with the current change.
|&gt; Windows?

filepath fixes this. See in the function below
the line that gets listPath - that is os independent (in init path)

Since this is the same code used for --cacert - it has been tested on windows already
|Yes. There are a lot of errors for a lot of our code that is outside our errors package. I will be consolidating all of it after spock.

Also the above line that gets listPath - that is os independent.
|Hi Keshav. At this point I don't have the node Ip address. And the full path changes according to where couchbase has been deployed and the OS. This is not for the whitelist file only. It also is for cacert.
|Changing
|Changing
|Changed
|Changed
|Changed
|Changed
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned

Will give errors on first run : Requested resource not found.
|Uploaded patch set 1.
|Patch Set 1:

Hi Gerald,

If you run git pull and then go test ./... without having the couch base server set up
then the tests under multistore test_cases for the couchbase server will fail for the different functionalities. 
Before running go test ./..., one would need to install/setup couchbase server and run the script file bucket_create to create the buckets.

go test ./... can be run successfully only after these steps are completed . 

Thanks
Isha
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Patch Set 1:

Can you please add a using view to all the create index statements in the insert.json files across the tests ?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Have changed Bucket to Keyspace
|Abandoned
|Patch Set 3: Commit message was updated
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+1

You also need to run go fmt ./...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Hi Gerald,

It does that now. In the interactive mode, we call the UpdateHistory Method after capturing the input statement. Here we check if the file exists and if not create it. This is done in the WriteHistoryToFile method. It doesn't issue a warning though.
|Patch Set 2: Commit message was updated
|Patch Set 2:

This checkin addresses 2 things.
1. On startup if the .cbq_history file doesn't exist i previously threw an error. Keshav and Sitaram suggested that I create the file and suppress the error instead (similar to what is being done in WriteHistoryToFile now). That is being done now. 
2. Add the ability to change the file to store history using the \SET command. After a \SET hostile name, it will now load the history into the new file and then continue appending to that file.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned

It looks like a previous commit has piggybacked in this commit. Will re-push a fresh commit.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Have also Generalized the args for Max and Min args with this checkin. 
And added a Exit(1) in the case we have an invalid url error in the argument to go_cbq.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2:

Have removed \Load. Now we only have source. Have added a readFile() method to handle the  \source command execution.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Patch Set 1:

(4 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

@Marco : I have removed the tests that were causing a mismatch. Could you test these on your system to make sure they run now ? 

Thanks
Isha
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

Discussed all the reviews addressed with Keshav.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

The sample.txt is used to test the \SOURCE command. The rest of the command execution tests are in cmdexec_test.go. Need to run the bucket_create.sh script before testing. For now I have commented out the env var in the tests.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Patch Set 2:

Have moved all the tests that use the couchbase build to the TestN1QLStmt test. This test is run only if we successfully manage to query once.
|Patch Set 2:

Discussed the addressed reviews with Keshav.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(4 comments)
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

This needs to be done for \PUSH or \SET and \ECHO.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Patch for safe keeping. Need to add support to execute \redirect command from \source.
|Uploaded patch set 2.
|Patch Set 2:

Finally! Now the following cases are supported. 
1. ./go_cbq -o=output1
2. \redirect a;
    ...
   \redirect b;
  ... 
 \redirect off;
3. Running \redirect within \source. 
4. running \redirect as an alias.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

(4 comments)
|Patch Set 4:

Also, it was asked that a command go into the redirected file as well. Hence it has been added. The option to turn it on or off will be added post dp.
|Uploaded patch set 5.
|Patch Set 5:

Applied changes from comments.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Once Cees gives a +1 it will be ready for merge.( Since we are switching the liner, it is important not to break the watson builds.)
|Patch Set 1:

*Ceej
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

As per the suggestion. Allowing multiline mode to be set or unset isn't of much use. Hence removing support for that.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Removed the limit predefined parameter
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 4:

Use GOOS to detect os at runtime
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1

We should also try and see whew couldn't connect to 8091. Since this symptom is new, could it be a ns_Server issue ?
|Patch Set 1: -Code-Review

*why we.. (typo)
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

If the quiet flag is given a random value it still defaults to OFF. Should I print an error and quit cbq instead ?
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Applying go fmt
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 3:

Will upload another patchset tonight.
|Patch Set 3:

Ok. Will make those changes with the patch containing the explain queries for array indexes and covering index tests. Within the data I have type=arrI, should i change that as well ?
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

Added tests for array indexing and covered indexes.
|Patch Set 6:

Changed the names in the test, but forgot to change the name of the folder. Will change it now.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

Changed all the names. Ran the tests using ./runtests.sh with build 1878. Works.
|Uploaded patch set 10.
|Patch Set 10:

No. I sent an email last week regarding this. Due to issues with setting the CBAUTH env variables, the tests need to be run in a particular order. Hence we will need to switch to running the runtests.sh script. If you run go test ./..., the tests won't pass. 

The way to run the tests post this checkin is as follows :

Go into multistore and run ./bucket_delete.sh and then ./bucket_create.sh
Then go into couchbase/query and run the runtests.sh script.
|Uploaded patch set 11.
|Patch Set 11:

Changed the following :
Running go test ./... will not fail anymore. It will skip the array indexing tests. This is because they are dependent on an Env Variable GSI_TESTS being set. 

Within the test/gsi folder the exportval.sh and resetval.sh now set and unset the value of the GSI_TESTS variable. runtests.sh runs the test for array indexing.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1
|Patch Set 1:

This handles all the potential crashes when configstore is nil. (when we can't connect to ns server).
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 1:

Authorize method in clustering_cb.go also needs to use the new cbauth api.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Removed the 2 exe files i uploaded by mistake. Should be ready for merge now.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

This is because of the Ping() method. The ping method calls the Query method. This uses prepare to send the &quot;select raw 1&quot; query. 
Asterix db doesn't support prepare and it crashes.
Have changed the Ping() method to use the QueryRaw method. This will enable us to use the shell with Asterix db as well.
|Patch Set 1:

Tested this with Yingi. Works for both asterix db and n1ql
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2

Verified working on Windows, Linux and Mac.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4:

Now it reflects the document for absolute paths. Only problem is os.Open doesn't allow \\file.txt which windows says is a correct way of giving an absolute path. Would it be ok for me to internally detect this and convert to a single \ and then do the os.Open ?
|Patch Set 4:

Have handled \\ for windows, tested it using the above \\localhost\c$\file.txt. It didn't work before because the path i gave was invalid (just as you said). Need to add in a lot more code to support storing the following :
1. Store value in HISTFILE parameter stack such that it is displayed correctly (\ makes it Binary, so i have escaped it)

2. When we pop the value, reset the history file to the current top of the stack. If all values popped default to .cbq_history.

3. pop.go : Line 201 -&gt; Fix for MB-19154
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 7:

Hi Gerald,
Have removed the changes for the other bug. Will check that in separately.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8:

Checkin in new changes as part of a new review.
|Abandoned

Checking in a new version after discussion with Keshav.
|Uploaded patch set 1.
|Patch Set 1:

This checkin addresses the following :

1. Reset histfile to top of stack after pop.
2. Allow value of user defined variables and aliases to be set to histfile. 
3. Don't push histfile onto the stack if the value given is invalid.
4. For consistency allow the following  (As per Sitarams review)
     \set histfile &quot;/file.txt&quot;;   
     \set histfile /file.txt;
5. For windows, add support for absolute paths, \,  \\  and C:\\ or C:\. 
6. When using UNC format for windows path \\, the histfile value is set as follows : \set histfile &quot;\\localhost\C$\temp\file&quot;;


A full list of tests I did before checking in is given in the bug description.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

2 cases have been handled.
1. When the named parameter stack contains 2 entries, and we pop one. On selecting this value it showed up as a binary value. This has been fixed.

2. When the entire stack is popped or unset, then we need to unset the parameter on the godbc side as well. There was an error in this. $name needs to be unset and I was passing name in. This is fixed now. 

The tests run to verify the fix is added as a comment on the bug.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Last set of changes for HISTFILE. Issues from the bug :

1. Print the full path of the histfile on startup, \set, \push, \pop and \unset. 
Allow -quiet to disable printing of these statements
2. Fix histfile for \unset. 
Issue description : After \unset histfile, default to .cbq_history. Right now it continues using the latest histfile value, which is incorrect.
3. Fix \unset, \pop for histfile but never allowing the .cbq_history to be deleted as default. 
Issue description : After \unset or \pop histfile, we default to .cbq_history. But \set; will display an empty parameter stack for histfile. This is incorrect. It should always contain the default entry after popping all elements or unsetting histfile.
|Patch Set 1:

Handles all the cases from the email (that said handled by separate bug).
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Yes, will change those. QUIET is just a way for me to access the quiet flag from the main package in the command package, since go doesn't allow circular dependencies. Should i just call it quiet flag ?
|Patch Set 2:

Ok. Will do. Thanks.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Fixed messages based on discussion with Keshav. Also changed how commands are displayed for help. It now follows a bash pattern. (Ran this by Keshav as well). Please let me know if these changes look ok for beta. I will add this into message.go post beta. 

Thanks
Isha
|Uploaded patch set 2.
|Patch Set 2:

Addressed all 3 comments and looked through the rest of the messages to make sure they looked ok.
|Patch Set 2:

(3 comments)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

Ran the following 3 cases :

1. last line is a comment without ;
2. last line is a statement without ;
3. normal run
4. Call another file that has a last line without ; followed by a command in caller file
5. Now we don't expect comment lines to have ; .. it is added to history and then we move to next line without executing the comment. 

Works for all above cases. 

Also addressed prev err review
|Patch Set 1:

*5 cases not 3 :)
|Uploaded patch set 3.
|Patch Set 3:

Removed the line. But now i need a +2. :)
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

when we pass -u and -p incorrectly while connecting to 8091, (used for role based user pass), it gets passed to godbc to access 8091/pools. We return a resource not found error. But after this if the user still sends in a query, there was an incorrect error being generated that said invalid protocol. 

The NoQUeryService var is used to check if we have successfully either directly or indirectly connected to a query service (through 8091 or 8093). 

After this change it works correctly. Now it will say not connected please use connect command to connect.
|Uploaded patch set 2.
|Patch Set 2:

I rebased it locally.. Im not sure why it is asking me to rebase here. 

Have changed the variables to lowercase.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Checkin 1 : Move all messages except errors to message.go
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Part 2. Moved all the errors. Followed Geralds review from before. The names should be self sufficient and uses _ for the errors. After this all the messages should have been moved.
|Patch Set 1:

Ok. Sounds good. I will add it to the todo list I have for post watson, for the shell.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

These are part of the changes made to go-couchbase and query. Created a toy build and ran build sanity on it.
|Patch Set 1:

I gave it the same name as the flag that the tools are supposed to use. But in essence it acts as sslVerify. I will change that with the patchset 2 (coming up in a bit)
|Patch Set 1:

I will rename the method to SetnoSSLVerify. If the value of noSSLVerify is true then we skip verification of certs and set InsecureSkipVerify to true.
|Patch Set 1:

I wanted to keep the name in accordance with the flag name so that it is less confusing. 
But i agree, i would also prefer sslVerify. I can change to code to use this as flag names but the main user facing option will still be no-ssl-verify (so the query code will remain the same but godbc and go-couchbase naming will change)..
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

Changed sslv to skip.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

These are part of the changes made to go-couchbase and query. Created a toy build and ran build sanity on it.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

Changed it to remove the if condition. Back to Original now.
|Patch Set 4:

I suggested removing all the prefixes. But for now i will add it back in.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

These are part of the changes made to go-couchbase and godbc. Created a toy build and ran build sanity on it.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Using this as a means to prevent loosing my changes
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3:

This is to support couchbase:// and couch bases:// as valid protocols for connecting to 8091 and 18091. (As supported by all the tools)

I also generalized the url parsing mechanism and found that if we use hostnames instead of its then the url.Parse method for go breaks down the url string incorrectly. Hence made sure to explicitly check/ avoid that error as seen by the comments in the code. 

Since this should be supported for both ./cbq options and the \connect command, i separated out the code into a function and added it to common.go.
|Patch Set 3:

Need to add strings.ToLower in common.go. Will upload a new patchset.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

Sitar : fixed. It was a copy paste issue.
|Patch Set 5:

Hi Gerald,

I spoke to Mike before I implemented this on the shell side. Since go-couchbase doesn't support   these protocols i need to implement this on the shell side. 

Gocb supports input conn strs that use couchbase:// and couch bases://

Thanks
Isha
|Patch Set 5:

Also .. 

Ishas-MacBook-Pro:cbq isha$ ./cbq -no-ssl-verify
 No input credentials. In order to connect to a server with authentication, please provide credentials.
 Connected to : http://localhost:8091/. Type Ctrl-D or \QUIT to exit.

 Path to history file for the shell : /Users/isha/.cbq_history 
cbq&gt; \connect couchbases://localhost;

 Disabling SSL verification means that cbq will be vulnerable to man-in-the-middle attacks.

 Connected to : https://localhost:18091. Type Ctrl-D or \QUIT to exit.
cbq&gt; 

For couch bases it does use ssl. But whether it can / cannot connect depends on the -no-ssl-verify flag.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3:

1. 2 separate places that list out the commands won't be ok, since if we add/remove commands there is a higher room for inconsistency. Hence didn't want to create a list manually.

2. Go maps don't maintain order. Hence there is a need to explicitly sort the keys and maintain it separately. 
I added the code into init() so that this happens once on startup and then we have a well maintained list for the entire session.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

Tested Sitarams fix with build 2403. (Replaced cbq-engine with the new one that included his fix). The query using view index gives results now.
|Patch Set 2: Code-Review+2
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch watson as commit aa1f6d4f344b299ccb8056131307a8c7b5421e8b
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch watson as commit bc47cd2b0d9a8a9272db6b14533064eb090bb264
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch watson as commit 8504b1640b4307bf853e63369e3f4165a28692d3
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1:

Keshav would like to merge this to 4.5.1 as there are 3 customers waiting for this fix.
|Patch Set 1: Verified+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1:

Seem to need this checkin in order to to cherry-pick http://review.couchbase.org/#/c/65883/ ..
|Patch Set 2: Published edit on patch set 1
|Patch Set 2:

Validate for builedbot
|Patch Set 3: Published edit on patch set 2
|Patch Set 3: Verified+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

The execute_input method calls ExecShellCmd and ExecN1QLStmt to actually execute the input statements. It does not execute the statements itself.
|Patch Set 1:

Handle interactive doesn't build the commands. It handles interactive input with the liner/user. 
execute_input gathers/builds/evaluates them and then calls the exec methods depending on the type of input statement accordingly. This is so that code is more readable and there is a clean separation of functionality. What you want to see is what exists now. 

code that pulls lines from the liner - Handleinteractive()
gathers things up however they need to be (including batching) - execute_input()
and then calls out to execution functions - execute_input()
|Patch Set 1:

Hi Gerald,
Since the code already does what Johan wanted, I will wait to change the code post him looking at it again. Maybe on Monday Johan and I can have a brief call and discuss if there are any specific questions regarding the code. 

Right now, I will upload a new patch set changing the comments to better reflect what the function does as per the discussion. 

Thanks
Isha
|Uploaded patch set 2.
|Patch Set 2:

I have addressed the changes to execute_input. It has been separated into 4 functions to allow it to be smaller. Also the function name has been changed to dispatch_command.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

This works for all cases except the corner case when we enter the password as an up arrow. 
I want to separate the fix for that and hence have opened the bug MB-20680. 

This works for all the other cases.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Still have 1 last issue in this sequence of checkins where url.parse() incorrectly parses the input string url (where the input string contains special characters). However that is in godbc, so will check that in separately.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5:

Discussed review comments with Sitaram. Addressed them in this Patch.
|Patch Set 5:

Will change this in the new patch set that includes Geralds review changes as well.
|Uploaded patch set 6.
|Patch Set 6:

The following are the differences that ill change with the the new patch set 

1. select array_date_range('2016-01-01', '2016-01-03', 'day', -1) ;
 -&gt; Empty array 

2. select array_date_range('2016-01-14', '2016-01-01', 'day', 1) ; 
-&gt; Empty array 

3.select array_date_range('2016-01-14', '2016-01-01', 'day', -1);
-&gt; decreasing dates
|Uploaded patch set 7.
|Patch Set 7:

All review comments addressed.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

Discussed with Marco.
Suggestion : Use the existing -exit-on-error flag to be able to decide whether we want to exit after one of the -s fails. Will discuss with Keshav.
|Patch Set 1:

Opening a new issue to track making -exit-on-error generic (used on options as well). Will check  this in to complete this issue.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Abandoning this change. Will check in changes to DATE_PART_MILLIS
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

Have added some tests :)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

The names aren't changing for some reason. Let me try again
|Patch Set 4: Published edit on patch set 3
|Abandoned
|Patch Set 4:

Couldn't change the filenames on this checkin. Gerrit kept rejecting it, so abandoned it.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Addressed Requirement 4 from the date design doc. 
For ease : 

Design Document :
https://docs.google.com/document/d/1CkGGi6gyFpBIcRkM5W_kkHd-r5GxI-bZvW1new8aBhA/edit?usp=sharing
|Patch Set 4:

Yes. Since we have seen cases where things behave differently when tested with a couchbase installation as opposed to a file based data store.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

Addressed review comments
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Added Geralds tests to filestore to multistore. Also added 2 new texts using the customer data. Next patch will contain array indexing tests with TOKENS().
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

The explain tests aren't used now, since there seems to be an issue with the ordering of the #operator:IndexScan entry in the explain. I think this is a test issue and i shall open a bug and track/fix it separately.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5:

Hi Gerald,
1. I have added 2 tests with from clause. I added all the tests you added to filestore to multistore, so that if we ever decide to remove the filestore tests, all those tests have been added to multistore. 
Do i need to add more tests ? 

2. Will change now. and look at the spaces.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Patch Set 8:

Hi Gerald,

Removed the spaces and added a test using array_sort to multistore. 
The array indexing tokens test already have them. 

Thanks
Isha
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Go minimum version is passed from the parent CMakeLists for couchbase, so no need to set it here.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch watson as commit 5be7b1a01baa43f545d1ac52bd8e7ffca419fa2f
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1:

adding this to 4.6 as well. As discussed in yesterdays scrum.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Renamed errURL to err
|Patch Set 2: Verified+1
|Patch Set 3:

How do i cherry pick this for watson ? It shows a merge conflict
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

Im not sure why we see so many merge conflicts. What should I do ? I only want this change to go in.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

There were Merge conflicts with the prev one because i used res/for/master instead of watson.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

This caused failures for datefuntions when we used millennium as part.
|Patch Set 1: Verified+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch watson as commit 5f9108fc273c0f2423db285f451faca8af9d2607
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

For CBAS I had to remove the code that took out ; when passing queries to the server. This caused a regression for file handling cases when you have empty lines in files. In order to support this i have to check whether i only see a ; . That is what this fix does.

Will also need to go into 4.6
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch watson as commit 8e651707f809ceab48e518d953942187a1ccab6a
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

start and end is same should we return one value of start?

date_range_millis was modeled after DATE_RANGE_STR which was designed similar to ARRAY_RANGE. Hence if we change this then we need to change all three functions. I think it might be better to return empty array.
|Uploaded patch set 3.
|Patch Set 3:

I have changed DATE_RANGE_MILLIS to exclude the end date now. 
For the changes to DATE_RANGE_STR and removal of ARRAY_DATE_RANGE, i shall open another jira issue.
|Patch Set 3: Verified+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch watson as commit 3038dade67b5a76860f3eb6a1c370ace332e68a3
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch watson as commit ba988b90b2f464bd26524e79d7484af1f2eb7367
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Sitarams comment :- 
fraction is more than milliseconds we truncate. may be we should round.
Example : .08451 ===&gt; .085
.08449 ===&gt; .084

Fixing this and uploading patchset now.
|Uploaded patch set 2.
|Patch Set 1:

Hi Gerald,
Is this ok ? 
Thanks
Isha
|Patch Set 2: Verified+1
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch watson as commit 8dabd4e46ff5f4b615fca0e6737407c73e5d34d1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

I found an issue with the test. Will Check in a patch set 2 now.
|Uploaded patch set 2.
|Patch Set 2:

Addressed the defer comments. It works now. 
Will change the WRITEFUNCTION name now.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4:

Addressed all comments
|Patch Set 4: Verified+1
|Patch Set 5: Reverted

This patchset was reverted in change: I223bb0677497eda5d402e879c8fae82c5ec9fe19
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Reverted

This patchset was reverted in change: I45fbd420497085f636aacd7392d4d15fd5d94544
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

Addressed all review comments
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

will also use this checkin to set volatile as true.
|Uploaded patch set 2.
|Patch Set 2:

Done.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3:

Hi Gerald,
Changed the switch statement. 

Thanks
Isha
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d2d911e4fa19ed7f010ba5e0634ea383662e032e by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 8b6f09d577322e1936b49a49ab989e615aacdcbb by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 4a939490fba75100708b75f5defa1afa511cb332 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

Following examples run for SUBSTR1
SELECT substr1(&quot;abcdef&quot;, 0);
[
 {
 &quot;$1&quot;: &quot;abcdef&quot;
 }
]
 
SELECT substr1(&quot;abcdef&quot;, 1);
[
 {
 &quot;$1&quot;: &quot;abcdef&quot;
 }
]
 
SELECT substr1(&quot;abcdef&quot;, 2);
[
 {
 &quot;$1&quot;: &quot;bcdef&quot;
 }
]
 
SELECT substr1(&quot;abcdef&quot;, -1);
[
 {
 &quot;$1&quot;: &quot;f&quot;
 }
]
 
SELECT substr1(&quot;abcdef&quot;, -4,2);
[
 {
 &quot;$1&quot;: &quot;cd&quot;
 }
]
 
SELECT substr1(&quot;abcdef&quot;, -4,-2);
[
 {
 &quot;$1&quot;: null
 }
]
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 9c2171b19e0724eaf3504ae2da1630a41d5878fa by Isha Kandaswamy
|Patch Set 3:

There is a separate checkin to gerrit with that.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 5266e1512f5bab882a077025e10f93f001be6cb7 by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3:

(1 comment)
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

Looks like i can't use Port() until go 1.8.
https://github.com/golang/go/issues/16142
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 73a46221f5edc3b75a707fdc6aca50a22a78af3f by Isha Kandaswamy
|Patch Set 5:

Yes. :).
|Patch Set 5:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 5:

Then will keep SplitHostPort. Will just change the flow to make sure it checks for an error condition before it uses the default port for 8091/ 18091. This way it won't hit MB-22916. Will test properly before i checkin to gerrit.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 02f735d57fa5b87be67913f91d6d2e61cca40d6b by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

Needed to change jsconverter.go as well.
|Uploaded patch set 4.
|Patch Set 4:

Add a case for substr1
|Patch Set 4:

Hi Gerald,

Just added a case for substr1 to both files. Ran test from query. Hence didn't merge.

Thanks
Isha
|Patch Set 4:

@Gerald, @sitaram : The built in javascript function is 0 based. So the 1 based function will have to be adjusted. However, the javascript substring function is a little different from our N1QL substring function. js.substring(string, start, end) -&gt; with start and end being positions. This would mean our conversions within this test code are incorrect as well.

Hence the changes will need to be for both substr0 and substr1. 
For substr0 - Will need to change the value of the second argument to be start+length, and 
For substr1 - Will need to add 1 to the position. 

They can then map to the same .substring() function.

These changes will need to go into only jsconverter_test.go 

Is this ok ?
|Patch Set 4:

Subset doesn't work with view indexes. This is from before (older build where we didn't change anything)
CREATE INDEX isha on default(SUBSTR(abc, 1, 6)) USING view;
- &quot;abc&quot;:&quot;IshaKandaswamy&quot;
SELECT * FROM default WHERE SUBSTR(abc, 1, 6) = &quot;shaKan&quot;
gives no results.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Change has been successfully cherry-picked as fbb5f8915c465cc6646e2cfe0d449b237b9b8a03 by Isha Kandaswamy
|Patch Set 5:

Testing locally now with go 1.8
|Patch Set 5:

Need to rebase.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Code-Review+2

Tested with go 1.8. Earlier it would have needed changes to the encoded plan. With this change it works without the need to change any tests. 
Will help for future upgrades.
|Uploaded patch set 1.
|Patch Set 1:

Have verified all the tests are working. Post this mornings Revert and addition of Marcos checkin to exclude encoded plan, all the tests pass with the upgrade to go 1.8 on my local machine.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 74a65e8daf62db53d240d8021f8dd093feac6da1 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 837d5747fb8b7a7b13e19c1b70b2f786d005610c by Isha Kandaswamy
|Patch Set 2:

Can we also add the git clone and go install into the build ? That way people don't have to manually download the tools and build goyacc
|Patch Set 2:

Ok.
|Uploaded patch set 1.
|Patch Set 1:

Hi Gerald,

Have tested this on both Analytics and Query with batch and non batch. I have a log statement in godbc that tells me if I'm trying to open a connection. 

Will make the suggested changes and checkin. 

Thanks
Isha
|Uploaded patch set 2.
|Patch Set 2:

@Gerald : Addressed comments.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 39f441391e09479ffe88f76a7b2d3a5d8588828f by Isha Kandaswamy
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

The issue here was for cases http://localhost:809@. 
This still throws an error :
ERROR 100 : N1QL: Connection failure Requested resource not found.

The error is different now since when you parse a url containing a @ in the port number (http://localhost:809@) , the url parser resolves it as follows
Scheme:	http
Protocol:	http
Userinfo:	localhost:809
Username:	localhost
Password:	809
 
Hence the port number is empty.  When we add a port number and then it gives us :8091 as the host which is incorrect. 
Instead we should throw an error in the beginning itself saying NO HOST given. 

This fix handles this case
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

Ishas-MacBook-Pro:cbq isha$ ./cbq -exit-on-error localhost 
 No input credentials. In order to connect to a server with authentication, please provide credentials.
 Connected to : http://localhost:8091/. Type Ctrl-D or \QUIT to exit.

 Path to history file for the shell : /Users/isha/.cbq_history 
cbq&gt; \SET 1;
 ERROR 139 : Too few input arguments to command. 


 Exiting on first error encountered.
Ishas-MacBook-Pro:cbq isha$ ./cbq -exit-on-error localhost 
 No input credentials. In order to connect to a server with authentication, please provide credentials.
 Connected to : http://localhost:8091/. Type Ctrl-D or \QUIT to exit.

 Path to history file for the shell : /Users/isha/.cbq_history 
cbq&gt; select * from system:keyspacesd;
{
    &quot;requestID&quot;: &quot;8c0344ae-fa39-4eec-b5f6-76a43498a9b4&quot;,
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 11002,
            &quot;msg&quot;: &quot;Keyspace not found keyspacesd&quot;
        }
    ],
    &quot;status&quot;: &quot;fatal&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;366.253µs&quot;,
        &quot;executionTime&quot;: &quot;346.911µs&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}

 Exiting on first error encountered.
Ishas-MacBook-Pro:cbq isha$
|Patch Set 1:

(2 comments)
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 8e6429250f854602345b62fd03dbdc557f191c26 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as faedaa0d8dc4d35da2dd82bf43711904d1bc18c5 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

Not necessarily. If we want to do that as an added precaution we can. But since we aren't setting OPT_FOLLOWLOCATION, setting max-redirs is a NOOP.
|Uploaded patch set 2.
|Patch Set 2:

Done
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as e7077391389780fefc907112a29f37378ecd7a6c by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

After
cbq&gt; select curl(&quot;GET&quot;,&quot;file:///Users/isha/workspace/query/src/github.com/couchbase/query/data/sampledb/default/tutorial/dave.json&quot;) ;
{
    &quot;requestID&quot;: &quot;a091b70b-62c5-496e-876a-5891c4bee1d6&quot;,
    &quot;signature&quot;: {
        &quot;$1&quot;: &quot;object&quot;
    },
    &quot;results&quot;: [
    ],
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 5010,
            &quot;msg&quot;: &quot;Error evaluating projection. - cause: curl: Unsupported protocol&quot;
        }
    ],
    &quot;status&quot;: &quot;errors&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;2.029292ms&quot;,
        &quot;executionTime&quot;: &quot;1.997843ms&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

@Sitaram : Addressed all review comments.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as 7d21ad2142355cea7d3e2bf4889b196ac8ab531b by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a59fe60a3dd3c1e926683ad76cc155e770ea1e1e by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2:

With Keep-alive time I'm thinking that for non int values i should throw the following as an error 
option --keepalive-time: expected a proper numerical parameter

(This is seen in the curl command)
|Patch Set 2:

Thats what i do now. All time based options are truncated when i cast the float to int. But i was thinking if that is ok, or if we should throw an error.
|Patch Set 2:

Since it is decided to truncate it, can i please get a plus 2 ?
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as cf24d4c53f84b26f4fc94e0f111f1f74dc058ffb by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

This is now completely compatible with the corresponding lib curl code. Will add the comments that contain the lib curl commands to this now so this piece is complete.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5:

Addressed all comments
|Patch Set 5:

Is the value of the custom header supposed to be &quot;X-N1QL-User-Agent: couchbase/n1ql/&quot; + util.VERSION

or is that only for the User-Agent ?
|Uploaded patch set 6.
|Patch Set 6:

(2 comments)
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Change has been successfully cherry-picked as 1ddaf1fff06ab4c05f5533fe8b90a33ccfa39549 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 83f6e70f71b5477b87832e07e372df5b484e8ce9 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

Example test case I ran

SELECT temp.query.results from CURL(&quot;GET&quot;,&quot;https://query.yahooapis.com/v1/public/yql&quot;,{&quot;d&quot;:[&quot;q=select%20*%20from%20yahoo.finance.quotes%20where%20symbol%20in%20(%22HDP%22)&quot;,&quot;format=json&quot;,&quot;diagnostics=true&quot;,&quot;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&amp;callback=&quot;]})temp
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f5adb1115d21f934d506faec732c235d1415d7e5 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 3af574992c129d4e75695d4d0b3bba54a0efafb7 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

&quot;GET /pools HTTP/1.1&quot; 200 768 - X-N1QL-User-Agent: couchbase/n1ql/1.7.0-N1QL
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 4036675c060bd81a286712d64395bea82b7a0c3c by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3:

Ran sample queries
Select curl (&quot;http://localhost:8093/query/service&quot;, {&quot;data&quot; : [&quot;statement=select * from system:keyspaces&quot;,'creds=[{&quot;user&quot;:&quot;Administrator&quot;,&quot;pass&quot;:&quot;password&quot;}]']})
Select curl (&quot;http://localhost:8093/query/service&quot;, {&quot;data&quot; :&quot;statement=select * from system:keyspaces&quot;,&quot;user&quot;:&quot;Administrator:password&quot;}) ;
select result.total_hits, array_length(result.hits) from curl(&quot;http://Administrator:password@localhost:8094/api/index/beers/query&quot;,{&quot;headers&quot;:&quot;Content-Type: application/json&quot;,&quot;data&quot;: '{&quot;explain&quot;:true,&quot;fields&quot;: [&quot;*&quot;],&quot;highlight&quot;: {},&quot;query&quot;: {&quot;query&quot;: &quot;garden&quot;}}' }) result;
select curl(&quot;http://127.0.0.1:8091/pools/default/buckets/beer-sample&quot;)
SELECT CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;, {&quot;data&quot;:[&quot;address=santa+cruz&quot;,&quot;components=country:ES&quot;],&quot;get&quot;:true})
SELECT CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;,{&quot;data&quot;:&quot;address=Half+Moon+Bay&quot;,&quot;request&quot;:&quot;GET&quot;} ).results rs;
SELECT temp.query.results from CURL(&quot;https://query.yahooapis.com/v1/public/yql&quot;,{&quot;d&quot;:[&quot;q=select%20*%20from%20yahoo.finance.quotes%20where%20symbol%20in%20(%22HDP%22)&quot;,&quot;format=json&quot;,&quot;diagnostics=true&quot;,&quot;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&amp;callback=&quot;]})temp;
select curl(&quot;https://expired.badssl.com&quot;)
SELECT RAW list FROM CURL(&quot;https://api.github.com/users/ikandaswamy/repos&quot;)list;
SELECT count(row) FROM CURL(&quot;https://data.cityofnewyork.us/api/views/25th-nujf/rows.json&quot;,{&quot;data&quot;:&quot;accessType=DOWNLOAD&quot;,&quot;request&quot;:&quot;GET&quot;}) result UNNEST result.data AS row;
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4:

Something went wrong with the diff. Im not sure what.
|Patch Set 4:

(1 comment)
|Patch Set 4:

Aah sorry the +2 was Johans. :)
|Patch Set 4:

I have addressed all the comments. Can I get a +2 ?
|Patch Set 4:

Sorry about that. Will fix. Also I see that I'm setting the user-agent with the header name, which is a bug. So I'm fixing that now as well.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Change has been successfully cherry-picked as fd83b07289c96f5b6f09b2aa560aa57d0c33d87b by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as e70f0ea7d3be0cb4f91ab0a1ebe07c29dd368aa2 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 2069f9d0f71b6459f22463c0832ab5a012060f98 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Also fixing another issue with batch mode here. Checkin in a patch set now.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 61291d2e2ad2ed806d15045b3645427eb7db4c2d by Isha Kandaswamy
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

This checkin addresses the following security concern :

Certificates should be stored on the local machine - each query node within a cluster. 

Use /Couchbase/var/lib/couchbase/n1qlcerts to store certificates. If not present here, throw error.

Add option cacert to pass in the “name” of the certificate to use. Only names are valid, paths are invalid. (passing in a path will cause an error.) 

Tested on centos by trying the following 
1. Create bin/../var/lib/couchbase/n1qlcerts
2. Copy root certificate ca.pem here.
3. Run select curl(&quot;https://localhost:18091/pools&quot;,{&quot;cacert&quot;:&quot;ca.pem&quot;}) ;
-&gt; Also tested with certificate names containing spaces.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

FromSlash returns the result of replacing each slash ('/') character in path with a separator character. Multiple slashes are replaced by multiple separators.

Internally --&gt; Separator     = os.PathSeparator

Tested the following on windows
package main 

import (
&quot;fmt&quot;
&quot;path/filepath&quot;
&quot;io/ioutil&quot;)

func main() {
subdir := filepath.FromSlash(&quot;/test/n1qlcerts/&quot;)
fmt.Println(subdir)

dat, err := ioutil.ReadFile(subdir+&quot;isha.txt&quot;)
    fmt.Println(err)
    fmt.Println(string(dat))

}

This worked as expected on windows
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 06916d0f5c43a62c61576a896f24af1d2e171366 by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Test to see what ciphers are being sent. 

cbq&gt; select curl(&quot;https://www.howsmyssl.com/a/check&quot;);
{
    &quot;requestID&quot;: &quot;828c72e8-2545-4695-8cf2-ce0443c520a3&quot;,
    &quot;signature&quot;: {
        &quot;$1&quot;: &quot;object&quot;
    },
    &quot;results&quot;: [
        {
            &quot;$1&quot;: {
                &quot;able_to_detect_n_minus_one_splitting&quot;: false,
                &quot;beast_vuln&quot;: false,
                &quot;ephemeral_keys_supported&quot;: true,
                &quot;given_cipher_suites&quot;: [
                    &quot;TLS_RSA_WITH_AES_128_CBC_SHA&quot;,
                    &quot;TLS_RSA_WITH_AES_256_CBC_SHA&quot;,
                    &quot;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA&quot;,
                    &quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA&quot;,
                    &quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&quot;,
                    &quot;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256&quot;,
                    &quot;TLS_EMPTY_RENEGOTIATION_INFO_SCSV&quot;
                ],
                &quot;insecure_cipher_suites&quot;: {},
                &quot;rating&quot;: &quot;Improvable&quot;,
                &quot;session_ticket_supported&quot;: false,
                &quot;tls_compression_supported&quot;: false,
                &quot;tls_version&quot;: &quot;TLS 1.2&quot;,
                &quot;unknown_cipher_suite_supported&quot;: false
            }
        }
    ],
    &quot;status&quot;: &quot;success&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;416.865747ms&quot;,
        &quot;executionTime&quot;: &quot;416.838963ms&quot;,
        &quot;resultCount&quot;: 1,
        &quot;resultSize&quot;: 944
    }
}
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3:

Hi Gerald,

Was wondering about this checkin. Are there any more changes I need to make ?

Thanks
Isha
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5:

Hi Gerald, 

What about filestore ? 

Thanks
Isha
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as 96b4cd5d47ac72180ebc94ca01fb4de994780fc0 by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Published edit on patch set 2.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as b835bc8a719f787ba34ef22604b2c1cfb3398b9c by Isha Kandaswamy
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Will wait for Ceej to confirm before I merge. Ran all the unit tests. They pass
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as a0be80c9cf147638ebf382f744fb165ef1ebece2 by Isha Kandaswamy
|Patch Set 1: Code-Review+1

Why was this directly true before ? Did we always expect it to use array index for Intersectspan ?
|Patch Set 1: Code-Review+2
|Patch Set 1:

Should we throw an error when exp is nil ?
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2:

q=select x from default where x = 1;
SELECT temp.query.results from CURL(&quot;https://query.yahooapis.com/v1/public/yql&quot;,{'data-urlencode':['q=select * from yahoo.finance.quotes where symbol in (\&quot;HDP\&quot;) AND YearLow=\&quot;6.42\&quot;','format=json','diagnostics=true','env=store://datatables.org/alltableswithkeys','callback=']})temp;
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 4ae4d52e3f19dcd7ec06adf2e1da3cf10243da0e by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

For the -s option, I will be changing where the query is displayed. Before the input query was displayed only if there was an error. Now it will be displayed for all queries run using -n. To avoid displaying the query use the --quiet option with your query.
|Patch Set 2:

IshaK:cbq isha$ ./cbq -s=&quot;select1&quot; -s=&quot;select 1&quot; --exit-on-error --quiet localhost:8093
{
    &quot;requestID&quot;: &quot;9b8269a5-4331-49f6-b85f-44c1c0434d88&quot;,
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 3000,
            &quot;msg&quot;: &quot;syntax error - at ;&quot;
        }
    ],
    &quot;status&quot;: &quot;fatal&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;127.415µs&quot;,
        &quot;executionTime&quot;: &quot;116.117µs&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}
 ERROR 174 : Unspecified error. 

IshaK:cbq isha$ ./cbq -s=&quot;select1&quot; -s=&quot;select 1&quot; --exit-on-error localhost:8093
 Connected to : http://localhost:8093/. Type Ctrl-D or \QUIT to exit.

 Path to history file for the shell : /Users/isha/.cbq_history 

 select1
{
    &quot;requestID&quot;: &quot;daac97a0-f956-4f6a-bed2-54f3e4fcc073&quot;,
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 3000,
            &quot;msg&quot;: &quot;syntax error - at ;&quot;
        }
    ],
    &quot;status&quot;: &quot;fatal&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;115.89µs&quot;,
        &quot;executionTime&quot;: &quot;105.08µs&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}
 ERROR 174 : Unspecified error.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 853c089d2f31b82c6a528e6f7388942860dc10e6 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

Test example

cbq&gt; select * from curl(&quot;https://api.yelp.com/v3/businesses/search?term=italian&amp;location=35408%2C%20monterra%20circle%2C%20union%20city%2C%20ca&amp;radius=18096&amp;limit=50&quot;,{&quot;header&quot;:&quot;Authorization: Bearer 3zRg4dAxXv6cQyOj4siJ9ZG3KPfkjW7b-IzfFuk7TF1mBRZ1m0t9TDuLiTf1q2OMdEU_Qlg1AE-AWti2bcetRSRhbh-Y_I2l8VFY-KtyqfYj6ivGfW9wlB0o4EUKWXYx&quot;,&quot;request&quot;:&quot;GET&quot;}) a;
{
    &quot;requestID&quot;: &quot;d7c63120-f080-4076-b321-5537d5ebc52c&quot;,
    &quot;signature&quot;: {
        &quot;*&quot;: &quot;*&quot;
    },
    &quot;results&quot;: [
    ],
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 5010,
            &quot;msg&quot;: &quot;Error evaluating ExpressionScan. - cause: Response Size has been exceeded. The max response capacity is 5000&quot;
        }
    ],
    &quot;status&quot;: &quot;errors&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;1.800704297s&quot;,
        &quot;executionTime&quot;: &quot;1.800683616s&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 1e762f0c44b098a03d732f50bc6f0c86d7b91224 by Isha Kandaswamy
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

https://docs.google.com/a/couchbase.com/document/d/1GZKtfvHORPhE2n-SNaux9w8UZITj2_xxcH4M0NV3ges/edit?usp=sharing
|Patch Set 1:

*Have also run tests to validate each outcome.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2:

(7 comments)
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4:

Sample example 

cbq&gt; SELECT CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;, {&quot;data&quot;:[&quot;address=santa+cruz&quot;,&quot;components=country:ES&quot;],&quot;get&quot;:true}) ;
{
    &quot;requestID&quot;: &quot;f378940e-f7b0-4daf-b7dc-b3ba6224f683&quot;,
    &quot;signature&quot;: {
        &quot;$1&quot;: &quot;object&quot;
    },
    &quot;results&quot;: [
    ],
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 5010,
            &quot;msg&quot;: &quot;Error evaluating projection. - cause: File ../Couchbase/var/lib/couchbase/n1qlcerts/curl_whitelist.json contains invalid JSON on node 10.17.2.106. Contents have to be a JSON object.&quot;
        }
    ],
    &quot;status&quot;: &quot;errors&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;403.146674ms&quot;,
        &quot;executionTime&quot;: &quot;403.129135ms&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}
|Patch Set 4:

@johan - ill open a separate issue and fix that. For now I'm checking this in.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as 971c08c2883ad12809bd92ab0fb0e73c58b63cbf by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Test -&gt;
cbq&gt; select temp.query.results from curl('https://query.yahooapis.com/v1/public/yql', {'data-urlencode': ['q=select * from yahoo.finance.quotes where symbol in (\&quot;HDP\&quot;)','format=json','diagnostics=true','env=store://datatables.org/alltableswithkeys','callback='], 'data': ['q=select%20*%20from%20yahoo.finance.quotes%20where%20symbol%20in%20(%22HDP)','format=json','diagnostics=true','env=store%3A%2F%2Fdatatables.org','callback=']})temp;
{
    &quot;requestID&quot;: &quot;46fac236-f56e-45e2-8cac-1a84630c3a08&quot;,
    &quot;signature&quot;: {
        &quot;results&quot;: &quot;json&quot;
    },
    &quot;results&quot;: [
        {}
    ],
    &quot;status&quot;: &quot;success&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;216.007929ms&quot;,
        &quot;executionTime&quot;: &quot;215.991844ms&quot;,
        &quot;resultCount&quot;: 1,
        &quot;resultSize&quot;: 2
    }
}
cbq&gt; SELECT rs.formatted_address, rs.geometry FROM CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;,{&quot;data-urlencode&quot;:&quot;address=Santa Cruz&quot;,&quot;data&quot;:&quot;components=country:USA&quot;, &quot;G&quot;: true} ).results rs ;
 
 
{
    &quot;requestID&quot;: &quot;23fe4edd-0865-4f22-9d95-ae8da798e96a&quot;,
    &quot;signature&quot;: {
        &quot;formatted_address&quot;: &quot;json&quot;,
        &quot;geometry&quot;: &quot;json&quot;
    },
    &quot;results&quot;: [
        {
            &quot;formatted_address&quot;: &quot;Santa Cruz, CA, USA&quot;,
            &quot;geometry&quot;: {
                &quot;bounds&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 37.0108489,
                        &quot;lng&quot;: -121.9862189
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 36.9409339,
                        &quot;lng&quot;: -122.1087411
                    }
                },
                &quot;location&quot;: {
                    &quot;lat&quot;: 36.9741171,
                    &quot;lng&quot;: -122.0307963
                },
                &quot;location_type&quot;: &quot;APPROXIMATE&quot;,
                &quot;viewport&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 37.0108489,
                        &quot;lng&quot;: -121.9862189
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 36.9480203,
                        &quot;lng&quot;: -122.0751088
                    }
                }
            }
        }
    ],
    &quot;status&quot;: &quot;success&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;690.4692ms&quot;,
        &quot;executionTime&quot;: &quot;690.44515ms&quot;,
        &quot;resultCount&quot;: 1,
        &quot;resultSize&quot;: 956
    }
}
cbq&gt; SELECT rs.formatted_address, rs.geometry FROM CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;,{&quot;data-urlencode&quot;:&quot;address=Santa Cruz&quot;,&quot;data&quot;:&quot;components=country:ES&quot;, &quot;G&quot;: true} ).results rs ;
 
 
{
    &quot;requestID&quot;: &quot;b0f4a991-0d82-4948-9af3-ddb67272e1b8&quot;,
    &quot;signature&quot;: {
        &quot;formatted_address&quot;: &quot;json&quot;,
        &quot;geometry&quot;: &quot;json&quot;
    },
    &quot;results&quot;: [
        {
            &quot;formatted_address&quot;: &quot;Santa Cruz de Tenerife, Spain&quot;,
            &quot;geometry&quot;: {
                &quot;bounds&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 28.487616,
                        &quot;lng&quot;: -16.2356646
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 28.4280248,
                        &quot;lng&quot;: -16.3370045
                    }
                },
                &quot;location&quot;: {
                    &quot;lat&quot;: 28.4636296,
                    &quot;lng&quot;: -16.2518467
                },
                &quot;location_type&quot;: &quot;APPROXIMATE&quot;,
                &quot;viewport&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 28.487616,
                        &quot;lng&quot;: -16.2356646
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 28.4280248,
                        &quot;lng&quot;: -16.3370045
                    }
                }
            }
        }
    ],
    &quot;status&quot;: &quot;success&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;168.681507ms&quot;,
        &quot;executionTime&quot;: &quot;168.668237ms&quot;,
        &quot;resultCount&quot;: 1,
        &quot;resultSize&quot;: 959
    }
}
cbq&gt;
|Patch Set 2:

cbq&gt; SELECT rs.formatted_address, rs.geometry FROM CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;,{&quot;data-urlencode&quot;:&quot;address=Santa Cruz&quot;, &quot;G&quot;: true} ).results rs ;
{
    &quot;requestID&quot;: &quot;c7f2d3de-f925-45f5-b56d-0e9ad05e75b9&quot;,
    &quot;signature&quot;: {
        &quot;formatted_address&quot;: &quot;json&quot;,
        &quot;geometry&quot;: &quot;json&quot;
    },
    &quot;results&quot;: [
        {
            &quot;formatted_address&quot;: &quot;Santa Cruz, CA, USA&quot;,
            &quot;geometry&quot;: {
                &quot;bounds&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 37.0108489,
                        &quot;lng&quot;: -121.9862189
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 36.9409339,
                        &quot;lng&quot;: -122.1087411
                    }
                },
                &quot;location&quot;: {
                    &quot;lat&quot;: 36.9741171,
                    &quot;lng&quot;: -122.0307963
                },
                &quot;location_type&quot;: &quot;APPROXIMATE&quot;,
                &quot;viewport&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 37.0108489,
                        &quot;lng&quot;: -121.9862189
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 36.9480203,
                        &quot;lng&quot;: -122.0751088
                    }
                }
            }
        }
    ],
    &quot;status&quot;: &quot;success&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;164.828836ms&quot;,
        &quot;executionTime&quot;: &quot;164.803669ms&quot;,
        &quot;resultCount&quot;: 1,
        &quot;resultSize&quot;: 956
    }
}

cbq&gt; SELECT rs.formatted_address, rs.geometry FROM CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;,{&quot;data&quot;:&quot;address=Santa+Cruz&quot;, &quot;G&quot;: true} ).results rs ;
{
    &quot;requestID&quot;: &quot;fdce4d2b-39ca-40e1-8f46-3c2e252cc929&quot;,
    &quot;signature&quot;: {
        &quot;formatted_address&quot;: &quot;json&quot;,
        &quot;geometry&quot;: &quot;json&quot;
    },
    &quot;results&quot;: [
        {
            &quot;formatted_address&quot;: &quot;Santa Cruz, CA, USA&quot;,
            &quot;geometry&quot;: {
                &quot;bounds&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 37.0108489,
                        &quot;lng&quot;: -121.9862189
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 36.9409339,
                        &quot;lng&quot;: -122.1087411
                    }
                },
                &quot;location&quot;: {
                    &quot;lat&quot;: 36.9741171,
                    &quot;lng&quot;: -122.0307963
                },
                &quot;location_type&quot;: &quot;APPROXIMATE&quot;,
                &quot;viewport&quot;: {
                    &quot;northeast&quot;: {
                        &quot;lat&quot;: 37.0108489,
                        &quot;lng&quot;: -121.9862189
                    },
                    &quot;southwest&quot;: {
                        &quot;lat&quot;: 36.9480203,
                        &quot;lng&quot;: -122.0751088
                    }
                }
            }
        }
    ],
    &quot;status&quot;: &quot;success&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;145.771163ms&quot;,
        &quot;executionTime&quot;: &quot;145.753306ms&quot;,
        &quot;resultCount&quot;: 1,
        &quot;resultSize&quot;: 956
    }
}
|Patch Set 2:

Could I please get a +2 ?
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 6cb7add8e2fac4122558481cbca764b59ab1fe29 by Isha Kandaswamy
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

cbq&gt; SELECT rs.formatted_address, rs.geometry FROM CURL(&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;,{&quot;data&quot;:&quot;address=Santa+Cruz&quot;, &quot;G&quot;: true} ).results rs ;
{
    &quot;requestID&quot;: &quot;b51af2c1-f177-40a6-aa40-db1bfc5cb4e2&quot;,
    &quot;signature&quot;: {
        &quot;formatted_address&quot;: &quot;json&quot;,
        &quot;geometry&quot;: &quot;json&quot;
    },
    &quot;results&quot;: [
    ],
    &quot;errors&quot;: [
        {
            &quot;code&quot;: 5010,
            &quot;msg&quot;: &quot;Error evaluating ExpressionScan. - cause: File /Users/isha/workspace/query/src/github.com/couchbase/query/server/cbq-engine/../var/lib/couchbase/n1qlcerts/curl_whitelist.json contains empty JSON object on node 10.17.2.106. CURL() end points should be whitelisted.&quot;
        }
    ],
    &quot;status&quot;: &quot;errors&quot;,
    &quot;metrics&quot;: {
        &quot;elapsedTime&quot;: &quot;2.290508ms&quot;,
        &quot;executionTime&quot;: &quot;2.264288ms&quot;,
        &quot;resultCount&quot;: 0,
        &quot;resultSize&quot;: 0,
        &quot;errorCount&quot;: 1
    }
}
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as b8a53ed17be00adc79c81c6c3b245ded45c3a4f1 by Isha Kandaswamy
|Uploaded patch set 1.
|Patch Set 1:

IshaK:cbq isha$ ./cbq -u Administrator -p password -exit-on-error -s=&quot;\set 1&quot; -s=&quot;select * from default limit 1&quot; 172.23.106.24
 Connected to : http://172.23.106.24:8091/. Type Ctrl-D or \QUIT to exit.

 Path to history file for the shell : /Users/isha/.cbq_history 

 \set 1
 ERROR 139 : Too few input arguments to command. 


 Exiting on first error encountered. --&gt; added this line just now
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as f2382fd3cb9b9ed5723e80d202f0cee316bd6076 by Isha Kandaswamy
|dcp.setTS is very cheap.
|Will do.
|There is no need for two locks, we just need one lock batch_lock, which will be acquired by xmem.accumuBatch.
|This is the same root cause of MB-14814, the current access of accumBatch and batchReady. I made the similar fix for MB-14814 locally. I will assign MB-14814 to you, so you can close it with this one.
|Currently batchReady acquires batch_move_lock, there is no need for that now. Please consider remove it.
|Should we guard against vbno is not one of the existing entry? Panic with the correct message should help.
|guard against vbno is not one of the existing entry? filtered_seqno_list in that case would be nil
|It should only loop through the nodes that has the vb in remoteVBUUIDs map. 

The current logic could calling _mass_check_opaque with empty &quot;vbopaques&quot;
|The variable name is misleading. It returned is capi rest addr, not memcached_addr.
|MemcachedAddrRestAddrMap's value is CAPI Rest Addr, the error message is misleading.
|fix the panic panic in xmem.itemCountInBuffer(
|Cache http client per node.
|initialize http client map when bucket is refreshed.
|Good catch. It should use keep_client_alive instead. Will fix.
|To reuse the client which encapsulate the connection. This would avoid opening up connections for each rest call.
|Can this logic be moved to xdcr_factory.go, then be plugged into pipeline by having a ssl_port_getter? Similar way as getting start seqno function is plugged in to generic_pipeline?

	err = genericPipeline.startingSeqno_constructor(genericPipeline)
	if err != nil {
		return err
	}

The reason is to keep generic_pipeline agnostic to part specific logic and having xdcr_factory to deal with it, as xdcr_factory are supposed to be context specific anyway.
|Can trim the lists be moved to another function and use lock in that function? trim can be called asynchronously from GetThroughSeqno, as it is not needed for returning the correct result
|Would RLock be sufficient for all the locks above? and do we need to lock for the entire method execution?
|And do we need to lock it for the entire method duration? We don't need to be exactly correct on that moment. Can we only lock for the period to get the lists from different maps? We don't need to lock when we do the calculation.
|Should only need RLock, right?
|Is the above logic correct?
 in loop #1, last_sent_index = 20
 in loop #2, last_notsent_index = 21
 
the above logic will produce through_seqno=20, instead of 21.
|Isn't you can eliminate the case that you need to search both lists in the code below? in the case of you need to backtrack?
Â»       Â»       Â»       gap_index_2, gap_found_2 := search(gap_seqno_list, uint64(notsent_seqno_list
[end_index]))	231
158	Â»       Â»       tsTracker.vb_notsent_seqno_list_map[vbno] = seqno_list[index:]	Â»       Â»       Â»       if !gap_found_2 {	232
Â»       Â»       Â»       Â»       // N=M, return seqno+M 	233
Â»       Â»       Â»       Â»       through_seqno = uint64(notsent_seqno_list[end_index])	234
Â»       Â»       Â»       Â»       tsTracker.vb_notsent_seqno_list_map[vbno] = notsent_seqno_list[end_i
ndex+1:]	235
Â»       Â»       Â»       Â»       tsTracker.vb_gap_seqno_list_map[vbno] = tsTracker.vb_gap_seqno_list_
map[vbno][gap_index_2:]	236
Â»       Â»       Â»       } else {	237
Â»       Â»       Â»       Â»       // iterate backward in gap_seqno_list to find the first N such that 
seqno+N is not in gap_seqno_list 	238
Â»       Â»       Â»       Â»       through_seqno = tsTracker.backtrackGapSeqnoList(vbno, gap_index_2)	239
Â»       Â»       Â»       }	240
|If search both list, do we still need to do backtracking?

Is the following the logic to get the high_through_seqno?

for {
if the seqno_tosearch is in gap list
     seqno_tosearch =    search_tosearch +1
if the seqno_tosearch is in notsent list, 
     high_through_seqno = seqno_tosearch
     seqno_tosearch = seqno_tosearch +1
else
     break
}
|Can you please explain more?
|It is not about optimization on cpu or memory. It is about decrease the coupling between different classes. i.e. the assumption you had in the above code, which has to know xmem's behavior and proceed with logic based on that.
|Would it be simpler and more generic to have through_seqno_tracker_service to own the logic and structure which determines what is the highest through seqno for a vb, as it does already have a lot more information to exactly categorize it.

That would cover for both xmem and capi.
|I mean we might not need the list of &quot;sent but not yet received&quot; seqnos from xmem any more. Can through_seqno_tracker_service calculate the the higest through seqno by looking at the seqno which has been reported to be confirmed by xmem and keep track of them to determine? It means through_seqno_tracker would introduce a structure to track the seqnos reported received. But the logic is more centralized and generic across Xmem and capi.
|Do we still need AllReplicationsForTargetCluster api in pipeline_manager? If not, let's remove it.
|check if dcp.uprFeed is nil before calling dcp.uprFeed.UprCloseStream.
|Should this be done at Adminport code?
|How is this flag used?
|It tracks how many objects are loaned out. lease_count + cur_size is the total number of objects are in the system so far.
|Yes, it can. But we still need lock and counter operation in else casue, so decided to keep it symmetric.
|Will do.
|Yes. it is the part of the fix.
|receiveResponse routine will also read from token_ch (which points to xmem.receive_token_ch), although it would put it back in the next statement, but depends on the timing, len(token_ch) might not truely reflect the item count in the buffer.
|Will change.
|missing's format is []uint16, not [] {uint16, uint64}
|Should the lock be placed before xmem.dataChan &lt;- item
|Should this be Errorf? Can we make the message more user friendly? log pos probably doesn't have much meaning.
|reponse==nil case need to be handled as well, it need to panic.
|Should it be Errorf, and can we make the error message more user friendly?
|Yu, on a second look, should this be in a different clause altogether?
if err != {
//network error
}else if response.Status != mc.SUCCESS {
//application error, it should either retry or raise error to declare pipeline //broken
   if isRecoverableMCError (response.Status) {
         //resend
   }else {
        //raise error
    }
}else {
//successful case
}
|Should here add the similar else and panic ?
|Should we add an else condition to panic to guard against any coding errors?
|Done
|You don't want to check in this.
|Let's just remove it. We can always added it back. Github kept all the version for us already.
|Remove please
|go fmt?
|should we consider to use a map of channel of error instead?
|Have you tried to make checkpoint ticker a local variable inside the for loop of checkpointing method. So ticker would be reinitialized for each iterator to take on the latest checkpoint_interval?

would that be cheaper than stop\restart a go-routine?
|same comments as the comment in checkpoint_manager.go
|Should this throw error or should it be no-op?
|Do we need these?
should it be just pipeline.UpdateSettings(newSettings), then pipeline.UpdateSettings method can blindly call UpdateSettings on all parts and pipeline services to delegate the changes?
|It can be a channel of error, which would eliminate the racing.
|Why do we need this function above?
|Can this be done in a more generic way?
1. Both Part and PipelineService interface support a method called UpdateSettings()
2. Each struct that implements Part and PipelineService implement this method to do thing proper
3. Pipeline interface should also support UpdateSettings method
4. changes to settings would propogate to Pipeline by calling UpdateSettings and then propagate to parts and pipeline services by Pipleline callling UpdateSettings on parts and pipeline services.
|Would logging the new settings out be more meaningful?
|Why here? Shouldn't it be done by its launcher?
|Would a map of channel of error make more sense?
|I thought we are going to do inline update on the next round. Do we need to finish the go-routine and relaunch it?
|Usually the thread is being launched would call .Done on wait group. It is very strange why the same method calling .Done and .Add.
|What is the issue with inline update without finishing the existing goroutine?
|It seems to be a good practice to Stop the ticker. from golang doc,

NewTicker returns a new Ticker containing a channel that will send the time with a period specified by the duration argument. It adjusts the intervals or drops ticks to make up for slow receivers. The duration d must be greater than zero; if not, NewTicker will panic. Stop the ticker to release associated resources.
|The reason that it doesn't wait for the children to die is to make pipeline shutdown faster. The child go-routine will discover and die themselves.
|go fmt.
|10 together with the exponential backoff adds up to 30 mins. It is too long, would not help to detect the network issue.

this is the reason that MB-14622 GoXDCR: 1 key missing in simple unixdcr with pause/resume. It took too long to detect the network issue. It just keep resending, then the test timed out.
|It should not be considered as being stuck if xmem is receiving responses of the items sent. This is meant to reduce the false alarm on &quot;xmem is Stuck&quot;
|On the other hand, if buffer is not empty even the dataChan is empty, freeze_counter should still be increased. This would help detect stuckness on the last few items - applies to MB-14622
|num_of_retry should not be increased if the resend is because of connection is repaired.
|This was falsely taken out in the checkin for  MB-14233 thinking this would be needed as DCP would close the stream and we will get notified.

That is true if the original vb list of the node is not a subset of the new vb list, otherwise it would be able to detect. 

This is the cause of MB-14514
|10 together with the exponential backoff adds up to 30 mins. It is too long, would not help to detect the network issue.
|It should not be considered as being stuck if xmem is receiving responses of the items sent.
|When the connection is repaired, all the un-confirmed items would be resent, the freeze_counter should be reset.
|When this kind of error happens, it is very likely that the connections in pool are also ruined, so release all the connections in pool
|-fix a panic seen in test #12 in dev sanity
panic: runtime error: invalid memory address or nil pointer dereference
[signal 0xb code=0x1 addr=0x0 pc=0x916c2]
goroutine 70364 [running]:
github.com/couchbase/goxdcr/service_impl.(*CAPIService).MassValidateVBUUIDs(0xc20802b2b0, 0xc2094d6000, 0xc2090364b0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/xiaomei/builds/goproj/src/github.com/couchbase/goxdcr/service_impl/capi_service.go:167 +0xae2
github.com/couchbase/goxdcr/pipeline_svc.(*CheckpointManager).massCheckVBOpaues(0xc2096b5860, 0x0, 0x0)
	/Users/xiaomei/builds/goproj/src/github.com/couchbase/goxdcr/pipeline_svc/checkpoint_manager.go:786 +0x24c
created by github.com/couchbase/goxdcr/pipeline_svc.(*CheckpointManager).massCheckVBOpaquesJob
	/Users/xiaomei/builds/goproj/src/github.com/couchbase/goxdcr/pipeline_svc/checkpoint_manager.go:772 +0x283

If _commit_for_checkpoint failed, vboque would return as nil, thus as a result, latest_ckpt_record.Target_vb_opaque would be nil. In this case, it should not be put into target_vb_vbuuid_map and MassValidateVBUUIDs on that vb.
|fix MB-14144 GoXDCR: Rest passwords leaked in goxdcr.log and debug.log. 

log *metadata.RemoteClusterReference, not metadata.RemoteClusterReference, so that the overridden method String() of *metadata.RemoteClusterReference can be called to mask the password
|Not sure if that is the right assumption.
|This need to be validated again. As the topology might have changed since the replication specification is created.
|Is the error message compatible with erlang xdcr's error message?

Version 2 replication is disallowed. Cluster has nodes with versions less than 2.5.
|Anil and I talked yesterday on this matter. Please see the bug for the summary.
|RemoveReplicationStatus need to make sure there is no live updater in the updater map before it removes the replication status from pipeline_map. It will call stopUpdater and wait for it to stopped before proceeding to removal of the replication status from pipeline_map
|Do we need this logic here? If for any reason that replication spec is updated, updateState would fail, which would cause updater to go another round, which in turn will stop the pipeline.
|We don't need such logging. couchbase.log already contains such information. It has all couchbase processes list.
|What is the reason that we have empty string at the first place?
|Need to get the latest revision and set it to ref before it is cached.
|There is no need for this detection anymore. As if source topology changes, the DCP stream is going to be closed by go-couchbase upr, StreamClose event is going to be delivered to the consumer. DCPNozzle already handles this event by raise error.
|Good catch. Will fix
|Nobody is using this method, removing it.
|The issue is not holding the lock longer or shorter. It is actually can run into a self deadlock if refresh=true. As it hold a RLock ,then ask for a Lock in ValidateCached. When that happens any call do query remote cluster would be blocked.
|What is the difference between removeFromCache and invalidateCache, it seems to be the same.
|If it is for debugging, then maybe let it panic is more noticeable way.

no, it is not the same case as local variable is used in the local function without explicitly being passed in as a parameter. In this case, opaque_key_map is explicitly passed in as a parameter.
|readFromClient should return not nil response when error = nil. That is the contract. If that is violated, that is a bug in readFromClient. Thus it should be handled as a runtime error here.
|What UI log records is when the pipeline errors out and when the pipeline is recovered back to normal, right? Would that change when in the future, say, mabye how we recover from error is changed from restart the pipeline to other smarter ways? I think it would not.
|I see this has one-to -one correspondence to errors we show in replication status error map, if the error is recoverable at runtime with minimum cost, would such error still make to the error map? One analogy would be xmem handles some connection errors by renew the connection and resend, which is an example of recovering error at runtime, such error never makes to the error map or changes pipeline's state to error. 

In other word, pipeline's state - Pipeline_Error means entire service interruption for the replication. 

In the future, if there is a such need, we also can add one more state to pipeline state to indicate an recoverable error is happened, but still keep the semantic of Pipeline_Error as is. 

If we are doing extremely smart, maybe most of the error is recoverable, thus pipeline would rarely in Error state, which in turn would have no such entry in ui log.

It is safer and cleaner to treat it as a state transition and have clear state diagram to guide the logic than dealing with different combination of the conditions.
|Instead of doing it here, it is clearer to do the ui log in generic_pipeline.go SetState method, when state is changed to Pipeline_Error or Pipeline_Running.
|This method doesn't seem to only apply for PausedReplications, right? If so, please rename it appropriately.
|The condition here is not only for paused replication. The replication newly created, but not yet started, or pipeline is broken and has not yet reconstructed yet. 

Should we rename the method to be more generic if we want to keep this way? Or should we constrain it only to paused replication.
|Can you add a comment on top of that method?
|So erlang xdcr returns fromBucket :xxx, not source:xxx?
|Does erlang xdcr returns something like as Pavel mentioned in the bug?
I guess message from goxdcr rest api should looks like:
toBucket: &quot;target bucket doesn't exixt&quot;
While we are returning &quot;Bucket xxx not found&quot;?
|Just defensive check.
|Because it is TargetVBUuidAndTimestamp implements TargetVBOpaque interface, not *TargetVBUuidAndTimestamp. What is the reason on that when you implement it?
|Will do.
|Sure. Will do.
|Can you please run go fmt?
|1. go fmt
2. It is kind of two separate things to cached the ref and update the conectionstrs of the remote cluster ref. Even the ref is the same, caller might still want to update the connectionstrs based on its circumstance as the target cluster's topology might have changed, some node are added or removed. Should a flag to be introduced for the flexibility of the caller. That flag would directly mapped to refresh flag that in all the query apis. In this callback case, we can pass in the flag as false if the ref is the same. And the logic to determine the flag need to be in updateCache.

Or maybe more cleaner way is to call this method refreshConnectionStrs(), and move the logic to add the remoteClusterCache to map to updateCache?
|Isn't cache_map already caching the remote cluster reference? can this two  be combined into one?

should Add\del\update update the cache immediately on the local node for &quot;Get what you updated&quot; effect on local node, for other nodes in the same cluster, we will need callback to propagate the changes?
|In order to support &quot;Get what you updated&quot; behavior on the same node, this would be needed, right? i.e. if user uses rest api to add a remote cluster reference, then he get the list of remote cluster references from the same node, that list need to contain the one he just added it, right? In this case, if we only reply on the callback, can we guarantee that?

Optimization can be done, if the instance in the cache is the same as the one passed in by callback, we can choose to do a no-op.
|What is the guideline for other code to read\write remote cluster referencs?
When they should work with RemoteClsuterManager, when they should work with remote_cluster_service? I think it is kind of confusing now. Ideally the consumer should only work with one guy and should not care about if the result it gets is from cache or not. With this approach, are we exposing the complexity to the caller?
|At the minimum, you have to move all the query APIs to remote cluster manager, as you don't want the information in the list is the different from what you get from direct query.

If that is case, should we consider to merge the two classes in one?
|So basically it is a cache and that is the truth that we give to the outside world - ns_server use it to decide what to show as remote cluster list. 

If that is the truth, why other part of the code in goxdcr need to go through the other route? Isn't there a potential inconsistency there? As cache update has a delay depends on when metakv calls back. 

My concern is we potentially has two source of truth here, ideally we should have only one.
|So the logic is to exclude the invalid ones from the list? If so does user has a chance to correct it, since it is no longer shown on UI?
|listening to changes ?
|Does StartRemoteClusterChangeCallBack and observeChildren methods here are pretty much the same as the ones in replication_spec_service? If so, can they share the same code?

Even metakvCallback, I think it can share the same code with replication_spec_service if the function of construct an object from value is passed in to the function as a parameter.
|If it should never get here, it should be panic. Not error.
|Can we make it symmetric on how we handle callback for replication sepc and remote cluster reference? Right now they are not symmetric. If the rationale is to take the callback handling code out, can we have a callback handler to handle it? This callback handler can allow different type of metadata to register its constructor, its own callback function, and it launch one go-routine for each metadata type to be observed. When error happens, it reports MetadataObservationError to replication manager. replication can react on the error and decide the sensible things to do. The RemoteClusterManager is somewhat does that, but it is specific to one metadata type.

I am also OK for now if we decide to keep the callback handling code in replication manager itself, but still have generic code handling any type of metadata callback.
|Can this logic to be generic too?
|Done
|Done
|It turns out that in 3.0, there is no rest api /nodeService. Has to use /pools/default/b/&lt;bucketName&gt; to get the kvSSL port number.
|Done
|Use InsecureSkipVerify when construct the http client. Verify the certificate in verifyCertificate method before constructing the http client.
|Can we do a call on this really quick? I am not sure that I understand you.
|On CAPI, don't worry about it. I sent an email to Anil and chatted with him on hall way. It seems like that we don't need to support capi over ssl.

For target cluster is sherlock, VerifyCertificate will verify the certificate - if err== nil branch above. It is the same as InsecureSkipVerify= false, except, we break it into two separate steps.
|There are three scenarios that rest api need to use ssl .
1. remote cluster creation. validate the certificate. In this case, ssl connection pool has not been established. So we can't really verify the certificate if the target node is on a version prior to sherlock. We can't go through ns_proxy either, as the handshake protocol there requires bucket name, but in this case, we don't really know what is the bucket. The context is not clear yet. 
2. rest calls to checkpoints during the replication to ssl enforced target node. In checkpointing case, for checkpointing, if the replication_type=xmem, ssl connection pool would be established by xmem, so as long as the certificate is the same as the ssl connection pool. It has been verified via ns_proxy and ssl over memcached. 
3. for CAPI, I don't see our code has SSL path, as CAPINozzle.client is always tcp connection, not tls connection. Do you know?

So in summary, for target node prior to sherlock,
1. remote cluster creation - InsecureSkipVerify for http client creation, no Certificate verification is going to be done. But as we don't really send data, so security is not really compromised.
2. checkpointing - checkpointing + xmem is covered by piggybacking it to ssl connection pool, checkpointing + capi ?
3. capi - ssl over capi is supported?
|You mean this client side verification, verification when construct http client with InsecureSkipVerify is on the server side?
|Yes. It is used. In checkpoint_manager.go

				remote_vb_status := &amp;service_def.RemoteVBReplicationStatus{VBUUID: vb_uuid,
					VBSeqno: ckpt_record.Target_Seqno,
					VBNo:    vbno}

				ckmgr.logger.Debugf(&quot;Negotiate checkpoint record %v...\n&quot;, ckpt_record)
				var current_remoteVBUUID uint64 = 0
				bMatch := false
				var err error
				bMatch, current_remoteVBUUID, err = ckmgr.capi_svc.PreReplicate(ckmgr.remote_bucket, remote_vb_status, ckmgr.support_ckpt)

Are you saying that in older cluster commitOpaque returned is not length of 2?

	} else if err == nil &amp;&amp; status_code == 200 {
		remote_seqno_pair, ok := respMap[&quot;commitopaque&quot;].([]interface{})
		if !ok &#124;&#124; len(remote_seqno_pair) != 2 {
			capi_svc.logger.Errorf(&quot;No commitopaque found in resp. respMap=%v, err=%v\n&quot;, respMap, err)
			return 0, 0, NO_REMOTE_OPAQUE_IN_RESP_ERR
		}

		remote_seqno = uint64(remote_seqno_pair[1].(float64))
	}
|explicitly close dcp stream when DcpNozzle is stopped.
|Done
|Need the lock for the concurrent access of the map. With GOMAXPROCS&gt;1 now, we see more concurrency.
|For each SeqnoGetter, pass in a dedicate map for gathering the result. This is to avoid the concurrent update (racing) on the map
|Set GoMaxProcs () to higher number means more parallelism, which means more resource usage. We can set it to the value returned by NumCPU(). But not sure if that is the good idea, as we coexist with ns_server on the same node.
|For each getThroughSeqnos goroutine, have a dedicate map for collecting the result. This is to avoid concurrent update (data racing) on map.
|only add respch when there is no error, otherwise it could lead to the situation where len(heartbeat_resp_chs) != len(responseToWaitTokens), which could lead to the stuck.
|make it non-blocking.
|Done
|Not sure that I understand what is the issue and what is the fix.
|How much effort would it take to move statistics into ReplicationStatus? If it doesn't take that long, we should consider to do the right thing, instead of bandage it.
|Should statistics be part of the ReplicationStatus as well? StatisticsManager periodically update the ReplicationStatus whose storage is expvar.
|OK
|ckpt_record should not be nil. In what case, do you observe it is nil?
|I think we should. How much effort are we talking about here?
|Can you check what is erlang xdcr's behavior?
1. replication has ran for a while, then it was paused and server was restarted, would changes_left calculation take into account of checkpoints?
|Can this be logged as &quot;debug&quot;?
|If that is the case, is the name &quot;constructOverviewStatsForPausedReplication&quot; accurate? If I understand correctly, it is more of a two phase initialization, right?
|Shouldn't it check the rs.Spec().Active to see if the spec is really paused or it is in an unexpected error state?
|This logic and the logic in constructOverviewStatsForPausedReplication has a lot similarity. Can they be refactored to share code?
|Isn't that just upsert semantics? If it is there, update it, if it is not, add it.
|Can this be refactor to share the same code as calculateTotalChanges?
|Can the logic below move to SetReplicationStatusForPausedReplication() method?
|Can you please run go fmt?
|should this fail replication creation? What would be the error returns to the user? or should this be a panic situation? IsMyClusterEnterprise should not return error.
|Yes. As of now checkpoint is still replicated as part of the ns_config. ns_server team is going to change that, but they may still replicate that periodically outside of the ns_config to node's replica node, which is not committed to sherlock.
|randomize the starting points, so the checkpointing for the same replication on different source node could be randomized. This helps distributing the load, minimize the load spike on metakv.
|No need for parallelism for checkpointing, because metakv supports mutate on serialize fashion anyway. This helps to distribute the load as well.
|It can be done. I will upload another patch with that behavior
|do this asynchronously, so it won't block.
|For the first vb, it should start immediately, but golang doesn't allow to specify a ticker with 0 duration.
|from godoc

OpError is the error type usually returned by functions in the net package. It describes the operation, network type, and address of an error

It is not just Timeout and Temporary error, although it does has two methods - Timeout and Temporary to help future categorize the error.
|Would it be more reliable comparing error against net.OpError?
|It only need to do the version upgrade check when the remote cluster has DemandEncryption=true
|return more precise error message
|No need for this. Bucket deletion is handled differently now.
|Change the logging level to Debug for ns_server frequent polling rest calls.
|The password is one of the field in memcached client struct.
|Yes. I am thinking of the same thing. I will add a rest api to change the default log level in a separate checkin.
|Remove it. No longer needed as bucket deletion is handled differently now.
|Change the logging level to Debug for ns_server frequent polling rest calls.
|The password is one of the field in memcached client struct.
|Are you talking about optimization? The logic below is not trying to optimize on that.

But I think there is another problem with bigDoc_map. It can't be keyed by document key either. Because it is not unique for mutation. Will upload another patch.
|Bug here. The connection need to be closed even if the pool is no longer there.
|this map is used to tracked which mutation is sent to do conflict resolution. If there are multiple mutations with the same key in the same batch, only one mutation's serializedRevision will be sent.
|Only if the mutation is sent to do conflict resolution, it has a chance not to replicate, otherwise it will be sent over to target.
|This is only available in 2.5.1, but the actual checkpointing capability is available in 2.5, so there is a gap. We will need to try to make the _pre_replicate capi call, only use this flag to determine how we should handle 404 error.
|expression is not valid utf8 encoded string?
|This is the expansive way of checking the existence of the bucket, you should call rest call default/pools to get the bucket list, which is much cheaper.
|If that is the case, I think the contract of metakv need to be clearer. We don't want to workaround without clear contract. I would rather to file bug on metakv if we see that happen after this fix suggested by them.
|Aliaksey doesn't suggest we need to do exponential back-off. I understand this is different from the error due to timeout which is clear indicator of system is under load. This most likely is to due to merge error.
|Done
|Done
|Done
|Done
|My points is to have all validation logics in one place and have a dedicate method for that. I don't really have a strong opinion on where that logic should be - it can be in adminport or ReplicationSpecService.
|In that case, can validating non-existence be part of that method you planned outside of the replication_spec_service? I agree with you that ReplicationSpecService should be a CRUD service. If so, having justValidate flag passed in AddReplicationSpec doesn't seem to make sense.
|Does the validation logic only valid the non-existence of the replication with the same Id?
Does it also need to valid the existence of the bucket (is there already a bug for this?), the existence of the remote cluster reference?

If so, does it make more sense to have a separate method, say ValidateNewReplication in ReplicationSpecService, and have admin port to call it specifically when the rest call is justValidate call, instead of passing the flag down through the stack?
|Can we use time.Format to format the time?
|Are you able to reproduce what he saw on your environment on UI?
|This can be moved after the check of src_active_passed, dest_active_passed, src_replicat_passed and dest_replica_passed. It only need to do verify_rev_ids when those checks passed. 

It is an optimization which makes failure case fails faster.
|Why is this being put behind ValidateRemoteCluster, while validating the ref with same name doesn't exist is being put behind ValidateRemoteCluster?

And why these two logic can't be added into ValidateRemoteCluster method?

If create remote cluster rest call with justValidate=true, should those two validation be done?
|Would remote cluster have the same issue? Or should we make remote cluster implementation consistent with replication specification?
|If it should never get here, it should panic
If there could get here, the method need to return error, so the caller need to handle the error condition.
|Done
|Rate of mutations received from dcp in terms of n
umber of mutations per second ?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Can the above abstract into one API in remote_cluster_svc?
|doPauseReplicationRequest and doResumeReplicationRequest can be removed once the action logic which reacts to replication settings change is moved to replication manager
|The action part of this logic can be moved to replication manager.
|need to call bucket.Close() at the end to avoid connection leaking.
|need to call bucket.Close() at the end to avoid connection leaking
|need to call bucket.Close() at the end to avoid connection leaking
|We talked about this. I think the plan is to encapsulate the logic of creating remote cluster reference in remote service reference service.
|If deletion of one replication failed, caller should get an error.
|Can this be done in parallel fashion for different vb?
|Can you run go fmt? the import is not ordered as it is supposed to be.
|No exactly the same. Before this, it is not guarantee a fixed size. Because we have timeout behavior, if the update is very sparse, after waiting some time, even the number of mutations are less than the batch size, we will send to have decent replication lag.
|Will look into it.
|You are right. that is a bug. Thanks for catching it.
|I guess we can
|The upper one should be deleted.
|Yes. You are right
|We are checking it on the next line, right?
|No need. I will remove
|It is because we have to shift the record. The record in position one is the most recent. Simple append would not do here.
|Right. Such a stupid mistake.
|we can't, because the len is 100 as it is initialized
|No. I want to set to 60. So checkpointing is exercised by QE tests.
|Open\Close only controls if the data item goes to downstream. We are getting data item from dcp regardless, at least one. Afer that, the natural pushback implemented by DCP would block because their channel size is one. If it is close, the data items are going to be queued in DCPNozzle
|Will do. It is an internal parameter. I don't want to expose it in base.Constant.
|Sure. will safe guarded.
|We should not in such state. It is like an assert. I thought panic is the go way of assert.
|Sure. I am not sure how it gets in
|Right.
|Will let them refer each other
|Sure
|right
|Yes
|expvar register its handler to defaultServerMux. In order for that to work, we can't use our own serverMux
|Yes. I will remove it.
|Put the condition outside of select would make a closed DCPNozzle would not be able to stop.
|Yes.
|Yes. It returns json string. I believe.
|It needs to be synchronous call here, otherwise it creates some racing condition when consecutive Pause and Resume are close together. In those situations we can end up have two pipeline running for one replication.
|This is already checked in. It is in replication_spec.go
|Make sense. should use go-couchbase bucket stats API instead anyway. Will change the relevant unit tests in my next checkin.
|After my checkin, the paused replication errors would be available on expvar.

Do we need to cache statistics as well for paused replication?
|I see. It is not like that now, but we can change it easily
|Can you log the request header in the error message?
|Who is putting that header there?
|Why do we need the followings below? Can we just return true as long as authorization is set, wether authorization is valid, that is not the job of this roundtripper, right?
|You probably see this on golang documentation alreay.

&quot;        // Similarly, RoundTrip should not attempt to handle
        // higher-level protocol details such as redirects,
        // authentication, or cookies.
&quot;
|Why not pass in value instead of pointer?
|OK.
|What about req.body? Does it not need to be copied?
|Please use log. If it is debugging print, please remove it.
|Sorry. Got it
|I see.
|Please switch to logger
|I see.
|Please switch to logger
|Should it be accurate to use strings.HasPrefix(base.KeyPartsDelimiter)?
|Can this logging message change to &quot;Replication %s is created&quot; to be accurate.
|Would this be too aggressive? If only log level is change, it doesn't need to restart the pipeline, right?
|Why only SettingsReplicationPath and DeleteReplicationPrefix are here? while the rest of rest path constant is in msg_utils.go? It would be easier that they are all at the same place?
|ChangesLeft statistics is there already, why we are not integrating it in?
|DocsWritten statistics is there already too.
|What is the behavior of replication errors. Is it that if the replication errored out, replication manager need to remember it before it can heal it?
|Should the comments be &quot;// view default settings and verify it is not changed.&quot;
|Why this cast to float64, then cast to int?
|Why we need cast it to float64, then to int?
|This is not a complete test for GetAllReplications behavior, right? It only verifies a specific replicationId is in the response. It doesn't verify the count of the replication, etc.
|Would this be more concise?
var readOnlyAdmin bool = false
if key == base.RemoteClusterPath + base.UrlDelimiter + base.MethodGet {
     readOnlyAdmin = true
}

   err := authAdminCreds (request, readOnlyAdmin)
if err != nil {
  return nil, err
}
|How about
var isAdmin bool
if readOnly {
     isAdmin, err = creds.IsAdmin()
}else {
     isAdmin, err = creds.IsAdmin()
}

if err != nil {
    return err
}
if !isAdmin {
     return errors.New(&quot;Unauthorized&quot;)
}
|Are they still ignored during json serialization?
|Should it be called as AllReplciationSpecIds? It returns not only replication id which has active=true
|This is what I am thinking
1. StartReplicationManager calls a method call InitReplicationStatus
2. InitReplicationStatus does two things
    - call startReplications to start the replication, which in turn will add an entry for the replication in Replication Status map in pipelinemanager - Currently this method is not called. This is a bug, probably introduced by me in last refactoring to move the logic of start\pause replications to pipeline manager.
    - call updateReplicationStatus for the replication that is not active (or paused)
     With this all replication would have an entry in ReplicationStatus map
3. Rename pipeline_manager.AllActiveReplications() to AllReplications which returns both active or paused replication status.

Would this work?
|I remember Artem make it to call pipeline_manager.AllActiveReplications() to avoid a another round trip to metakv, which could make this timed-out.

Is this a timing issue? meaningly this is called before all active replications are started by replication manager?
|When all the parts stopped by observing the state of pipeline, len(responseToWaitTokens) will be 0, in this case, waitForResponse routine will not be launched, no one will read from supervisor.err_ch. It can block at case supervisor.err_ch &lt;- true: in supervising method above forever, will not be able to stop.
|1 is set to reponseToWaitTokens only when isReadyForHeartBeat() is true.

Looking at abstract_part.go IsReadyForHeartBeat() method
func (p *AbstractPart) IsReadyForHeartBeat () bool {
	return p.state == common.Part_Running
}

when part is not running, this would return false.
|If stop supervisor happens before all parts stopped, it will be able to stop properly. So it is a racing condition, which makes this issue intermittent.
|Should it be StatsUpdate instead? You mean stats update  here, right?
|If error is nil, is returning nil as response correct?
|If error is nil, is returning nil as response correct?
|If it could happen, please remove the comment
|If it should never happen, it means a panic situation, things are seriously wrong and there is no point to proceed further to make debugging more difficult. Using panic seems to be a sensible thing to do here.
|Would it be easier to tell if it is a integer by _, ok = keyValue.Value.(*expvar.Int)?
|OK.
|We should keep the discription of meta_latency_aggr and meta_latency_wt.
|This would also apply. It should be kept
|The stats below are aggregated stats from all cluster nodes on this replication spec.
|Why do we change &quot;doc checks rate&quot; to third row from second row? We should keep the UI as long as it is possible.
|wtavg_docs_latency is removed above, should this be removed as well?
|Any new stats added here, we need to make sure there is a corresponding aggregation logic for it.
|This might not be true. I think ns_server process it based on the time interval user picked. It is 1 minute or 1 hour.
|You forgot to add the description back?
|There is construction time bootstrap problem if I put this in DcpNozzle constructor.
DcpNozzle -&gt;CheckpointManager -&gt;Pipeline -&gt;DcpNozzle
|Good catch. Will change.
|Do we need use a channel to do this? Is it simpler to do stats_mgr.updateStatsOnce before for loop?
|I thought the intention is to have the stats updated immediately after SatisticsManager starts. Are you guarding against the case that StatisticsManager starts and at the same time it was asked to stop? Even in this case, would update stats not OK?
|OK. It doesn't matter.
|Good point. Will change
|Launch will take care of that. Launch will launch a repairer. Repairer will do the right thing according to the replication spec. 

Maybe Launch is not a good name? Would Update or Manage better?
|If we put a hard limit, then we have to queue the request or consumer has to deal with waiting for a connection. The connections in our case are generally long-living connection. The consumer would have to wait for very long.

The pool is beneficial mainly when we repairing the pipeline. The connections can be reused.
|OK. Will do.
|Yes. This ns_ssl_proxy's handshake. Yeah. that is a possibility.
|Right. Will do.
|erlang xdcr doesn't . I can add the readDeadline and see.
|By ns_ssl_proxy's handshake. It only works for SSL, not non-SSL connection. ns_ssl_server requires this. In SSL, it proxies the request. for non-SSL, it directly goes to memcached.
|Yes. Will track it with a ticket.
|I made the change myself. I will submit it for review to ns_server team. It is a simple change.
|Rebase issue? I will add it back.
|Done
|Done
|ReplicationManager extend from GenericSupervisor, which has Stop method.
|How about just returning error?
|Right.
|Will revert the change
|Should the above in a function and use defer statement to unlock the lock
|parameter name is changed by capi impl check in to &quot;opaque_bigDoc_map&quot;, but the function body is still referring opaque_key_map.
|No. If stream is closed by go-couchbase UPR, error would be thrown. the part is broken. If stream is closed by DcpNozzle, which means pipeline is stopped.

This structure is just to track the result of dcp requeststream, since no error would return right away.
|The issue with previous logic is when pipeline just started, the current ckpt record (which is a member of CheckpointManager)'s remote VBUUID is not set, the remote_vb_status.VBUUID comes from the checkpoint record, which is not reflected in the current ckpt record structure which CheckpointManager is keeping, so it should be set regardless, not conditionally. 

Not having set VBUUID, cause _commit_for_checkpoint failed later on.
|Should the file name be changed to tcp_connection_pool, not capi_connection_pool?
|This needs to be based on target system's version. If the version is older than 2.2 (?), then it is Capi. 

if RepType is unspecified, we need to treat it  based on system version
|corner case - vbno doesn't exist in vbCouchApiBaseMap?
|So this code makes assumption on the caller will behave well, right?
|The two functions look exactly the same. Should we just have one - maybe call it constructCommonSettingsForTargetNozzle ?
|There are quite a bit of parsing logic that is specific CAPI, can those functions move to a separate file capi_utils.go?
|There is a same call on getServerCouchApiBaseMap outside the branch, why call it twice?
|This is equivilent to go-couchbase Bucket.Nodes() api. Is this code when you try to isolate the &quot;No free connection&quot; error?
|unlike xmem, you have a batch map, the entries in the map doesn't be serialized. Would using a single ch to coordinate too strict?
|Should capi also implement observe and die pattern here? to check on part's state and kill itself accordingly
|No. I mean pipeline.Stop doesn't wait for all parts to stop before it returns now, which leave the parts's child go routine to observe its own state and commit the suicide. Some of capi's go routine already calls ValidateRunningState().This one doesn't.
|Not any error - only the clear indication that it is a net error. In that case, you should treat the current updateDoc attempt failed and resend.
|Would you be able to detect the malform? If so, you can discard the connection and grab a new one then. Just like &quot;bad magic&quot; error in xmem
|OK.
|Would this actually child go routine hang around for ever in the following situation?
1. this routine close fin_ch to signal exit
2. while two child routines are trying to report errors around the same time.
3. one of them would write to err_ch, the other would block, since this routine exits, no body would consume the error. That child routine would hang there.
|Seems that no one is calling this method? Is it used?
|Who is closeing the all the connections in TCPConnPoolMgr
|Is the code of closing TCPConnPoolMgr in ReplicationManager? I didn't see it there. Yes. xmem's connection pool is closed in ReplicationManager when goxdcr exit gracefully.
|Aha. I see. Good catch
|What is the difference except for the variable naming part?
|Is it possible that RemoteClsuterByRefName returns nil, nil ? It seems very odd. Shouldn't it be handled in RemoteClusterService itself?
|If so, I am not sure that other usages on this API handles that. Often times, we check err, then starts to reference the returned remoteClusterRef.
|I see.
|OK. I see.
|Right. Will fix
|It is an error that would cause pipeline error out.
|Will do
|Error condition need to be check as well.
|Should we check both nil and len?
|The same suggestion I have for ui log as I have for auditing. Can we be more consistent on where this code is plugged in?
|Can you put this logic into a separate function? So the main flow can be cleaner, easy to read and understand.
|Should it be called CreateRemoteClusterRefEventId to be precise?
|Should it be called RemoteClusterRefEvent to be precise?
|remote cluster reference creation?
|changedSettingsMap is passed in, right? why you are initialize it here?
|It is not very consistent in terms of where Audit is done? Some of them are done in adminport, some of them are done in replication manager.

Can we make audit the task of the metadata service - like ReplicationSpecSvc, ReplicationSettingSvc, etc? It seems to make sense to have it there as they are the ones which perform CRUD operations.
|Don't quite agree. If you think CRUD operation service as the top-most level apis that consumer should worry about, auditing can be viewed as part of the CRUD operation. In implementation, it can delegate to other code to do the auditing if the auditing svc is passed in when ReplicationSpecificationSvc was initialized. It actually can hide it from consumer like adminport.
|realUserId can be a parameter to call ReplicationSpecSvc, ReplicationSettingSvc. It might actually make sense, it mean who is making this change. 

If adminport is the place, then we need to do it all in adminport. It makes easy for maintaining the code.
|&quot;adminport&quot; here you mean our adminport or couchbase server console port?
|yes.
|Do you actually mean memcached address here?
|OK
|This is probably not reliable? as you could have multiple audit message about create replication concurrently.
|If you read memcached protocol, it said the response of a certain request would have the same Opaque. Opaque is the for that purpose. As long as your concurrent requests can have different opaque, you can correlate the request and response.
|But remember you are going to lock the adminport, as this called via admin port. which means you will not server concurrent rest request.If you want it to be AuditSvc to be a pure API, you probably need to make new memcached client everytime you make audit call, then drop it once you are done. That way the concurrent Audit request will use different tcp connections, which guarantees no mixed-up.
|getHostInfo doesn't seem to be the right name for this method. Should it be getNodesInfo
|KVPort is not the terminology that people here understand. You actually mean MemcachedPort.
|You are right. Will change
|You are right
|Right. Will upload another patch set.
|Found out that there is no need to do select bucket because we are using bucketName, bucketPassword to authenticate.

SelectBucket should be used if the connection is authenticated with memcached username\password. It is a way not to have bucket password.
|&quot;default&quot; doesn't make sense here.
|You are right. I will move one. Will upload another patchset
|constant for Part state
|Building a router per sourceNozzle. And this router only need to connect to the XmemNozzle which is responsible for the vb number that this DcpNozzle is responsible.
|key is the nozzle id, the value is the list of vbs this DcpNozzle is responsible for.
|No need to construct source nozzle for the vbs that is not on this node. filterVBList is for that purpose
|But our start logic is sequential. start part 1, then start part2. If part 1 start fails, part2's state is still in initial.

	//start all the processing steps of the Pipeline
	//start the incoming nozzle which would start the downstream steps
	//subsequently
	for _, source := range genericPipeline.sources {
		err = genericPipeline.startPart(source, settings, ts)
		if err != nil {
			return err
		}
		genericPipeline.logger.Infof(&quot;Incoming nozzle %s is started&quot;, source.Id())
	}
|In the case of the pipeline is newly constructed. And it errored out when trying to start the first part. Then the repairer came try to stop it. Pipeline would blindly call stop on all parts. It is a scenario of dead-before-born.
|Only those are data related to dcpevent. The other are operational. Maybe in the future, we can think of some good way to separate it out .
|move the filter logic from router to here, so that it only raiseEvent for the mutations that would actually be put in the pipeline.
|Diagnostic message. Now it will print out everytime statistics are logged into the log.
|It can't call batchSetMetaWithRetry second time, as all the data for the batch is already dequeued.
|You can't. If there is no data in datachan any more, then there is no interest to do flowcontrol. Alway having evitSlot to send data to channel could block evitSlot unnecessarily.
|There is a racing condition discovered during my testing. When setting buf.notifych race with evitSlot function which send bool to notifych if there is one when the buffer is below threshold. When that happens, we will have an empty buffer, but flowcontrol would still block. So the lock is used for this
|wrap memecached client in this struct, so that we can track the connection healthy status and repair it when needed.
|This is no need. Leftover from my attempt. Will remove it and upload a new patchset.
|this is stuck detection logic. When network connection is no longer healthy, xmem might get stuck, waiting for response to come back in order to allow next batch for a long time.
|Will change.
|This just indicate this connection is bad, so it should not return to the pool. But there is no evidence that the entire pool is bad.
|You are right. That is not intended. I will fix it and upload a new patchset.
|we used to call handleGeneralError which would report pipeline is broken, The pipeline is reconstructed, but since the connection is returned to the pool, there is a chance that the new pipeline would again get the bad connection from the pool.
|That is possible. I will leave the refactoring to later checkin.
|OK. Will change back
|When status_code == 400, err maybe nil.
|No. It is not a bug. It is our assumption is wrong. I will explain the details to you.
|400 returns when err == nil
|That is in else clause. err get from cap_svc.send_post is returned.
|Do you still want to the checkpoint interval to be small so that for single node cluster, you can test checkpointing feature?

Is there a way for each test run to overwrite this specifically
|http://golang.org/doc/faq#pass_by_value

Slice behave like pointer.
|No resend. That consider the whole batch failed. Then everything would be replicated optimistically.
|There is already a method called getStatisticsForPipeline
|I see.
|Should this function accept expvarMap as input? The above code are already get the expvarMap anyway
|Is this still an open issue? Are we tracking it somewhere already?
|can you run gofmt ? It is part of the go standard. You can do shift+command+F in eclipse. Very easy.
|Should it use ref.Revision instead? Revision is to mark the base version that your update is based on. And your base version should be the one you use to construct RemoteClusterReference.
|My understanding of the behavior for any update operation is
1. caller query the metadata, get the value along with the current rev id
2. make a modification on the value, then call set.

Why does it not have the rev id?
|Should it use ref.Revision instead?
|This semantics is weird. Why should we decide for the caller? Shouldn't it be good to return error and let user to re-query and decide what to do?
|Why err is not checked? Here you assume that implementation of metadata_svc always returns empty or nil bytes array in case of err? Is it safe to assume that?
|Sure. I see &quot;Replicating&quot; on the UI though. Where do you see the status literal, in erlang code?
|Not true. It will raise the error event, which would report to supervisor that the part is broken. Supervisor reports that to replication manager that pipeline is broken. Replication manager would launch a repairer to repair it. Part of the repair process is to stop the broken pipeline, which would in turn to call dcp.Stop. 

The point is this is an error case, so we need to treat it as an error case.
|Done
|You are right. 
It keeps the most recent error that leads the pipeline to broken state in repairer.current_error file. But It will not keep the old errors from previous breakage in the case of the pipeline is errored out, then fixed, then errored out again, Will fix it.
|erlang xdcr seems to keep retrying without limit. This is to match that behavior
|It is actually debugging information for us to figure out why a certain part's stop procedure takes so long. I will change it to debugf.
|Done
|Is the if statement redundant? rev = kve.Rev should cover this case already.
|In the case of delete, how should we find out? Is this function would call &quot;callback&quot; with data = nil or something?
|It works. 

I assume this method would notify the callback in the order of the mutations. It will not be out of order. Is that right?

Can this function be called multiple time with the same dirpath, but different callback and different cancel channel? or this function guarantees there should be only one callback per dirpath?
|OK. So each callback would have its own loops. So when it close its own cancel channel, it would not affect other loops.
|Do we know what this parameter signifies? it seems to have something to do with Rest API
|Are we using HttpConnection parameter anywhere?
|I see.
|Are we not adding Filter expression into the doc anymore?
|this rest path doesn't get to be exposed to admin, right?
|Would this also return an error? Do we need to check for error?
|Are we always ignore the error? I see doChangeReplicationSettingsRequest actually return the error from forwardReplicationRequest to the caller? It is probably better to be consistent.
|The return parameters are getting very long now. Does it make sense to return a structure instead?
|Why can't this be done in the loop below?
|this comments is off.
|debug logging?
|Hmm... Would this contract be easy for the caller? i.e. for example, would caller has to check the case if both errormap and error both are not nil and treat it as an assertion or something?

I am wondering if it would be easier for validation error just return error as &quot;Parameters Validation Failed&quot;, then, user would get detail error message for that.
|When the validation error happens, does that also mean the calling of this method failed? And the error need to be passed to the user?

I guess I am confused about the contract between this method and the caller. In my mind, I would think caller would check if error is nil to determine if the calling of this method succeeded or not. If the error is not nil, then it will try to get any detailed error message in errorMap if there is any. Is that not true?
|So it is considered error either errorMap's length is not nil or error is not nil? Is it a bit confusing?
|How is this being used?
|Aren't the above two lines identical to two line in green?
|Why there is no logger context passed in?
|Can code above use Util.QueryRestAPI?
|Do we no longer need this test any more?
|You are right. Made the change, uploaded patchset 2. Please review
|Does that mean there will be pipeline running but its replication specification is gone? I thought that is not a consistent.
|We don't. I can remove it with my next checkin.

The two methods will be gone soon
|Can you comment it out first?
|It may be better in a different class all together. For example MetadataMigrator
|OK
|Do we still need to maintain the build script? Everybody should use make instead?
|Are those part of ns_server integration? If so, are they tracked as tasks?
|Are those service still mock? If they are not, we should consider changing the names
|Why does it need to move to replication_manager namespace?
|Is it technically possible to monitor the http server?
|What does this need to move to replication_manager namespace?
|So it is not main to supervising adminport and replication supervisor? What is the reason for not doing it in main?
|One nice property of the old setup is Replication Manager doesn't depends on or aware of how the packaging is being done. It doesn't aware of how and what is talking to the outside world. Admin port is the gateway or face for Replication Manager. It knows Replication Manager. But Replication Manager doesn't know it. Decouple. Main is the controller, which control and monitor the two component's liveness.

With old setup, each's role are clear and separated. With the new one, it seems all interweaved together.
|Can we use a better name? This name is kind of misleading. I understand err_ch is for flow control - don't send another heartbeat until the previous one is received or timed out, right?
|Does this need to a slice? Since you are doing the flow control - don't send another heartbeat until the previous one is received or timed out. There would always only one response waiter at any time, right?
|Got it.
|Don't we need to wait for supervising go routine are done? Why this line is commented out?
|I see. Sorry for not remembering my own doing.

Please enable it and test if there is an issue
|Are we considering the child is broken if it misses one heartbeat? or should we more tolerant.
|Sure.
|It is better for event_chan not to buffer WrappedMCRequest. It can get the information it might need from WrappedMCRequest (like seqno, etc), then buffer that in this queue. This part will be called synchronously, but since it is very light, it should not be an issue. The heavy processing and calculating part will be async. In that case, we should not need to do ref-counting on the WrappedMCRequest. It can be recycled soon after the event is raised.
|Let's rename this as start_internal.
|use atomic to avoid racing.
|avoid calling MCResponse.Error()
|Should this also return a clone of the remote cluster reference in cache, like what ReplciaitonSpecService.ReplicationSpec() does?
|Should this method assume the specific consumer usage?
|Is the original way to get current value in the cache is more straightfoward? oldRef, err := service.getCacheVal(ref)?
|Is SetMetadataChangeHandler a better name?
|In refresh, the code is calling clone before calling updateRemoteClusterRef. That can be avoided by simply add clone here in RemoteClusterByRefId, right? The code doesn't look symmetric between ReplicationSpecService and RemoteClusterService.
It is an implementation choice wether or not to push that down to cache. Cache is not exposed outside the package. It is not hard to make the query method of both metadata service to return a copy even without having it pushed down to cache.
It is ok for now not to return a copy for derived object for now.
|If dcp items stopped coming because of dcp is stuck, then there is no need to know DCP_DATACH_LEN, isn't it?
|Right. If dcp is stuck, knowing dcp_datach_len is meaningless, right? With this stats, what we can get is if dcp_data_ch is filled up or not when we can get the mutation from it. If we can't get the mutation, which already means dcp_datach_len is 0, isn't it? so if there is no mutation, it already says dcp_datach_len is 0.
|test code?
|Can you use atomic.AddUint32 instead? That way we don't need to maintain lock.
|This is not very useful and it is quite heavy. For every item we collect stats twice. If this tries to guard against the case that xmem queue is full and dcp is backed off. It is better to check xmem's queue stats instead. Or we check replication rate to be zero.
|Can we compare docs_received_from_dcp and total_docs instead? We might not need to know exactly if it is dcp stucks or it is an issue with DcpNozzle. Because our action to restart the pipeline is no difference for both.
|sent_time should not be set when calling reserveSlot
|Does this need to ptr?
|if GOXDCR_GOMAXPROCS environment variable doesn't present or has a non-numeric value, then strconv.Atoi(max_procs_str) would return err. In that case, the default logic should kick in, right?
|When GOMAXPROCS are set via environment variable, we assume user known what they are doing. Plus if the GOMAXPROCS are set to a number higer than NumCPU(), your number of concurrent thread is still bounded to NumCPU(), so practically it is equal to setting it to NumCPU().
|Our current implementation before this change is to limit GOMAXPROCS to  be 4 at maximum. This fix is preserving that behavior when GOXDCR_GOMAXPROCS environment variable is not present.
|Yes, golang's runtime behavior, it will be the same. But since we are setting the default for the user, we would like to choose the value that is making sense to the system.

When setting it via environment variable (it is a hidden way, not going to be a documented way), we assume that the user is an expert user and he\she knows the system and knows what he\she is doing. So we don't double check if the value is making sense.
|Can you add a comment there for code readability.
|Instead of dealing with the difference here. Is it better for CAPI nozzle to change the req Opcode to DELETE_WITH_META and SET_WITH_META?
|Spec can be nil when the spec is deleted, but rep_status is still kept around for updater to be able to get hold of it to stop the pipeline properly.
|When spec is nil, rep_status.SettingsMap() will return an empty map.
|Why return int64 instead of uint64? docsProcessed can't be negative, right?
|The active pipeline should have the same behavior - remove the checkpoint docs that are no longer belong to this pipeline. Can you also add this logic in CheckpointManager.SetVBTimestamps

	listOfVbs := ckmgr.getMyVBs()

	ckmgr.logger.Infof(&quot;Getting checkpoint for %v\n&quot;, topic)
	ckptDocs, err := ckmgr.checkpoints_svc.CheckpointsDocs(topic)
	ckmgr.logger.Infof(&quot;Done getting checkpoint for %v\n&quot;, topic)
	if err != nil {
		otherInfo := utils.WrapError(err)
		ckmgr.RaiseEvent(common.ErrorEncountered, nil, ckmgr, nil, otherInfo)
		return err
	}
 
        //Remove inrelevant checkpoint docs
        ....
|Are you able to reproduce the issue now? As far as I know memcached client is stateless, if the connection has no problem, it should return what server is supposed to return. Can you please explain why this contributes to the issue?
|Understood. Do you have any theory that would lead to the issue? In other word, how do we know this would fix the issue?
|Is this debugging statement
|Good point. Will make it panic
|Yes. Will make it panic
|Right
|It is a place holder. Its actual content is of the format of wrapper. It is following the example of https://golang.org/src/sync/atomic/value.go. Except in our case, we don't need to check on type because value is not for generic use.
|I thought after our discussion in the meeting with Anil and Aruna, the decision is to rename &quot;errors&quot; on &quot;XDCR&quot; table as &quot;events&quot;, and we logged all major replication event there, including paused, resumed, error recovered, etc. Is that not the case?
|Why move this logic out of to updater? Aren't replication's major events are all tied to pipeline's state change?
|Do we only log the error recovery event? how about pipeline restarted because of other setting change?
|Should the above formatting logic in base.ErrorInfo instead?
|should not return. It should retry.
|It depends on how you use histogram. If we just use histogram as a way to do sampling. and get the average. And we can clear it for every processRawStats call. Whichever way is easier.
|I see. I thought it is Histogram. Should it be Histogram?
|Would you mind to explain what is the cause of the bug?

The original log seems to use mean from each part as the part of the sample of overview. It does not sound very wrong.
|I see. It is not the same, but it is an approximation. Do we need to be exact?
|It makes the logic in one place. I don't have a preference on style. My concern is to have logic in one place. And we don't have to piece information together. The following logic is a state machine, right? state machine iterates through the valid state from its current state.
|Would adding the following in case common.Part_Running and common.Part_Starting and common.Part_Error do?
if state == common.Part_Starting {
   return PartAlreadyStartedError
}
|Should this be in switch statement for case common.Part_Starting
|In generic_pipeline.startPart(), we can have the following logic
if part.State() != common.Part_Initial {
return
}

But we don't change part's state here, still let the part maintain its own state.
|But each part has SetState(common.Part_Starting) call at the very begining, which is going to make the operation serial. The issue is the error returned from SetState(common.Part_Starting) is not properly handled. If we fix that, it should work.
|The reason that SetState is not exposed as public method is state is internal to part, only part can change its own state, it should not be changed by outside directly.
|Would it be easier to just fix this here like?
err ;= xmem.SetState(common.Part_Starting)
if err != nil {
     //if xmem's state is already starting or running, return nil
     if xmem.State() == common.Part_Starting &#124;&#124; xmem.State() == common.Part_Running {
      return nil
      }
}

Then we don't need to do SetState(common.Part_Starting) in generic_pipeline.go
|It should retry
|This method is called IsSeriousNetError, which is supposed to categorize net errors. I don't quite see the need to have another method to sub-categorize the errors.
|This is the line where panic happened. The stacks shows growmap, the similar issue we saw in through_seqno_tracking_svc.
|getCurrentCkpt returns *metadata.CheckpointRecord, not *checkpointRecordWithLock
|The same response as above
|Or have another method in pipeline_manager to return map[*ReplicationSpecification]*ReplicationStatus and use that for the snapshot instead of ReplicationStatusMap.
|How about error handling? if metadata_change_callback returns error, it used to log it, now it does nothing.
|If it is concerning the correctness, we should do the right thing. I think we should make it refresh=true.
|How does it help to find out why repl_status is nil?
|Hmm... That sounds a bit risky to me. Does that mean the real bug could manifest itself somewhere else?

Why not to add some logging in AllReplications to help finding out what cause it?
|&gt;&gt;If a replication is deleted and removed from cache between time 1 and 2, the repl_status would be nil, which is expected and ok.
replication status would be nil only when the pipeline is stopped.

If so, should AllReplication handle that situation if replication_status is nil, don't include it in the map
|But with this, it is going to hide the real issue, right?
|This can't guarantee there won't be two pipeline running concurrently for one replication.
|We can. because it is synchronous call. It has to wait for it to return.
|It should return err, isn't it instead? But it needs to differentiate timeout error from true errors.
|It is a timing thing, you might reduce the chance. But you can't guarantee it if you take it out.
|Take it out would break MB-15688.
|What about supervisor, what about checkpoint manager? If supervisor doesn't stop, it might still report error to replication manager about the pipeline. If checkpoint manager doesn't stop, it will produce checkpoints which are not true checkpoints of the current replication spec with the same name.
|Would it be easier to return a defined Error struct instead?
|You are right! Good eye. Will upload another patch.
|This is the code of Hijack()

func (c *Client) Hijack() io.ReadWriteCloser {
	c.healthy = false
	return c.conn
}

It is basically a getter
|It has things to do with shutdown sequence. batchReady method has recover call which is going to catch it and raise an error if part is still running, in this case, since part is no longer running, it is not going to report the error. It was implemented like this  before. The only change is to variable name.
|If ready_queue is closed, then xmem is no longer in running state, the following statement which checks xmem state is going to take care of it.
|That is part of the fix. That fix alone doesn't help. The other part is to use channel as the lock instead of Mutex, so that it can walk away when the lock is not available, which itself indicate producer is ready to put stuff in the ready_queue. It will give consumer (processBatch) chance to consume it.
|Yes.
|This might be too verbose. cacheRef are called by many callers.
|It should only iterate through the streams that has openStream requests sent but not confirmed yet.
|batch first moves to bathes_queue waiting for getMeta to be run for big doc. Once getMeta is complete, it moves batches_ready queue to be sent to destination
|guard against concurrent use of client_for_getMeta.
|record the last ten batch size for diagnostic purpose.
|In the case of erroring out in sending getMeta request, the method will return before receiver go-routine is done. The subsequent batchGetMeta call need to wait for receiver go-routine is done with the connection.
|The merge left this change out when the code was moved from /service_impl to /metadata_sv.
|Before sherlock, we only have kv node, right? so it should return true.
|Will remove
|Will do.
|1.Only trigger onSetMetaConnRepaired when the connection is actually repaired.
2. make onSetMetaConnRepaired call async, so multiple modSlot can't on the same stack to avoid the deadlock.
|the timeout ticker would not work as the call would be blocked at readFromClient.
|This was there. I just moved it down.

This was added in https://github.com/couchbase/goxdcr/commit/ed5ae9ce18ebfb1655ca1f079a083945a5eda1f0 by me to address the bottle neck of NewTicker() shown up on the profile. To recap that fix, because we only create ticker once, so it is possible that when GetMeta is started, it is in the middle of a tick, so we wait for one more tick. The timeout duration is not fixed, but a range between 1 sec and 2 sec.
|You are right. Let me take a look.
|Wrong place to call stop
|batchGetMeta is not a go-routine, it is called by processData_batch, so there will be no way for batchGetMeta to set the ticker again. Calling stop is just to be a good citizen to cleanup the resources used by ticker.
|If processData_batch exists, there is no need for getMeta_ticker to be running anymore, Stop it.
|Reduce convT2E from 4 times to 1 time.
Also avoid mapassign1 call.
|Directly set the number instead of map
|dcp.uprFeed would be set to nil during stop. So we need to make sure that setting dcp.uprFeed = nil and this block of action can only have one happen. It can't be concurrent, otherwise we might have panic here.

Good point on defer, will move it to another method and use defer.
|We will see if we need to do that from the profile.
|launch clean up routine which wait for children go-routine and do necessary cleanup
|set size, to avoid the overhead of slice grow
|No need to wrap error any more
|It probably make sense to log out details when ThroughSeqnoTrackerSvc sense an issue like still receive events, but through seqno doesn't move for a number of events.

Here we can just log if ThroughSeqnoTrackerSvc is healthy, it is not health, then details.
|keep the read timeout to be small, so when the replication need to be stopped, receiveResponse go-routine can suicide quickly, not blocked by readFromClient call.
|I am not sure what part of the code you are referring. batchGetMeta receiver has a for loop and it will keep calling readFromClient. A single read timeout doesn't cause it to report error.

				response, err, rev := xmem.readFromClient(xmem.client_for_getMeta)
				if err != nil {
					if err == PartStoppedError {
						return
					} else if err == badConnectionError &#124;&#124; err == connectionTimeoutReachLimitError &#124;&#124; err == connectionClosedError &#124;&#124; err == fatalError {
						xmem.repairConn(xmem.client_for_getMeta, err.Error(), rev)
						return
					}
					err_list = append(err_list, err)

				} else {
|batchGetMeta is using client_for_getMeta which is another XmemClient, and a separate connection. 

The same mechanism to detect the connection problem as it is just another XmemClient.
|XmemClient keeps default_max_read_wontime, which by default is 60 second, which guard against the pre-mature errors. When read report failure, it set downtime_start, and successful read unset downtime_start when downtime_start reaches max_read_downtime, then it will suggest maybe connection is bad. So if we expect to receive response, but didn't receive any for 1 minute (many read attemps), we suspect connection might be bad.
|limit the total memory of the xmem's data queue to 10M
|initialize downtime_start to time Zero
|Both read success or write success suggests the connection is fine. so all the measurement we keep to help us guess network condition should be reset to zero.
|will do
|1. func (p *connPool) Get() (*mcc.Client, error)  should returns the cas of the pool as well. It indicate this connection is from the pool of a certain state. 
2.XmemNozzle need to have two more member variables: client_for_setMeta_cas and client_for_getMeta_cas. Those are set when client_for_setMeta and client_for_getMeta is set.
3. (xmem *XmemNozzle) releasePool() should take cas as a parameter.
|If I understand it correctly, the goal here is to avoid release connection pool multiple times on errors raised around the same time. Can introduce CAS to the connection pool? The release request on the connection pool with an older CAS would be no-op or return an error. Would that be a simpler and more consistent approach?
|For that, would a RWLock do? getConnections would require RLock, release connection require Lock. What is the purpose of isReleasingConn?
|Why is so? Why does it to wait for releasing to complete?
|Do we need this signature change? I see all the implementation of this method return nil.
|It is a notification of an event happened. If it returns error, does it mean it fails to notify? And how the caller should handle it?
|If ProcessEvent returns error for one handler, should it continue to call the other handlers or it should just skip?
|It is possible that parts is an empty array. The code doesn't seem to guard against that.
|Is this right? last_seqno has to be remembered from last checkpointing.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(3 comments)
|Patch Set 4: Code-Review+2

Looks good to me.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Looks good to me.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Looks good.
|Patch Set 2:

(2 comments)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 3:

(3 comments)
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

(3 comments)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1 Code-Review+2
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Verified+1 Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 8: Code-Review+2

Looks good to me.
|Patch Set 4:

(2 comments)
|Patch Set 4:

(2 comments)
|Patch Set 4:

(2 comments)
|Patch Set 9:

(2 comments)

In your local testing, have you observe performance degradation?
|Patch Set 9:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 11: Code-Review+2

Looks good to me.
|Patch Set 3: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 10:

(2 comments)
|Patch Set 11: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Commit message was updated.
|Patch Set 10:

(6 comments)
|Uploaded patch set 11.
|Uploaded patch set 12: Commit message was updated.
|Patch Set 12: Verified+1
|Patch Set 12: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2

(1 comment)

One minor comment, approved.
|Patch Set 1: Code-Review+2

Looks good.
|Patch Set 2: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2

Looks good to me. Trond, thanks for helping out.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2

Looks good.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Upload another patch to incorporate review comments.
|Patch Set 4: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 6:

Yes. I think so. I will add the timeout for that with my next checkin on Monday. I am thinking of using Dialer instead maybe simpler and more generic.
|Patch Set 6:

Yu,

One question? why use net.DialTCP, not net.Dial? Either DialTimeout or Dialer would not be able to cover this?

func NewTCPConn(hostName string) (conn *net.TCPConn, err error) {
	// connect to host
	hostAddr, err := net.ResolveTCPAddr(NetTCP, hostName)
	if err != nil {
		return nil, err
	}
	return net.DialTCP(NetTCP, nil, hostAddr)
}
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2

Looks good.
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2

Looks good.
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+2

(2 comments)

Approved with two minor comments.
|Patch Set 2:

(3 comments)
|Patch Set 4:

(6 comments)

Would pipeline interface also need to have method UpdateSettings()?
In UpdateSettings method, it calls genericPipeline.partSetting_constructor to construct the settings for each part according to the new settings, then calling UpdateSettings method on each part.
|Patch Set 8:

(6 comments)
|Patch Set 11:

(2 comments)
|Patch Set 11:

(1 comment)
|Patch Set 11: Code-Review+2
|Patch Set 2: Code-Review+2

Looks good to me. Thanks.
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(3 comments)

After the change, no longer seeing &quot;Xmem is stuck&quot; error  and the pattern of continuous connection repair any more when running dev sanity.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Commit message was updated.
|Patch Set 5:

(5 comments)
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11:

(1 comment)
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2

Looks good and verified.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2

Looks good to me. Approved.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2:

(3 comments)
|Patch Set 3: Code-Review+2

Looks good.
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 2:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)

In erlang XDCR, it is a seperate process (xdcr_opaque_checker.erl) every 60 seconds as well, it is not part of the check pointing either.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2

Looks good. Thank you.
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(2 comments)
|Patch Set 3:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 6: Code-Review+2

Looks good.
|Patch Set 3:

(2 comments)
|Patch Set 4: Code-Review+2

Looks good.
|Patch Set 1:

(3 comments)
|Patch Set 2: Code-Review+2

Looks good.
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 2:

(3 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

Looks good, rebased.
|Patch Set 6: Code-Review+2
|Patch Set 6: Verified+1
|Patch Set 3:

(5 comments)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 8:

(2 comments)
|Patch Set 9:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 11:

(2 comments)
|Patch Set 12: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(1 comment)
|Uploaded patch set 8.
|Patch Set 7:

(3 comments)

Uploaded another patch to incorporate review comments.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Code-Review+2
|Patch Set 9: Verified+1
|Patch Set 5:

(1 comment)
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Commit message was updated.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12:

(6 comments)
|Uploaded patch set 13.
|Patch Set 12:

(3 comments)
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 6:

(3 comments)
|Patch Set 6:

(3 comments)
|Patch Set 9:

(3 comments)
|Patch Set 12:

(3 comments)
|Patch Set 12:

(2 comments)
|Patch Set 13: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11:

(2 comments)
|Uploaded patch set 12.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Patch Set 2:

(3 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4: Commit message was updated.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(2 comments)
|Patch Set 6: Verified+1
|Patch Set 2: Code-Review+2

Looks good. Approve.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2

Looks good, Approved.
|Patch Set 1: Verified+1

I pulled your change and tested locally. It works.

Yu also tested goxdcr change on his environment. It works for him as well.

Please make sure that you have done repo sync.
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13: Commit message was updated.
|Uploaded patch set 14.
|Patch Set 13:

(5 comments)
|Patch Set 13:

(1 comment)
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Patch Set 15: Verified+1 Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Looks good. Approved.
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Looks good. Approve.
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+2

Looks good. Approved.
|Patch Set 2:

(1 comment)

Looks good. One minor optimization can be done.

Thanks,
-Xiaomei
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 6: Code-Review+2

Looks good.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

Look good
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 8:

(7 comments)
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 17.
|Patch Set 17: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2

(7 comments)

Yu,

I have a few comments on this checkin. If it doesn't break anything, please go ahead check them in, and refactor according to what we discussed later.

Thanks,
-Xiaomei
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2

Looks good
|Patch Set 2:

(2 comments)
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Abandoned
|Restored
|Abandoned
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(6 comments)
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated
|Patch Set 5:

(16 comments)
|Uploaded patch set 6.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(6 comments)
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2

Looks good to me.
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(6 comments)

1. There is one place you missed:
func (stats_mgr *StatisticsManager) initConnection() error {
	for serverAddr, _ := range stats_mgr.active_vbs {
		conn, err := base.NewConn(serverAddr, stats_mgr.bucket_name, stats_mgr.bucket_password)
		if err != nil {
			return err
		}
		stats_mgr.kv_mem_clients[serverAddr] = conn
	}

	return nil
}

It need to use memcached credential from cbauth. This is a memcached  client on source bucket.
|Patch Set 1:

(4 comments)
|Patch Set 1: Code-Review+2

(1 comment)

Looks good. Have one minor comment.
|Patch Set 1: Code-Review+2

Looks good.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(8 comments)
|Patch Set 2: Code-Review+2

(2 comments)

Looks good. Please run acceptance test before you merge.

Thanks,
-Xiaomei
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2

(1 comment)

Approved with one minor comment.
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2

Looks good to me.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 7: Code-Review+2

(1 comment)

Looks good. Only have minor comment.

Thanks,
-Xiaomei
|Patch Set 8: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Uploaded patch set 6: Commit message was updated.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 5: Code-Review+2

Looks good.

Thanks,
-Xiaomei
|Patch Set 5:

(3 comments)
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2

Looks good.

Thanks,
-Xiaomei
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2

Looks good.
|Patch Set 3: Code-Review+2

Looks good. Please run sanity and checkin.

Thanks,
-Xiaomei
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

(6 comments)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 1: Code-Review+2

Looks good to me.

Thanks,
-Xiaomei
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 6: Commit message was updated
|Patch Set 6: Verified+1 Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1:

Artem,

Thanks for the change. This is inline with what we are thinking to address MB-13575	
Rest request for setting pauseRequested=true timed out. I think we will incorporate your changes in to the fix and regression test in our internal branch first before merging to master.

Are you blocked by this?

Thanks,
-Xiaomei
|Patch Set 1: Code-Review-1

Artem,

To avoid merge conflict, please have Yu to merge it to internal instead.

Thanks,
Xiaomei
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2

Looks good to me.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

Aliaksey,

I know we havenâ€™t decided\agreed on wether or not to keep the proxy path in goxdcr. Meanwhile, we would like to check in the current implementation using ssl proxy, so QE can test it at least as a backup plan. We need this one-line change in ns_server to make it work. If we decide to abandon this route, it can be easily reverted. Is that OK?

Thanks,
Xiaomei
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

Fix the issue with running in community version, ssl_proxy_upstream_port is undefined.

Please review again. Thanks.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 9: Verified+1

Works perfectly. Thank you.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Commit message was updated.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(15 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified+1 Code-Review+2
|Patch Set 10:

Looks good. Please run the regression test and check in.

Thanks,
-Xiaomei
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 7ccf9060c84c664a9d023ee08a589a6741ed280a
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 2bfecc42510b63613d9331eb6d4dd0d8a046ad3e
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 977ba50f655bad623063fc878f72c697e0ade5e0
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 70c672074a67bb7e59f98285923dc987b02d282f
|Patch Set 2: Reverted

This patchset was reverted in change: I7018f7c22575fe499e57bd6cab3ca1925abb9edc
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Reverted

This patchset was reverted in change: I9d339ba682258ac1074f5a7dbf98494499cbed48
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as de289029057016987d1a9759fea6ee0432db983e
|Uploaded patch set 1.
|Patch Set 16:

(16 comments)
|Patch Set 16:

(7 comments)
|Patch Set 20: Code-Review+2

Looks good.

Thanks,
-Xiaomei
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(3 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e8bcd0e463006d7f15b647d8eca5f7bc23bc2662
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 7: Code-Review+2

Looks good. Please run the regression tests and check it in.

Thanks,
-Xiaomei
|Patch Set 5:

(10 comments)
|Patch Set 5:

(4 comments)
|Patch Set 5:

(2 comments)
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as d4f9b86a8ef63118a842436469d3ecae555ada04
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as be41f2b928ded76fb0117ca956f01b4becbe06db
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1:

(13 comments)
|Patch Set 1:

(8 comments)
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 0214452d577e6f85f36fe4eac4fb8f4e2d86707a
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Abandoned

abandon
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c41a0964d4f3ea3c0e459953c6438c1eaeb8cb70
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 4f49f4f499efeebaf004f3804ebfe23570854d32
|Patch Set 3: Reverted

This patchset was reverted in change: I47089314640e2fc59b95d86a345172daffd55968
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as f4187e617e02ba3e8fdf4ffe03fb54caadb835f5
|Patch Set 2: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 17569fe445455fe654619eb049831b7ff902492a
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2

Looks good.
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as cd920871e5b2bb964049ae9f6478930b4498a7e6
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d8909db0c9432cfcf86e7195b1289fbb699d7f93
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 4: Code-Review+2

Looks good.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated
|Uploaded patch set 5.
|Patch Set 6: Commit message was updated
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 31e9c217bbfd1c0375bba3a48744867726873e01
|Patch Set 1: Code-Review+2

Looks good. Thank you.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 77c94bdfb9f6c7c959a2d74788d4eac5e24d32de
|Patch Set 3:

(5 comments)
|Patch Set 3:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 841ba6d23688df0285c1b5926f50f33518940c46
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

rebase the change from master to internal
|Change has been successfully cherry-picked as 15496393fe6a5eab871798a05a0dcfd7af45df21
|Uploaded patch set 1.
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as 1b04814fcab21116d81a5267d9f905e98f3ae38b
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Looks good to me.
|Patch Set 7: Code-Review+1

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review+2

(2 comments)
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Code-Review-1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated
|Patch Set 5: Verified+1
|Change has been successfully cherry-picked as e2be781b10d281e788252468a74fa5325612746a
|Patch Set 1: Code-Review+2

Looks good. Thank you.
|Patch Set 2: Code-Review+2

(1 comment)
|Patch Set 2: Code-Review+2

Looks good.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 94e139f53e77d2a4ff034739a11fe067b47e03e6
|Patch Set 2:

(3 comments)

Hi, Yu,

Besides the specific comments, I would suggest that we add test cases to any rest api changes. It would become part of our regression script.

Thanks,
-Xiaomei
|Patch Set 2: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 2: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 100ee864e9a208b257c654a7082c7e2ffe78bced
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2

This is a resubmit of rebase of an approved review - http://review.couchbase.org/#/c/44193/
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 820a718e0a98503035152b3d677b076a64e55f52
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

This is a resubmit of rebase of an approved review - http://review.couchbase.org/#/c/44193/
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

This is a resubmit of rebase of an approved review -  http://review.couchbase.org/#/c/44193/.
|Abandoned
|Patch Set 1: Code-Review+2

(1 comment)

Yu,

I have one minor comment. Approved.

Thanks,
-Xiaomei
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Change has been successfully cherry-picked as 3ad35b97baaed1f3cb866b7526cec9553b5f53ad
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1: Verified+1 Code-Review+2

(2 comments)
|Patch Set 1:

(2 comments)
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 278594b9c6c58cf02ac7f8709acff2960aec1c50
|Patch Set 1:

(3 comments)
|Patch Set 1:

(2 comments)
|Patch Set 1: Verified+1 Code-Review+2

Yu,

I read through your comments on the checkin. I know we didnâ€™t get chance to discuss it over and understand where you come from. I think my main concern is role of replication manager and our approach of having it to be the main controller. Please see my comments on that point.

Please check in if it doesn't break any test or unit test. And let's discuss it when you come back from vacation. We can refactor if we decide differently then.

Thanks,
-Xiaomei
|Change has been successfully cherry-picked as ac4f3c4fe12caa75986e38e73764ce080a393f98
|Patch Set 1:

(4 comments)
|Patch Set 1: Verified+1 Code-Review+2

(3 comments)
|Change has been successfully cherry-picked as fb70bccdf6e5310c5e7509bb76ae97dccef35992
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1

looks good.
|Patch Set 7:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1:

Looks good. Approved.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 7:

(3 comments)
|Patch Set 7:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 10: Code-Review+2
|Patch Set 11: Code-Review+2
|Patch Set 1: Code-Review+2

Approve.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

(1 comment)
|Patch Set 9: Verified+1
|Patch Set 9:

(1 comment)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Patch Set 10:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 14:

(2 comments)
|Patch Set 15: Code-Review+2

Looks good. Approved.
|Patch Set 2:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 3:

(2 comments)
|Patch Set 4: Code-Review+2

Approved.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Reverted

This patchset was reverted in change: I83c52afcfac2da9b4ad10755afa3c75306388278
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(2 comments)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 3:

(3 comments)
|Patch Set 3:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+2

Approved.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Commit message was updated.
|Uploaded patch set 8.
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14:

(3 comments)
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Patch Set 15: Verified+1
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 1:

Looks good. Approved.
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Looks good.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

Looks good.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2

Looks good.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2:

Approved.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 5:

Approved.
|Patch Set 1: Code-Review+2

Looks good to me. Please rerun the test locally to verify.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

Looks good. Approved.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Cause regression, revert it and refix.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(3 comments)
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: Ia100ee0e6457443e3661d961202b8d6ab3e003c9
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 3:

(3 comments)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 8: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(3 comments)
|Patch Set 1:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 7: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Commit message was updated.
|Patch Set 7:

(4 comments)
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 7:

(1 comment)
|Patch Set 8: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Looks good.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Reverted

This patchset was reverted in change: I6b5cfe2a851af7cc5aaddb30b369d37dee184d3d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2

Looks good. Run dev sanity tests locally, see no regression
|Patch Set 6: Reverted

This patchset was reverted in change: I2de9bf9b6163f30d98ab2c312a152c73016d57d9
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 4: Reverted

This patchset was reverted in change: Id254a4d9d477cb12c6f17c66ef1cca811d614831
|Patch Set 4: Reverted

This patchset was reverted in change: I2fbe851a0e8e94799a6b4f3e39c34aef87110de8
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Reverted

This patchset was reverted in change: If18c423fbe5f74f334b82703eb40c32e58e42c1d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 6: Reverted

This patchset was reverted in change: I45a3e1eda8a6fae144d0ccdd3ea45ef45c5f82c4
|Patch Set 6: Reverted

This patchset was reverted in change: Ia1ba142f0a17fab925963f15fd58300a8e9298d9
|Patch Set 6: Reverted

This patchset was reverted in change: I60ff0d157be29d7ab2aeec0cd7302d48efdbfb03
|Patch Set 6: Reverted

This patchset was reverted in change: Iefe55570562e41ad391e69d0072330f34dbffa13
|Patch Set 6: Reverted

This patchset was reverted in change: I4a596abae81981b0a0664f21c28be8317fee0b22
|Patch Set 6: Reverted

This patchset was reverted in change: I5a866c5ae334619706df8c7371e29762636b02ae
|Patch Set 6: Reverted

This patchset was reverted in change: Ic2db25a237303ee823256f762afe053594e0dfab
|Patch Set 6: Reverted

This patchset was reverted in change: I526da102b19d95158e56acc1601443549952e6e6
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 8: Commit message was updated
|Uploaded patch set 9.
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Verified+1 Code-Review+2
|Patch Set 11: Reverted

This patchset was reverted in change: I0e75280adf47cefd56ae291b37cd1246a2596b23
|Patch Set 11: Reverted

This patchset was reverted in change: I24cf8b188fb85993eaa68cbae884c24b6ac54e50
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Patch Set 7:

(1 comment)
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1:

Yu,

After dcp getting the start seqno, it will send start stream request and wait for response, then start to get mutation, mutation would go through router and go to xmem and get response from target system. Would it be unrealistic for all those steps finish before SetStartSeqno, which is the next statement in the method? 

Thanks,
-Xiaomei
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(5 comments)
|Patch Set 4: Verified+1
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Code-Review+2
|Patch Set 8: Commit message was updated
|Patch Set 8: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(3 comments)
|Patch Set 2:

(3 comments)
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 10: Code-Review+2

Look good. We nailed the issue.
|Uploaded patch set 1.
|Abandoned

Included in review.couchbase.org/#/c/52269/
|Patch Set 6:

(2 comments)
|Patch Set 6:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 8: Code-Review+2

Looks good.
|Uploaded patch set 1.
|Patch Set 3:

(1 comment)
|Aliaksey,  line 1704 below will return error code 400.
|Ok with me, if this is temp hack for checkpoints.
|In my view, metakv is a generic metadata store which could be used in future by non-XDCR consumers. &quot;/ckpt&quot; is XDCR specific. 
Ideally, metakv should not be exposed to internal details of a key (e.g. /ckpt...) used by a specific consumer (e.g. XDCR).

Instead of metakv parsing for &quot;/ckpt&quot; to decide whether to replicate or not, would it be better if the consumer (XDCR) passed &quot;should_replicate&quot; as one of the parameters in the request? goxdcr can set should_replicate to false while setting checkpoints.
|Does output_kv() need an additional clause for {local, {metakv, K}} case?
|Do we need to apply &quot;should_replicate&quot; filter on LocalKVList to obtain keys that are replicated? If we do not apply the filter then NewKVList will never be same as LocalKVList if there are any entries with &quot;local&quot; tag. I am thinking, we need to compare the KVlists here only for the keys which are getting replicated.
|Will be good to have one line comment explaining the purpose of this new module.
|I guess the purpose of using an ETS table in this module is for fast lookup. Otherwise, every &quot;get&quot; would need to search ns_config, get the INDEX_CONFIG_KEY, decode the JSON values and return.

Is my understanding correct?
|Why is the function called &quot;dirty&quot;? Asking since it is just &quot;get&quot; of multiple keys.
|What is the purpose of this function? Will it be used during software upgrades?
|Ignore this question.
|NewCount logic is not clear. It appears that if grab_stats_every_n_ticks is set to anything other than 0, then NewCount will always be 1?
Can you please add a comment explaining the bahaviour?
|The old code in goxdcr_stats_collector first called &quot;latest_tick&quot;
and then grabbed the stats. My understanding is that this is so that when we grab stats it is associated with the latest tick TS.

This code has reversed those steps.  So, would it cause issues with the timestamp - in the sense that the collected stats might not correspond with the latest tick TS.
|The old goxdcr stats collector code generated only one event notification. This code generates one for each value in the stats list.

Is that intended?
|This is the code path I mentioned in the stand up meeting.
My change does not handle this path. Checked history of this code and talked with Aliaksey who had made the change. 
Looks like this might be a hypothetical scenario but have requested Aliaksey to review my change.

Marking it Verified for now.

I will investigate Aliaksey's suggestion to store all stats as binary later.
|I am not sure if there is really a true raw stat. 
I was planning to ask Aliaksey. Do you know? 

In my testing, I have not come across one. They are either simple stat or computed stat. 

To grab a specific ui stat say “stat1”, the existing code calls get_samples_from_one_of_kind() and iterates thru each kind – system, query, index, bucket … 
For each kind, it grabs all stats for that kind. If “stat1” is not one of them then it goes to the next kind in the list.
If stat1 is a computed stat, then it will show up as raw stat  when it is currently iterating thru the wrong kind.

In a later commit, I am planning to look into the &quot; get_samples_from_one_of_kind()” and see if we can optimize it -  i.e not iterate thru the wrong kinds.

In the mean time, I will replace list to atom with “all” for raw stat. So, that
we do not end up creating new atoms. With &quot;all&quot;, the code will gather all stats  for a raw stat - same as what it does today.
|Nit-pick:
This is more or less dup of the close-stream in dcp-consumer-conn.
One common routine in dcp-proxy would have been better.
|Ok, I will look into this.
|This is defensive programming.
Normally, we will find a query_stat in @query and we won't have to traverse the rest of the list at all. But we cannot guarantee that someone will not add a stat say &quot;query_replication...&quot; to @xdcr in future. The code covers for that possibility.
|Previously, it also checked for whether the node membership is active.
If that check is not required, then do you know why it was added in the first place?
|Will be good to use &quot;WATSON_VERSION_NUM&quot; to display the version number instead of &quot;watson&quot;
|To avoid unnecessary processing for kv and n1ql, would it be better to just add a clause for fts?
|If returning these settings here is not causing any issues then I would like to keep this code as is.
|Is your comment to remove/move these pieces for both maxparallelindexers and view update daemon settings? 

Max parallel indexers part was added by https://github.com/couchbase/ns_server/commit/b0779cf284dafdd4c7b5a0b849ac858405d3be93

The view update daemon part was added by this change https://github.com/couchbase/ns_server/commit/24490fff6000348b5737e144993e90d4ea4d8d30
|Agreed. But, I am going to leave it as is.
|Should this be &quot;https&quot;?
|What is the purpose of &quot;,&quot; parameter at the end?

Googled for urlunsplit but it was not clear. Thought might be faster to ask.
|I assume this passes &quot;make test&quot;. Earlier, make test used to fail on such version checks but I think couple of weeks back you rearranged cluster compat code which will now allow this? 

Rest of the code looks fine.
|Nitpick: Calling the state  &quot;closed&quot; instead of  &quot;shut&quot; sounds better.
|Could it get &quot;shut_connection&quot; request in &quot;shut&quot; state? And if yes, then is the handle_call() function which processes unhandled calls below sufficient for that case?
|Why is to_close set to the list of Partitions which were just closed?
How will it get used?
|Can there be a request to close the connection with reason other than &quot;shutdown&quot;?
If yes, then shouldn't it be handled at as well.
|The two function names differ only by  &quot;s&quot; at the end. To improve code readability, it will be good to rename &quot;check_service_quota&quot; to something like &quot;check_per_service_quota&quot;.
|It will be good to define a macro for this, say MIN_INDEX_QUOTA.
|I did not verify but many functions from this file are already exported. If these are the only ones remaining then might be better to do &quot;-compile(export_all)&quot;, assuming the purpose of this file is same as misc.erl but for menelaus.
|Similar to MIN_FREE_RAM_PERCENT, will be good to define a macro for the default value, say DEFAULT_RAM_PERCENT.
|before this change, value was compared with MIN which was &quot;max of MIN_BUCKET_QUOTA and total_buckets_ram_quota.&quot;
But with this change, the value is being compared only with MIN_BUCKET_QUOTA.
|I am not familiar with some of the go libraries being called here. This does not exist in the current code.
|If services is undefined, then this will return only &quot;kv&quot;. For sherlock CE, it should be all 3 supported services.
|Nit-pick:

For clarity, I would rename &quot;enforce_topology_limitation&quot; to &quot;is_this_topology_supported&quot;.
|Duplicate &quot;with&quot;.
|Consider following scenario:

1. 3.0 cluster with multiple nodes.
2. Some nodes upgraded to 4.0. Some still running 3.0.
3. A 3.0 node, say XYZ, is removed from the cluster and re-added as 3.0.
4. 4.0 node sends engageCluster2 API to the node XYZ. It will have extra payload in Struct for requestedServices which is not expected by a 3.0 node.

Any issues as a result of this unexpected extra payload in engageCluster2?
|This computation looks different from what Siri proposed. Was there consensus on this formula? Not clear from the discussion in the ticket.
|There is a flush function in misc.erl.
Can that be used instead?

http://src.couchbase.org/source/xref/watson/ns_server/src/misc.erl#732
|Please add back the period at the end of the sentence.
|Do not understand the purpose of &quot;err-indexMemoryQuota&quot; here.

Will leave it to Dave to review this file.
|Ok.

I did not look deeply into all the values returned by cluster_storage_info() so was not sure if all of them are aggregated.
|Seems OK.

cluster_storage_info() gets called via various code paths.
It will be good to confirm that none of those upstream functions
make an assumption that #of entries returned by cluster_storage_info()  matches the  ns_cluster_membership:active_nodes() count.

I have seen stuff like this in our stats code at other places.
|The monitor will be updated in above scenario.
For ease of explanation, let's say ?LIVENESS_UPDATE_INTERVAL = 1
1.  update_liveliness happens at Time 1.
2. last_heard is updated right after at say Time 1.01.
3. Next update_liveliness happens at Time 2.
4.  (os:timestamp() - last_heard)= 0.99 &lt; ?LIVENESS_UPDATE_INTERVAL so the monitor will be updated.

EP engine has reduced DCP NOOP interval to 1s. So, in absence of any usual DCP traffic (e.g. mutations), there should be NOOPs.
Also, this has been thoroughly tested and I have not seen any problems due to some weird timing issues.
|Talked with Artem. He is referring to an edge case where if we are very unlucky, the last update always happens within a small delta window after last liveness update.

This is easy to fix. Since it is an edge case, will take a look as part of Chunk 5 TODOs.
|In what scenarios will the StorageMode not be set in ParsedProps and default to undefined?
|nit-pick: Don't really need a separate function here. Can call proplists:get_value directly.
|Please add a clause here for &quot;couchbase&quot; bucketType because that is also accepted by the create bucket REST API.

 CLI, testrunner etc pass bucketType as &quot;couchbase&quot;.  
It will fail here when they or if anyone else passes 
bucketType=couchbase while creating a bucket.
|couchbase buckets that have been inherited via upgrades will not have the storage_mode. Where as buckets created after the upgrade will have it. This can cause confusion down the line since the config of different buckets will have different set of fields.

This just a thought. I am not suggesting to change this.
|It will fail here during the upgrade. 

Consider a cluster of 4.x nodes with some buckets. A Spock node is added to that cluster - so its mixed version some 4.x nodes &amp; some Spock nodes.
The Spock nodes  will try to add &quot;storage_mode&quot; to the config string while creating the bucket. But, there is no storage_mode in BucketConfig so it will be set to &quot;undefined&quot;. There is no clause for &quot;undefined&quot; in storage_mode_to_bucket_type() so it will fail.

Also, when all nodes have been upgraded to Spock, &quot;storage_mode=couchstore&quot; needs to be added to the config of existing buckets.
|Since is_persistent is an old API used to distinguish between memcached and membase buckets, are there any callers of this API who called it to check that the bucket was not memcached? In which case, any membase bucket will fit the bill. Or are all  callers specifically looking for persistence?
|ns_bucket:is_persistent() is also called by diag_handler.

Currently, the usage there is to filter out memcached buckets - to skip design docs.

As per PRD, views may be enabled on ephemeral buckets in future. At that time, this will break.
|&quot;isPersistent&quot; is returned in stats REST API since 3.0. How do we know there is not some user out there using it to filter out memcached buckets? 
I think, we should discuss this on ns-server-dev and also a PM.
|That is actually true. Not sure why I thought any would be better.
|Instead of checking whether all buckets in the list are ephemeral, more efficient would be to check whether any buckets are persistent and return false. I assume lists:any will break  out of the loop as soon as it finds one.

But, given that we support max 10 buckets, lists:all is fine too.
|Instead of this function, can you please add a new function called &quot;is_enabled()&quot; to the auto_failover module? This is to keep all auto_failover related code in one module.

And instead of &quot;auto_failover_diabled&quot;, please pass {auto_failover_enabled, auto_failover:is_enabled()} tuple to the cleanup() routine.

Please also add a comment in the auto_failover:is_enabled() function that it is a racy check because we are looking at the setting in ns_config. Not a problem in your case but good to warm if someone else decides to leverage it in future.
|It is possible that under some scenario it breaches the 500ms timeout. But, I did not see that in my tests.

When tested on a cluster with max buckets (10), ns_memcached:warmed_buckets(),  returned, on an average, in 5ms. This is on cluster with zero/low load.

I had also done a test - wrote 10Million items to a bucket which generated significant load with compaction etc on my local cluster. This increased the time taken by warmed_buckets() but still did not see the 500ms breach.

Also, this code gets traversed only when the dcp traffic monitor returns the bucket as inactive.
|Uploaded patch set 1.
|Patch Set 1:

Erlang does not seem to have direct way to get the offset of local time zone w.r.t to UTC. Have not thoroughly tested this yet. Wanted to check if there is some other way first.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Thats correct. My earlier plan was to leverage that - move parts of it to misc.erl, but Aliaksey mentioned that we want to keep ale independent. Hence, these helper functions. 

Also, menelau_access_log_formatter:get_datetime is not completely ISO 8601 compliant.
Currently, not planning to touch menelau_access_log_formatter:get_datetime but in future we can update it to use these new ale helper functions.
|Patch Set 1: -Verified
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

I  unit tested the change in following way. There was no actual break pad crash dump to collect or bypass so verified using log messages.

Verified cbcollect info from web console works fine. 
Issued the cbcollect_info using CLI and the bypass option. Verified it displays &quot;Bypassing Sensitive Data: Breakpad crash dumpsâ€�.
When I issue  cbcollect_info using CLI, for some reason it cannot find debug.log and other ns_server* log files. I issued the command exactly it is done by web console but did not work. I do not think this is related to my change. May be need to set some env variable.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

I am doing the change in two commits since technically they are independent.
This commit adds the option.
Next commit will bypass breakpad if this option is true.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Verified that &quot;Couchbase config&quot; is now present in the couchbase.log. But, didn't run make test etc. Don't think that does anything with dump-guts.
|Uploaded patch set 1.
|Patch Set 1:

Assuming you mean changing that line to 
DiskSinkOpts = PerSinkOpts ++ misc:get_env_default(ns_server, disk_sink_opts, []).

I thought of that but start_disk_sink also gets called for processes (like map reduce) where the application is ns_couchdb. 

Another option is to special case this code for Name = goxdcr but that feels little kludgy.
|Patch Set 1:

Forgot to add disk_sink_opts is set for ns_couchdb app.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1

I have unit tested the change.

One of the tests in &quot;make ... simple-test&quot; failed with following error. I am checking whether
it is related to my change.

ERROR: rebalance_in_with_ops (rebalance.rebalancein.RebalanceInTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File &quot;pytests/rebalance/rebalancein.py&quot;, line 169, in rebalance_in_with_ops
    task.result()
  File &quot;lib/tasks/future.py&quot;, line 160, in result
    return self.__get_result()
  File &quot;lib/tasks/future.py&quot;, line 112, in __get_result
    raise self._exception
RebalanceFailedException: Rebalance Failed: {u'status': u'none', u'errorMessage': u'Rebalance failed. See logs for detailed reason. You can try rebalance again.'} - rebalance failed
|Patch Set 1:

The rebalance failure in simple-test was not due to this change. Also, the change does not 
touch rebalance code path. But, investigated the failure and checked with Aruna if QA also seen the issue - she pointed me to bug MB-14223 that was opened today.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

I have unit tested the change.

One of the tests in &quot;make ... simple-test&quot; failed with following error. I am checking whether
it is related to my change.

ERROR: rebalance_in_with_ops (rebalance.rebalancein.RebalanceInTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File &quot;pytests/rebalance/rebalancein.py&quot;, line 169, in rebalance_in_with_ops
    task.result()
  File &quot;lib/tasks/future.py&quot;, line 160, in result
    return self.__get_result()
  File &quot;lib/tasks/future.py&quot;, line 112, in __get_result
    raise self._exception
RebalanceFailedException: Rebalance Failed: {u'status': u'none', u'errorMessage': u'Rebalance failed. See logs for detailed reason. You can try rebalance again.'} - rebalance failed
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Couple of notes:

1. If you see any indentation issues, please let me know. planning to take a look at vimerl
tomorrow.

2. I have unit tested, make test, make dialyzer. But simple-test is failing. Nowadays, it fails often, works after I restart my laptop. Tried that couple of times but still failing. will investigate tomorrow.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Commit message was updated
|Patch Set 5: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Commit message was updated
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

I have unit tested the new KV store.  But simple-test is failing with some connection problems. Does not look like related to my change but I will investigate.
|Patch Set 1: Verified+1

simple-test connection issues went away after I restarted my laptop.
|Patch Set 1:

BTW, I plan to init store_simple for storing XDCR ckpts as child of xdcr_sup. 

The child spec will be something like

{xdc_ckpt_store, {simple_store, start_link, [?XDCR_CHECKPOINT_STORE]}, permanent, 1000, worker, []}]

XDCR_CHECKPOINT_STORE will be defined in include/xdc_replicator.hrl
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 6.
|Patch Set 7: Commit message was updated
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 9: Commit message was updated
|Patch Set 9: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4:

(4 comments)

Overall code looks good. Few comments/questions.
|Patch Set 4:

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned
|Restored
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Abandoned

Reformatting the code.
|Restored
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 4: Commit message was updated
|Uploaded patch set 1.
|Patch Set 2:

Looks good.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Code-Review+2

Looks good to me. 

I assume, net_kernel:monitor_nodes() is reliable and will always deliver the nodedown message when the net_kernel is terminated otherwise this code will be stuck waiting for it.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

&quot;Diff against&quot; does not show any new changes in patch set 2 compared to patchset 1. 
I have already approved patch set 1. So approving patch set 2 as well.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

&quot;Diff against&quot; does not show any new changes in patch set 2 compared to patchset 1. 
I have already approved patch set 1. So approving patch set 2 as well.
|Patch Set 1: Code-Review+1

Looks good to me but someone familiar with this UI code should approve.
|Patch Set 1: Code-Review+2
|Patch Set 1:

This code looks ok so approved it. 
But since I am not familiar with alerts code, I don't know if any other changes are needed in some file somewhere else. But, I assume, if anything was missing then it would have showed up as a problem during your unit testing.
|Patch Set 2: Code-Review+2

&quot;Diff against&quot; does not show any new changes in patch set 2 compared to patchset 1. 
I have already approved patch set 1. So approving patch set 2 as well.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

&quot;Diff against&quot; does not show any new changes in patch set 2 compared to patchset 1. 
I have already approved patch set 1. So approving patch set 2 as well.
|Patch Set 1:

(3 comments)

I looked at base_stats_collector and goxdcr_stats_collector and had some questions.
Will be good to have answer to those before I look at the remaining files.
|Patch Set 2: Code-Review+2
|Patch Set 2:

Where does ns_server/make test fail?

ns_server/make test passed for me with latest code.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Couple of comments:

Earlier, there was no comma after timestamp in diag.log. Now, there is one. I think, that should be OK.
Before this change &quot;2015-05-15 12:42:05.897 ns_cookie_managerâ€¦â€�. 
After this change: &quot;2015-05-15T12:42:05.897-07:00, ns_cookie_managerâ€�

Timestamp displayed for some [goport] messages in diag.log is not ISO 8601 compliant. But, it is part of text in ns_log and not a separate timestamp. I think, that will get automatically fixed when goport logs are made ISO 8601 compliant.

2015-05-15T12:43:06.322-07:00, ns_log:0:info:message(n_0@127.0.0.1) - Port server projector on node 'babysitter_of_n_0@127.0.0.1' exited with status 1. Restarting. Messages: runtime.goexit()$
^I/usr/local/go/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc2080187e8 sp=0xc2080187e0$
created by main.main$
^I/Users/poonam/Workspace/Sherlock/goproj/src/github.com/couchbase/indexing/secondary/cmd/projector/main.go:94 +0x82c$
[goport] 2015/05/15 12:43:06 /Users/poonam/Workspace/Sherlock/install/bin/projector terminated: exit status 2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Will be good to get rid of other places where DCP_NOP is still being checked dcp_commands, 
dcp_proxy, mc_constants.hrl.

Otherwise the code looks good.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1

I had also gone thru the code and had lengthy discussion with Aliaksey. 
I was going to mark it +2 but since Artem has a comment,  marking it +1.
|Patch Set 1: Code-Review+2

According to google Magick is &quot;chiefly archaic spelling of magic&quot;, so the current
spelling is also correct.
But, approving the change.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Commit message was updated
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8: Commit message was updated.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9:

I had also thought of that case, but if we pass the &quot;all&quot; as an atom then will need to add bit of kludgy code in invoke_archiver. There we call latest_specific_stats with list as argument.

I think, this was why I had originally replaced &quot;all&quot; atom with [].
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Commit message was updated
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

Artem, leaving it to you to merge it. 
IIRC, you mentioned yesterday that some approval is required for this change.
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2: -Verified
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

Between passing &quot;all&quot; and StatName as it is - let me think about it.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

There are very few stats that are binary. Found couple of XDCR ones. 

Unit tested with all 3 type of stats - simple, computed and binary.
|Patch Set 5: -Verified
|Patch Set 5: Verified+1

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

I decided to handle the hypothetical case as well.

Latest patch does it.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3:

Aliaksey suggested couple of additional enhancements we could do here. 
I need to think about them in context of the next set of optimizations I am planning to
do. 
Marking this commit as WIP for now.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

simple-merge
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

BTW, I do not see any upgrade related issues with this change so have not tested upgrade.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Looked at various options and this was the most clean.

The new parameter is independent of basic_stats parameter.

Callers who do not want the vb map will pass the parameter while calling pools/default/bucket or pools/default/bucket/ID APIs.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)

Yes, I had considered other options including modifying get_uuid. But since, that requires changing other callers of get_uuid(), I wanted to first explore if a simpler change (limited to handle_pools) would be good enough. This change works. During my testing, I did not see get_uuid getting triggered thru other code paths before the system is provisioned. However, that does not mean things will not change in future.

I had checked git history for why and who had added the uuids to the URIs. Found it was you so asked for you to review. :-)

I will explore the option of modifying get_uuid.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

Aliaksey, this is not my latest change. Will mark the change verified once I upload my latest patch.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 2:

Artem, 

It was in menelaus_web in one of the earlier patches.
 Aliaksey asked to move it here.

Poonam
|Patch Set 2:

I see your point, Artem.

Would handle_settings_web_post() be a better place to add this?
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified-1

dialyzer is complaining about get_timeout_fast. taking a look.
|Uploaded patch set 2.
|Abandoned

Will be good to first merge to 4.1.1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

no conflict merge.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Patch Set 3:

Aliaksey, update_recovery_type() changes the membership of failed
nodes from inactiveFailed to inactiveAdded.
As a result, we cannot distinguish between a node being added after removal and a node being recovered after failover based on the membership state in drop_old_2i_indexes()
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Artem,

Clearing the recovery_type before the delta recovery is complete can be a problem only if the node membership is still inactive when the next rebalance starts. In that case, the node will again be considered as NewNode and will cleanup the indexes because the recovery type was reset to none in previous rebalance.
But, we activate the node membership almost right away. So, if the membership of the node is inactive during next rebalance then it was either because it was either removed or failed over after the previous rebalance.  In either case, the code will do the right thing.

In any case, I have tweaked the code a little to remove the window between clearing of recovery_type and activating the membership of non-KV nodes.

Please take a look at the latest patch,
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Dave, regarding why we were not able to recreate the problem, looks like Ander's change was merged yesterday after I had rebased my changes. 
Rebased them again and now see the issue.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Fixed the nit-pick.
|Patch Set 3:

Yes. Agreed.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+2

Hi Deepkaran,

The change looks good so approving but please submit when the UI changes are ready.
The UI currently displays a warning message with this change which might confuse QA etc. So, will be good to checkin when UI is also ready.

Poonam
|Patch Set 1: Code-Review-2

Actually, I just noticed an issue. Need to look into it.
|Patch Set 1:

Ok on the UI change.

Reason for my -2: 

I wanted to check whether you need to change calculations for the index thread lenses in the link below. I checked the corresponding GSI side change. You are just changing the default and not anything else so should be OK.
Please confirm. 

http://src.couchbase.org/source/xref/watson/ns_server/src/index_settings_manager.erl#202

Poonam
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

Because we need to listen only to rest_creds. 

Artem reviewed the cod yesterday and had given me an offline comment to listen only to the ones which we need.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

Artem, I am planning to change the name to &quot;@index&quot; to be consistent with what we have for query.

Currently, working on another change but since all changes are in same repo, this one gets rebased when I do repo upload.

Hold off further reviews till I mark the changes verified.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4:

Unless there are correctness issues or people feel strongly about the style, I would like to keep this as is. 

I am already halfway thru my unit tests and each unit test/rebalance takes long time to complete because of the # of nodes and buckets involved. I will need to redo them if I change this.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

Simple merge.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

Simple merge
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

simple merge
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1

Hi Artem,

Since your suggestions do not affect behaviour of the functionality, can I please take care of them in a separate commit?
 I have several unmerged changes in the repo. Would like to get them merged for folks waiting for them.

Poonam
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4:

Thanks for the suggestions, Anders.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1

Hi Artem,

Since your suggestions do not affect behaviour of the functionality, can I please take care of them in a separate commit?
 I have several unmerged changes in the repo. Would like to get them merged for folks waiting for them.

Poonam
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Because I don't think leaving that comment as is is such a big deal. Its unnecessary but not misleading.

However, we are spending too much time discussing it. So I have removed it.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Discussed with Aliaksey.

The change reduces the window in remove_undesrired_replication significantly but closing it entirely is a non-trivial and risky change. Updated the comments accordingly.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

simple merge
|Patch Set 1: Code-Review+2
|Patch Set 1:

I was wondering about mixed version clusters - watson node issuing
query_vbucket to pre-Watson nodes. 
But, type is not passed to &quot;query_vbucket_states&quot; so I think should be OK.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Looking at the history, Alk added safe_multi_call in 2011 while making changes for &quot;increase erlang distribution ports range&quot;.  

Currently, I see only doc_replicator using it. That change was done last year. It will be good to check with Artem why it uses safe_multi_call and not gen_server:multicall.

Alk's change.
https://github.com/couchbase/ns_server/commit/f2ead319d844bc0b442359da9f9c41c68572a452
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(2 comments)
|Patch Set 1: Code-Review+2

I have still bit of nagging feeling about upgrades but I cannot find any issues
so +2.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

Seems ok to me.
|Patch Set 1: Code-Review+2

(4 comments)

Due to time pressure, I have done a quick code review. Have few comments/questions below but marking it as +2.
|Patch Set 1: Code-Review+2

I was wondering why this revert does not look familiar. I had not reviewed the original change.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2

(2 comments)

Couple of minor comments but approving.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2:

(2 comments)

One issue and one nice to have.
|Patch Set 2: Code-Review+2

Talked with Aliaksey offline.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Unit Tests:  
1. Add some extra args for &quot;query&quot; and verify those extra args are included on restart in ns_ports_setup:run_via_goport().
2. Try add, failover, recovery of nodes with different types of services.

3.ns_server/make test, ns_server/make dialyzer and testrunner/simple-test

Some Unit Test Logs:
========================

=================== 1 extra arg ======================

(n_0@10.17.2.19)1&gt; ns_config:set({node, node(), {query, extra_args}}, [&quot;--debug=true&quot;]).
ok
(n_0@10.17.2.19)2&gt; ns_config:search(ns_config:get(), {node, node(), {query, extra_args}}).
{value,[&quot;--debug=true”]}

[ns_server:debug,2015-07-29T13:43:39.853-07:00,n_0@10.17.2.19:ns_ports_setup&lt;0.311.0&gt;:ns_ports_setup:run_via_goport:487]Specs before Expansion:{query,&quot;/Users/poonam/Workspace/Sherlock/install/bin/cbq-engine&quot;,$
                              [&quot;--datastore=http://127.0.0.1:9000&quot;,$
                               &quot;--http=:9499&quot;,$
                               &quot;--configstore=http://127.0.0.1:9000&quot;,$
                               &quot;--enterprise=true&quot;,&quot;--https=:19499&quot;,$
                               &quot;--certfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;,$
                               &quot;--keyfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;],$
                              [use_stdio,exit_status,stderr_to_stdout,stream,$
                               {env,[{&quot;GOTRACEBACK&quot;,[]},$
                                     {&quot;CBAUTH_REVRPC_URL&quot;,$
                                      &quot;http://%40:36d068f5250c01ef9c2c8d9d7710b556@127.0.0.1:9000/cbq-engine&quot;}]},$
                               {log,&quot;query.log&quot;}]} $

&lt;============== After expand_args() ===========
[ns_server:debug,2015-07-29T13:43:39.853-07:00,n_0@10.17.2.19:ns_ports_setup&lt;0.311.0&gt;:ns_ports_setup:run_via_goport:490]Specs after Expansion:[{query,&quot;/Users/poonam/Workspace/Sherlock/install/bin/cbq-engine&quot;,$
                              [&quot;--datastore=http://127.0.0.1:9000&quot;,$
                               &quot;--http=:9499&quot;,$
                               &quot;--configstore=http://127.0.0.1:9000&quot;,$
                               &quot;--enterprise=true&quot;,&quot;--https=:19499&quot;,$
                               &quot;--certfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;,$
                               &quot;--keyfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;,$
                               &quot;--debug=true&quot;],$
                              [use_stdio,exit_status,stderr_to_stdout,stream,$
                               {env,[{&quot;GOTRACEBACK&quot;,[]},$
                                     {&quot;CBAUTH_REVRPC_URL&quot;,$
                                      &quot;http://%40:36d068f5250c01ef9c2c8d9d7710b556@127.0.0.1:9000/cbq-engine&quot;}]},$
                               {log,&quot;query.log&quot;}]}] $


=================== 2 extra args ===================

(n_0@10.17.2.19)1&gt; ns_config:set({node, node(), {query, extra_args}}, [&quot;--debug=true&quot;, &quot;--readonly=true&quot;]).
ok
(n_0@10.17.2.19)2&gt; ns_config:search(ns_config:get(), {node, node(), {query, extra_args}}).
{value,[&quot;--debug=true&quot;,&quot;--readonly=true”]}


[ns_server:debug,2015-07-29T13:46:50.671-07:00,n_0@10.17.2.19:ns_ports_setup&lt;0.311.0&gt;:ns_ports_setup:run_via_goport:487]Specs before Expansion:{query,&quot;/Users/poonam/Workspace/Sherlock/install/bin/cbq-engine&quot;,$
                              [&quot;--datastore=http://127.0.0.1:9000&quot;,$
                               &quot;--http=:9499&quot;,$
                               &quot;--configstore=http://127.0.0.1:9000&quot;,$
                               &quot;--enterprise=true&quot;,&quot;--https=:19499&quot;,$
                               &quot;--certfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;,$
                               &quot;--keyfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;],$
                              [use_stdio,exit_status,stderr_to_stdout,stream,$
                               {env,[{&quot;GOTRACEBACK&quot;,[]},$
                                     {&quot;CBAUTH_REVRPC_URL&quot;,$
                                      &quot;http://%40:36d068f5250c01ef9c2c8d9d7710b556@127.0.0.1:9000/cbq-engine&quot;}]},$
                               {log,&quot;query.log&quot;}]}


&lt;============== After expand_args() ===========

[ns_server:debug,2015-07-29T13:46:50.671-07:00,n_0@10.17.2.19:ns_ports_setup&lt;0.311.0&gt;:ns_ports_setup:run_via_goport:490]Specs after Expansion:[{query,&quot;/Users/poonam/Workspace/Sherlock/install/bin/cbq-engine&quot;,$
                              [&quot;--datastore=http://127.0.0.1:9000&quot;,$
                               &quot;--http=:9499&quot;,$
                               &quot;--configstore=http://127.0.0.1:9000&quot;,$
                               &quot;--enterprise=true&quot;,&quot;--https=:19499&quot;,$
                               &quot;--certfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;,$
                               &quot;--keyfile=/Users/poonam/Workspace/Sherlock/ns_server/data/n_0/config/ssl-cert-key.pem&quot;,$
                               &quot;--debug=true&quot;,&quot;--readonly=true&quot;],$
                              [use_stdio,exit_status,stderr_to_stdout,stream,$
                               {env,[{&quot;GOTRACEBACK&quot;,[]},$
                                     {&quot;CBAUTH_REVRPC_URL&quot;,$
                                      &quot;http://%40:36d068f5250c01ef9c2c8d9d7710b556@127.0.0.1:9000/cbq-engine&quot;}]},$
                               {log,&quot;query.log&quot;}]}]



========== query only node ==========
[ns_server:debug,2015-07-29T14:01:13.036-07:00,n_5@127.0.0.1:ns_ports_setup&lt;0.1173.0&gt;:ns_ports_manager:set_dynamic_children:54]Setting children [memcached,query,saslauthd_port,goxdcr,xdcr_proxy]

========= data only node ===========
[ns_server:debug,2015-07-29T13:58:27.468-07:00,n_3@127.0.0.1:ns_ports_setup&lt;0.996.0&gt;:ns_ports_manager:set_dynamic_children:54]Setting children [memcached,moxi,projector,saslauthd_port,goxdcr,xdcr_proxy

======= index only ================

[ns_server:debug,2015-07-29T13:58:27.451-07:00,n_4@127.0.0.1:ns_ports_setup&lt;0.1083.0&gt;:ns_ports_manager:set_dynamic_children:54]Setting children [memcached,indexer,saslauthd_port,goxdcr,xdcr_proxy]

=========== all services ============

[ns_server:debug,2015-07-29T13:57:42.436-07:00,n_0@10.17.2.19:ns_ports_setup&lt;0.715.0&gt;:ns_ports_manager:set_dynamic_children:54]Setting children [memcached,moxi,projector,indexer,query,saslauthd_port,$
                  goxdcr,xdcr_proxy
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2

Hi Trond,

I assume you have run ns_server/make test and make dialyzer?
|Patch Set 2:

make dialyzer is working on my Mac. Also, did repo sync.

...
done (passed successfully)
Built target ns_dialyzer
/Users/poonam/Workspace/Sherlock/ns_server
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Hi Pavel,

I am not familiar with angular.
I just made the change based on existing alerts since it looked straight forward one line change.

I will leave the angular changes for this to you.

Poonam
|Uploaded patch set 2: Patch Set 1 was rebased.
|Abandoned

Leaving angular stuff to pavel.
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1

(1 comment)

Change looks OK but couple of disclaimers:

I had a very quick look at metakv_test.go as most of that change seemed to be just rearrangement of existing code.
|Patch Set 2:

Hi Artem,

I took a quick look and the changes appear to be OK. But, I would like to take another look.

 Aliaksey should also review. Since, these changes will not have enough soak time before the release, better if two set of eyes review this.

Poonam
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

Why did lint complain about these comments?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)

Code looks good except for one question below.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1

Code looks good but I am not familiar with Python syntax so marking +1.
|Patch Set 1: Code-Review+1

Change looks good but the intent is not clear.  Why should it not get replication from goxdcr for remote_clusters_info?
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

There are couple of other ways to fix this but I found this one was the most cleaner.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Reworded the message as per Dave's comment.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Verified+1

:)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Replaced index_auto_failover_disabled with {auto_failover_disabled, index} in latest patch.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Verified+1
|Patch Set 7: -Verified
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Aliaksey, can you please quickly review the overall logic?

I have unit tested but this commit is still WIP because changes to make &quot;make test&quot; happy are pending.

I will be making changes for the TODOs in subsequent commits.
|Uploaded patch set 2.
|Patch Set 2:

making &quot;make test&quot; happy is non-trivial change. Also, the auto-failover logic itself has changed. Thinking of disabling some auto-failover tests for now. Check latest patch upload.
|Uploaded patch set 3.
|Uploaded patch set 4: Commit message was updated.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Patch Set 9: Verified+1

Latest patch contains changes to the precedence order. Data service is given highest precedence. Other services treated equally. Also, fixed some indentation.

With this the main auto-failover policy change is done.  

Other minor changes and Aliaksey's code review comments  will be done in separate commits:
1. Replace log_debug with User log for the auto failover disabled for a service message. Maintain service specific state in auto_failover_logic for mail_too_small and auto_failover_disabled.
2. Use lists:map while creating service config.
3. Replace index_auto_failover_disabled with {auto_failover_disabled, index}
4. Update wording in cluster too small auto-failover alert message. 
5.  New eunit tests  in auto-failover-logic. 
6. Optimization: Do not calculate nodeuuid and service config on every tick.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 4: Code-Review+1

(2 comments)

I also reviewed the change since Dave asked me to take a look yesterday.

Will leave to Dave to review some of the ui files. Rest looks ok.
|Patch Set 5:

Cannot answer Pavel's question in line so here it is.

Pavel, there is bit of inconsistency on this UI page because there is a period after Database and View fragmentation related descriptions.

But, this is a very minor detail and I am OK either way.
|Patch Set 5:

(1 comment)

Code looks good but I have one comment below.
|Patch Set 5: Code-Review+2

(1 comment)
|Patch Set 2:

I have posted a question on this in the MB.
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

I am not as familiar with TAP as I am with DCP. 
Also, going by David H's comment that the assert is caused by replica receiving &quot;unexpected&quot; mutations. In other words, there can still be more than one TAP connection to the replica, but as long as there are no new mutations coming from the replica builder, it should be OK. Is that correct?

Marking +2 based on my limited knowledge of TAP.  If Artem understands this code better then feel free to get his +2.
|Patch Set 2: Code-Review+2
|Patch Set 1:

JFYI for others. I have provided suggestions/pointers to Ajit offline.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2:

Hi Ritesh,

This might not work during upgrades from pre-Spock to Spock when the cluster has some nodes running  the old version and some the new one. Can you please check the upgrade scenario?

Also, since the new names are already out in 4.0, please check whether this will break any customer and also QA scripts if they are making REST API calls using the 4.0 stat names.

Poonam
|Patch Set 2:

FYI for others,
I explained to Yu offline the 4.0/4.5 to Spock upgrade issue.
He plans to discuss it with Ritesh.
|Patch Set 1:

Hi Ajit, are you planning to make this change? I think, changes to menelaus_stats is sufficient to render the graphs in UI.
|Patch Set 1:

I do not think we have kept this file up-to-date with the new stats - at least since last year I joined. But I will leave it to Pavel.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Main changes included in the latest patches:

1. Earlier node_monitor on each node sent heartbeat (with status of all local monitors) to every other node in the cluster.  Since auto-failover logic runs on the master, it is sufficient for node_monitors  to send this status info only to the master. This optimization results in reduced network traffic.

2. Earlier ns-server-monitor piggybacked on node_monitor heartbeats to track liveliness of ns-server on other nodes. But, now that node-monitor heartbeats are sent only to  the master, ns-server-monitor has its own heartbeat that is sent to all other nodes in the cluster. These are tiny heartbeats without any payload.

3. Some functions are common across various new monitors. These were already defined in a common health_monitor module. With the above node-monitor, ns-server-monitor change, the common code increased still further and it made more sense to make health_monitor a gen_server which the various monitors can use.
|Patch Set 10:

Also, has comment from Aliaksey to remove timer2:send_interval() from the init(). Instead, later perform timer2:send_after().
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1

See comments in the previous patch.
|Patch Set 12:

Main changes included in the latest patches:
1. Earlier node_monitor on each node sent heartbeat (with status of all local monitors) to every other node in the cluster.  Since auto-failover logic runs on the master, it is sufficient for node_monitors  to send this status info only to the master. This optimization results in reduced network traffic.
2. Earlier ns-server-monitor piggybacked on node_monitor heartbeats to track liveliness of ns-server on other nodes. But, now that node-monitor heartbeats are sent only to  the master, ns-server-monitor has its own heartbeat that is sent to all other nodes in the cluster. These are tiny heartbeats without any payload.
3. Some functions are common across various new monitors. These were already defined in a common health_monitor module. With the above node-monitor, ns-server-monitor change, the common code increased still further and it made more sense to make health_monitor a gen_server which the various monitors can use.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review -Verified
|Patch Set 1:

-Verified because just saw one possible small race condition I would like to look into.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: -Verified

-V because I want to remove some unneeded code from this commit.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified+1

Main changes in the latest patches:

1. dcp_traffic and kv monitors use the common health_monitor gen_server.

2. Earlier {Node, Bucket} entries in the dcp_traffic monitor were explicitly removed by dcp_consumer_conn and dcp_replicator when the connection closed/terminated. 
Aliaksey suggested a better approach of having the dcp traffic monitor the (dcp _proxy) processes that are actively updating the  the traffic monitor and remove the entries when the dcp_proxy processes went away.

3. Some other comments from Aliaksey related to making the code more compact etc.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2: -Verified
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15.
|Patch Set 15: Verified+1

Main changes in latest patches:

1. To track liveliness of dcp traffic, earlier dcp_proxy set &quot;last_heard&quot; to os:timestamp while handling each packet.  Since os:timestamp may not monotonically increase, Aliaksey suggested to use a flag instead.

2. Earlier {Node, Bucket} entries in the dcp_traffic monitor were explicitly removed by dcp_consumer_conn and dcp_replicator when the connection closed/terminated. 
Aliaksey suggested a better approach of having the dcp_traffic_monitor  monitor the (dcp _proxy) processes that are actively updating the  the traffic monitor and remove the entries when the dcp_proxy processes go away.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 17: Verified+1

Main changes in the latest patches:
1. node_status_analyzer now uses the common health_monitor gen_server.
2. Some misc comments from Aliaksey - fixed typo, replace list with tuple, more compact code etc.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 17: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1

Has misc comments from Aliaksey - fix typo, remove extra space stuff like that.
|Patch Set 14:

Also, earlier, master did not auto-failover a node if ns-server on it was down but KV traffic was active. As per Aliaksey's suggestion, master will now fail over the node in this scenario.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14: Verified+1
|Patch Set 24: Code-Review+2
|Patch Set 5:

(2 comments)
|Patch Set 6: Code-Review+2

(1 comment)
|Patch Set 6: -Code-Review

+2 by mistake. Have one more question.
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)

BTW, if not already done, please also test a memcached bucket to verify no regressions.
|Patch Set 6: Code-Review+2

Ajit, please merge once you have marked the change verified.
|Patch Set 20:

(2 comments)
|Patch Set 20:

(1 comment)
|Patch Set 20:

(1 comment)
|Patch Set 20:

(1 comment)
|Patch Set 22:

Currently, the ephemeral bucket failover logic gets executed for every janitor cleanup call. 
May be it should be selectively done based on who the caller of the cleanup is? This can be done by &quot;check_for_data_loss&quot; option to the cleanup().  

Ephemeral bucket logic should definitely get executed during the periodic run_cleanup.
But, cleanup also gets called during start_recovery and bucket flush. start_recovery is done for recovering missing vbuckets. 

Also, cleanup() gets called by ns_rebalancer during failover and pre-rebalance. Those are not covered by this change.

Can you please look into each caller of the cleanup() and check whether it makes sense &amp; is also safe to execute the ephemeral bucket logic?

What do I mean by safe?

Consider following sequence of events.

1. User does hard failover of Node1.
2. Failover updates the vbucket map. Replicas are promoted in the map but not on the nodes yet.
3. Failover logic calls janitor cleanup() to apply the config.

If memcached on another node say node2 were to restart between step 2 and 3, then multiple things will happen during that cleanup. We need to think whether that can be an issue because the ephemeral bucket logic would look at the vbucket map but that map has not been applied yet. 

I am thinking, may be it is safer to just bypass the ephemeral bucket logic if cleanup() is happening during failover and pre-rebalance. And document that if such sequence of multiple events occur then they might lose data in ephemeral buckets. It can be revisited in future release.

What do you say?
|Patch Set 22:

(1 comment)
|Patch Set 17: Code-Review-2

Hi Ajit,

I had a cursory look.  The integration with fast failover changes is not correct.
There was no fast failover when I had developed the prototype.

We can discuss in person tomorrow.

Poonam
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

I think, the original function was also small but I like your suggestion. Looks more clean. 
Will make the change.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

It is enabled by default on fresh cluster setup.

Did you by chance restart an older cluster with this change? That is similar to performing an upgrade and the alert will not be enabled by default. That is the case for any new alert we add.
|Change has been successfully cherry-picked as 5a619acaac2fb8868935cc10bb7d6883d0ac077d by Poonam D
|Uploaded patch set 1.
|Patch Set 1:

Related to http://review.couchbase.org/#/c/74891/.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Steve's +2 should be sufficient. But, adding my +2 in case you are looking for one from some one in ns-server.
|Change has been successfully cherry-picked as f2d92656c4f7147dbcc45d2689d9e2c9e9021ca0 by Poonam D
|copyright info
|typo: once
|whitespace
|should use
|whitespace
|separate options can be removed here as it is taken off the docs?
|missing copyright info?
|is it used?
|comment can say LCB_CNTL_CONFIGCACHE_RO
|Why does the client need to sanitize?
|I don't see the markers used then why is the server sending it?
|Ok..
|It was a minor thing. Line 234 does the release again - anyways no impact.
|Redundant
|I meant lcb_string_release
|last modified time on the provider should be updated on load_cache otherwise it would never reach provider success. Was this intentional?
|As per my understanding, the active flag is checked when scheduling for new config requests - how would it impact another callback?
|I see your concerns, I agree that the last_refresh timestamp will be error-prone. Ideally, shouldn't last_refresh timestamp be set on a successful config callback rather than scheduling? Apologies for bothering with questions, I just want to understand this a bit better.
|Done
|Done
|removed it here
|Done
|Done
|Done
|Done
|Agreed. Fixed by using a CAS 0 for replace.
|I tried to be consistent with the set operation when $obj is NULL(it accepts the request) wrt. other inputs we now throw an error if it is invalid
|Done
|Added a configurable counter
|typo
|it should be 1000000
|same here
|shouldn't this be params-&gt;root[&quot;scan_vector&quot;][bucketname]
|use reference here
|why not call lcb_n1p_setconsistent_token here?
|The default timeout is not set to 0. It is set after the bucket object is created here. Yes decorator would have made it look nice. I'll submit another patch with that.
|Will the timeout be applied for server side as well?
|Yes, some languages take a different approach https://en.wikipedia.org/wiki/Modulo_operation. Math.floorMod should fix it.
|If counter exceeds max int, offsets will be negative?
|Remove commented code so it looks clean
|Missing create_type?
|Redundant decorator wrap? Not harmful maybe just creates extra call stack?
|KeyNotExists or PathNotFound?
|Redundant decorator wrap?
|Redundant decorator wrap
|Instead of ignoring the error, it would be useful to wrap it as Index out of bounds.
|Redundant decorator wrap
|Redundant decorator wrap
|Why KeyExists, it would be easier to understand if there are new errors like QueueEmpty instead of SubdocPathNotFound
|Redundant decorator wrap
|Why even have this option, it is going to be not_bounded unless explicitly sets consistent with mutation state?
|Why no mapAdd when there was no error on insert?
|Again no listpush on no error?
|Shouldn't this be listShift?
|Again no listShift on no error
|Why replace in a remove api?
|No queue for this iteration?
|whitespace
|one write?
|Even if the underlying request observable times out, will it be purged out of sent request queue? So even the keepalive requests will be discarded if the sent request queue is full?
|Done
|Done
|Actually it doesnt get throw path invalid exception, instead returns status as PATH_NOT_FOUND and throws generic couchbase exception. We may have to fix it at subdoc level, maybe in the next release?
|Done
|Done
|Done
|Done
|I looked at a couple of options, but there is no straightforward to do it, switching on empty has a contract to return a JsonDocument observable. Default if empty would not really work for this case as we need to differentiate between an empty doc vs doc does not exist.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Ah ok, makes sense
|Will deferAndWatch not apply here?
|Why only for RawQuery executor, what about N1QLQueryExecutor?
|I'll check with the query team about this, otherwise we would have to change how we retry.
|This can be removed?
|No multi works a bit differently, the flags are added while
|No, this is just constructor initialization from the sub class, not a overload, the setters are how the values should be set as described by rfc. It isn't finalized yet.
|why would this have an idle time 0? Idle kv endpoints will not be discarded?
|can we make this configurable? or a global constant as it is used in multiple service configs
|does this fire for a pool of endpoints no matter when the endpoint was actually created? only if the min == max and pooling is enabled, all endpoints get a fair idle timeout.
|isn't this a bit redundant, it looks to be checked on abstract service config constructor?
|ANALYTICS
|sure
|yes
|ok will fix
|okay
|Maybe yes, do we stream results-&gt;errors-&gt;results? I can close on status/metrics else.
|Yes, will change
|Thanks for noticing that, I'll add.
|I cant see why not. I can change it.
|yes, will move
|It is fed here #createResponse
|The reason for the check is, we don't know which starts streaming first so create response, only if it is not yet created.
|yes sure
|yes it is needed as the json pointer ref tokens can be changed(mostly added). It is important that each has its own copy.
|okay, sure
|yes we are doing the copy now, as decrementing ref count would happen in java client which uses the buffer and it is not aware which response parser created it.
|okay
|okay
|yes
|yes
|hmm it is more like fail silently. I can make it an exception.
|it doesn't care basically it allows everything until it hits &quot; or \, remember it doesn't validate json. I can add an unit test here, but mostly tested here https://github.com/subalakr/yasjl/blob/master/src/test/java/com/github/subalakr/yasjl/SimpleParserTest.java
|okay
|Yes it is okay
|Not sure if this was changed, as far as discussing with Matt and reading through the changes in https://issues.couchbase.com/browse/MB-22703, couchApiBase, ddocs and bucketCapabilities are changed.
|Also I think this info is pulled from nodes/nodes ext services which relies on couchApiBase, rather than bucket capability, which is ok, but a more straight forward one would be using bucket capabilities.
|should the revision check happen before version?
|Should this be removed?
|Should the handler be removed once the negotiation is done, else all msgs would pass through this channelRead0? Also for these adhoc handlers, I haven't had much success as connect phase never happens and channel promise is not set, anyways kv error map isn't really an important part of negotiation right now.
|yes
|yes
|yes
|2 - TLS, 7 - XERROR
|yes
|done
|No as discussed.
|done
|done
|done
|done
|removed
|done
|done
|they call different async methods
|done
|yes will add the check
|It is covered by RFC to just add a note. Polling is a bit complicated as discussed.
|Ye
|Yes you are right. I missed bucket names allow %. Good catch!
|yes
|yes
|yes
|Yea, will add that
|Should we make environment getter &amp; setter for poll interval experimental, given more changes are coming for fast failover?
|nice catch, this wasn't intentional. I'll revert this change.
|yes
|sure I'll add it
|Yes I can do that refactoring, but
|Yes we do, I like the use of properties file instead of command line.
Shall I move all test properties to the file. 
wdyt?
|Yes, sure
|Yes we can, I wanted to make this experimental, see core changes as it uses a different opcode (Server side changes reference https://issues.couchbase.com/browse/MB-23522)
|Yes it is an absolute value set on the first time receiving the retry specifications.
|Some leftovers of the long change, will fix it
|No, just some leftovers, will change it back to short
|No particular reason, we had a warn before if there was error code found for response status just moved it over. It can be a debug log.
|Updated to call channel close
|Makes sense, will change it.
|This one here is not needed.
|Not necessarily, retryAfter, maxRetryDuration are written only once and definitely happens before the read.
|yes, it is good to have it as volatile, fixed.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 9: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 7: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Commit message was updated.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 7: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 5:

(4 comments)
|Patch Set 7: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 22: Code-Review+2
|Patch Set 25: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 12: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 11: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 3: Code-Review+2
|Patch Set 11: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 7: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1

I can to grep it out from the logs and see if the heuristic guesses were actually helpful. But 45s seems a bit too long.
|Patch Set 7: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

Not sure. It looks like either 4kb or 8kb. Why not send the request always as POST?
http://www.couchbase.com/issues/browse/SDKQE-313
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as b1e0686cb9e9f877f3c96728b6febbc5c4dbe3ad
|Patch Set 1: Code-Review+2

I don't understand the need for a 0 timeout timer for schederr. But it should work.
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 4: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Abandoned
|Patch Set 2: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 1:

(2 comments)
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 4: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 5: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 6: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 7: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 8: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Code-Review+2

you beat me by a few mins
|Patch Set 4: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 5: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 15d33a212ecd5322cf6cbf3dbccd4af5d52341db
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Change has been successfully cherry-picked as 7f150860009332adea982c6da23ac1f509ebe30e
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 1:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Change has been successfully cherry-picked as c4a15639007f48d98593f9271c94b4a8112681b1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Yes verified
|Change has been successfully cherry-picked as 97a929e66bf7fc8f1e9ffbcd32f9c3a2e43d89b1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d2ecc2a3a341b819a810f69eb10789c12d4f6e76
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: (8 inline comments)

Addressed the comments in Patch set 3
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Commit message was updated.
|Patch Set 4:

This does no data validation. It is just a helper script. Fixed other comments.
|Abandoned

Not really necessary
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 5: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 9: Code-Review+2
|Patch Set 7: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Hrm, I ran the sdk_client_tests .. let me check
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Removed the following votes:

* Verified-1 by buildbot &lt;build@couchbase.com&gt;

|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 7: Code-Review+2
|Patch Set 7: Verified+1
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2:

Oops..fixed it
|Patch Set 3: Commit message was updated
|Patch Set 4: Commit message was updated
|Uploaded patch set 1.
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Abandoned
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Verified-1

This patch does not compile with 2.2.5 client due to the changes in DefaultCoreEnvironment
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

True but the mock config info is not required to have it
https://github.com/couchbase/couchbase-net-client/blob/master/Src/Couchbase.Tests/CouchbaseBucket_Async_Tests.cs#L48-L52
|Patch Set 1:

I'll update a patch fixing the mock object
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 1:

Hi Jeff,

The patch fixed the NRE but there were other errors, looks like the key is the same ip address http://hastebin.com/soxapihobo.tex
|Patch Set 2:

(1 comment)
|Patch Set 3:

Oh sorry I thought the AsyncCluster delegates to AsyncBucket here https://github.com/couchbase/couchbase-java-client/blob/5addb24c52e8db1f0daecbcdec654c66acfd310b/src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java#L844 and a user-defined timeout will be lost.
|Patch Set 3: Code-Review+2

oh ok great thanks for the explanation
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 2:

(11 comments)
|Patch Set 2:

Missing exists or contains api?
|Patch Set 4: Code-Review+2
|Patch Set 1:

The partition id set here https://github.com/couchbase/couchbase-jvm-core/blob/8ab8d1144fb89db5336dafd2f5f163d74f6836b8/src/main/java/com/couchbase/client/core/node/locate/KeyValueLocator.java#L121 should be incorrect if the partition size is zero and will the request retain that info on a retry?
|Patch Set 1:

Ok cool, one other thing if the ffmap is valid and the hash was using a partition size 0, the result may be incorrect, is that possible at all?
|Patch Set 1: Code-Review+2

ok makes sense. Thanks for explanation.
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1:

(6 comments)
|Patch Set 2: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

Assuming this is just a direct copy of lcb source
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2

Looked up the code, doesn't seem like a change other than name so +2ing it.
|Patch Set 1: Code-Review+1
|Patch Set 4:

(2 comments)
|Patch Set 6: Published edit on patch set 5
|Patch Set 6: Code-Review+2

Edited the commit msg to reflect new defaults
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 13: Published edit on patch set 12
|Patch Set 13:

Fixed the comments in a separate patch http://review.couchbase.org/#/c/69167/. Will abandon this one as it has bucket level apis and collections like interface. We will want only the bucket api for next release.
|Abandoned
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Added more tests
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 8:

(17 comments)
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Abandoned
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Fixed the docs
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 3: Code-Review+2

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Abandoned

Fixing this in java-client
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Thanks, updated the since version, java-client changes are here http://review.couchbase.org/#/c/71317/
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Updated with fixes for the comments
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3:

Why not use a property to set pipelining boolean? It should be useful if there is server change.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 8: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1

(2 comments)

I think this matches with the rfc and works for experimental support, except for create_doc from 4.6. I'll create a separate patch for that.
|Change has been successfully cherry-picked as ad78b3cd248f7c7b289178ba1bb9553a47739551 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 14:

(4 comments)
|Patch Set 15: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as ceff7a42d086ade4ebffb8f47c6d636424beaea1 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 268ddcde042ae0cc4095e3dcaede1d3a271235ff by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Search service replies with 404 on older versions, so only on trace log the user would notice it otherwise the endpoint should be fine.
|Uploaded patch set 1.
|Patch Set 1:

Ah ok! makes sense
|Abandoned
|Patch Set 4: Code-Review+2

(1 comment)

One minor thing.
|Patch Set 7: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1:

The change makes sense, I agree with Michael on the concurrent hash map.
|Patch Set 1:

Reads on concurrent hash map are non blocking so I think there wouldn't be much of performance impact, and also multiple concurrent writers are allowed which is better than synchronized write and copy.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

Great idea on the slice. It should work as the ssl handler only moves the reader index.
|Abandoned

Yes
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9:

(22 comments)

Thanks for the thorough review!
|Uploaded patch set 10.
|Patch Set 10:

Things to do
- slice instead of copy
- onCompleted event

One change,
allow valid json pointers to be added, fail silently
|Patch Set 10: Code-Review+2

Discussed todos with Michael and he approved this change, so merging.
|Patch Set 10: Verified+1
|Change has been successfully cherry-picked as 6ad3036b6ec8b6ab4511b8f6422f0501d48b672d by Subhashni Balakrishnan
|Patch Set 3:

(1 comment)
|Patch Set 3:

(2 comments)
|Patch Set 5: Code-Review+2
|Change has been successfully cherry-picked as 93b4ee95b975d54162affa69b94dc62f1a2c3868 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 158d0d50f02bf44d17688b5edf203ef31e291db2 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 3226fa031963b54d48480c368a7090f0d9639468 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 2667e6253d3106b6fc8cd453641d9218f8d52ce8 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a6074508c663956fecd6743a387619809e73949d by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2

(1 comment)

One minor clarification
|Patch Set 6:

nvm, it is correct
|Patch Set 6:

(1 comment)
|Patch Set 9: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 5e2e81e01163d542ed4eefcd72206091fb8ce62a by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 46e51a92590bf2e02441da7758d444082a424ee7 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 13: Patch Set 12 was rebased
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Patch Set 17:

(5 comments)
|Uploaded patch set 18.
|Patch Set 18: Verified+1

Updated changes, on-demand handler cannot set channel promise as discussed.
|Patch Set 19: Patch Set 18 was rebased
|Patch Set 19: Verified+1
|Uploaded patch set 20.
|Patch Set 20: Code-Review+2 Verified+1

Cleaned up api doc and deprecated the old constructor for endpoints as well.
|Change has been successfully cherry-picked as d95bcbb85d54631f8e214c6ece2e7a2b928b4807 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Yes, will update the patch
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 5501862865aaeda67c747165ca19ccc287bf8188 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 8:

(11 comments)
|Patch Set 9: Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Verified+1
|Change has been successfully cherry-picked as e772eb296987afda90e7ec9a82113431a9e3a364 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as f797dd2e4721de968b3a95dd3da0670bd9e76ab7 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(8 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

All changes are done as per comments except one -  I'll leave user type as string to allow flexibility, as the server side may have changes.
|Change has been successfully cherry-picked as c9e6994b88246faabecd0837e2c77d5355b8d022 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as d2d3d0a342ec07862448a638bc227f20b94c3207 by Subhashni Balakrishnan
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2

Agree on the minor nit by asgs :)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as c9b60799fc49fd691eefbf9bd7b6b5663c884787 by Subhashni Balakrishnan
|Patch Set 3: Code-Review+2

Great find!
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 4478e29475ae89a407d0d7b6c189e4eff80c07a4 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2
|Change has been successfully cherry-picked as 7ff67b9a558cc977fb73f8437b803f10171345d8 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 21952c4b6bf7bb242eb68b4f524919fa29820b25 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 2374797e7257a5caaf2795bd936989d4ec4ea2e5 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Change has been successfully cherry-picked as a046c60f416f8207cf5370890c6c55b1b7a28ed6 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as c68c670eb325dedcb936303d021b81c9a1dfdf73 by Subhashni Balakrishnan
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 85e828cd9fef446fb9ba61aff3b8f0e114df4905 by Subhashni Balakrishnan
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as a6dc3e62ef131b1e644bf9ef8d550e0eeffd45cc by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as ce08488c1a761a357d2be5611434eb0c553a3bc3 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d04714b15ef3dbac4e2283120b9f10c6752796cc by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified

yes  :)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as bf7a0860547bb0faae9d4eb32325de358e1191ed by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 37180127953f23cc46ebf097807f8c28ddf0487c by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 98ab6edac23bd404aa45e575736ee5da9ec14d82 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

(2 comments)
|Change has been successfully cherry-picked as f79750985692b4b86eacba899dcdcfaa3b12e582 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

some changes were already merged
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as d483dcc516e7541d8cce852f1a535ac4fa40c9d1 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 3b7e03ce8ea28692c5a7287956fc416f26247496 by Subhashni Balakrishnan
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as c6f418d2b6d7cc4988632b665922dab716e5c16f by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as d9410a5037c2a0a4a8013fc83ff17583b522e35e by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Change has been successfully cherry-picked as 42598ece8f9ca5cb30a5b37edd8b56fc82ea360d by Subhashni Balakrishnan
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Change has been successfully cherry-picked as cda8793571c9dd17f40cd796fd238bdf896d91b8 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as 114d74eecf3100d30ed2c82a218f2542bd9072a4 by Subhashni Balakrishnan
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as edc297f04f8801cb8a085685b1c0f21f510772b4 by Subhashni Balakrishnan
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as ea72a9578cbec3516ce64c385ed3ebaacfa555a0 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4:

(7 comments)
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(2 comments)
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Patch Set 13: Code-Review+2

Approved by Michael over hipchat.
|Change has been successfully cherry-picked as bd14c5e39312bd0846c69f1430dcb22f0f9cdd4e by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully cherry-picked as b79fa06dc149ed13039eba5520bb0ddc7e1c5e36 by Subhashni Balakrishnan
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Actually i need a bucket instance an multiple buckets too that's why haven't used rest api here.
|Ok you are right, I was facing some issue while parsing a error message but later realized it's because it contains single quote that's why it got parsed only when passed in quotes.
|Error strings should be in quotes.
|Thanks for pointing it out, I somehow missed it.
|This variable is getting used locally for verifying views so can't remove that actually.
|Here we are expecting that DB compaction shouldn't start as only Views compaction is enabled that's why if it's not started then test case passed not failed.
|Here we are expecting that View compaction shouldn't start as only DB compaction is enabled that's why if it's not started then test case is passed not failed.
|Hi Andrei, Thanks for the comments.
Yes i know about wait_timeout param but here we need to consider the timeout for only sanity cases and not for others.
However will look for the other alternative till then adding it as a temporary fix to avoid job failures.
|As far as observed http://qa.hq.northscale.net/job/centos_x64--44_04--observe-P0/34/consoleFull it's in setup which before rebalance as bucket creation is itself not successful because it wasn't deleted in previous test as tearDown doesn't run.
|Sorry couldn't understand.
It is running for self.servers[:self.nodes_init] only.
|Yes now we can actually use the same,it was earlier when i was changing that value. Thanks will update it.
|actually query to master is running in self._verify_ddoc_data_all_buckets() that's why not included it above
|Test Comment
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review-2
|Patch Set 3: -Code-Review
|Patch Set 3: Code-Review+2
|Abandoned

http://review.couchbase.org/#/c/44570/1
|Uploaded patch set 1.
|Abandoned

Abandoned.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

Abandoned.
|Uploaded patch set 1.
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d097f09ff852f7350283adf301ba22d3f344abbd
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 6a2217b17465d01de04e185a5e3ebf5057ee555e
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 68f8c8f7e8f8994155ba5b9b72dcc224f08d50f6
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 16:

(1 comment)
|Patch Set 17: Verified+1
|Patch Set 17: Code-Review+2
|Change has been successfully cherry-picked as a0fe8fd08fdba9e54bf06659386cc9bf9bc7935a
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 094ab0ce47c6deb7d305aff83475be59b5093dfe
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5c07461eff68c9ad4573029f0e92dc304d736c25
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 40f55ed3fb7a92b3f1cef96c9f0b00bd6e7dbe5c
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 8a8f9a0037e63bfd05f93c14408757737ff5f4e9
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 003a7d2fca2cdc554b787af7cb4578887e7ef800
|Uploaded patch set 1.
|Abandoned

http://review.couchbase.org/#/c/41142/
|Uploaded patch set 1.
|Patch Set 1: Verified+1

(1 comment)
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 439ce74c07c294a797f15741c77b3b2a5172d1fd
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as eb4b21aa094165688cf81ff67eb6999f6953a46d
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as fa77e2b65811d772b862ab614c9842d28501b1a8
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

http://review.couchbase.org/#/c/40905/1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as a23f28853383848dcb08b68b6b84f2d6fda6e91c
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e6c4d0ae12a0e397ca3b1416eb06008ed9f238d3
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 883ae472d129d723dca9f80a036a40af7941c411
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+2
|Change has been successfully cherry-picked as b0f4af25fb8b7835da25e08ccb481f8c7aff8607
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Verified+1 Code-Review+2

Reviewed by Iryna above.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 11: Verified+1

reviewed by Iryna above.
|Change has been successfully cherry-picked as 8174e29df10521de44ce14fe28e9f6d0a69b4e74
|Uploaded patch set 1.
|Patch Set 1:

Actually on Mac we run only single node cases that's why conf file is separate covering both view merge and view query cases.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 768c17431aeb9bb78027469d83d852751a8fc702
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2

Approved by Iryna above.
|Change has been successfully cherry-picked as 7123b1940c7ba2e502d22e2233f2345e95e05c28
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d12be9a6dcf023d52b140d5fad79029ff7ca2a3f
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Patch Set 5: Code-Review+2
|Change has been successfully cherry-picked as 232e55c027356df7fbdef42ccca46d883a338a53
|Uploaded patch set 1.
|Abandoned

http://review.couchbase.org/#/c/39543/
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1:

Hi Volker, 

Will it be good to comment out the test case rather than removing 
so that it can be enabled for older versions if required.

Please ignore if won't be needed anymore. Thanks!
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 0e00028b5626fb5a4c7e9ea02f3251dba67638e5
|Patch Set 3:

Hi Volker,
Author can merge the change after code-review.
I have merged this change for now.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Topic &quot;38005&quot; removed.
|Patch Set 11: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as db81a782544986bec1f49f35a0406e28a6c9fe89
|Uploaded patch set 1.
|Abandoned

Not required, reverted the original commit
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as 445ef2435a4d8a44378f668f4b97d3cdcc28e457
|Patch Set 3: Reverted

This patchset was reverted in change: Id050527d5ebd307f0094ab7f6d6f4bb0024b54f7
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 20388fdd350f485116d8a21d8550749aeb54849a
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned

Will add new test cases
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 3cd851f9f1bc58e8941006e4c02c9b52339fdf36
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Earlier fix wasn't working, This is verified to be working.
|Patch Set 5: Code-Review+2
|Change has been successfully cherry-picked as 9ebaccb8cccae4b49a0947d2a0671f1e5938f8b6
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

Picked up from http://factory.couchbase.com/job/cs_300_win6408/157/console
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as c435189ea69176d6833b6d443202d6ebb74dac97
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as efd1e5383729f9d783127cb789b2978e257165b2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 390a7c237a1b26866f7f2b45ad91ce09157beb7e
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 15eb882025ad490a05dd5eb25667b4e64442536f
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as e7e2343c90a08552f026fd898960a6d5e98d6598
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1baa24ce8a598ab1b66147275b85c73c624bbd13
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 322e965bff5187442b36d75813b80a277078ff5d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 7: Verified+1
|Change has been successfully cherry-picked as 8ef8ef52469843f9d4cf9684d375029fdd53698e
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d6f34e32beb7b2c188315ae4feebeb9c915dcb77
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d8f5fcc334f6ef8ffc87d6022df26c44c3729a24
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

http://review.couchbase.org/#/c/35267/
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully cherry-picked as 1079d0f3ead880ade13c8c513d9a32a77c2b7c86
|Uploaded patch set 1.
|Abandoned

Abandoned
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as ac19939d62f2b53e5b8948e2a3f1151307f80bd3
|Patch Set 4: Reverted

This patchset was reverted in change: I8fdf00b5ce49cc204cba01b95800f257717141ac
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as dca1883fe6402b0c178cabdae9562db3b35b4975
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 2: Verified+1
|Change has been successfully cherry-picked as f20df6e85fe754c3da7ba16ca790cf5525145055
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as bf3dd6e9a5afd2ebed207c9efb2dd4fed8db5fcf
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 772de89cf222022b1de95373f47f58ac86a1ef91
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Result of 20% DGM run

test_view_ops,ddoc_ops=create,test_with_view=True,num_ddocs=5,num_views_per_ddoc=8,items=200000,active_resident_threshold=20,dgm_run=True,eviction_policy=fullEviction

Run time 694.350s
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 762e5ea10e861763315d8cf2b4aeb8f0e3443c95
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 15f76feba6e9aa810ad45098cc8f1dfaab520ab3
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as b02cbbb512264acd7457f9c5a0934380a4202322
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 3: Verified+1

Rebased. Approved by Iryna
|Change has been successfully cherry-picked as ef5e49855320a42cffc1d546b7c383fbb2f2410d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 6: Verified+1

Rebased, Approved by Iryna
|Change has been successfully cherry-picked as 96104032f32b12550c005d377e8b7ef6a3b4dfc5
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: -Verified
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

Approved by Ketaki
|Change has been successfully cherry-picked as de3c115157f1f4cc54dadebefca2272be1f4e808
|Uploaded patch set 1.
|Abandoned

Abandoned
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Approved by Iryna.
|Change has been successfully cherry-picked as ce9f6deff114274ca908bc3cef0ec7a781aa3d1e
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2

Approved by Iryna. Rebased
|Change has been successfully cherry-picked as 918566343c9d5c6ded38908fd9982e41e4885327
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 1baad4cbfad55e617fa335865d01387b70419037
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2

Rebased and approved by Iryna
|Change has been successfully cherry-picked as e2e2157c490aeadff288b54e6069bf2b002dc0b3
|Abandoned

Abandoned
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2

Reviewed by Iryna.
|Change has been successfully cherry-picked as 64dbeff1a597a50d474adf1f3fe09abe40cc1e91
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 8: Patch Set 7 was rebased
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Verified+1 Code-Review+2

Reviewed by Iryna,
|Change has been successfully cherry-picked as d12af89001cebea6dffb47768757fa499704e6e1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Rebased, Already reviewed by Iryna. Hence submitting.
|Change has been successfully cherry-picked as cabd05d67cbcb13f201a8fe8c06b8f2022c9399e
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Abandoned

http://review.couchbase.org/32809
|Patch Set 3: Code-Review+2
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 802db239047280ea92b21f40b5fe640163517acc
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned

http://review.couchbase.org/31560 created
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 35c969f6582eb68e1094edb34aff7ed88e342545
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Abandoned

Abandon
|Just a small correction: 2 should be appended at the end of the test case name.
|Well, although variable &quot;s&quot; is descriptive because its used as lambda expression, but I think, we could add some comment to define the callback argument of Timer constructor.
|(indentation problem)
please tabify!
|(indentation problem)
please tabify!
|(indentation problem)
please tabify!
|(indentation problem)
please tabify!
|We also need to include this change (lines 51-53) in Enyim.Caching.csproj else it will give a compile time error
|I think you meant &quot;ValueTooLarge&quot;, just a spell-error.
|Patch Set 2:

Please abandon this change and I will submit a new one that fixes the issues mentioned in the comments.
I am not getting the option to abandon it.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Abandoned

Duplicate of http://review.couchbase.org/#/c/34736/
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 5f72c99b8592c17c1f1d645afcf6a4566c6beebf
|Abandoned

duplicate http://review.couchbase.org/#/c/33437/
|Abandoned
|Patch Set 1: Verified+1 Code-Review+1

(1 comment)
|Patch Set 1:

We must verify through assert that row was returned.
|Patch Set 1:

I have question regarding this change, so are we not going to have nuget package dependency on any of these projects now?
|Patch Set 1: Verified+1 Code-Review-1

(5 comments)

The changes look good, however, I have few comments added. Majorly, indentation where we need to insert appropriate tabs.

Once you upload a new patch set with these minor changes, we can commit the changes.
|Patch Set 1: -Verified -Code-Review

@Matt:
I haven't run the situational tests yet with this code change. Since we have a couple of code commits, lets have them all checked-in and I can test then. Please suggest if that sounds good.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1: Verified-1 Code-Review-1

(2 comments)

Please look at the comments, otherwise the change is good.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as 413111ce33f978f2846e49cda16ee70f8d9787b0
|Patch Set 1:

One question: Shall we also keep the information related to submodule init/update and Enyim.Caching signing, in case any user is using older version of the client?
Rest all the changes look very good.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

After disc
|Patch Set 1:

Please ignore the previous comment, can't delete it.
|Patch Set 1:

Submitting the changes as they are good for new release 1.2.7
|Change has been successfully cherry-picked as f87e4742f515c52499e0935e3392737b8aaed21e
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1:

I have tested the changes and they all work good, so I am submitting the change.
|Change has been successfully cherry-picked as 08065903b67915da69242beca845455644c3b5b2
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully cherry-picked as d9fd98ab250342e613ae0b50a6907b301db58215
|Patch Set 1: Abandoned

duplicate of: http://review.couchbase.org/#/c/27417/
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned

Duplicate of http://review.couchbase.org/#/c/27312/
|Patch Set 1: Abandoned

submitted http://review.couchbase.org/#/c/26997/
|Patch Set 1: Abandoned

Refer :
http://review.couchbase.org/#/c/24980/
for the changes submitted here
|Patch Set 1: Abandoned

Refer :
http://review.couchbase.org/#/c/24980/
for the changes submitted here
|Patch Set 1: Rebased
|Patch Set 2: Abandoned

submitting a new change set
|Patch Set 1: Abandoned

Extra files submitted as a part of this change set. Please ignore this change. Resubmitting a new change.
Thanks!
|Patch Set 1: Abandoned

refer http://review.couchbase.org/#/c/23604/
|Patch Set 1: Abandoned

refer http://review.couchbase.org/#/c/23604/
|Patch Set 1: Abandoned

Please review:
http://review.couchbase.org/#/c/23604/
|Patch Set 1: Abandoned

Please review:
http://review.couchbase.org/#/c/23604/
|Patch Set 1: Rebased
|Patch Set 2: Abandoned

Added a new change set, please view here:
http://review.couchbase.org/#/c/23562/
|Patch Set 1: Abandoned

Incorporated changes in the new commit. Please see here:
http://review.couchbase.org/#/c/23430/
|Tab here.
|Method name too long. :)
|If I set the timeout to zero, it works to keep the key/value forever. I may remove the getAndTouch from here because its again doing the same thing. but the first operation is intentional. Do we have a way to tell the client to expire the key as soon as it is set which would then justify the timeout = zero ?
|I do understand where you are coming from. But, I have tried it and it works to set the expiry to forever and works the same as 0.
|I guess this is not required ?
|&quot;test&quot; and 5 may be declared as constants.
|Why do you need this to be volatile ? Is is used in a multi-threaded context anywhere?
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified

Hi Michael,

I have changed the subscribe logic in the Mock class and the Connection factory just catches the Connection Exception and sets the value of doResubscribe as true when its false.
I have verified it. It works fine. 

Let me know if this meets the requirement.

Thanks !
Deepti
|Patch Set 4:

Hi Michael,

I have changed the subscribe logic in the Mock class and the Connection factory just catches the Connection Exception and sets the value of doResubscribe as true when its false.
I have verified it. It works fine. 

Let me know if this meets the requirement.

Thanks !
Deepti
|Uploaded patch set 5.
|Patch Set 5: Rebased
|Patch Set 1: Looks good to me, approved


|Patch Set 5: Code-Review-1

(2 comments)
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

I am not sure why would we not have an exception in case the connection is not established. Honestly, to me it does not make sense to have an assert there in the try block. The flow will anyway not go there.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

I completely buy your point Mark. But, to simulate that scenario, we have to write mock code which fails to connect to the View Node. Otherwise we cannot get the node failure every time we test. Can you please suggest here ?
|Abandoned

Changes in the view layer have been done in cbc.
We don't need these tests now.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2

It would be good if we can add some tests related to this.
But giving you +2 otherwise.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified


|Patch Set 1:

The create bucket functionality remains as is. Only in addition to it,the user can also edit buckets using the client.Why do you think it breaks the backward compatibility ?
|Patch Set 1:

Yes, but I am sure we are not creating the bucket twice anywhere currently. The test using which I found this bug was not any of the junit tests.
|Patch Set 1:

Hi Michael,

I applied this change on top of the latest master and I am able to run the last test without failure. There seems to be a rare reason for a 500 error. Can you please re-confirm ?

Thanks !
|Patch Set 3: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Abandoned

Added another rebased changeset for this.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review-1

Hi Michael,

This issue has been reported in JCBC-325.
Can you please change the commit message to indicate the same.
As well as, please mark the JIRA as fixed. Currently it is showing won't fix.

Thanks !
|Patch Set 2: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Abandoned

Not Required
|Patch Set 1: (2 inline comments)


|Patch Set 1:

This could be a SPY issue instead of JCBC.
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 1: Abandoned

New change set coming up soon.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Abandoned

Taken care by another check in from Michael.
|Patch Set 2: Restored

Test
|Patch Set 2: Abandoned

Tested
|Patch Set 1: Fails

Hi Michael,

I have tried to verify the code by testing it out through SDKD. I am still facing the assertion errors in the failover and readd scenario. Although, I presume this improves another test case.

Just confirm that once.
|Patch Set 1: Verified


|Patch Set 1: Abandoned

Adding new fix
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified

Added the test for resubscriber back off specifically and tested the same.
Please review.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7: Abandoned

Not properly rebased.
Added another CI.
|Patch Set 8: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 1.
|Uploaded patch set 2.
|It should be !=, right?
|this should be non-zero from the get() to do the work, so dont need &quot;!&quot;
get() != 0, we should do the work.
|this one should be zero to setup the timer, so should use &quot;!&quot; in the if statement.
get() == 0, we should set up the sleep timer.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)

see my comments.
|Uploaded patch set 2.
|Patch Set 2: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Patch Set 1: Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned

Resubmitting
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: I would prefer that you didn't submit this

Looks like you forgot to define the macro of atoi_1() in compactor.c (line 69)
|Patch Set 4: Looks good to me, approved


|Patch Set 11: Code-Review+2
|Patch Set 1: Verified


|Patch Set 1: Abandoned

resubmit to rebase on other new merges.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 5: Looks good to me, approved

Automatically re-added by Gerrit trivial rebase detection script.
|Patch Set 5: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7: Abandoned

will be splitted into smaller commits.
|Patch Set 2: Looks good to me, approved


|Patch Set 1: Abandoned

resubmit later
|Patch Set 1: Abandoned

wrong commit
|Patch Set 1: Looks good to me, approved


|Patch Set 1:

Looks like in couch_db.c, the new version does not include the fix for inner node walk API (MB 7502).
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Abandoned

this was a test
