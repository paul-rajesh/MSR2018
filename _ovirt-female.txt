===Database gerrit_ovirt

== Dumping data for table JOINED_TABLE

|use getSelectedItem() if getSelectedItems() is empty.
|Please merge this patch with- https://gerrit.ovirt.org/#/c/40631/6 so that the order of the patches will make sense.
|Can you upgrade a running host?
|The hashName used to be the mapper between the dialog and its documentation.
Now helpTag is the key, I'm not sure why the hashName wasn't completely removed, but in order to keep things working the hashName should be the same as the helpTag.name.

For more details please see https://gerrit.ovirt.org/#/c/21052/19
|Please fix hashName
|The problem is there is inconsistency in the ui. You can have the altert but the upgrade command will be disabled. Please use the same logic for calculating if there should be alert and if the command should be enabled.
|Is 'VDSType.oVirtNode' contains the correct calue for VDSType.oVirtNode?
If so, why 'hasUpgradeAlert'- line 1994, is calculated using getoVirtISOsList?
|Please use ApplicationTemplates instead of constructing the SafeHtml.
|Why do you need this? Are you planning to add the column to SubTabNetworkHostView?
|It worked because you appended the status image.
The only thing that didn't work is appending the id (which I'm not sure why is needed).
|Line 31 is redundant.
Line 33 doesn't do anything. The returned SafeHtml should be appended to the sb.

Instead of 31-33 you should just-
sb.append(templates.hostAdditionalStatusIcon(id, statusImageHtml););
|Although seems it has no use, just to keep consistency, you should call generalModel.setHasAnyAlert();
|1. Please reorganize your patches so this patch will be 
after VdcActionUtils contain VdcActionUtils.UpgradeHost
2. Why not calling model.canUpgradeHost() instead of VdcActionUtils.canExecute(..)?
|I can't use the freeLabels since it calculates the dc labels that are not use by any physical nic.
I need to calculate for each vfs config the dc labels that are not uses by this specific config.
In case of a bond slave, I'm not wrongly swapping free labels to null. Bond's slaves don't have PF labels tab, therefore there is no need to calculate the free labels for nothing.
|Please see the reply in the related comments.
|It is. Please see- https://gerrit.ovirt.org/#/c/36842/
|Calling an overridden method from the constructor of a parent class is not recommended. In this case particularly it will cause NPE since the calculation of originalLabels in PfNicLabelModel using 'srcIfaces&quot; which are not initialized when the NicLabelModel ctor is executed.
|See the previous comment
|As answered in the previous related comment the suggestedLabels contain different data, related to PF only.
|Please see the previous comment.
|When both of the tabs are shown there is a left side tabs bar that has a with of 60px.
|You're right, things will work without the change.
But I prefer to keep it as is for some reasons-

1. Consistency with vfsConfigModel.
2. The view shouldn't work with the business entities, it should work with the model. IMO, it is bad design for the view the check if the interface is bond slave.
The view should just know if the HostNicModel contains NicLabelModel or not. The best way to do it is to init the labelsModel with null value. But because of GWTP restrictions it is not possible (it fails in the initialization level). So, the next best solution is to use an empty state model.
3. Readability and avoiding future bugs. There are two use cases, HostNicModel code should reflect it.
|Done
|Done
|Done
|Done
|Done
|:)
|Done
|Done
|yes
|Done
|Done
|Done
|:)
|Done
|Changed to Map&lt;VdcActionType, List&lt;VdcReturnValueBase&gt;&gt;,
the overload is still needed.
|&quot;decrease every time execution ends (and maybe fails)&quot; will force the subclasses to maintain the state counter. Decreasing the counter at the end of each &quot;branch' can be maintained in one centralized place (UiAction.runNextAction).

&quot;increase the counter every time a an action is added to the flow (by calling then() or and())&quot;- is problematic since in case of an error if the flow the next action won't be executed, therefore the counter will never be decreased. It can cause the aggregated error message not to be displayed.

So IMO, it is ok to leave the code as is.
|You case see a use case example in-https://gerrit.ovirt.org/#/c/36976/2/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/VfsConfigAction.java (line 70)
|I've changed the method to be abstract and added a SyncUiAction class with the default implementation.

The purpose of the method is to contain the inner implementation of invoking the command's 'business code' and invoking the next action.

Asynchronous actions like UiVdcAction and UiVdcMultipleAction
override this method to invoke the next action after getting the result of the current action from the server.

Synchronous actions (for example https://gerrit.ovirt.org/#/c/36976/9/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/VfsConfigAction.java) should now extend SyncUiAction and only override 'onActionExecuted' to contain their 'business code'.

The method is package private and should be overridden just by infrastructural action classes that want to change the inner flow of invoking the next action.
(Please notice I moved the four action classes to package org.ovirt.engine.ui.uicommonweb.action).
|I removed this method from this class and moved it to SyncUiAction as explained in the previous comment. I hope it makes things clearer...
|Changed to ActionFlowState.
|You are correct! Changed to Map&lt;VdcActionType, List&lt;VdcReturnValueBase&gt;&gt;
|You're just trying to finalize, if it is not the last action in the flow you won't finalize.

Multiple actions case have it own class and implementation, so I'm not sure how it is related to here.
(any way, if you continue the execution, it means the 'State' counter is not zero, so eventually the finalize won't be invoked.)
|It is a leftover from before I've added the failures aggregation.
Removed the continue, thanks!
|Done
|Done
|I'm adding the same key to the actions several times- please refer to lines 70-72
|Done
|Done
|Added an UnsupportedOperationException in case a finalAction it set twice.
Updated the finalAction's documentation to reflect better its behavior.
|That's what I wrote you as a reply to your comment on patch set 5-
You can see a use case example in-https://gerrit.ovirt.org/#/c/36976/12/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/VfsConfigAction.java (line 71)

My need is to create an action which contains a new action flow which extends (parallel to) the original one.
That is the original actions flow-
setupNetworks.then(getCommitNetworkChangesAction()).then(getVfsConfigAction()).onAllExecutionsFinish(closeAction);

In this case, getVfsConfigAction() contains another action flow (for updating the vfs config, adding and removing the networks/labels).
Lets call the this new flow- vfsConfig action flow.

Just when &quot;getVfsConfigAction()&quot; from the original flow is executed (&quot;onActionExecute()&quot;), we're executing the new flow.
It means that in this stage we can't add parallel or next actions to the original flow, it can be done (and take effect) only before running the original flow.

So, the way to add the new 'vfsConfig action flow' to the original flow it to use the same flow state.

Done- changing the name to runParallelAction(..).
|I want the actions within vfsConfigAction to run only if (and after) the CommitNetworkChangesAction succeeds.
|Please refer to my response to the long comment:)
|Please my response to your comment in UiVdcMutlipleAction.
|This method cannot be private, it is executed by the sub classes.
I changed it to pachage protected, I don't see any reason for non-infra action classes to call it.
For example https://gerrit.ovirt.org/#/c/36848/19/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/action/UiVdcAction.java (line 82).

What other methods?
|The method cannot be private. It is called from the subclasses.
For example- https://gerrit.ovirt.org/#/c/36848/19/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/action/UiVdcAction.java (line 98).

It is package protected since I didn't see a reason for non-infra action classes to call it.
|Done
|Please refer to my response in UiVdcAction.
|Done
|I eventually convert the map into two lists because it was the original code and I didn't want to refactor all of it.
But the correct data structure to store the errors is a map (instead of maintaining two lists that should have the same size and order). I prefer to write the new code with the correct data structure and later convert it, over writing a new code with a wrong data structure from the beginning.
|Renamed it to showErrorDialogOnFirstFailure.
|Done
|I suffices my current needs. so as you wrote, it anyone will need it he can add it:)
|1. I don't want to refer on Frontend.runMultipleAction() implementation. I prefer to leave it as is.
2. shouldExecute will still be required, it is a core method in the UiAction flow. The intention of 'shouldExecute()' is to be able to create on permutation of a flow (althogh that is some use cases different actions in the flow wouldn't run).
Please see an example in- https://gerrit.ovirt.org/#/c/36976/12/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/HostSetupNetworksModel.java (line 1069)
|Done
|There is a specific test for this use-case in each of the sub-classes.
Since the sub-classes have different behavior in this case the test couldn't be common.
|What for should I store whether the callback had run? I'm executing the callback via the test, I know if it ran.
I should verify whether the runAction had run.
|I'm not sure why did it take you so long to figure out the behavior.
'verifyRunActionAndExecuteCallbacksRandomly(..)' as its name specifies, is a composition of two methods  
'verfifyRunAction(.., exepectedNumOfRunActionExecutions)'- verifies the Frontend.runAction was exucted 'exepectedNumOfRunActionExecutions' times and return the callback of all the executed actions. 
'executeCallbacks(.., callbacks)'- executes the callbacks that were passed to the method.
The callbacks are executed in a random order to simulate the real life behavior of getting the responses from the backed in a random order.

The method is generic and therefore unaware to the content of the callbacks it executes. So I don't really understand why did you except if to do the 'future' checks.

As you see, in this case 'verifyRunActionAndExecuteCallbacksRandomly(..,1)'- verifies that only ONE runAction was executed and therefore it executes only its ONE callback.
Since its callback executes another runAction. Line 99- verifies that up to this point 2 runActions had run. Line 100- executes just the callback of the last action (since the callback of the firs action was already executed).

If you have a better suggestion of how to write this code I will be happy to hear.

Meanwhile, I've added a new overload to verifyRunActionAndExecuteCallbacksRandomly that excepts 'numOfCallbacksFromTheEndToExecute' parameter. So now line 99 and 100 are combined to one method call.
Also, added java docs to verifyRunActionAndExecuteCallbacksRandomly, verfifyRunAction and executeCallbacks.
|same answer
|Please refer to the test in line 144, that is exactly what it verifies.
|It is a complex case. I hope my explanation in the previous comment helped you to understand.

The flow is action1.and(action2).next(action3).and(action4), action1 has an error.
In mean that-
phase 1- action1 and action2 will be executed.
phase 2- action3 and action4 will be executed from action2's callback.

line 126- verifies phase 1, 2 Frontend.runAction were executed. One of action1 and one of action2.
line 129- executes action1's callback, the return value that is passed to the callback is 'succeed=false' on the return value, since action1 fails (it should affect the flow since action1 doesn't have actions that depend on it).
line 132- executes action2's callback with 'succeed=true' on the return value.
line 135- since action2's callback was executed in line 129, now action3 and action4 should have also been executed. So now, the total number of executed 'Frontend.runAction' should be 4.
line 138- executes the callbacks action3 and action4.
|Done
|Done
|Done
|The state consistency check is ran on each assertAllDone.
assertAllDone is ran when the flow is finished.
Each flow (unless there is a bug/exception) should be finished (counter=0), no matter if there were failures or all succeeded.
So, in my opinion, the check here is enough.
|There is, if the flow has stopped because of an error in one of the previous actions.
That's why I pass to the assertAllDone just the list of actions that should have actually run.
|As I wrote in the answer to the previous comment.
UiVdcAction and UiVdcMultipleAction have different behaviour in this case.
UiVdcAction- Doesn't run the next action in case of a failure.
UiVdcMultipleAction- runs the next action in case of a failure in one of the multiple actions.
|same answer.
|1. If the error dialog is shown it means the errors are not collected. Therefore, at the end of the flow there are no errors, as if everything finished successfully. Change the method name to assertFinishedWithNoErros, I hope now it is clearer.
2. I don't. This is a test class for UiVdcAction. I'm not testing the functionality of other classes.
|Done
|it is the syntax, it doesn't pass compilation without the eq.
|That's the error I get when running the test without the eq-
Invalid use of argument matchers!
4 matchers expected, 3 recorded.
This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(anyObject(), &quot;raw String&quot;);
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(anyObject(), eq(&quot;String by matcher&quot;));
|Created a common test method this test and runNextActionFlowWithFirstActionFailureTest that receives waitForResult as a parameter.
|Created a common method that receives waitForResult as a parameter. Splitted the test into two.
|same answer
|Done
|Done
|Done
|Done
|Was discussed in the design review level. Decided it is clearer this way.
|This code is changed in a later patch.
|Done
|Sorry, no done. In a later patch it is changed to model.getLabelsModel() != HostNicModel.EMPTY_LABELS_MODEL
so this code is just temporary, not worth the effort of changing it...
|Done
|Done
|It is just a placeholder. In a future patch it is initiated with empty model- https://gerrit.ovirt.org/#/c/36260/30/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/HostNicModel.java
|I changed it to a list in one of the next patches- https://gerrit.ovirt.org/#/c/36355/31/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/VfsConfigModel.java
|The networks are already sorted. They are returned sorted from the backend query.
|It is not VF setting it is the setting just num of vfs setting.
Changed to- &quot;Number of VFs setting&quot;
|Done
|In order to inject it using gin. Moved it to ClientGinjectorExtension which extends WebAdminGinUiBinderWidgets
|yes
|Done- removed line 77
|Done
|Done
|We can, but since we have just vm_ids and not the whole vm entity we'll have to query it from the db.
All the places that invokes &quot;processOnVmStop(..)&quot; have a &quot;free&quot; host_id, I think it is a waste to add a redundant db query just to safe the parameter.
|Maybe I miss something, but I'm not sure, how get I get the vmAnalyzer/vmUpdater via the VdsEventListener?
|no, mistake. Fixed:)
|Done
|Done
|Done
|The vmId in the db should be null×ª the vfs list is not affected by invoking hostNicVfsConfigHelper.removeVmIdFromVfs(vmId);
|I need it here because the tests fail without it.
So I whether had to mock hostDeviceManager in the tests or adding this 'if', adding the 'if' was easier:)
If you insist I can add add to all the other places, but IMO it is redundant.
|when the vdsm stops the vms.
|Done
|It is still needed since releaseUsedHostDevices() doesn't take care of vfs (it take care of vm device that have 'hosdev' type, vfs has 'interface' type).

Modified the code to refresh the host if host-devices (not just vfs) were attached to it.
|Done
|Done
|Good catch! Thanks!!!
|Done
|The code is in VdsEventListener. line 261- ResourceManager.getInstance().getEventListener() references to it. Changed it to getVdsEventListener().
|Done- That was my intention ,oops:)
|Done
|Done
|Done
|Soory, there is just one call to   getVdsEventListener().refreshHostIfAnyVmHasHostDevices and it is from here. Moved all the logic to VdsEventListener.
|VdsEventListener already have refreshHostIfAnyVmHasHostDevices method.
Most of the calls except this one to getVdsEventListener().refreshHostIfAnyVmHasHostDevices don't need opening a new thread.
I can add a 'runInNewThread' parameter to the method, but I think it is less readable.
|http://wiki.ovirt.org/Feature/SR-IOV
VF- virtual function
PF- physical function

If a vnic is marked as 'passthrough' the scheduling should find a host with a suitable VF. Please refer to the feature page for more details.
|I had to do it because of design restrictions. But since the 'hostToVnicToVfMap' was moved to a singleton class, as you suggested, this code was removed.
|Now, in addition to scheduling a host, the scheduler also schedules virtual functions.
'passthroughVnicToVfMap' is used as the vfs scheduling result holder.
Instead, I could expand the result to contain host and vfs.

But since I followed Roy's and Michal's suggestion, I stored the vfs scheduling result in a singleton class called VfScheduler, and this extra parameter was removed.
|Done
|hostNicVfsConfigHelper is a utility class, it doesn't have state.
|1. I can't remove the cleanup from line- 256, since it doesn't invokes runningFailed.
2. I moved the cleanup from line 261 to runningFailed.
The reasons for doing it are- 
1. Although runningFailed invokes ProcessDownVmCommand
(ProcessDownVmCommand is cleaning the passthrough vnics (https://gerrit.ovirt.org/#/c/38624/3)) I prefer to do the cleanup here, to avoid calling redundant VDSCommandType.CollectVdsNetworkData by ProcessDownVmCommand.
2. there are 4 use cases for invoking running failed. For now, just one is relevant. But it is more secure to do the cleanup in runningFailed.
|Done
|I need it here because the SchedulingManager (see the next file in the patch- line 530) sets it while iterating over all the PolicyUnitImpls. The alternative is using instanceOf to determine if the PolicyUnitImpl is NetworkPolicyUnit.
|I agree with you. But it is the current design and not related directly to this patch.
I will discuss it with SLA team a will (or they will:)) send a new patch with the redesign.
|Done
|Done
|Yes, it will be null when it will be executed by the canDoAction of the runVmCommand. We don't need the map (because we don't need to update the db), but the check is still needed.
|If the vnic is passthrough the network cannot be null.
I can add the if-&gt;continue, but it is not necessary.
|Done- now it has &quot;just&quot; 3 levels.
Also found out a bug- I didn't take into account that more than one vnic can be 'passthrough', and the same vf can be scheduled to all/some of them.
|1. Added caching for the host nics.
2. You're right! Fixed it.
|Shouldn't it be- if (totalStatsReported) ?
|Please check iface.getQos() != null
|IIUC, the lock is needed to prevent the following scenario-
RunVm-&gt;Marking the devices in the host_device table as used by the vm (the VDSCommandType.create command still wasn't called)-&gt; Calling RefreshHostDevicesCommand- calling VDSCommandType.HostDevListByCaps (the devices that were marked as used by the RunVmCommand will no longer contain the vm_id)-&gt; calling VDSCommandType.create.

To avoid this, the lock should be acquired before calling the vdsm verb, otherwise it is useless.
|Apparently, the vm id that is reported by the vdsm is the one that was passed to it by the engine. If a device was attached to a vm via a hook, a vm_id won't be reported.
It means, the vdsm.vm_id doesn't have any extra value and can be ignored by the engine. If the engine ignores it, the race in the previous error can't happen.
So, ignore my previous error:)

The fix that should be done is, NOT reading the vm_id from the vdsm. I will send a patch with this fix.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I'm not sure what is more efficient- fetching all the vms in one query or having multiple queries to fetch a small set of the vms (in most of the use cases it will be just few vfs)...
But if you're sure it is more efficient I will change it.
|Added a stored procedure.
|Done
|Done
|Done
|Done
|The cando uses- !validate(vmValidator.vmNotHavingPassthroughVnics())
It is confusing, but the name is ok.
|Changed to getDbFacade() instead of DbFacade.getInstance()
|Another predicate is already imported- import org.apache.commons.collections.Predicate;
|Done.
The cando is used just via the MigrateVmCommand cando, which has only one vm. But you're correct, the method should work for all the scenarios.
|Done
|Done
|Done
|Fixed in a new patch (the next one).
|Done
|Yes, I verified. Where are the test utils?
(I will move it to the utils (after you'll tell me where are they) in a new patch).
|Done
|Done
|Done
|As you mentioned in a later patch, the context of the can do action is known. The host name should be added just to the audit logs.
|Done
|Done
|Done
|Ignoring as you asked in a later patch.
|Done
|Done
|Done
|The base class uses injection (the getters are needed for the test classes).
|Done
|Done
|Didn't remove the getter since it is used by the tests.
|Done
|Since VfsConfigCommandBase extends VdsCommand&lt;T extends VdsActionParameters&gt;.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|IIUC, moving to a cluster from a different dc is allowed if it contains network with the same name (the nic-network will be marked as unsync if the vlan or mtu are different).

Please make sure this behavior will remain when moving to the new networking api (IIRC, it compares networks via id and not name, which can cause the old mgmt host-network to be unmanaged and the host to remain without a cluster management network).
|Done
|Done
|Done
|Done
|Done
|Done- assertThat(capturedDevices, hasItem(vf));
|It is problematic for the tests, I will have to add getter for the dbFacade and override it to return the mock.
For each dao, I will also have to add-  doReturn(xDao).when(dbFacade).getXDao();

IMO, the way is it implemented now is more elegant.
|Done
|Done- provided a description to the error.
It shouldn't be brought up to the user's intention since you'll get the exception just if you have a bug.
|Done
|Done
|Done
|Done
|Please add static import
|same
|Done
|Done
|Done
|Done
|Done
|Please remove it from UiConstants
|Same
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|HostNicVfsConfigRowMapper is static class. Can't reference to the outer class members.
|Done
|Done
|Done
|host_nic_vfs_config_network/label are just m2m connector tables. I don't think they deserve their own dbFacade. The tables are not independent and used only by hostNicvfsConfigDao.
|This method is used by the tests.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Eli said- &quot;prefix booleans with is_&quot;, imo, standard is more important than grammar.
|Done
|Done
|Done
|1. Done.
2. HostNicVfsConfig isn't used a field of any VdcActionParameters class, so there is no need for annotations here.
The fields of the parameters classes have annotations.
|Done
|Done
|Done
|Done
|yes, it can be null.
|Done
|HostNicVfsConfigHelper contains the business logic for analyzing the network host devices (there is more than one type, not all of them has networkInterfaceName), I don't think it is better to move this logic to HostDeviceDaoDbFacadeImpl and then using instanceof to identify the type of the device.
|Done
|Done
|Done
|done- changed to varying(50), same as name column in vds_interface.
|Please add test for- detachedClusterMovesToDcWithExistingManagementNetwork
|Isn't it redundant now you extend CommonCodeTest?
As I understand it is enough to dbFacadeMock=DbFacade.getInstance();
|I'm not sure why do you need Theories here.
|Isn't it redundant now?
As I understand you can replace this line with mockDAO() (and there is no need for mockDAO to return a value).
|Why did you remove Mockito.verifyNoMoreInteractions(storagePoolDao, vmNicDao, macPoolDao); ?
|It means whether the user will get a dialog for setting the maintenance reason when moving the host to maintenance.
This field is relevant only to ui. But since in the very near future the ui will work over rest, it seems reasonable to add it to the rest.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Yes, the vds doesn't contain the reason. So, when moving the host from preparing to maintenance to maintenance the reason is removed. 

Done- using getDbFacade()
|Done
|Done
|Done
|1. I agree with Allon. Previous 'left overs' should be cleaned.
2. IIUC, removal of the vm_interface_statistics will cause removal of the vm_interface with the same id. You need the opposite-
SELECT fn_db_create_constraint('vm_interface_statistics', 'fk_vm_interface_statistics_vm_interface', 'FOREIGN KEY (id) REFERENCES vm_interface(id) ON DELETE CASCADE');
|Now there is missing space:)
|Why do you add the RuntimeException() parameter?
|redundant spaces before the NLS comment.
|logString += &quot; &quot; + e.getLocalizedMessage();
|Please run formatter on this method.
|please rename to rxRate
|please rename to txRate
|Why not-
stats.current = reported
stats.offset = 0 ?
|I'm not sure how can we get the same mac twice, but what about rx/txBytes and sample time?
|Shouldn't the rate extraction be done just for old versions?
|same
|Didn't find any use case of this field for vms.
|what about the sample time?
|Please add tests for getting and setting the new fields with null and non-null values. (Seems that it should be part of the non-existing NetworkStatisticsDaoTest, so please create a test class and at least add these tests).
|please format
|s/Hets/Gets or Returns
|transmitBytesOffset
|Please place the method after getTransmittedBytes(..)
|Since you're already refactoring the Cloner class, consider removing the logic from it and moving it to a copy ctor.
|Seems that the previous test indeed didn't tested anything.

But-
If an interface doesn't have entry in the statistics table, dao.getAllInterfaceForVds(..) won't return this interface in its result set. Since the result is a join of the interface and the statistics table.
You should check that 'after' doesn't contain interface with id FixturesTool.VDS_NETWORK_INTERFACE.

BTW, iface.getStatictics is never null, the default ctor of VdsNetworkInterface sets default value to the statistics.
|Please add tests for more than one management network in the dc.
|Please add test for lowerVersionMgmtNetworkAndRegularNetworks
|Please add the same test for two management networks
|the parameter can be just networkId, the method not related to management network.
|The test name is &quot;lowerVersionMgmtNetworkAndRegularNetworks&quot;,
I don't see here-' addManagementNetworksToPool()'.
In addition, I think that you also should call &quot;setupNetworkValidator(true)&quot;.
|s/numberOfNetwworks/numberOfNetworks
|s/retrievees/retrieves
|Please move this file to a separate patch and add the infra guys a a reviewers.
|Now this method is in ManagementNetworkUtil the comment should be slightly updated.
You can remove this comment, you have a correct comment on the interface.
|Where is the opening tag of &lt;/p&gt;?
|As I wrote on patchset 15, i&quot;m not sure this validation is needed any more. Is there any special reason a management network name cannot be updated but a regular network can?
|If you will explain me why this validation is needed, please use- !StringUtils.equals(network.getName(), newNetwork.getName()))
|The canDoAction validates that the renamed network is not used by a host as part of notRenamingUsedNetwork.
|Please reply to the comment from the previous patchsets-
'I&quot;m not sure this validation is needed any more. Is there any special reason a management network name cannot be updated but a regular network can?'
|Please format
|You will throw a validation error in any case management network is updated. I don't think it is the purpose of the notRenamingManagementNetwork() validation.
It should just check if the mgmt network was renamed.
Although I&quot;m not sure we need this validation any more since we don't identify the mgmt network by its name.
|You can use- getParameters().getOldNetworkName(), no need to query the db.
|Notice there is a comment about the renaming in the commands- please rewrite/remove the test according to the changes in the command.
|same.
|I would move this method to ManagementNetowrkUtil
|Why not moving it to Utils?
|Why did you remove these two tests?
|Why do you need the capture? Haven't you already verified it by doing- eq(TEST_NETWORK_CLUSTER_ID) and verifying it was called only once?
|The management network can't be null, I&quot;m not sure why do you need this test.
I would add a test for- underTest.isManagementNetwork(null, TEST_CLUSTER_ID) and maybe even- underTest.isManagementNetwork(TEST_NETWORK_NAME, null)
|Should be networkName (the management network is TEST_NETWORK_NAME)
|Same comment as on patchset 14- I don't understand the sentence (maybe the 'mapp' is redundant?). Please rephrase it.
|Same commet as on patchset 14- 1. This change isn't related to you patch. 2. Please use the standard formatter.
|I don't understand the sentence (maybe the 'mapp' is redundant?). Please rephrase it.
|1. This change isn't related to you patch.
2. Please use the standard formatter.
|s/GetNetworkByByNameAndDataCenter/GetNetworkByNameAndDataCenter
|s/GetNetworkByByNameAndDataCenter/GetNetworkByNameAndDataCenter
|Please add more informative comment.
|You can use- isAddedToStoragePool
|redundant- you are inside an if that has already checked it
|I think it is better to store the newly created networkCluster in managementNetworkCluster as part of createManagementNetworkCluster (you can rename it to getManagementNetworkCluster).
|Please add tests for-
1. There is no default management network.
2. The is management network but the cluster is not empty.
|why do you use the TEST_MANAGEMENT_NETWORK_ID?
|Please format with the standard formatter.
|Please format.
|Yevgeny, please see the comment on patch set 25. You've marked it as done, but it is still unformatted. Please format it with the common formatter (you can find it in &lt;ovirt-src-root&gt;/config/engine-code-format.xml)
|Still unformatted.
|Why is it in comment?
|Please notice the command executed here is AttachNetworkToClusterInternal and not AttachNetworkToVdsGroupCommand.
The internal command doesn't contain the host related code.
|This patch contains also webadmin code. Please update the comment prefix to &quot;engine,webadmin:&quot;
|What about UpdateNetworkOnClusterCommand? Doesn't it replace it?
|IIUC, you need all the permission related code in this patch because you need a combined permissions check for ManageNetworkClustersCommand,
since the Attach, Detach and Update are called internally and internal command skip the permissions check.

Why not adding to CommandBase an option to run an internal command without skipping the permissions check?
You can add a new parameter- CommandBase.forcePremissionCheck
which is false by default.

overload CommandBase.runInternalAction-
CommandBase.runInternalAction(VdcActionType actionType, VdcActionParametersBase parameters, boolean forcePremissionCheck)

Modify- CommandBase.isUserAuthorizedToRunAction to skip permissions check just in case of isInternalExecution() &amp;&amp; !forcePremissionCheck

This way, you can use your new runInternalAction with permission check and omit all the permission related code in this patch.
|What about updateNetworkOnCluster?
|same- what about update?
|It seems there is a bug here.
If a non-vlan labeled network was removed, it won't be reflected in the combined result.
1. If the networkName of the nic equals to the network name of the same nic in the original list=&gt; you should take the network name from the AfterRemove list.
2. Otherwise, you should take the network name from, the add list (it means you can add the nic as is, you don't need to modify the network name).
|The original code had 'messages.clear();' here. What is the reason for removing it?
|Shouldn't you update the messages just in case the permissions check fails. i.e- before the 'return false;'?
|Why do you need the 'clusterId' parameter? You can use networkCluster.getClusterId() (in case networkCluster is null, you can pass null).
|IIUC, this code is a legacy code from the time AttachNetworkToVdsGroup was used by the ui for updating existing networks.
Since today updating existing networks via attach command is blocked by a canDoAction, this code is redundant.
|I think- &quot;isNetworkClusterExist&quot; is a better name.
|why not- networkClusterDao.get(networkCluster.getId());
|Please call- super(parameters)
|You didn't replay to my comment on patch-set 22- &quot;I think the previous name attachNetworkToHosts was better&quot;. Or at least, &quot;attachLabeledNetwork&quot;
|Please format
|s/sequencially/sequentially
|What about the replacements?
&quot;${action} ${type}. Network cluster ${NetworkCluster} appears more then once.&quot;
You can override- setActionMessageParameters()
|s/isSetupNetworSupported/isSetupNetworkSupported
|Since AttachNetworkClusterPermissionsChecker has the same method, maybe you can add it to a utility class.
|Shouldn't it be outside the for loop?
|Shouldn't it be outside the for loop?
|Why did you remove the public modifier?
|Why not- 712, 713?
|Please add javadoc
|Seems that the changes in this file are not related and not used by the current patch.
|Please be consistent with the naming. In the backend you called it- NotPredicate.
|Please remove the comment.
|Please update the comment according to the updates in the code-
-Attaching the management network first is the responsibility of the client. Otherwise, the command will fail.
|Same here- the name of this class was changed.
|All the changes in this class have to be in a separate infra patch and also reviewed by an infra maintainter.
|1. Why not just calling- runInternalMultipleActions(actionType,
                new ArrayList&lt;VdcActionParametersBase&gt;(Collections.singletonList(parameter)));
Why do you need the wrap method?
2. If you'll listen to my advices and will decide not to call PropagateLabeledNetworksToClusterHostsCommand in a separate thread (see the comments on AttachNetworksToClusterCommand and AttachNetworkToVdsGroupCommand) this method won't have any use case, a therefore should be removed.
|This method is never used. I don't see any reason to keep it.
|I think you should implement this method internally wherever you need it. It is not a general use case. Generally, you don't know if the internal actions modify the parameters list. And if it is, it is problematic to later rely on this list.
|Please format with the regular formatter.
|Please fix the comment (remove the attached...)
|You should also call to super.validateAttachment(networkClusterValidator, network), the are lot of validations that need to be performed.
|I think the previous name attachNetworkToHosts was better.
|1. You can use the runInternalActionAsynchronously.runInternalActionAsynchronously. A new method you introduce in this patch. But-
2. I'm not sure there's a real need for a new thread here. Since PropagateLabeledNetworksToClusterHosts calls PersistentSetupNetworks in a multiple action each PersistentSetupNetworks will run in a separate thread (see ParallelMultipleActionsRunner). I'm not sure the overhead of creating a new thread is not bigger than just running ParallelMultipleActionsRunner in the same thread. Except of the PersistentSetupNetworks call there in just a small calculation which in my opinion doesn't worse a thread. But as you wish...
|See the previous comment. This method can be removed.
|Please see the comment in AttachNetworkToVdsGroupCommand.java. I'm not sure there is a real need for a new thread here.
|Since multiple action on attach is now blocked. This command should support attaching networks from different cluster as well.
In case of different clusters you pass null as the vdsGroupId. As I wrote in the ui code, it is bug prone. You should create a new parameter class for this command, which doesn't extend VdsGroupParametersBase.

As I see you have two options-
1. Fix this and PropagateLabeledNetworksToClusterHosts to support multiple clusters.
2. 
 2.1 Change the parameter of this commands to  List&lt;AttachNetworkToVdsGroupParameter&gt;.
 2.2 Leaving PropagateLabeledNetworksToClusterHosts sd it and calling it separately for each cluster (using runMultipleAction).

I prefer approach 2.
|should be- attachNetworksToClusters()
|Please format
|You can't extends vds group command base since this action is not per vdsGroup.
|In case of attaching networks form different clusters you will get NPE here.
|In case of attaching networks form different clusters you will get empty list here which will cause not don't the setup networks at all.
|Please format
|Why reverse? Maybe notPredicate or NegativePredicate?
|What if the management network is set via the update. You should do the set of management network first, whether is is set via attach or update. On onSuccess of mgmgt set you should do all the other attached, updates and detaches.
|runAction is asynchronous. Calling one run action before the other doesn't mean the first action will be performed before the second. Most of the chances they will be performed at the same time in different threads. So, you don't guarantee here the mgmt attached will be performed first. To guarantee this you should call the second run from the first action's onSuccess method.
|what about the doFinish()?
|Same here, what about the doFinish()?
|ClusterNetworksParameters gets the clusterId. It means it should be used for networks on the same cluster. This is not the case here. So whether remove the clusterId from the parameters class or use a new class for your command.
|Please do static import to-
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.when;
|p.s- what about the detach (multiple and single)? didn't see any patch related to it.
|Please rename the class. You have AttachNetworkToVdsGroup and now you call this class AttachNetworkToCluster, it is really confusing since the names are synonymous. Consider calling the class- AttachNetworkToClusterInternalCommand.
|Moving the canDoAction to here it problematic. Since the ui executes- runMultipleAction(VdcActionType.AttachNetworkToVdsGroup) the can do actions that are returned and displayed in the ui are the the canDoActions of AttachNetworkToVdsGroup.
Since in running mulitiple action the action returns after executing all the canDos, the canDos of AttachNetworkToClusterCommand (which is ran internally from AttachNetworkToVds) will never be displayed.
|Why should this command be transactive? The only transactive part is calling internal command- AttachNetworkToVdsGroup.
You can pass parameters.setTransactionScopeOption(TransactionScopeOption.RequiredNew) to the command to make sure it runs in new transaction.
|Should be changed to- RequiredNew.
Please see the comment on the class declaration.
|Why do you need this?
|The CommandBase has runInternalAction method. It should be called in order to execute internal method.
http://www.ovirt.org/Wiki/Engine_Command_changes - point 2.
|Can be removed.
Please see the comment on the class declaration.
|Again- why do you need this?
|Why do you run this command as multiple actions?
|Same- as I understand there is no need to run the command as multiple action, it is only a single command. So there is no need to put the parameters in a list.
|Shouldn't you return in case attachNetworksToClusterResult is false? (although I think you should run PropagateLabeledNetworksToClusterHosts just on the parameters that their AttachNetworkToCluster action has passed).
|If you have just one parameter, why do you run it a multiple action?
|This sort is not enough. When the ui manages the network in a cluster he is performing 3 multiple actions- attach, detach and update. So sorting just the attaches is not enough. Mabe the new management network is set via the update.
I can think of two options to solve the issue-
1. Sorting in the ui side- first updating the management network attachment. On the success of this update- doing all the rest, same as before.
2. Adding a new backend command for manageNetworkCluster- it will be invoked from the ui instead of the three multiple actions, and will do the sorting described in 1 internally.
|Why do you check that all can do action pass a rollback otherwise?
The updates and detaches which are done from the same dialog are ran as multiple action and don't check it.
You should keep the same behaviour here, or fix the update, detach behaviour.
You can use (add overload to runMultipleActions)-
runMultipleActionsImpl(VdcActionType actionType,
            ArrayList&lt;VdcActionParametersBase&gt; parameters,
            boolean isInternal= true,
            boolean isRunOnlyIfAllCanDoPass=false,
            boolean isWaitForResult=true,
            CommandContext commandContext)
To keep all the actions in one transaction you can keep the TransactionSupport.executeInNewTransaction and pass Transsaction.Required to the parameters.
Although I am not sure why do you need to have one transaction for all the attaches. You can make the AttachNetworkToCluster transactional and remove the transaction treatment (when calling to AttachNetworkToCluster) from AttachNetworkToVdsGroup and from here.
|Please format.
|You've added this line to VdsGroupCommandBase, so you don't need it here any more.
|You should remove the override of this method from UpdateNetworkOnClusterCommand.
|Please format.
|please format
|Or even to org.ovirt.engine.ui.uicommonweb.Linq if you'll move the sort logic to the ui.
|Please move to org.ovirt.engine.core.common.businessentities.comparators
|Please format the class.
|1. Shouldn't you return toInteger(management1) - toInteger(management2)?
You want the management network to be first. It means the management network must be greater than other network. You're returning the opposite.
2. But either way, I would return Boolean.compare(management1, management2)
|Maybe- isManagementNetworkParameter?
|You don't need this check, you can call directy- param.getNetworkCluster()
|As I wrote and explained in the previous patches- please don't use the locator.
|I'm not sure you still need the comparator. Added comments in case you'll still somehow use it:)
|maybe- compareEqTrue?
|maybe- compareEqFalse?
|1. Please give more informative name than 1 and 2.
2. Please add comment bofore each test or split it to smaller tests with informative name.
|This is non-vlan nic, it can't be null (can't be removed).
|1. The name of the method is unclear, maybe- getNonVlanCombinedNetworkName()
2. The method can be shortened to-
if (Objects.equals(networkNameAfterAdd, originalNetworkName)) {
return networkNameAfterRemove;
}
return networkNameAfterAdd;
|Maybe- Updated the flows that can set a network as a management.
|This can be removed.
|The commands that were updated are-
AddVdsGroupCommand- Now it's possible to pass the management network id for the new created cluster. The command would use the supplied id or would try to guess the default management network.
AttachNetworkToVdsGroupCommand, UpdateNetworkNetworkOnClusterCommands- added validation checks for the new management network (if it was changed).
|Please rename to managementNetworkCluster to more accurate.
|Why do you need a method for this? It is called only once and can be one line.
|s/valdateDefaultManagementNetwork/validateDefaultManagementNetwork
|Please see the comment on patch set 8. This validation is harmful and redundant.
Please notice that now you remove the migration validation there is no need to create the networkCluster in this stage and you'll get NPE at the execution stage (since it assumes the networkCluster is initialized).
I konw I told you to add the network cluster as a d.m. But now after rethinking it again and having this NPE I think it is better to delete it and create the networkCluster locally in the canDo and the execution.
|See the previous comment.
|Maybe- createManagementNetworkCluster
|Please see the comments in the base class. This method shouldn't be overridden. Instead you should override isManagementNetworkChanged.
|Please see the comments in the base class. This method shouldn't be overridden.
|1. You should pass the persistent network since the validations checks some properties which can be not set on the parameter network.
2. You don't need to pass the network as a parameter. Just use the getPersistedNetwork in the implementation of validateAttachment in the super class.
|You don't need the super...
|Consider adding an abstract method getNetworkClusterValidator. so you won't need to pass it via the parameters.
|As I wrote in the Attach class. You don't need the network parameter (and pass the wrong one in the attach class), you just should use here getPersistedNetwork.
|This check is relevant just for setting a network to be management. So maybe you can call it- managementNetworkSet.
|You can have a default implementation-
isManagementNetworkChanged() &amp;&amp; isManagementNetworkChangeForbidden()

The isManagementNetworkChanged() can be abstract.
|You should have a specific error message for this case. Now, the message you display- ACTION_TYPE_FAILED_MANAGEMENT_NETWORK_CANNOT_BE_CHANGED=&quot;.. Changing management network in a non-empty cluster is not allowed&quot;
You will get this error even the cluster is empty and you unset the mgmgt network.
|Please see the previous comments- this method shouldn't be overridden.
|As I wrote in the previous comments, you don't need the parameter.
|Please format with the regular formatter.
|As we talked, try to avoid this.
|After you'll fix the validator, you should have a new validation error here.
|After you'll fix the validator, you should have a new validation error here.
|Why did you remove the call to validateAttachment(networkClusterValidator) ?

I think I meant in my previous comment (It was so long time ago that I'm not sure) you don't need the prefix &quot;super.&quot;
|In case of mgmt network, shouldn't you call setNetworkExclusivelyAsManagement(..)?
|you can use the 'network' parameter instead of getPersistedNetwork()
|As I worte in patch set 17- &quot;This check is relevant just for setting a network to be management. So maybe you can call it- managementNetworkSet.&quot;
You are checking just if the network became mgmt and not if mgmt network became a regular one.
|s/getVdsGao/getVdsDao
|You should check just if the network became mgmt.
networkCluster.isManagement() &amp;&amp; !oldNetworkCluster.isManagement()

In the current code, managementNetworkChange will also catch (in some cases) unsetting of the mgmt network. This is not desired since there is a special validation for the unsetting.
|Since managementNetwork is used only in this method, it can be a local variable of the method. I don't see any reason to make it a d.m of the class.
|It is still unformatted. Please use the regular formatter- &lt;ovirt-src-root&gt;/config/engine-code-format.xml
|Please add static import for doReturn.
|I think this validation should be responsible for checking this test. The validation is just about setting a network to be mgmt. There is another vaslidation for unsetting a network from being mgmt.
|Maybe- &quot;Unsetting management network role is not allowed. It is automatically done when moving the role to another network&quot;
|What new logic?
Please make the comment more informative.
(Please note that AttachNetworkToVdsGroupCommand and UpdateNetworkNetworkOnClusterCommands were also updated).
|Why have you done this change?
|Please use the standard way- DbFacade.getInstance() instead of the locator.
|Why do you need parameters to this method? The method is private and can get the cluster and management network id by itself (getVdsGroup(), getManagementNetworkId()).
|1. Same here- you don't need the parameter. You can get the id by using- getManagementNetworkId()
2. This method is called twice- consider storing the value.
|Please use the standard way- DbFacade.getInstance() instead of the locator.
|You're copying the logic of findManagementNetwork().
I suggest combining the canFoActionMessages in findManagementNetwork() and call it from the canDoAction.
The result (mgmtNet) should be stored in a d.m and just the saving to the db should be done in the execution.
|This validation is not relevant for deafultManagementNetwork.
|Same here.
|Why do you need this validation?
|This validation will block the creation of cluster with lower comp_ver than 3.3. This is not a desired behaviour.
Why do you have to check if the migration feature supported in the cluster. The mgmt network is the migration fallback whether the feature is supported or not.
|Why do you need a method for this single line which is called only once?
|I think this method is redundant. 
You can create and store the network cluster in a d.m and-
1. pass the d.m to the validator
2. save it in NetworkClusterDao.

Please notice that the cluster gets an 'id' just when it is saved to the db. It means that in canDoAction stage the cluster still doesn't have an 'id'. After saving the clsuter to the db you should update the id of the networkCluster d.m.
|You have this code in NetworkClusterCommandBase ctor, so it is redundant here.
|See the comments in- NetworkClusterCommandBase.
This network should stay private.
|This is not your bug- but since you added this validation, please add networkBelongsToDataCenter(network) validation here. Please make sure you pass the persisted network as a parameter to the validation.
|I guess this change was done for- validator.managementNetworkChange(..). Since its logic should be separated fro Add and Update, this change can be reverted.
|Please add- validator.externalNetworkNotManagement
|1. since managementNetworkAttachment should be splitted- please call here just validator.managementNetworkRequired
(validator.externalNetworkNotManagement should be called from validateExternalNetwork).
2. managementNetworkAttachment(network) uses the 'name' and 'isExternal' properties of the network. AttachNetworkToVdsGroup.getNetwork retruns- getParameters().getNetwork() =&gt; there is a big chance that the 'name' and 'isExternal' are not initialized. You should pass the persistedNetwork or specifically the 'name' and 'isExternal' properties of the persisted network.
|I guess this change was done for- validator.managementNetworkChange(..). Since its logic should be separated fro Add and Update, this change can be reverted.
|See the previous comment- this method is redundant.
|1. consider changing the method name to networkBelongsToClustersDataCenter or something similar.
2. Also consider passing more specific parameters- networkDcId, networkName, clusterDcId.
|Please expand the ValidationResult.failWith(..) method to get variableReplacements and then use the failWith(..).unless(..) syntax here.
|s/required/external
|I would split it to two validations-
1. managementNetworkRequired(networkName, isRequired)
2. externalNetworkNotManagemet(networkName, isExternal)
|Please use ValidationResult.failsWith(..) api.
|same- Please use ValidationResult.failsWith(..) api.
|typo- that's is
|Please use the following syntax-
return ValidationResult.failWith(VdcBllMessages.ACTION_TYPE_FAILED_MANAGEMENT_NETWORK_CANNOT_BE_CHANGED)             .when(isManagementNetworkChanged(oldNetworkCluster) &amp;&amp; isManagementNetworkChangeAllowed());
|Shouldn't it be !isManagementNetworkChangeAllowed()?
|Shouldn't the method return isClusterEmpty()?
|Seems this method has two different flows for attachNetworkToCluster (where oldNetworkCluster is null) and updateNetworkOnCluster. I would separate it. Consider adding two new classes (Add/UpdateNetworkClusterValidator) which will extend this class. Each class will implement isManagementNetworkChanged(..).
|In case of UpdateNetworkOnCluster- changing the management property to false should be forbidden (to avoid leaving the cluster without mgmt net).
Moving the mgmt property from net to net should be done by changing the new mgmt net property to true (since it is exclusive the old mgmt property will be changed to false).
|iff=if and only if
|I guess this change was done for- validator.managementNetworkChange(..). Since its logic should be separated fro Add and Update, this change can be reverted.
|I don't think this method is necessary, it has the same functionality as getPersistentNetwork().
|I would add this line just to managementNetworkChange(..) tests. It is the only validation that actually needs the clusterId.
Notice that for example networkBelongsToDataCenter and managementNetworkAttachment are called from AddVdsGroupCommand with 'clusterId=null'.
|To avoid problems as I wrote in the previous comment I would init the expectations separately for each set of validation tests. Each set should init just the expectations it really needs.
|As I wrote in previous patches, please avoid you DbFacadeLocator.setDbFacade(..) it was written as some kind of hack.
You can whether pass the networkDao and vdDao to NetworkClusterValidator via injection :). Or add getters for them and spy the validator.
|typo- required
|1. Please find more informative name then 1:) Same for the other methods with numbers.
2. What do you mean by saying after attachment? I guess on add. But since the validation of management network change should split between add and update I guess you&quot;ll rewrite and rename this methods anyway.
|This test should fail- you shouldn't be able to change the mgmt network to non-mgmt on empty or non-empty cluster. (Choosing another network as mgmt will do it automatically).
|Ignore the previous comment- you don't need this test at all. On AttachNetwork to cluster the validator assumes the current mgmgt network is not the one being attached.
|You don't need this test. On AttachNetwork to cluster the validator assumes the current mgmgt network is not the one being attached.
|I&quot;m not sure this test is needed- the validator assumes non-empty cluster has management network. In case it doesn't its behaviour is unprocurable.
|Please add the following test cases-
1. testManagementNetworkChangeAfterAttachement(null, Boolean.FALSE, true, currentManagementNetwork, isValid());
2. testManagementNetworkChangeAfterAttachement(null, Boolean.FALSE, true, network, failsWith(VdcBllMessages.ACTION_TYPE_FAILED_MANAGEMENT_NETWORK_CANNOT_REMOVE_MANAGEMET_NETWORK));
3. testManagementNetworkChangeAfterAttachement(null, Boolean.TRUE, true, network, isValid());
|Please ignore points 2 and 3- in case of AttachNetowrkToCluster it is assumed that the currentManagementNetwork is not the one being attached, so the test are redundant.
Make sure these test cases are done for update.
|1. typo- invalid
2. This and all the attachments methods should be part of the AddNetworkClusterValidatorTest.
3. The method should be called- managementNetworkChangeInvalidNonEmptyCluster
|Please add test case-
testManagementNetworkChangeAfterAttachement(null, Boolean.FALSE, false, currentManagementNetwork, isValid());
|What about the other test cases with empty cluster?
Please see the comment after managementNetworkChangeValidNoChangeAfterAttachment4
|Please find more informative name then 1:)
|You can return the cluster mock instead of null.
|Please add constant for TEST_OTHER_DC_ID, it is confusing you're using the TEST_NETWORK_ID.
|You should also update the user portal AppErrors file.
|s/network/networks
|Please fix the return statement
|typo- networks networks
|Please remove the redundant whitespace.
|space
|Don't use 'ovirtmgmt' name explicitly. You can write- Use the default management network as defined by &lt;code&gt;ConfigValues.DefaultManagementNetwork&lt;/code&gt;.
|Please complete the return statement doc.
|I think the interface java doc is not informative enough. Please expand it with explanation of how the default network is chosen.
|maybe findConfigDefaultManagementNetwork?
|Please use MockConfigRule, it already contains to logic for mocking config values. You don't need to re-implement it.
You can see- NetworkUtilsTest for example of how to use it.
|You didn't fix the typo- cluster cluster
|You should also verify that the get was called only once.
|Typo- cluster cluster
|Consider replacing this code with stored procedure.
|Please do a static import to avoid the &quot;Mockito.&quot; everywhere.
|Please see http://gerrit.ovirt.org/#/c/30663/9/backend/manager/modules/bll/src/test/java/org/ovirt/engine/core/bll/MacPoolValidatorTest.java,cm
|Consider using eq(new(TEST_NETWORK_ID, TEST_CLUSTER_ID)) and verify the get was call only once, instead of using the capture.
|Yes, that's what I meant:)
|Please add RefreshHostInfoCommandBase(T parameters, CommandContext context). Otherwise, calling the command as internal from InitVdsOnUpCommand.refreshHostDeviceList doesn't work.
|RefreshHostDevicesCommand is executed internally when activating the host. Since the new host status (up) is not commited in this stage, the canDo fails (hostStatusValid() = false).
Maybe avoid executing the canDoAction of RefreshHostDevicesCommand in case of internalExecution.
|There is no setting for the capability. I causes the devices to be always marked for update.
|The vdsm is reporting &quot;totalvfs&quot;. Please remove the '_'.
|v_device_name type should be VARCHAR(255)
|This is not accurate. 'interfaces' data member contains all the host's interfaces- regular interfaces, bonds, slaves, vlan devices.
No matter if they are connected to a network or bond.
For example- regular interface with label, without network should also be part of the list.
|Please change the method name- maybe constructToStringAttributes()
The current name is confusing, somebody can think it is the list of the attributes to be serialized (when sent to the client).
|You are relying on the format of Entry.toString().
I'm not sure it is part of the contract of Entry and is the same in all entry implementations...
|Please make these two methods abstract in VmPropertiesUtils or pass them via a provider to the ctor of VmPropertiesUtils.
|why not- 0f?
|In case of a bond that was unchanged, you can use the speed value provided by the vdsm instead of calculating it.
|1. As I see the bond type is never used or initialized, so you need to check the bondOptions not the type.
2. What is mode 3?
3. We need to think if we want (and know how) the backend to calculate new/changed bond's speed. What about custom bond mode?
|Please add tests for different types of bonds.
|Please add the same commitment tests also for overridden qos and commitment tests for non-bond interfaces.
|Are you sure vlan device has speed? What about newly created vlan device? Shouldn't you take the speed from the base interface?
|Shouldn't the names be opposite? As I see this style is used for the content and the other for the whole editor.
|Please add tests for these two validations.
|Yes. It should be added to SetupNetworksHelperTest.
|Those methods are stiil part of the validator. Why not testing them?
|I don't understand why did you have to change this file at all.
|What is the purpose of this change?
|How is it related to this patch and how did it compile previously?
|You should also consider the changeabilty state of the qosOverriden. (Exaple of a bug- in case the network is out of sync and the qos is overriden, if the toSync checkbox is not checked-&gt;the qosModel is still editable).
|Please add tests for the cases validateNetworkQos returns
VdcBllMessages.ACTION_TYPE_FAILED_HOST_NETWORK_QOS_SETUP_NETWORKS_MISSING_VALUES
and VdcBllMessages.ACTION_TYPE_FAILED_HOST_NETWORK_QOS_SETUP_NETWORKS_INCONSISTENT_VALUES
|I would check getQosOverridden().getIsChangeable() instead of (!getIsToSync().getIsChangable() &#124;&#124; getIsToSync().getEntity()) but as you wish...
|s/Becuase/Because
|As I understood from you, you need this patch to make sure there is no mix on the same nic of limited and un-limited qos. If this is the case, is this 'if' enough? NetworkUtils.qosConfiguredOnInterface() documentation says- &quot;return true iff any QoS is applied to the interface (though it might be unlimited).&quot;
|Consider changing the name, since in case of HostNetwork is is not a profile. Maybe replace profile with container.
|same here.
|and here:)
|If you got to here and the name is null, it means something went wrong.
Maybe it worth to add assertion in this case.
|storage?
|storage?
|storage?
|storage?
|storage?
|What about the canDoAction? requiredValuesPresent() and valuesConsistent()?
|What about the canDoAction? requiredValuesPresent() and valuesConsistent()?
|Why not- 1766/7/8?
|Why are you overriding the error message returned from the validator? Is there any other use case for the HostNetworkQosValidator except here? If not, the validator should contain the correct message (i.e ACTION_TYPE_FAILED_HOST_NETWORK_QOS_SETUP_NETWORKS_MISSING_VALUES)
|You're still using the NetworkQosValidator (and not HostNetworkQosValidator) but the error regards to HostNetworkQosValidator.valuesConsistent().
Please rearrange your patches so adding HostNetworkQos to VdsNetworkInterface (instead of NetworkQos) would be in one of the first patches- before you change logic which is based on it.
You can first just add HostNetworkQos to VdsNetworkInterface (without removing NetworkQos) and just after you&quot;ll fix all the related logic, to remove NetworkQos.
|Because this method is abstract.
|You can add @RunWith(MockitoJUnitRunner.class) to the class, and then you&quot;ll be able to use @mock on the declaration instead of this initialization.
But it is just a matter of style, so as you wish.
|Don't you think it would be nicer if the Mbps would be after the text box.
|I don't like setting constants in ui.xml files. Eclipse doesn't find the const in the ui.xml file when you look for usages. It can cause a programmer to miss this usage when changing the text.
But it is a matter of style, so as you wish.
|The ui resides on the fact that anonymous HostNetworkQos doesn't have storagePoolId set. Please add a comment here and in the persistQos method of the interfaceDao that the dcId is not initialized by purpose and is the indicator for this qos to be anonymous.
|How is it possible to get a non-integer value? Is there a way to set the value via the host? If there is, it would be more accurate to save the qos parameters on HostNetworkQos as doubles. Or even saving it as integer but in bits and just displaying it to the user in Mb.
I don't understand the benefit of sending/receiving bits as doubles through the api with vdsm.
|Why isn't it a config value like the others?
|Please make this method private or even part of the equals method.
If you need this functionality the compare partially initialized object, add it at the point you need it.
|Please use this method not just in HostNetworkQos but also for other classes extends QosBase (or at least on NetworkQos).
|Why did you move the final from here to clusterNetworks?
|Maybe createNewNetworkCluster?
|Please remove the trailing whitespace.
|I think the problem in this doc was BaseNetworkInterface (should be NetworkInterface). Either way it is not related to this patch:)
|Why should the intrerfaceDao be a parameter of the ctor?
If you want to make the class testable you can add getInterfaceDao() public method to the class.
What are the benefits of passing it a parameter to the ctor?
|Since this method also overrides the nic with user configuration the name of the method is not accurate.
|Same here- the name of the method is not accurate.
|Now you have a separate class for the persister. Consider adding a separate class for the enforcer.
|I think the topology class shouldn't be aware to the inner actions that are done to persist the topology. Those methods should be private. The persister should have only one public method- persistTopology, this is the only method should be called from here.
|I think the change was done in the wrong method:)
|Shouldn't you call the parameter userId?
|Please parametrize the IAsyncConverter-
should be IAsyncConverter&lt;List&lt;DbGroup&gt;&gt;
|After you parametrize- change the return type to List&lt;DbGroup&gt;
|Please use AsyncQuery(INewAsyncCallback asyncCallback).
|In AttachNetworkToVdsGroupCommand the getNetwork() returns the network from the parameters. It means the isExternal may no be initialized properly. The persistent network should be used.

It seems that !NetworkUtils.isManagementNetwork(getNetwork()) has the same problem in case the id is passed (and not the name). But it is the old behaviour so I&quot;m not sure there was a bug or maybe I miss something.
|Please change the left side to Collection.
|Why do you need to call 'refreshNetworksTable()' from this context? It is already called from the places that called 'changeIsAttached(..)'?
|same
|I think the following code is more readable-

if (!items.isEmpty()){
   V widget = items.get(items.size()-1).getSecond();
   if (widget instanceof Focusable) {
        ((Focusable) widget).setFocus(true);
   }
}
But, as you wish...
|I guess you should add attach or load event to the suggestBox and not override the ListModelSuggestBox.onLoad() method.
If not, you should understand what should happen before placing the suggestBox. Using deferred binding in this case is just an &quot;acamol&quot;. As I write in the previous comment, there are scenarios it won't work.
|I don't like the use of scheduleDeferred.
You rely on that the suggestBox will be attached and displayed when the scheduleDeffered-&gt;execute is called. But Maybe it isn't.
Maybe it isn't even focused any more.
I prefer the code will be specific-
onFocus-&gt; is the suggestbox is attached-&gt; showSuggestionList.
onLoad-&gt;if the suggestBox is focused-&gt;showSuggestionList.
|Please format
|Done
|The &quot;...&quot; mechanism is based on calculating if there is overflow. If a specific width is not specified there will never be an overflow, the panel will just grow according to the size of the inline objects.

Setting the width of the 'titleLabel' is a worse solution since it can have arbitrary width according to the number of icons in the panel (vlan tag, vm, display, migration, mgmt, edit).
|See the previous comment.
|Plugging of an unlinked vnic with an external net is blocked
|s/canExternalNetworkVnicBePlugged/canVnicWithExternalNetworkBePlugged
|Please use '==' to compare enums.
|I agree, the error can't be reported twice.
But it is not the issue. As I wrote- &quot;this method should validate JUST if vnic with external network can be plugged&quot;.
The validators are not independent, each validator can assume that all the relevant previous validation were done.
In your validator you can assume that the profile is ok. You shouldn't do all the validations over and over again.

The flow here-
1. calling 'isVnicAttachedToExternalNetwork()' which calls
2. 'VmNicValidator.findVnicNetwork(..)' which updates
3. validationResult (which is protected d.m of VmNicValidator and is used only to keep VdcBllMessages.ACTION_TYPE_FAILED_VNIC_PROFILE_NOT_EXISTS reported by the find method- which is by itself wrong desgin)

doesn't make sense and it will be very hard to maintain it.
|This if is redundant.
This method should validate JUST if vnic with external network can be plugged. You don't need to return the validation result of previous validations.
With your code, if the profile is not valid and you try to plug an unlinked vnic- you will return the same validation error twice.
|Since the previous if block should be removed. Please join this if with the upper if-
 if (RequiredAction.PLUG.equals(getRequiredAction()) &amp;&amp; !nic.isLinked() &amp;&amp; isVnicAttachedToExternalNetwork()) {..}

ps- vnicAttachedToExternalNetwork var can be removed.
|NetworkHelper.getNetworkByVnicProfileId(..) can be used here,
there is no need to introduce new method.
Since there is more than one place that needs the vnic network I suggest adding getNetwork() method to AbstractVmInterfaceCommand. You can see 'ActivateDeactivateVmNicCommand.getNetwork()' for example.
|As I wrote in 'UpdateVmInterfaceCommand.canExternalNetworkVnicBePlugged()' this d.m is not needed.
|As I wrote in UpdateVmInterfaceCommand about adding 'getNetwork()' method to AbstractVmInterfaceCommand.
Please add a method 'getVnicProfile()' to AbstractVmInterfaceCommand. Pass its result as a parameter to 'profileValid(..)'.
|This is not needed since the find should be removed, the previous if should be preserved.

if (vnicProfile == null) {
                return new ValidationResult(VdcBllMessages.ACTION_TYPE_FAILED_VNIC_PROFILE_NOT_EXISTS);
            }
|This method is unneeded. It has the same functionality as  'NetworkHelper.getNetworkByVnicProfileId(..)'.
The only difference is the check if the profile exists. There is already a separate validation for it. All the other validations that come after the 'profileValid(..)' can assume the profile is valid.
|s/PLUGGED_UNLINKED_EXTERNAL_VM_INTERFACE_IS_NOT_SUPPORTED/PLUGGED_UNLINKED_VM_INTERFACE_WITH_EXTERNAL_NETWORK_IS_NOT_SUPPORTED
Note the AppErrors files should also be updated.
|Still looks unformatted. Maybe it is a problem with my view... Please run a formatter on the whole file.
|Why did you move the if from here?

Should be-
if (scheduledStatusCheckInProgress &#124;&#124; retryCount &gt; MAX_RETRY_COUNTS &#124;&#124; reportsWebappDeployed) {
   return;
}

It is better to keep the if here over duplicating it to 'onError' and 'Response.SC_NOT_FOUND'
|'if (!reportBaseUrl.trim().isEmpty())' is not needed here anymore- since it is part of the init.
|'if (!reportBaseUrl.trim().isEmpty())' is not needed here anymore- since it is part of the init.
|Also looks unformatted for me. If it is formatted- ignore my formatting comments.
|Since it can take time to init the reports- what if the tree selected item is not system when they are initialized?
The current treeSelectedItem should be passed, isn't it?
|Too long comment line. It doesn't fit the box in the gerrit's gui...
|This class duplicates most of the code of ReportsStatusServlet. Please use a common parent class for both of the classes and move the duplicated code to it.
|Strange. Maybe you can debug to understand what is the problem. It is really ugly to copy this code...
|Is there any reason not using IOUtils.copy(in,out) instead of implementing this method?
|Does reports-ui servlet still needed?
|The callback is not needed any more (the values are cached). AsyncDataProvider.getConfigValuePreConverted(ConfigurationValues.RedirectServletReportsPage) can be used to get the value.
|IMO, urlInitialized check here is redundant.
I&quot;m not sure how can you get to this point with urlInitialized=false.
(And if it is false- don't you want to return?)
|Consider adding (retryCount &gt; MAX_RETRY_COUNTS &#124;&#124; reportsWebappDeployed) to this if, to avoid redundant task.
|Since you've added 'if (isReportsEnabled() &amp;&amp; !initEventRaised)' to 'checkIfInitFinished()' redundant calls to 'setXmlInitialized()' are harmful.
But still, just in sake of the correctness of the code-
'setXmlInitialized()' should be called just after the xml is initialized or not initialized and there are no more attempts to initialize it.
That means it should be called-
1. from here if (retryCount &gt; MAX_RETRY_COUNTS).
2. from parseReportsXML()-&gt;onResponseReceived(..)-&gt;Response.SC_OK-&gt;finally (the try catch should surround just the Response.SC_OK case).
3. Within the catch surrounding parseReportsXML().
|if (retryCount &gt; MAX_RETRY_COUNTS) then setXmlInitialized() should be called.
|The purpose is to avoid duplication.
I meant the new method will look something like this-
public static RequestBuilder constructServiceRequestBuilder(String service) {
    return new RequestBuilder(RequestBuilder.GET,  &quot;/&quot;+ BaseContextPathData.getInstance().getRelativePath()
                    + &quot;services/&quot; + service);
}
The services- reports-status and reports-xml should be constants (public static final).
|There is just one small difference between this requestBuilder and the status builder. Please extract the creation of the builder to a new method. And use it in both of the places.
|Calling 'setXmlInitialized()' can raise 'reportsInitEvent', on which the login is blocked.
I&quot;m not sure what are the consequences of raising this event more than once. Did you mean to raise it more than once?
If not- before calling 'setXmlInitialized()' should check if 'scheduledStatusCheckInProgress'.
Additionally, since the login is blocked on the 'reportsInitEvent', the start of the system can be blocked for 10 minutes!
|Same here.
|You can use here the method I suggested to add in reportInit.
|1. please format
2. I think the following code should be here (and not where it is now)-
 if (!reportBaseUrl.trim().isEmpty()) {
    parseReportsXML();
 } else {
    setXmlInitialized();
 }

Is there any meaning parsing the xml if the url is empty?
|I see you&quot;ve moved 'reportsWebappDeployed' but what about 'retryCount &gt; MAX_RETRY_COUNTS'?
|please format
|please format
|Shouldn't the try-catch surround just this if?
|If you&quot;ll change constructServiceRequestBuilder as I suggested you can use here-
ReportInit.constructServiceRequestBuilder(ReportInit.ReportStatusService).
buildStatusUrl() method can be removed.
|Please update the comment.
|updateAvialability() calls -&gt; updateAvailability(SystemTreeItemType.System, null);

Since the reports init is no longer blocking the ui there is no guarantee the system tree selected item is the 'System'.
Calling updateAvialability() will update all the tabs (not just the reports) as if the system is selected.
In my opinion, you should extract a method in CommonModel to update just the reports availability and call in from here.
|Did the renaming in a separate patch (this patch depends on it).
|To represent a no-text header we pass empty string and not null value.
As a matter of fact, we can't get here with null text, we'll have a NPE much earlier.
So this safety check can be removed, although I think it is harmful.
|I think that the event shouldn't be fired in case of a dry run.
|If you fix what I wrote in the HostSetupNetworksModel, the changes in this class can be removed.
|If you fix what I wrote in the HostSetupNetworksModel, this code can be removed.
|Please fix the comment (remove the 'if drop occurred')
|NetowrkUtils.isVlan(VdsNetworkInterface nic) is used for this purpose.
So whether refactor all the others to use your method and remove the method from NetworkUtils (prefered:)), or remove your new method.
|why not-

if (!iface.getBondSlave() &amp;&amp; !iface.isVlanDevice()) {
   usageNics.add(iface.getName());
}

?
|properly?
|Is there still any use for the drop on the OperationCadidateEventArgs?
In not, I don't see any reason to raise the getOperationCandidateEvent on drop. So the only change that should be done is removing the drop from the if- it can be done in - http://gerrit.ovirt.org/#/c/30581 patch, and this patch is not needed.
|This line seems to be a bug.
|This error is the convention for backend errors.
In my opinion it is confusing to use it for frontend error.

Please mark the table (or even better- the problematic rows)
with red border as is customary for ui dialog validation.
|Please consult Eldan. Maybe he&quot;ll have another idea how to represent the error in the dialog. Or maybe he will be ok with your solution...
|Whitespace
|You can get the singleton instance of interfaace dao calling- 'DbFacade.getInstance().getInterfaceDao()'.
The is no need to pass it as a parameter.
|Same here, no need to pass 'InterfaceDao' as a parameter.
|Why protected and not private?
|As I understand from http://www.ovirt.org/Wiki/Engine_Command_changes the context should be cloned.
&quot;In order to properly propagate context , the command context should be duplicated when calling a command. &quot;
|After rethinking it, it is even better to pass 'cloneContextAndDetachFromParent(context)'. Since you don't want the outer command to rollback in case of failure in removing network from hosts.

public CommandContext cloneContextAndDetachFromParent(CommandContext context) {
        return context.clone().withoutCompensationContext().withoutExecutionContext().withoutLock();
    }

Since 'PersistentSetupNetworksCommand' already does it when calling its internal commands, there is no real bug. But I think it is not a good practice to reside on it.
|The code here duplicates the following code-
DetachNetworkToVdsGroupCommand.executeCommand(..)-
if (!getPersistedNetwork().isExternal() &amp;&amp;
NetworkUtils.isLabeled(getPersistedNetwork()) &amp;&amp;
NetworkHelper.setupNetworkSupported(getVdsGroup().getcompatibility_version())) {
   removeNetworkFromHosts();
}

Please consider adding something like the following method to NetworkHelper-

private boolean shouldNetworkBeRemovedFromHosts(Network network, Guid idForCompatibility) {...}

And call it from- 'NetworkHelper.removeNetworkFromHosts(..)'.
|Duplicates the code in 'getAllInterfacesByLabelForCluster(..)'. Please refactor to avoid the duplication.
|Sorry, but after rethinking it, I don't think it is a good name:)
Since this method is public- shouldNetworkBeRemovedFromHosts(..) is too general and out of context.
Maybe- shouldNetworkBeRemovedFromHostsWhenDetached() or something like this. What do you think?
|I don't see any reason to add it as the second element of the list. IMO, it should be added to its natural place according to the SharedMacPoolComparator.
|Please use interface List in the left side
|1. As I wrote in DataCenterListModel. I think the items should always be ordered. In this case you can use SortedListModel for macPoolList and you won't need this code here.
2. This code is not related to the current patch and should be part of the previous patch.
|1. And what if it it is null? Shouldn't you choose the default pool?
2. Should be part of the previous patch.
|please format
|I think you should set the whole entity returned from the engine and not just the id. I know that for now besides the id there is no difference, but maybe in the future the engine will fix the overlapping ranges or there will be some other difference. The most correct data is the MacPool in the result.
|It is enough for the return value to be HasUiCommandClickHandlers
|I&quot;m not sure but I think that if you&quot;ll add more than one mac pool you&quot;ll have a bug. The list will contain just the last one. 'setItems' should be called to update the list.
|Still not formatted
|Same
|The match should be to itemsChangedEventDefinition and not to selectedItemsChangedEventDefinition
|Cause we have just one thread in GWT so even if a response was returned from the backend it is pushed to the end of the event queue.
This call (model.initSelectedMacPool()) is the same 'task' in the queue as the query registration. So for sure. the response of the async query we be called after the code here.
|Why do you need this code here? VdcQueryType.GetAllMacPools- onSuccess hasn't been called yet for sure, so macList is not initialized.
|The change isn't required because the removal of initSelectedMacPool() from DataCenterListModel. As I wrote in DataCenterListModel, initSelectedMacPool() was redundant there.
|Where is setSlectedItem() used in this class?
The method here has to be called when allMacPools != null &amp;&amp; dc != null.
Since dc = getEntity() and 'entity' is not initialized via the ctor it sounds reasonable to call initSelectedMacPool() on setEntity() and not count on that the 'entity' is already initialized when mac pool query is returned. I don't see any disadvantages in this approach.

You can also move the call to initSelectedMacPool() from 'onSuccess' of the mac pool query to items changed event of getMacPoolListModel().
Doing this you will make sure  initSelectedMacPool() is called whenever it has to be called. And also you can change its modifier to private since you want need to control calls to this method outside the class.
|Maybe should be called also on entity changed event?
|Please check if macPoolId is null. If it is, don't enter the loop.
|Please format
|Why is setEntity after setting (and showing) the window?
|Same as the previous comment. Why do you set and show the window before you set the items?
|What about the description validation? AsciiOrNoneValidation or something of that type.
|Please format
|It updates it before setting the event and on PropertyChangedEvent (&quot;Items&quot;.equals(propName)) so you can move it to the end:)
|eeem? You still set the window before you set the items.
|I&quot;m not sure why, but the new view still shows it unformatted.
|Can you please explain this sort? I don't really understand it...
|Please extract the validator to a separate class.
|This is not the first time I see that KeyDown triggers ValueChagnedEvent.
I suggest to add this code to AbstractValueBoxWithLabelEditor.
In order to prevent unexpected behaviour in old usages of the editor you can add a method shouldKeyDownTriggerValueChange() that by default returns false.
After the change please fix all the other occurrences of this code.
|You can use- rs.getInt(&quot;speed&quot;) instead of the casting
|IMO speed shouldn't be part of this ctor and should be initialized in VdsNetworkInterface level (Nic, Vlan and Bond can have speed property so there is no reason to pass it separately to the Nic ctor).
|Please use ObjectUtils.objectsEqual(speed, other.speed)
|Please use ObjectUtils.objectsEqual(vdsId, other.vdsId)
|The speed mapping should be here.
|not here (IIUC, this if will never be reached. Vlan device cannot be bond).
|And not as part of the Nic ctor as I wrote in Nic.java.
|There are specific tests for statistics-
testMasshUpdateStatisticsForVds()
testRemoveStatisticsForVds()
testUpdateStatisticsForVds()
Testing the speed should be part of them.
The current method should remain as is- just remove the setSpeed line.
|speed?
|Please do the formatting in a separate patch.
|same
|I meant that 'namespacesMap.get(((ProfileEntry) (getProfile().getSelectedItem())).getAuthz()' is duplicated and can be part of 'populateNamespaces(..)'
|The implementation I suggest to 'populateNamespaces(..)'-
protected void populateNamespaces() {
        getNamespace().setItems(namespacesMap.get(((ProfileEntry) getProfile().getSelectedItem()).getAuthz()));        
}

getNamespace().setSelectedItem(..) is not necessary. Setting the first item as the selected is the default behavior, UiCommonVisitor-&gt;updateListEditor(..) takes care of it.
|Please use generics- private ListModel&lt;String&gt; privateNamespace;
|Please check if 'namespacesMap != null'.
Since there is no progress in this dialog. A scenario that the user changed the selected profile item before the AAANamespaces query returned might happen.
|1. Duplicates the code of profile selected item change handler, please extract to a method.
or even better, make it as part of populateNameSpaces(..) and call it from both of the places.
2. Please chech that getProfile().getSelectedItem() != null
(if the 'AAANamespace' query will return before the profile query, you will have a NPE here).
|Never used
|If you&quot;ll use generics you won't need this cast.
|Same.
|Please add- namespaceColumn.makeSortable();
|ApplicationConstants extends CommonApplicationConstants.
Since you have the constants in CommonApplicationConstants you can reuse them.
|The other columns in this class are not sortable yet.
Please remove the 'makeSortable()' call from here.
The column will be marked as sortable if/when this class will be refactored.
|makeSortable?
|makeSortable?
|Done
|Done
|Done
|Done
|Done
|Why? It validates the template and the error message related to the template.
|Done
|The CustomProperties should also be set here.
|and here
|Shouldn't qos be also set on netParams?
|this.addHandler() doesn't exist.
If you mean asWidget().addHandler(), asWidget() returns the peer.
As I said in the comment about the peer- the peer is EnumRadioCellTable,
we don't want to listen to value changes of the peer as the peer's value is the whole list. We just want to listen to 'valueChange' which is fired by selectionModel-&gt;onSelectionChanged().
|what about the enabled?
|Why was the 'enabled' removed from here?
|same
|I saw this code was moved to AddRemoveRowWidget.addEntry(), but as I wrote there, two line after it is ovveridden.
Smells like a bug...
|IIUC this call to 'setButtonsEnabled' is redundant, 'toggleEnabled' which is called right after it will always override it.
|typo- details
|1. Why don't you use setButtonsEnabled(widget, enabled)?
2. I think this method can be more generic. You can add-
if (widget instance of HasEnabled) {
   widget.setEnabled(enabled);
}
|If you&quot;ll make the parents method more generic you won't need this overridden method.
|1. Consider moving the code to the parent toggleGhost
2. should consider also 'enabled'
|should consider also 'enabled'
|The new get implementation does the same, you can just do- 
stnm.setDescription(translator.get(eventType))
|You should override containsKey.
containsKey implementaition in EnumTranslator is wrong.
It returns true even if the resource is missing.
I suggest splitting get into 2 methods-
1. private translateWithoutErrorHandling- the original get without catching  MissingResourceException
2. public translate- a method that calls translateWithoutErrorHandling and catches  MissingResourceException.

conatainsKey should call the private translateWithoutErrorHandling and return false in case of MissingResourceException.
|Please use EnumTranslator.getInstance() directrly. No need for a variable.
|Please use EnumTranslator.getInstance() directrly. No need for a variable.
|Please use EnumTranslator.getInstance() directrly. No need for a variable.
|It is not in the scope of this patch.
|Please use EnumTranslator.getInstance() directrly. No need for a variable.
|Please use EnumTranslator.getInstance() directrly. No need for a variable.
|Please don't include in the patch things that are not related to the subject of the patch.
|Same here. Not in the scope of the patch.
You can create a new cleanup patch for all these small changes.
|same
|same
|same
|same
|same
|same
|This can be problematic. 
createAndTranslate(..) returned constants.notAvailableLabel() for null object.
while get(...) returned null.
You have to make sure no one of the usages relies on this behaviour.
|Not in the scope of the patch.
|same
|Why did you move the method?
|No need for a variable. Use EnumTranslator.getInstance() directly.
|No need for a variable. Use EnumTranslator.getInstance() directly.
|Please format the comment.
|If you don't have a bug-url remove this line from the comment.
|You can remove the inheritance from translator and make this method static. So you won't need to create any instances of EnumTranslator.
|The init of the 'mtu' depends on the 'export' value.
Update the 'mtu' value in 'onExportChanged()' is problematic cause we need to distinguish whether it is part in the init process or not.
If export is changed to false-
1. If part of the init process- the 'mtu' should be set to the getNetwork().getMtu() value.
2. If not part of the init- 'mtu' should be set to 'default value'.

Passing the isInit value to 'onExportChanged()' complicates the code. The easiest way to make sure 'onExportChanged()' is not called as part of the init is to init the 'export' before the 'mtu'.
|why? it is set to false on initMtu.
|I want updateMtu() to be called just when export really changes.

Unfortunately, despite of its name there are other cases when onExportChanged() is called. For example, updateDcLabels() calls onExportChanged() on a query success.
As I wrote in the previous comment- updateMtu() shouldn't be called as part of the init process after initMtu. Moving updateMtu() to onExportChanged() can cause this problematic scenario.
|It is not related to this patch.
But there is no bug here, setMTUOverrideSupported is called from syncWithBackend before onExportChanged() is called.
|updateMtu is called when hasMtu is changed. So hasMtu related code can't be here.

But I agree, this class is very buggy and it is hard to maintain it. I send cleanup to this class in a separate patch.
|The fix here is not really related to this patch. Just a bug I found by accident. I don't want to add to this patch more unrelated changes.
As I wrote in a previous comment. I will send cleanup to this class in a separate patch.
|Currently it shouldn't. But I don't see the disadvantage of checking it.
|This patch is about changing the mtu from checkbox with text box to radio boxes and showing the default mtu value.

Your comment is not related to this patch. It can be done in a separate cleanup patch.
|The mtuSelector I set is not this.mtuSelector, it is the method's inner member. So, I have to use the set to init the class d.m
|Done
|Same a the response on EditNetworkMode :)
|Done
|The prohibition reason here is the reason that the whole mtu + selector widget is not changeable (for example have provider or under 3.0).

So it should be shown just in case !changeable. isCustomMtu() is not related to it.
|Done
|Done
|Done
|Please see the comment in the view.
|Done
|1. Cannot be called after initWidget(). It should be called after the driver initialization which is done in each child separately.
2. I guess it can be called from onLoad() but I&quot;m not sure how it is better then from the presenter.
The call to the function should be done after the model init. So calling it from presenter.init() seems fine.
|Done
|Done
|Again, same answer. There are many more places that have to be refactored in case your suggestion is applied. It is not in the scope of this patch.
|same
|1. If mtuOverride isn't supported the mtu value is default for sure.
2. I can't think about a race that can cause a bug in this case. But just to be on the safe side, I&quot;ll do the change.
|Done
|Regarding the generic issue- I&quot;ll try to change it to more generic solution.

Regarding the on load- scrollToBottom() can be performed just after the widget and all its related chain is attached to the dom. The reason for this is that just after the widget is attached and all its and it parents styles are applied a scroll is added (if needed).
In NicLabelWidget the items are set before the widget is attached to the dom so 'scrollToBottom' in 'onLoad' is enough.
In more general approach 'scrollToBottom' should also be called on items changed event (if the widget is attached and visible).
|Done for the generic issue.
|Done
|Why is it better?
|Done- 2
|Please change to !StringUtils.isEmpty(title)
|Also, why not do anything if it is null?
Please change to-
setTitle(text == null ? null : text.asString());
|Should be- setTitle(text.asString()) not setText.
|Should be ! before the if.
It is already merged, so please send a new patch to fix it.
|Done
|Why? I&quot;m instantiating it here, how can it be generic?
|Done
|It is equivalent to accessKey ='\0'
|Done
|Done
|It doesn't work. contentPanel.getParent() is null at this stage.
Moved it to presenter's onReveal().
|Done
|I like it as is:)
|With FlowPanel the status image is under the checkbox (which makes sense cause this is how flow panel works). I&quot;m not sure how it worked before but after all the changes in this patch it is the result...
|Change the code according to your second comment. now this condition is relevant again.
|Done.
Still overloading setTitle(SafeHtml title), IMO it is better api for this class.
|please remove trailing whitespace.
|Done
|Oh, you are correct. Sorry.
|I&quot;m not sure I understand your comment...
The query's does- getQueryReturnValue().setReturnValue(VmPropertiesUtils.getInstance().getAllVmProperties());
And getAllVmProperties() returns Map&lt;Version, String&gt; and not Map&lt;Version, List&lt;String&gt;&gt;, so as I understand there is a problem.
|The backend query still return Map&lt;Version, List&lt;String&gt;&gt;, so if you assume you get Map&lt;Version, List&lt;String&gt;&gt; you will get ClassCastException somewhere.

I didn't find any previous patch that changes the query...
|s/webadmin/webadmin,engine
|You should add VmPropertiesUtils.java to Common.gwt.xml
|Consider passing PredefinedVMProperties and UserDefinedVMProperties to VmPropertiesUtils.init(..) instead of overriding the getters. I think it is more elegant.
|I think the default should be there is aggregation. Same as in runMultipleAction.
|I think the default should be there is aggregation. Same as in runMultipleAction.
|Each returnValue has a description. IMO you should show it.
The format of the messages should be similar to- FrontendEventsHandlerImpl.runMultipleActionFailed
|1. What about returnValue.getFault()?
There are some cases handleActionResult(...) gets the error from  returnValue.getFault()
2. The message shouldn't be shown if getEventsHandler().isRaiseErrorModalPanel(...) is false.
3. In my opinion, the aggregation code should be somehow part of handleActionResult(...) and not here. This will also solve points 1, 2.
|Not in the scope of your patch. But-
error message should be localized
|It is not in the scope of your patch.
But if you&quot;ll move the aggregation code to here as I recommended, it can help you-
failureEventHandler(..) and runActionExecutionFailed(...) use different event handlers.
IMO it should be somehow merged.
|you can call runMultipleActions(actionTypes, parameters, callbacks, failureCallback, state, false);
|In case showErrorDialog=false since the messages are aggregated, the fault is not localized (the localization of the fault is part of runActionExecutionFailed(..)).
Consider removing the showErrorDialog from the 'if' and pass it to runActionExecutionFailed(..). In runActionExecutionFailed(..) localize the fault and don't show the dialog if !showErrorDialog.
|The fault is not localized -&gt; see the regarding comment in Frontend.java.
|Done
|Done
|Done
|yes.
|Done
|I get an eclipse warning if I omit it...
|Done
|The status shouldn't be NONE. It is NONE just during the first setup of the host.
But in this case we don't care if the status is NONE or DOWN. We just care that it is not UP.
That's why the old method name was isBaseInterfaceUp. But you asked to change the name and the implementation to isBaseInterfaceDown.
|same.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|They are the same type. Please notice &quot;asyncQuery.setModel(getViewFilterType());&quot;
was set before running the query.
The query is async. It means the ui is not blocked while is waits for the result.
The user can switch the selected view from &quot;attached&quot; to &quot;unattached&quot; or vise versa. This checks make sure the result is still relevant (the view is the same as was when the query was sent).
|After taking a second look on what I&quot;ve done here, I decided not to abuse the label field and instead to add isInterfaceAttachedByLabel public method.
|As I changed the implementation this comment is not relevant any-more.
But still, the original reason for this was the I wanted to call setItems just after all the items are completely initialized. Meaning, the &quot;abused&quot; label field is initialized.
If there are no vlan devices, you are correct, at this point we can call setItems, But if there are vlan device, at this point they are not initialized.
|The field is no longer (ab)used :) 
NetworkHostListModel.isInterfaceAttachedByLabel(..) is used instead.
|Done
|Done
|Done
|I don't really understand why do you need this listener.
Why should the model fire value change event on the widget?
The value is changed on the widget side and the model listens to valueChanged event on the widget. So why should the model fire the event back to the widget?
|Please use networkClusters instead of getNetworkClusterList().getItems()
|Should move to CommonApplicationConstants
|I don't understand why did you remove this piece of code.
|You removed the initialization of vnics.
There are places that use vnics regardless of the counting for the title.
|What if result.getFault() is null?
|According to List.contains documentation-  it throws NullPointerException if the specified element is null and this list does not permit null elements.
Although in this case it is LinkedList and it supports null elements, I prefer not counting on it. Please add a separate null check.
|Done
|Done
|Done in a previous patch.
|I can, it will work. But I don't think it is necessary here.
NetworkUtils.interfaceBasedOn return true even if both of the params are the same nic. I know that the vlan check will fail in this case, but I think leaving the if as is, is more correct.
|You are right, but I prefer to leave it here. This is the default way to construct vlan device name.
|split(&quot;.&quot;, -1) doesn't work, &quot;.&quot; is a special char. I prefer to leave it as is instead of escaping it.
|Done
|Added a method to update the base interface on the parameters.
|Updated in validateInterfacesExist.
|Updated in validateInterfacesExist.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|The vlan id in null. The speed is 1000.
|Done
|same.
|Done
|same.
|Done
|Done
|Done
|Done
|Done
|This validation should be part of ExternalSubnetModel.validate() and not here.
|You can use StringHelper.isNullOrEmpty()
|You can use StringHelper.isNullOrEmpty()
|You can use StringHelper.isNullOrEmpty()
|Why do you use bitwise and?
|Please use StringHelper.isNullOrEmpty()
|As we discussed, please add check box to indicate if the subnet is enabled.
You can see example in Host-&gt;Power management.

If the subnet is enabled name is mandatory so this check should be part of getSubnetModel().validate() and not here.
|typo
|1. You can use- StringHelper.isNullOrEmpty()
I know StringHelper is deprecated. If it bothers you, move the method to StringUtils. 
2. Why isn't the name null or empty validation part of the subnetModel.validate? Why don't you validate the other fields if there is no name?
|The name is not mandatory.
As I understood from you, the subnet should be added if there is only CIDR and IP version.
|Why do you need this method?
|There is no isBlank() in this file :)
|Why isn't it part of enableDisableBySync(..)?
|Please move your changes here where all the other AuditLog enums are.
|Same- Please move your changes here where all the other AuditLog enums are.
|typo (type type)
|You can replace ListModel&lt;ClusterNetworkModel&gt; with ClusterNetworkManageModel
|You can use the parent class templates.
|You can replace FieldUpdater&lt;ClusterNetworkModel, Boolean&gt; with RequiredIndicatorFieldUpdater
|You can use the parent class templates.
|You can use the parent class constants.
|Yon can use AttachedIndicatorFieldUpdater instead of FieldUpdater&lt;ClusterNetworkModel, Boolean&gt;
|You can use the parent class constants and templates.
|Yon can replace FieldUpdater&lt;ClusterNetworkModel, Boolean&gt; with MigrationNetworkIndicatorFieldUpdater
|You can replace with FieldUpdater&lt;ClusterNetworkModel, Boolean&gt; with DisplayNetworkIndicatorFieldUpdater
|Done
|Done
|Done
|I don't really understand what did you mean.
If you meant I can use the 'get'  to get the non-vlan interface itself- it is correct but not efficient. I already have it why should I call 'get'?
|Done
|Done
|Removed this message.
Added separate message for bond slave.
|Removed this message.
Added separate message for bond slave.
|I will do it in a separate patch.
|Done
|Done
|Done
|Done
|Done
|No need for this condition any more. Removed the separate message for bonds.
|Why do you use bitwise AND?
|Done
|Removing it will cause canDoAction (VdcBllMessages.EN_UNSUPPORTED_NOTIFICATION_EVENT) error when trying to subscribe (AddEventSubscriptionCommand)  or remove the event (RemoveEventSubscriptionCommand).
|It makes sense. But it is not in the scope of this patch:)
|There is an update script. Forgot to add it to the patch...
|Done
|setVdsName is protected...
|Each line of the comment should contain up to 75 chars.
|IMO caching is not needed. And instantiating the class is not needed.
This class shouldn't extend any class.
It should contain only 2 methods-
1. static get(Enum&lt;?&gt; enumObj)
2. static containsKey(Enum&lt;?&gt; enumObj).
|core?
|nicLabels is needed. It is passed to the InterfaceModels constructors.
Removed nicToLabels.
|I don't understand this comment...
|The new name adds information that it's network and not nic label.
For me, it is more readable.
|Done
|Done
|description?
|Done
|Done
|Done
|The &quot;culpritNetwork&quot; is saved on the NetworkInterfaceModel when there is collision on bond action. It can't be used here.
I've added to the error message the explanation that is given when attach is blocked.
|Done
|Done
|It looks strange if the exclamation mark image is after the network name...
|Done
|Done
|Done
|We have tooltips for LogicalNetworkModel and NetworkInterfaceModel. I don't think we have to add else if with return for all the other kinds of NetworkItemModel.
IMO adding &quot;else if&quot; for NetworkLabelModel is redundant and doesn't add nothing to the code....
|Done
|Done
|The comment should be- &quot;// enter the operation with empty list if nothing has been edited by the user&quot;
But why do you need this change here? Why isn't it enough to pass null?
|Why do you still use CommonApplicationConstants and ApplicationConstants?
|same
|Why is it different from the previous (&quot;Added linking from Network to Provider&quot;) patch?
Why did you need there to clean the selection (getTable().getSelectionModel().clear();) and here not?
|Why did you move it from the ApplicationConstants.java?
Does the user-protal use these strings?
|Why isn't it in the webadmin package? AFAIK the user portal doesn't use it.
|TWS
|AFAIK creating the instance via inject is more efficient.
|TWS
|TWS
|TWS
|If you use default ctor why should it be provided (provided = true)?
|TWS
|TWS
|TWS
|Done
|Done
|Done
|This code duplicated the code in VnicProfileModel.
Consider extracting it to a public method in VnicProfileModel.
|Please move the dcId to the vnicProfleModel ctor.
|This code should reside in the VnicProfileModelC ctor.
|The qos list and selected item are initialized in the VnicProfileModel's ctor. Why do you need extra initializtion?
|Same here. The initialization should be done in NewVnicProfileModel.
|same here. The qos list should be initialized inside the relevant profile model.
There is no reason to do it outside the model. All the places that use the model have the same logic for getting the qos list.
|same here.
|Missing ';' at the end of the line
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|The items are not going to be changed after initializing the editor. So in this phase it would be an overhead to implement TakesConstrainedValue.

And also, this is not in the scope of this patch:)
|The LogicalNetworkEditor is strongly binded to vnic instance type and can't be reused here.
|Done
|This method is called only once when opening the edit dialog.
I don't think it worth to maintain a map for it.
|1. The key of the map you&quot;ve suggested is the profile name. Here I need to find the profile by the network name. So the map wouldn't help me here.
2. You are right. Removed this check.
|Done
|Changed the cast to List instead of ArrayList.
I prefer not to use iterator. I think foreach is much more readable.
|You are right:) That's why I did it in patch http://gerrit.ovirt.org/#/c/17574/
|Fixed the typo. It is formatted, the problem is with gerrit's display.
|This class was renamed from VmNetworkCreatingManager.java to VmInterfaceCreatingManager.java. And was adapted to use profiles.
Most of the code in thus class is not in the scope of this patch.
|This is not correct. You can create two vnics with the same name and different cases.
|It is vnic representation to be used as instance type for the vm.
|Done
|Done
|The format is ok. It is the gerrit...
|Done
|Done
|Fixed in http://gerrit.ovirt.org/#/c/17574/
|I this case we don't want the null to be the default value. That is the reason I put it last and not first.
|Usually we leave it as is, cause the search can sort them.
In this case we don;t have search.

In the next phase when we will have search query for the vnic profile this sort should be removed...
|Done
|Not in this case. The sub tab is visible just under dc or network tree context. In these 2 cases there is tree selected dc
|In the first phase of the feature there won't be search.
As soon as there will be search queries for vnic profiles this code should be fixed.
|You need the extra \ after \n just if you continue the sentence in a new line.
So or remove the extra \ or add enter after it.
(Should be applied for all the properties files).
|Please fix the format.
|No. The fix in http://gerrit.ovirt.org/#/c/17571 should have been done here.
But I missed it and found the bug later. I didn't want to modify earlier patches so I added the fix as a new patch.
|Done
|Done
|Done
|Done
|I prefer to set the title in the explicit model.
|There is no- getCustomPropertySheet().getIsValid().
 getCustomPropertySheet().validate() does the validation and returns the isValid value.
|Most of the removes in out system don't work like this. I prefer to leave it consistent with the other entities removes.
|Done
|Done
|Done
|Done
|Changed to &quot;VM Interface Profile {0} from Network {1}&quot;
|Done
|Moved to presenters init(...)
|Done
|Was removed in http://gerrit.ovirt.org/#/c/17583/
|Done
|Fixed in http://gerrit.ovirt.org/#/c/17583/
|Fixed in http://gerrit.ovirt.org/#/c/17583/
|This logic shouldn't reside in VnicProfileModel cause no all the places that use the model need to init the network list. For example in Networks-&gt;Profiles when I use the VninProfileModel the network is already known. There is no need to load the network list from the engine.
|See previous comment.
|I would still have to do the query. The network id is not enough, I need the whole entity...
|See previous comment.
|There is no search, so it doesn't matter:)
Fixed it for future use.
|There is still no search. When there will be one the TODO should be removed.
|It is listmodel of a subtab- items should be added externally to setItems. Therefore I think it is more efficient to leave it as is. But I&quot;ll consider the issue later after pushing all the pending patches)
|There is no SearchableListModel syncSearch mechanism. The syncSearch method is empty
|There is a big change we will add commands to this model. Therefore I prefer to leave this method and its calls.
|For now I leave it as is. After we&quot;ll push all the patches I&quot;ll consider it and decide if to fix it in a new patch.
|Why? syncSearch of SerachableListModel does nothing...
|Same answer:)
|Fixed to VM Interface Profiles
|Why not? How will it work without it?
|I see that all the subtabs still use it...
|I would call it NeutronAgentWidget
|I prefer the terminology model over behavior.
|you can use EntityModelLabelEditor to control the changeability from the model.
|I prefer the name NeutronAgentModel
|I think that changing the availability of the model is enough. You shouldn't make each one of the model components unavailable.

The view that is using the model should make the whole panel that reflects the model visible/invisible according to the model's availability.
|Why don't you get it from the map?
|I prefer the name neutronAgentModel.
|If it is unavailable why do you need to set the changeable value?
|same
|Do you mean initExternalProvidersList?
|Please insert \n after the comma.
|This order is problematic. If you have external network and for example vlan tag is true then the vlan text box will be enabled even it shouldn't.
|Why do you do it here and not as part of the initDcList()?
|same
|Consider trim() the url.
|Consider change the regex (composeRegex()) according to the value of acceptEmptyInput instead of overriding the validate.
|Please remove trailing whitespace.
|same
|same
|same
|I think start progress should be here and not in onProviderChosen().
|As I understand you need the selection code in order to avoid clear of the selection in the DiscoverModel which inherits this model.
But whole this query is redundant for the discover. You know what is the provider and it 
is not changeable. You don't need the provider list.

I think you should have abstract class with the common code and the Import and discover should extend it.

Or alternatively you can set the providers via the source list model, like it is done for the dcs in the networks model.
|1. Please move the changes in this class to a separate patch and add Vojtech as reviewer.
2. You can use DefaultSelectionEventManager.&lt;EntityModel&gt; createCheckboxManager(0))
|I have two problem with this code-
1. If effect all the EntityModelCellTable in the system.
2. I think this code is not generic enough. If you&quot;ll add another editable element to the column you&quot;ll have to refactor this code.

You can add a &quot;raiseSelectionWhenClicked&quot; property to the column. This property can be true by default (So you won't effect other tables in the system). If it is set to false, return here instead of setting the selection.
|AFAIK if the button is disabled you won't get here...
|You use this ode more than once. You can extract it to a method.
|Why don't you use getSelectionModelForButton?
|Why don't you just do- setComparator(new Linq.NetworkByNameComparer()) ?
|did you mean-
for (Object item : items) {
 identicalItems.add(item);
}
setItems(identicalItems);

- Cause now the loop is redundant and you reset the old items when you set the comparator.
|What if the value is instanceof SortedSet but the set is not sorted according to the desired comparator?
|I don't understand why did you remove the initPortMirroring() from here...
It causes a bug- now the port-mirroring is shown in EditTemplateVnic dialog.
|What about initSelectedNetwork()?
In case the network was changed and now it is not changeable it should be rollbacked.
Now that you remove the initSelectedNetwork() it won't happen.
|Please add a comment to explain why do you call it explicitly here.
Or even better- you can fix the infrastructure that avoids updates in prohibition reason to be shown and then you won't need this work around:)
|U think the terminology is &quot;plugged&quot; and not &quot;plugged-in&quot;
|If the queryTypes or queryParams are empty the query shouldn't be sent to the backend.
|Now that you don't use this property in the view it doesn't have to be ListModel you can change it to List&lt;DataCenter&gt;.
|What about the opposite direction? (selecting the selected item via the model)
|description?
|What is the change here?
|What about a description?
|Please fix indentation.
|I&quot;m not sure why do you need to get the nics from the backend again. Changing the dc/cluster shouldn't affect the nics. I think you can call the query just once and not on each dc/cluster change.
|nice:)
|This class is relevant just for queries that are done to init the unit vm model.
Please change its name to reflect it.

Also, I think this whole class is redundant and makes the code very confusing.

It is very hard to understand a code line that looks like this-
Frontend.RunAction(VdcActionType.AddVmFromTemplate, param, new NetworkFrontendActionAsyncCallbacks.NetworkCreateOrUpdateFrontendActionAsyncCallback(unitVmModel, defaultNetworkCreatingManager), this);

Please consider removing this class and moving its logic to VmNetworkCreatingManager.
VmNetworkCreatingManager can  implement IFrontendActionAsyncCallback.
It can get an action type as a parameter and call the relevant method according to the type.

(Also, I think it is more readable to have a different file for each class and not having a class of classes. But if you&quot;ll move all the code to the VmNetworkCreatingManager and remove this class you can ignore this comment :) ).
|Shouldn't this code be part of initNetworkInterfaces?
|Why do you need this class? NetworkBehavior adds null to the network list. And the code in VmModelBehaviorBase for adding null network is redundant.
|As I understand this list holds all the NicWithLogicalNetworks of the vm.
So its name should be nicsWithLogicalNetworks.
|Why don't you use NetworkFrontendActionAsyncCallbacks.NetworkCreateFrontendAsyncCallback as you did in this case in UserPortalListModel?
|How is this change related to the patch?
|This method is not specific to the vm and can be reused by all the network models.
Please consider moving it to the NetworkBehavior.

Also, as I see adding the null network is part of the networkBehavior.convert, why do you also need it here?
|same
|createOrUpdate is a confusing name. It is hard to understand when to use create, when update and when createOrUpdate (and there is no documentation...).
Please change the method name to reflect it is used when you add vm from template. And please add documentation to the methods.

Or maybe if you want this method to be used not just for creating vm from template, change the name to updateOrCreateIfNothingToUpdate (or something like this). And remove the explanation about templates from the comments and the variable names.
|updateNetworksFromParams() has the same code. Why do you also need it here?
|I don't really understand why queryFailed needs the target parameter. If networkCreated can live without it I guess queryFailed can be implemented without it.
|Please change &quot;Virtual&quot; to &quot;Logical&quot;.
|Why do you pass elementId param to the ctor if you don't use it?
|I there are no nics on the vm this message shouldn't be shown.
|Please remove the empty lines.
|This import causes a checkstyle error-
ovirt-engine/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/vms/NewVmModelBehavior.java:4:8: Unused import - java.util.Arrays
|Description?
|This logic should reside in DiscoverNetworkModel. Hope it was fixed in the next patches...
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I&quot;m not sure about it. Please review the rest of the patch and we&quot;ll discuss it on Sunday. If I&quot;ll find out there is a problem with this issue I&quot;ll fix it in a separate patch.
|Done
|Done
|Done
|It is sent as a key to the ui. So it is necessary here.
|This query is redundant for DataCenter/Cluster-&gt;Logical Network- new and edit
|Why isn't it done in the DiscoverModel?
|Where is the view of this label?
Do you want it to be visible in all the NetworkModels?
|Now I see you just added the code to the flush. Next time please add such fixes to the relevant patch...
|I think it is more readable to add getSaveActionType() method instead of executeParticularSave. It is hard to understand what is the differencd between executeSave and executeParticularSave.
|This code should reside in ProviderNewNetworkModel. Was it fixed in a further patch?
|Why here and not in the model?
|Why here and not in the model?
|Done
|Thanks. Now I see the broken tests were fixed by another commit.

I think that it is not correct to add when(vds.getVdsGroupCompatibilityVersion()).thenReturn(Version.v3_3);
to createHelper(SetupNetworksParameters params) because the createHelper is used by a lot of tests, and this code is needed just by the gatewayChanged test.

So I leaved the code as is in my patch and removed the code from the createHelper.
|I need this check because null is a valid value and SubnetMaskValidation marks it as invalid.
|same:)
|Done
|Why do you need this addition? Isn't it the default?
|To avoid NPE please change to-
VdcBllErrors.PROVIDER_SSL_FAILURE.equals(res.getFault().getError())
|Don't you want to set the result in both of the cases? Now, if the user cancels the import window he won't see the original result of the test.
|Done
|Done
|AttachNetworkToInterface and UpdateNetworkToVdsInterface already had this validation. So nothing needs to be done there.
|Done
|Due to GWT limitations &quot;Pattern&quot; class can't be used in the client side.
In GetDeviceCustomPropertiesQuery can you please return a Map&lt;String, String&gt; instead of Map&lt;String, Pattern&gt;?
|Done
|I discussed about it with them and we decided to do it in the next cleanup (and not as part of the feature).
|Done
|Custom properties is not a column in vmInterface table, just in the view. Therefore the addition shouldn't be reflected in fixtures.xml.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Now that custom properties are map StringUtils.equals is good enough.
|Done
|Done
|same as previous comment about this issue.
indentation- fixed
|Why just the network tab?
|Why don't you do it parallel to the dcQuery?
|Please substitute with the correct image.
|Same.
|Please provide explicit image for dcs, shouldn't be the same image as for dc.
|Why don't you do it in the ctor? Why do you need to set the style each time the image it set?
|Please fix the indentation.
|Please format this code correctly.
Enter and { after else.
|In case the uri is not valid you&quot;ll get NPE here.
|I think that (.*) for the port part is not enough. You should at least check that the port contains only digits.
|If not valid you will get NPE cause host and port are null.
|I understand that for your use case just 'http' is a valid schema. But 'UrlValidation' is name of general class and it should accept other schema's as well. You can pass the valid schema's names as a parameter to the class.
|Please remove trailing whitespace.
|Please remove trailing whitespace.
|Why don't you use AsyncDataProvider.GetAllProviders(providersQu
ery); ?
|Why do you need to check- vds.getStoragePoolId() != null ?
|Instead of checking  vds.getVdsGroupId() != null you should extract the if block to Add/EditHostModel.
|Can shorten to-
 getProviderSearchFilter().setIsChangable(provider!=null);
 getProviderSearchFilterLabel().setIsChangable(provider!=null);
 getUpdateHostsCommand().setIsExecutionAllowed(provider!=null);
|You use this block multiple time. Maybe extract it to a method-
enableSearchHost(boolean enable)
|In NewHostPopupView- you should setVisible(false) this icon in case of gluster only mode (as you have done in the model for all the other items related to providers).
|Please remove trailing whitespace.
|same here.
|All the initialization code of ExternalHost resides in the HostModel. I would move also this code to HostModel to avoid confusion.
|Why do you need to use empty property? You have to initialize it manually. I think it is better to check hostModel.getHostName().getItems != null to check if the list is empty.
|&quot;HostName&quot; is confusing here. Maybe change to &quot;ExternalHostName&quot;
|In HostListModel.New() you set the value by default to false.
So, as I understand, the code here is redundant.
|You don't need to pass the model as a parameter, you can use HostModel.this.
And it is not a hostListModel is is a hostModel.
|IIRC , if you&quot;ll choose another item the &quot;empty&quot; value will disappear and you won't be able to choose it again.
|Do you want to have the &quot;null&quot; value in the external host list permanently or just as a default selection?
If you want to have it in the list you have to add it to the items.
|Redundant- it is selectable by default
|See the comment about empty property in HostListModel.
|Redundant- will happen in HostName_SelectedItemChanged.
|same
|setting isChangable is enough.
|Redundant- will happen in HostName_SelectedItemChanged.
|same
|How is it related to your patch?
|Don't like the 'newMode' parameter. Please override it it the NewHost and EditHost models.
|same here.
|Same here. I don't like the 'newMode' parameter. You can extract this 'if' block to a method and override it in the relevant children.
|Why did you add &quot;vds.getStoragePoolId() != null&quot; ?
If it is a way to check if you are in 'newMode' please override it in the children.
|Same as the previous comment.
|Please avoid using 'newMode'
|Same here.
|redundant- done in the HostModel
|same here.
|redundant
|Why do you need &quot;External Host&quot; and &quot;External Hosts&quot;. I guess just one of the is in use.
|candidate.getname() != null is redundant.
|candidate.getname() != null is redundant.
|You are missing a case here -if candidate.getname() is null and clusterName is not  you will skip the if although you have to enter.
Please use StringHelper.stringsEqual() instead of the second part of the if.
|Same comment as in AddClusterRM.java
|Same comment as in AddClusterRM.java
|Could find SetupNetworksBondModel.java in the patch. Where was it introduced?
|I prefer- if (&quot;custom&quot;.equals(res))
|Please change to return (String) pair.getValue().getEntity() instead if reusing 'res' (it is more readable).
|s/iff/if
|s/vmNetwork/nonVlanVmNetwork
|Consider adding if (op1 instanceof LogicalNetworkModel). Just to make sure the code will work in the future.
|This &quot;if&quot; is redundant. op2 is instanceof NetworkInterfaceModel for sure.
|Same as the previous comment.
|should be- &quot;Cannot have a non-VLAN-tagged VM network and VLAN-tagged networks on a single interface.&quot;
|The format of the bug-url should be- https://bugzilla.redhat.com/953054
|You can use getSystemTreeSelectedItem() to determine the tree selected item.
See HostListModel.New() for example.
|I think this code should reside in onOperation.
|Why do you need the null operation event? Why don't you add here-

if (candidate.isNullOperation()){
setStatusStyle(false);
}
|Please remove trailing white-space.
|Why did you remove this?
|Why didn't you moved the rest of the code in the method to the RunOnceModel?
|Yo can pass the ListModel (UserPortalListModel) to the RunVmModel.
You can see VmInterfaceModel for example.
|Why didn't you move this method to the run once model?
|Same comments as for UserPortalListModel
|As I understand the requirements of the bug- Bond  A  dragged on to  Bond B  =&gt; New bond dialog with Bond B properties filled in but allows to select Bond A properties*.
In your patch both bonds A and B are broken and a new bond is created.
Please update the bug or your functionality:)
|I prefer the name EXTEND_BOND_WITH
|you can extract this code to a method and reuse it in the next block.
|Same should be done for old (3.0) bond window.
|Same code should be for old (3.0) bond window.

Consider moving the duplicated code to the BondModel to avoid duplication.

Also, the bond prefix should be some kind of mask- the user shouldn't be able to delete it.
|Please make sure that if you use one of the pre-defined bond names, it is removed from the free bond names.
|The initialization should be in the constructor.
|Please use- Linq.&lt;String&gt; Cast(Iterable);
|Redundant, you already did getCheckConnectivity().setIsAvailable(false) in SetupNetworksBondPopupView
|Should be done on the model side (same as checkConnectivity).
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Fixed in a new commit.
|Fixed in a new commit
|Done
|Done
|Done
|Done
|Done
|Done
|It was done in the next patch. Squashed it to this patch.
|It is used in the next patch. Squashed it to this patch.
|This 'if' is redundant, localeName can't be default cause default is not added to the locale box.
|Why don't you create the templates in this class? What is the added value of getting through the ctor?
|I think inheritance should be used instead of switch..case.
|This method is needed just for StorageQuotaProgressBar (if you will use inheritance:)).
|Same here, needed just for MemoryQuotaProgressBar.
|Why don't you use tooltipHtml?
|Same here, inheritance would avoid this ugly long block.
|This comparator is used for sorting assign/unassign network dialog.
Please add it to the bug comment.
|This comparator should also be declared in Linq
|I think that it is wrong design for the view to create the business entity.
The model should do it.
The suggest box should hold just the strings, the model should do the work converting the strings to objects.
|The same comparator is declared in http://gerrit.ovirt.org/#/c/13049/1.
You can move it to Linq.java and reuse it.
|This sort should be done in queryNetworks method.
initNetworkModels is called on each redraw. Networks sorting by name should be done only once- when fetching the networks from the backend.
There is no action that can be done in the dialog that changes the networks names.
|Also, the view is using networkMap.values() (not allNetworks) to display the networks.
networkMap is a HashMap, which makes no guarantees as to the order of the map.
If you want to keep the sort on the model side networksMap should be SortedMap (LinkedHashMap, TreeMap...)
|initNicModels() is called on each redraw (which is called on each operation).
It means you are doing the sorting lots of times! Some of them are redundant,
Maybe consider to use SortedSet with LexoNumericComparator instead of list.
|I&quot;m not sure how your fix can work.
The view is using nicMap.values() (not allNics) to display the nics. nicMap is a HashMap, which makes no guarantees as to the order of the map. If you want to keep the sort on the model side, nicsMap should be SortedMap (LinkedHashMap, TreeMap...)
|Done
|Done
|Sorting here will effect only bond popup opened when adding nic to a bond.
The sorting should affect all the cases bond popup is opened.
The sorting should be done in HostBondInterfaceModel on setItems.
|If there is no explicit setItems() you can add it (override it).
That is not accurate, it does matter. For hosts in cluster 3.0 or beneath you don't have a setup networks dialog, you create bond form the host-&gt;interfaces subtab.
|Consider creating SortableListModel with items of type SortedSet and a Comparator.
It will make sure the items are always sorted. No matter if you setItems again or adding items manually (getItems.add(...)).
|I couldn't find a use to the compareTo. I think you can remove it.
|I think &quot;I&quot; is not a good name. Maybe change to &quot;interface&quot;
|To be more readable I think it should be more specific- if (i instance of Vlan)
|If you've done the change to avoid conflict with Bond class, you can simply change the method name to &quot;bond()&quot;.
|In any case you need to get the nic from the db.
|Why is this an inner class? Move it to a separate file so it can be used from other places.
|I know I told you to use an interface. But now that I see it again I realize it can be substituted with a boolean value.
|Please remove trailing white space.
|Same.
|why do you need this?
|I don't understand this declaration.
|why do you need this?
|Instead of using anonymous classes in all the following form items, you can declare LabelWithDefaultValue(IsDefault condition, String defaultValue)

interface IsDefault{
   boolean isDefault();
}
|cpuThreads should be a data member and defined as BooleanLabel.
BooleanLabel cpuThreads = new BooleanLabel(constants.yes(), constants.no());
|resiliencePolicy should be a data member.
You can create a ResiliencePolicyLabel (see MemorySizeLabel for example).
|Same- memoryOverCommit shouldn't be defined here, it should be a data member.
|Fix the indentation.
|remove trailing white spaces.
|I add it manually in initNetworks if HotPlug is supported. It is the &quot;empty&quot; network.
|what is the problem with the format?
|Done
|Done
|Why do you need this?
|I think you should add new methods- setHTML and getHTML.
When you use setLabel you don't expect it to act as HTML element.
|please remove trailing whitespaces
|I think that it is bad practice to have a method with one simple line.
|s/th e/the
|s/on/of
|Change the name accordingly.
|I think using scheduleDeferred on execute can cause a lot of bugs.
Events that run between the first part (Execute) and the second (doExecute) can effect the state (e.g. selection) of the model the command should run on. It can cause a bug when running the command (e.g. if the selection was changed, executing the command on the wrong entity).
|please remove the message nameMustContainAlphanumericCharactersOnlyMsg() from Constants.java
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|The multipleQuery shouldn't be in the for loop.
|The change in this class is not related to the patch. Please split to another patch.
|The key is not good enough. Queries with different parameters will have the same key.
There are some places in the code where we use &quot;for loop&quot; to send queries. In those cases just the first and the last query in the loop will be executed, all the other will be lost.
|How is this related to the patch?
|change the variable name to runningVms
|Done
|if (vmIsUp){
  the remaining code
}
|&amp;&amp; vmIsUp
|&amp;&amp; vmIsUp
|&amp;&amp; vmIsUp
|networkRequiredOnVds shouldn't be called in the for loop. The result can be stored in a variable and reused in the loop.
|In this case it is not possible. But I want to keep the method safe in case that in the future somebody will call it without checking the network name.
|This line was automatically updated by the formatter.
I (you:)) will remove the final. Your proposal is beyond the scope of the patch.
|Done
|Done
|Removing it from here will cause a bug. Because networkAttachedToVds returns false if the network is null.
So if the network is null, you will get and error message.
|Done
|Done
|I agree with Moti. Changing the order is enough.
(getNetworkName().equals(vmNetworkInterface.getName()) instead of vmNetworkInterface.getName().equals(getNetworkName()) ).

There is no need to check that the cluster network is not null, cause it can't be null.
|Done
|Done
|See the change in AuditLogableBase.java.
|The method is used for plug and unplug. I will change the name to activateDeactivateNic.
|I will rename this class to VmNicDeviceVDSParameters, and the parent class to VmDeviceVDSParameters.
And remove HotPlugUnplugNicVDSParameters.
|This class can be used in the future for updating other devices- like disks.
We've called the vdsm command &quot;vmUpdateDevice&quot; in order to reuse it for other devices.
|See my answer to the comment on VmUpdateDeviceVDSParameters.java.
|It is not a valid action. It is blocked in canDoAction.
|You are right. A canDoAction should be added for this case.
But also before my patch the Command would have NPE if the vmId is not valid.
|You don't call updateHost if the requiredVdsAction is UnplugPlug.
Instead, you throw a conDoAction explaining to user he has to Unplug and then Plug the vnic.
|I don't agree. You can't pull just this if. You&quot;ll have to duplicate the whole block.
Because first you have to check it is not plug or unplug.

This whole method is called only once, cause the return value is stored in requiredVdsAction.

The method gathers all the possible options and I don't think it should be changed.
|If it is null (there is no network) we don't have to verify that the network is in the cluster and is a vm network.
|Please make the comment more clear. 
Something like- To support different values on different messages to the same variable, for example - ...
|please remove this redundant method.
|please add //$NON-NLS-1$ at the end of the line. It doesn't compile without it.
|This line is redundant here.
&quot;IsEnabled&quot; property controls the availability of the components in the panel when the network is attached to one or more clusters.
Since &quot;PublicUse&quot; is used just for new network there is no meaning for this line here.
|Please remove this file from the patch.
|Please fix the indentation.
|Please don't remove the Network, just add another &quot;else if&quot; for the NetworkView.
This procedure can be useful to get the id of a Network entity in a generic way.
|s/notePermissionsContainigTheseOperationsShuoldAssociatNetworkOrEqualRoleTreeTooltip/notePermissionsContainingTheseOperationsShouldAssociateNetworkOrEqualRoleTreeTooltip
|you shouldn't touch the translated files.
|you shouldn't touch the translated files.
|you shouldn't touch the translated files.
|you shouldn't touch the translated files.
|duplicate
|The managment network name is a config value. ConfigurationValues.ManagementNetwork should be used and not &quot;ovirtmgmt&quot;
|Maybe the management network name should be passed as parameter from the backend. It is not necessary ovirtmgmt.
|I don't agree- it is set to false just if (network.getCluster() == null), in all the other case it should be true
|Don't agree- see the previous comment.
|Done
|Done
|Done
|Done
|Done
|It shouldn't be null. The remove is enabled just if there is one or more entities selected.
|Done
|Done
|Done
|will be done in a cleanup patch
|Done
|Done
|Done
|will be done in a cleanup patch
|will be done in a cleanup patch
|Done
|Done
|Done
|Will be fixed in a cleanup patch
|It is just the skeleton. The next patches fixes it.
|It is just skeleton. It is filled in the next patches.
|Will be fixed in a cleanup patch
|It represents a role, can also be mgmgtNetworkRole.
I think the name is ok.
|Done
|Will be fixed in a cleanup patch
|It was removed in the next patches. This patch is just the infrastructure.
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Done
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|Fixed in phase 6
|We&quot;ll discuss it and fix in cleanup patch if needed
|Will be fixed in a cleanup patch
|Will be fixed in a cleanup patch
|I think you should use- LocaleInfo.getCurrentLocale().getDateTimeFormatInfo()
and not to add specific format for each locale.

You can see here example how to use it-
http://forums.smartclient.com/showthread.php?t=20577
|remove trailing whitespace
|The comment line is too long (each line can has up to 72 chars)
|remove trailing spaces.
|Please add delimiter between the reasons.
|you forgot to add //$NON-NLS-1$
it won't pass compile
|//$NON-NLS-1$
|Add this class to Common.gwt.xml
|The class should be serializable.
|why don't

 getButtonWidget().setTitle(!command.getExecuteProhibitionReasons().isEmpty()
				        ?command.getExecuteProhibitionReasons().get(0)
				        : command.getTitle());
|why do you show just the first one and not all the reasons?
|Maybe AbstractUiCommandButton can also listen to changes in ExecuteProhibitionReasons list. To avoid bugs when using the wrong order (and allow changing the reasons while the execution is not allowed).
|please separate to another patch
|please separate to another patch
|1. The method name should reflect the returned value is pre convert.
2. Why don't you create a map between the the configuration value and the converter and return a converted value?
3. public static Object GetConfigValue(ConfigurationValues configValue, String version, Converter converter) can be useful.
|Why do you get the values after the login. Maybe in the future there would be a config value that is needed before the login.
|Should call getConfigValue
|Should call getConfigValue
|Please return the real value- boolean, and use a renderer.
You can see how rxColumn is implemented for example.
|BaseInterfaceListModelTable is a base class that is also used for PoolInterfaceListModelTable in userportal and VmInterfaceListModelTables in userportal. The fix should be down just in the vmInterface table in the webadmin.
|what about isRequired?
|This initialization is unnecessary here (And in case of a not new network overrides the clone). Need to be done just before the Attach Command (in PostNetworkAction).
|remove white spaces
|remove white spaces
|please remove trailing whitespaces
|I don't think you really need the &quot;isTemplatePrivate&quot; style
|The webadmin gets the keys from the backend (confug_value). The key must be synchronized with the legal values for spice (and can contain '-'). So in order to support the gwt Constants keys the '-' must be replace with '_'
|Remove the trailing white space
|Remove the trailing white space
|have you updated the DocumentationPath.csv ?
|remove trailing spaces
|please externalize the header strings
|because it had already been in the AbstractVmMapper
|I think you also have to add  a setter. Because the next time somebody will edit and save this file the formatter will add the final automatically. 
After you add the setter check that there is no problem editing a vm (because the _diskList field is no longer read-only the backend doesn't ignore it when editing a vm, if the frontend passes the wrong value it can cause a problem the previously wasn't seen).
|if name1=null and name2!=null it is not correct to return 0
|the fix should be in the UiCommonWeb.gwt.xml not here
|Currently-
NETWORK_INTERFACE_ALREADY_IN_BOND=Network Interface already belongs to the bond.
Should be-
NETWORK_INTERFACE_ALREADY_IN_BOND=Network Interface ${NETWORK_INTERFACE_ALREADY_IN_BOND_ENTITY} already belongs to the bond.
|It seems the all of the constants have the similar format-
&lt;message_name&gt;_LIST or &lt;message_name&gt;_ENTITY.
So I don't think you should have a special constant for each one of them, you can add to the ReplacmentUtil methods that get the message name and the entity/entities and return the replacmant.
 public static String replaceMessageEntity(VdcBllMessages message, String entity) {
        return message,getName() + 'ENTITY' + ' ' + entity;
    }

 public static String replaceMessageEntities(VdcBllMessages message, List&lt;String&gt; entities) {
        return message,getName() + 'LIST' + ' ' + StringUtils.join(entities, ',');
    }

And you can have also the following-
ValidationResult createValidationResultWithEntity(VdcBllMessages message, String entity){
return new  new ValidationResult(messages, replaceMessageEntity(message, entity));
}

And similar one for multiple entities.
|Here you will use- ReplacementUtils. createValidationResultWithEntity(VdcBllMessages.NETWORKS_ALREADY_ATTACHED_TO_IFACES, Collections.singletonList(network.getName()));
|The message is-
&quot;Cannot ${action} ${type}. The following VMs are actively using the Logical Network: ${NETWORK_CANNOT_DETACH_NETWORK_USED_BY_VMS_LIST}. Please stop the VMs and try again.&quot;
In the case of setup networks, the user don't know what logical network you are talking about. Please update the message to contain network name as well. (This message is not new and used in three places, one of them is the old setup networks which also has the same bug. I don't think you should create new method. You can just update the existing one and modify all the three uses to pass replacement for the network name).
|The current message is-
BOND_USED_BY_NETWORK_ATTACHMENTS=Cannot remove bond, because it's used by Network Attachments.
Should be-
BOND_USED_BY_NETWORK_ATTACHMENTS=Cannot remove bond ${BOND_USED_BY_NETWORK_ATTACHMENTS_ENTITY}, because it's used by Network Attachment/s.

(Please use BOND_USED_BY_NETWORK_ATTACHMENTS_ENTITY instead of VAR_BOND_NAME).
|The current message is- NETWORK_BOND_NAME_BAD_FORMAT=&quot;Bad bond name, it must begin with the prefix 'bond' followed by a number.&quot;
Should be-
NETWORK_BOND_NAME_BAD_FORMAT=&quot;${NETWORK_BOND_NAME_BAD_FORMA_ENTITY} is bad bond name, it must begin with the prefix 'bond' followed by a number.&quot;
|NETWORK_INTERFACE_ALREADY_IN_BOND=Network Interface already belongs to the bond.
Same issue as the other comments, the message dowesn;t contain NETWORK_INTERFACE_ALREADY_IN_BOND_ENTITY place holder.
|NETWORK_INTERFACE_ATTACHED_TO_NETWORK_CANNOT_BE_SLAVE=Network Interface '$NETWORK_INTERFACE_ATTACHED_TO_NETWORK_CANNOT_BE_SLAVE_ENTITY' cannot become slave, there's network attached to it.

I think it won't work without {} around the NETWORK_INTERFACE_ATTACHED_TO_NETWORK_CANNOT_BE_SLAVE_ENTITY
|There are three messages the use those replacements. All three of them have ${id} place holder.
I don't understand why did you change the code here to 'refererId'. For me, currently id seems like a bug.
|You can use a mew message here.
|Why _LIST and not _ENTITY?
|ACTION_TYPE_FAILED_NETWORK_CUSTOM_PROPERTIES_NOT_SUPPORTED=Cannot ${action} ${type}. Network custom properties are not supported in the cluster's compatibility version, but they were supplied for the following network(s): ${ACTION_TYPE_FAILED_NETWORK_CUSTOM_PROPERTIES_NOT_SUPPORTED_LIST}.

There is just one network, right? Please adjust the error message.
|samw
|1. You have two spaces after the 'Following'.
2. Why ${NETWORK_BOND_RECORD_DOES_NOT_EXISTS_LIST} and not- ${NETWORK_BOND_RECORD_DOES_NOT_EXISTS_ENTITY}?
3. Please add '.' to the end of the message.
3. why not-
Bond ${NETWORK_BOND_RECORD_DOES_NOT_EXISTS_LIST} doesn't exist.
|1. Maybe-
Bad bond name (${NETWORK_BOND_NAME_BAD_FORMAT_ENTITY}), it must begin with the prefix 'bond' followed by a number.
2. You didn't update the message in AppErrors.java file. it is a genreal comment-
please make sure all the message are in sync across all the AppErrors files.
|Consider moving the abstract after the access modifier.
|same
|same
|Why do you need this class, does any entity besides VDS has AdditionalStatusColumn?
|abstract?
|abstract?
|Why do you need this method?
|Please remove the redundant space (between ! and imagesHtml).
|If you will follow my comment on the columns code, you won't need to use templates.hostAdditionalStatusIcon (SafeHtmlCell already rendered with a div).
|I would extend AbstractSafeHtmlColumn (You can refer to MainTabNetworkView-roleColumn for an example).
Doing that, you won't need to deal with the cell. Just to override to getValue(..) and getTooltip(..) methods on the column.
|Duplicate code (the cell's render method contains the same logic). Please extract it to a method (if you will follow my previous comment the cells render method code would be moved to this class, so you will be easily able to use the same method).
|space (! images)
|Why do you need generics here? Isn't it always VDS?
|I changed it to 'public class HostAdditionalStatusColumn extends EntityAdditionalStatusColumn&lt;VDS&gt;' and it works fine.
|If you remove the &lt;S&gt; generic, you won't need this if block.
|If you remove the &lt;S&gt; generic, you won't need this if block.
|The 'getTooltip(..)' code is very similar to 'getValue(..)'.
Consider extracting the code in getToolip to a method which constracts imagesToText map.
'getValue(..)' method will use just the keys part of the output.
|I don't agree.
The structure of both of the methods is similar. If you will have bug in one of them, probably you will have the same bug in the other one.
|The patch cannot be merged with TODO leftovers. So either use MultiValueMapUtils or just remove the comment.
|The reason the visibility of messageLabel is controlled form here is because the messageLabel is not part of the NetworkModel.
All the other fields have a representation in NetworkModel so please control their visibility via the model (the model method for controlling the visibility is- setIsAvailiable(..)).
|The profiles tab is visible just for vm networks. Since in case the mode is not VirtOnly the network is for sure not vm network, there is no need to explicitly changing the visibility of the profiles tab.
|Consider storing ApplicationModeHelper.isModeSupported(ApplicationMode.VirtOnly) in a varialbe.
|Please use- getTable().ensureColumnPresent(..) instead of the 'if' block around the column creation.
It receives a parameter to identify whether the column should be visible.
You can see how the columns are added to SubTabNetworkVmView for example.
|Please add a separate table for custom properties (table columns- network_attachment_id, key, value) instead of storing the values as a blob.
|Consider changing lines 50-60 to-
if (ipConfiguration == null) {
 ipConfiguration = new IpConfiguration();
}
mapper.addValue(&quot;boot_protocol&quot;, EnumUtils.nameOrNull(ipConfiguration.getBootProtocol()))
                    .addValue(&quot;address&quot;, ipConfiguration.getAddress())
                    .addValue(&quot;netmask&quot;, ipConfiguration.getNetmask())
                    .addValue(&quot;gateway&quot;, ipConfiguration.getGateway());
|The new method is ok.
|Please check all the properties (network_id, nic_id, ip, gateway, netmask, custom_properties).
|Same here, please check that all the fields are ok (you can add networkAttachmentEquals method for this purpose).
|Please update all the fields not just the properties one.
|Same here- please use networkAttachmentEquals
|Please add attachments to different nics on the same host and to at least one more host so that the tests will be more interesting:)
|It means that the nic_id shouldn't be null (since there is no column for host_id, nic_id is the only way to find the host to which the attachment belongs).
Please update the NetworkAttahcment entity with notNull annotation on the field and mark the table column as NOT NULL.
|Please see previous comment- should be NOT NULL- GetNetworkAttachmentsByHostId resides on it.
|Since currently the old setup networks is used by RemoveNetworkCommand and DetachNetworkToVdsGroupCommand there is no bug. So this patch can be merged as is. Please add it to your TODO list and make sure you're aware to this bug when you are making RemoveNetworkCommand and DetachNetworkToVdsGroupCommand use the new HostSetupNetworkCommand.
|That's what I'm suggesting first detach and then remove.
But the execution (not can do, just executaion) of the setup networks commands (which are responsible for the detaching) is done parallely in separate threads. If in RemoveNetworkCommand you'll first execute the multiple setup networks and then remove the network, what will actually happen is that the cando's of the setup network will be completed and the network will be removed. The executions of the setup networks will run in parallel (or after) the removal on the network.
Waiting for all the setup networks threads to be finished before we remove the network can block the remove network command for really long time.

But I agree that depending on an assumption is not safe at all. Maybe we can create an internal setup networks command that gets all the data and doesn't query the db at all (the regular HostSetupNetworks will call this command at its final stage)...
|When removing a labeled network/detaching it from a cluster, we are trying to detach the network from the host (calling to setup networks).

1. In RemoveNetworkCommand you first remove the network and then calling the setupnetworks commands. It is problematic since you have ON DELETE CASCADE on the network. It means that ones the network will be removed the attachment will also be removed, which means that if the setup networks will try to get the attachment form the db it will fail, and probably the setup network command will fail on can do action.
2. Currently, both RemoveNetworkCommand and DetachNetworkToVdsGroupCommand are calling the old setup networks command so there is no bug (the old setup networks command doesn't care that the attachment was removed).
But since our goal is to use the new command (I've added it to the TODO list) it should be fixed.

I suggest leaving the on DELETE CASCADE, and refactoring the RemoveNetworkCommand so that it will first call the setup networks commands (since it is multiple action it will return once all the canDo completed) and just then removing the network from the db (which will cause the removal of the attachments). In this approach we don't need compensation.

The only problem I see in this suggestion is that we have to assume there is no attempts to get the attachment from the db in the execution stage of the host setup network command- it should be well documented.

Matrin, Moti- what do you think about the suggestion?
|The user have no action for deleting the host interfaces. It is done via the vdsBroker when updating the vdsCaps.
|Since in this phase the nicless network is not supported and nic_id cannot be null, please change to ON DELETE CASCADE,
|please add unique constraint for (network_id, nic_id)
|This is redundant since now you have assertEquals(expected.getIpConfiguration(), actual.getIpConfiguration());
|Did you forget to post the updated patch?
|In addition, I think the name should be part of the VdsNetworkInterface attributes, isn't it?
|Please remove this method, you should just add the 'slaves' attribute to 'constructStringAttributes()'
|Please use Objects.equals(..)
|I don't understand this TODO, can you please remove it from here and add it to the TODO document.
|Please remove that currently. It sounds like a temporary situation that is planned to be fixed. It is not the situation, right?
|This comment isn't relevant anymore.
|As I wrote in the next comment, I don't see any reason for passing the whole entity when you only want to remove it.
If you use a List&lt;Guid&gt; for the remove attachments it will solve the conflict and you will be able to add @Valid annotation, right?
|Why do you need the whole attachment and not just the id list?
|Same here, is list of ids enough?
|I'm not sure I understand why do you need this TODO? You just need to check in the commands' canDo that the nic name actually exists.
For bond I understand, but how can you know in this stage it is a bond?
|So it seems we agree this TODO is redundant, please remove it (if you haven't already done it in the following patches).
|I'm not generating the equals method. IMO, it is more readable to use Objects.equals(..) instead of all this null checks.
Using just the key properties in equals and hashCode gives us the option to store the entity properly in a HashSet. I saw a lot of bugs around this area (for example- the entity is stored in a HashSet=&gt; one of its properties is changed=&gt; hashSet.contains(entity) returns false).
I understand that changing the equals and hashCode behavior can cause bugs, but if you can, please verify the current use cases of the methods doesn't need all the properties to be compared.
If it's very difficult to do this verification I won't insist on changing the methods.
|1. Please use Objects.equals(id, other.id)
Same comment for all the other equality checks in the method.
2. Why does equals (and hashCode()) contain all the properties, isn't it enough to include just the key ones (id, networkId, nicId)?
|Gave you +2, when we&quot;ll introduce nick-less networks the equals will have to be modified since the nicId can be null (you will have to compare also the hostId).
|Where is the get?
|Why not itemId?
|Why not item?
|Please add java doc to this class.
|Please use Entites.entitiesByName and Entites.businessEntitiesById to avoid duplicating logic.
|Why sourceListModel.setConfirmWindow(null) was removed?
|Please use nicMap.get(iface.getName());
|Class name should start with capital letter.
|Needed for sr-iov
|same
|This code is duplication of the code in HostListModel.
Please create a new UpgradeHostModel which extends ConfirmationModel and contains the duplicated code.
|s/alertTtpe/alertType
|s/alertTtpe/alertType
|The class is not Serializable, why do you need this ctor?
|Please use- ToStringBuilder
|Shouldn't you use HostNetworkQosMapper? (NetworkQosMapper is used for vnic qos).
|shouldn't you pass the network_qos or the overridden one in case they exist?
|Not exactly. Please see the comments I've added to the attached patch.
|The order of the patches is wrong. You introduce IpConfiguration.primaryAddress just in a later patch-
|You repeat this 'if' in three places. Please extract it to a method.
|Please respond to my comment on patch 21- shouldn't you pass the network_qos or the overridden one in case they exist?
|s/update/updated
|s/entityList/entities
|s/entityList/entities
|s/provides/provide
|It is general method, so maybe- entityName.
|1. Why?
2. Please move it to your TODO list and remove the comment from the code.
|You should avoid using dbFacade. But you fixed it in a following patch, so never mind.
|1. For the singular method it should be 'vm' and not 'vms'.
2. The ${entities} appear twice in the  message, but you pass only one replacement for it. I think the ui won't be able to correctly replace the second one (not sure, you should verify it).
|Ok, let's leave it as is for now. When I'll get to the completer code I will re-think it:)
|Why nicName and not nicId?
For a bond it can be nicName, the other should have nicId.
Does all the other have nic_name? who should set it?
|Where are the ApplicationErrors.java/properties updates for these new messages?
|You've added the slaves property to Bond https://gerrit.ovirt.org/#/c/32909/17
Consider fill the slaves of the bond in the InterfaceDao (vdsNetworkInterfaceRowMapper.createInterface(..)), when creating the bond.
So this code could be modified to-
if (nic instanceOf Bond) {
  slaveCount = (Bond)nic.getSlaves().size();
}
|The ApplicationErrors files should be in this patch...
I know you didn't want to modify Moti's patches and have done it in a later patch. Just mentioning:)
|You should update all the AppErrors files. Not just this one...
|What about the- Cannot ${action} ${type}.
|Ignore the comment, I see you've added the validation the HostSetupNetworksValidator.validate()
|Please refer to- https://gerrit.ovirt.org/#/c/36067/37/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/errors/VdcBllMessages.java
You should have a validation that make sure the user didn't pass the same network on more than one attachment.
|s/is performs/performs
|networkTypes.size() &gt; 1 is redundant, you won't get here if networkTypes.size() &lt;= 1 (you will return in line 73)
|The message is-
ACTION_TYPE_FAILED_NETWORK_ATTACHMENTS_REFERENCES_SAME_NETWORK_DUPLICATELY=Cannot ${action} ${type}. Multiple network attachments references same network.

I would change it to-
ACTION_TYPE_FAILED_NETWORK_ATTACHMENTS_REFERENCES_SAME_NETWORK_DUPLICATELY=Cannot ${action} ${type}. Multiple network attachments (${ACTION_TYPE_FAILED_NETWORK_ATTACHMENTS_REFERENCES_SAME_NETWORK_DUPLICATELY_LIST}) references same network (${ACTION_TYPE_FAILED_NETWORK_ATTACHMENTS_REFERENCES_SAME_NETWORK_DUPLICATELY_ENTITY}).
|You can assume the input is valid. You get it from an engine command, not directly form the user. Please remove the TODO comment.
|You should act the same as you act when the '(networkConfiguredOnHost(attachment.getNetworkId())' returns false. You should ignore this attachment.
|As I wrote in the previous comment- if the nic_id on the attachment doesn't match the nic_id reported by the host, the attachment shouldn't be persisted.
|why not just-  if (networkConfiguredOnHost(attachment.getNetworkId())) as it was previously, I think it was more readable.
|reportedNicToWhichNetworkAttached
|Why do you need this set, isn't the attachment already contain the correct value. Maybe you should avoid adding the attachment to the db in case the nicId on the attachment doesn't match the baseInterfaceOfNic(reportedNicToWhichIsNetworkBound).getId()
|You can change the method with the following-
return nicsByName.get(NetworkUtils.stripVlan(nic));
|to any given reported NIC.
|You should handle the case the reported network is attached to different nic than specified in the attachments.
(We don;t have unsync nic property on the attachment, so we have to handle it differently).
I think you should remove the old attachment (on the wrong nic) and add new attachment with the correct nic (and new properties).
|You shouldn't set the reported data on the attachment.
The reported data is what the user wanted to set. And the user wanted to attach the network to a certain nic. If the network is somehow reported on a different nic it means the user attachment is not relevant anymore (I will just ignore the user attachment in this case).
|why not just- removedBonds?
|Consider adding these two validations (host exists and in a supported status) to HostSetupNetworksValidator. You have these two validations in all networAttachment related actions- HostSetupNetworks, Add/Update/RemoveNetworkAttachment.
|Please add logMonitorLockReleased(&quot;Host setup networks&quot;);
|It can be very helpful to have the unlocking message.
You can implement functionality for the lock itself to print the lock/unlock messages and then remove the command logging.
But till this functionality is introduced please add the command (ulock) logging.
|you should use- managementNetworkUtil.isManagementNetwork(network.getId(), getVds().getVdsGroupId())

The method you are using checks if the network if management in any cluster. You should care just about the current host's cluster.
|why not just- getRemovedBonds?
|please call getExistingNics() instead of directly passing existingNics.
|It passed the canDo, so IIUC, there is no way to get this exception.
I suggest Entities.entitiesById to return a map of id to entity (if the id doesn't have existing entity it won't be added to the map).
It can also help you in - HostSetupNetworksValidator.validateAndInitRemovedBondInterfaces(..)- please see a related commet there.
Since getExistingBondVdsInterfaceToBeRemoved() is called after the can do action, we can be sure that there are no non-exixting ids. So Entities.entitiesById(removedBondIds, existingNics).values() can be used.
|Same comment as for getExistingBondVdsInterfaceToBeRemoved()
|Please cache it, like you do in all the other getters.
|Please extract getClusterNetworks().get(attachment.getNetworkId()) to a method, you have the same logic there.
Also the naming is confusing, maybe you call this method getNetoworks and the one getNetwork-&gt;getHostNetworks...
|Sorry, my comment was really unclear:)
You've done exactly what I tried to say.
|You have a method called validateAndInitRemovedNetworkAttachments() and  validRemovedNetworkAttachments(attachmentsById).
it is confusing, by the name I understand validRemovedNetworkAttachments should be called via validateAndInitRemovedNetworkAttachments (and as I wrote in a following comment, I think it is what should be done).
|same comment as the previous.
|Shouldn't it be part of validRemovedNetworkAttachments?
|I think it is more readable and clear. And anyway, you're not testing validRemovedNetworkAttachments, you're testing just its inner validations.
|ok
|Shouldn't this block (except the customProperties validation) of validations be part of  validModifiedNetworkAttachments
|Same answer as the previous comment. You're not testing validModifiedNetworkAttachments, it aggregates a lot of tested validation and it is already super hard to test it (I don't think the addig one more validation will make the difference).
|The bond id should be specified in the message.
Maybe entitiedById can return a map of id to entity. If there is invalid idit won't be aaded to the map.
Each removedBondId that is not in the result map will have a validation.
|Consider moving this validation to  validRemovedBonds() and calling validRemovedBonds() from here.
|The this is redundant.
|Same comment as for validateAndInitRemovedBondInterfaces()
|How is it possible for the bond name to be null? You fetch the bonds from the db by the id (the name column is marked as not null).
|How is this method related to bonds?
But again, I see it was fixed in a following patch...
|The this is redundant.
|I meant-  s/this.removedNetworkAttachments/removedNetworkAttachments
|I really don't understand this bond related code. As I understand the method should return all the attachments that should exist on the hosts (I mean new + old - removed).
I see that it was fixed in a following patch, but it is really hard to review this patch. Why didn't you update the methods in this patch? Is it hard to move the changes to here?
|Should be validNewOrModifiedBonds- It was fixed in a later patch? If you can please move all the fixes to here. It is really hard to review the class this way.
|1. This validation blocks the possibility of moving slave from one bond to another. Why?
2. You should verify the same slave is not attached to more than one bond.
|1. maybe nicUseByRemovedNetworkAtachment. It is confusing, since the network may be attached to another nic. The attachment is removed.
2. Why is the paramenter name- slave? The nethod is general and can be use by any nic.
|You are correct, there is a bug here. More than one network attachment can be attached to a nic. You have to check that all the network attachments related to the nic were removed.
|Maybe- shouldRemoveBond(String bondName)
|No problem, you can do it in a separate patch. Please add it to the endless TODO list
|I discussed it with Moti, and he and I think that removing the attachment and creating a fresh one with the same network should be block. Have only one explicit way for doing it will simplify future validation and may avoid bugs.

The ui already persists the ip-conifuration of the network when the network is detached from a nic (and uses it when it is attached to a new one), so it sounds reasonable for a detach networks to save for future use the whole network attachment.
|General question- what is the correct way to move network from one nic to another?
1. Changing the nicId on an existing attachment?
2. Create a new attachment for the new nic and network and remove the previous one?

Are both of the ways are accepted? If not, please block the one isn't accepted.
|In the next line you check if 'networkAttachmentIsSet' (is not null), so I guess it can be null. Please add this null check when getting the networkId.
|1. Shouldn't you first check the networkId is not null?
2. In a future patch you also have networkActuallyExists, I don't understand why it is needed. It seems to do the same as this validation. One of them seems to be redundant.
3. In both of the methods you use the following message- &quot;The specified Logical Network doesn't exist.&quot; This message is not specific enough for setup networks, you should mention the problematic network id.
|Regarding 3-
The error message you get here is part of the host setup networks command- So getting the following error- &quot;The specified Logical Network doesn't exist.&quot; is not informative enough. If the network_id is null- you can have the following- &quot;One of the specified attachments doesn't have network id&quot;.
If it have networkId and but the network doesn't exist you can have- &quot;Logical Network with ID ${id} doesn't exist.&quot;

You said that- &quot;if it's just a inexisting network .. pair error message .. will be stored&quot;, I didn't find the code doing it.
Please also notice, adding violating entities to the validation is not enough. The message should contain places holders for the entities data.
|Regarding the nicActuallyExistsOrReferencesNewBond method, which is not in this patch but should be:
The message- &quot;The host network interface does not exist.&quot; Is not specific enough for setup networks. You have to specify the problematic network id.
|The validator.nicExists() only checks if the attachment.nicName is not null.
You also should check it actually exists in the db (or a new bond.
Never mind, I see it was added in a following patch...
|Please refer to my comment on patchset-35. Maybe I miss something, but adding violationEntity will actually affect something, just if the message contains the following {message_name}_LIST.
Please validate this patch, I'm pretty sure the displayed error message won't have any reference to the added 'violation entity'.
|The message you get in this validation is- Given Network Attachment does not exist. For setup network it is not specific enough. You have to specify the problematic id.
|I agree, the validation should be removed.
Regarding the &quot;I've added attachment Id&quot; as I mentioned in previous comments, since the error message wasn't changed I think it won't affect anything.
|Is it possible to have an attachment with external network?
|s/nicToNetwork/nicToNetworks
|Maybe- getNicToNetworks(..)
|Saw this more than once, please extract to a method.
|You can just call-  validate(validationResult, null)
|I meant you should remove the @param &lt;E&gt; not the whole java doc.
|Why does it part of the java doc?
|same
|As I wrote in previous comments, I think this method should be changed.
Since this class has a method called- entitiesByName which returns a name to entity map. I would except this new method which is called entitiesById to return id to entity map (id's with non-existing entities won't be added to the map). As I mentioned before, it will make this method more useful since you will easily know what are the problematic ids (the id are not contained in the result map).
|It is a utility method, it shouldn't contain logs.
Maybe the user of the method is ok with having non-existing ids.
|never mind
|I'm not sure, why do you need this list?
|I'm not sure if it possible. But if you somehow get a network defined on top of bond's slave you will create an a NetworkAttachement for it, I think you should block it.
|You're not initializing the bootProtocol and IpConfiguration data. Why?
|In networkAttachmentExistsForNetwork you've checked if the attachment is part of the configuredNetworkAttachments. I think that I confused 'configuredNetworkAttachments' with userNetworkAttachments. But in the final version you're not using the 'configuredNetworkAttachments' and the code seems to be ok, so please ignore the comment.
|The user defined attachments passed to this class are taken from HostSetupNetworks' parameters. It means that just attachments that were added or changed will be passed.
For all the others you are creating new attachments, but most of them (in most of the cases I think- all of them) contain existing attachment.
I saw you fixed this issue in a future patch. If it not too complicated, please move it to this patch.
|?
|s/clusters/cluster
|The use of DbFacade should be avoided. You can inject the HostNetworkQosDao (same as you injected managementNetworkUtil).
|Why did you move it to a new line?
|The host existence validation won't fail if it is executed before the completers. It doesn't make sense to execute the completers if the hostId is wrong. The 'getExistingNics()' will return empty list.
But as it seems the completers will survive the empty list. I won't insist on my comment. You can ignore it.
|The HostValidator validations are very basic (at least the host existence one) and should be executed before the completer logic (the place they were executed in patchset 26, just via the HostValidator).
|The 'this' is redundant.
|Why relvantQos and not just networkToConfigure.setQos(..)?
Of cousre it is the relevant, why would you set irrelevant property.
I know this was introduced in a previous patch, so if you can fix it there, if not fix here.
|?
|Currently, IIUC, HostSetupNetworks doesn't support overriding the QoS (The is no way to pass the overriden qos via the parameters). The 'isQosOverridden' should be moved from the iface to the networkAttachment. Also the networkAttachment should contain HostNetworkQos (so you will be able to find out that iface.qos in not in sync with the attachment.qos).

Is this part of your TODO list?
|Also. what if the bond exists, but on another host.
You can have a general message for both of the cases-
Bond $nameOrId doesn't exist on the specified host.
|This AppErrors message of 'NETWORK_BOND_NOT_EXISTS' doesn't contain a place holder for the id.
Since this message is used by RemoveBondCommand you shouldn't change it, so please add a new message with a place holder for the id.
|The final version of this method has a comment- that each violation should have its own method, and this one to aggregate all the small methods. I agree.
|What if the bond exists but configured on another host. You should have a validation for that.
|?
|What about my second comment in patchset 26-
&quot;2. You should verify the same slave is not attached to more than one bond.&quot;
You won't get a validation in case the user attaches the same slave to two or more bonds (The case it is still attached to the previous one is covered, in mean it is attached to two or more new bonds).
|I prefer the smallest change possible. Maybe just rename it to- potentialSlave. Or even leave it as is...
|1. In my opinion- 'slave.isBondSlave()' is little bit confusing. I would change it to- 'currentSlavesBondName!=null'
2. In the final revision of this 'if' block there is a comment- /* definition of currently processed bond references this slave, but this slave already 'slaves' for
                another bond. This is ok only when this bond will be removed as a part of this request. */
You should update it according to the changes in this patch- &quot;This is ok only when this bond will be removed or the slave will be removed from this bond as a part of this request&quot;
|If for example-
eth1 have 2 network attached to it- nonVlanNet and vlan123net.
You will have 2 vdsNetworkInterface entities-
eth1 and eth1.123 (the vlan device).

'eth1'.networkName= nonVlanNet
'et1.123'.networkName=vlan123net
'et1.123'.baseInterface='eth1'.

But the networkAttachment contains the id of the base nic.
So you will have 2 networkAttachments-
netAttach1.nicName='eth1'
netAttach1.networkName='nonVlanNet'

netAttach2.nicName='eth1'
netAttach2.networkName='vlan123net'
|1. As you wrote in patchset 26- the same nic can have more than one attachment. You have to check all of them were removed (this is not covered even in the final revision in the method) or
2. moved to another nic (this is covered in the final revision, but just for the non vlan network. If the slave has vlan networks attached to it, even in the final revision you won't get a validation error).

Please at least copy to here the final revision of this method (validNewOrModifiedBonds).
It is impossible to review it this way.
I have the final revision in my eclipse and it has bugs, but since the code of the method is spread between ~7 patches it is impossible to add comments.
|I am assuming you will copy to this patch the final revision of validNewOrModifiedBonds. So, in the final revision, this method (isNetworkAttachmentRemoved) still exists nut never used.
|Maybe isSlaveRemovedFromBond
|The final version has one, but never mind...
|Why aren't you using the bondsMap?
|validator.networkAttachmentIsSet() checks if the attachment is null. In this case you're iterating over the attachments list, so you can assume it is not null. (If you don't assume it, it means that for consistency you have to verify all the parameters lists (removedAttachment, removedBonds, bonds) doesn't contain null values).

note: I didn't notice it when reviewed patchset 26, that's why I asked you to meve this check upper. But as you wrote in one of you comment answers, there is no way to get null here.
|The error message is- &quot;Cannot ${action} ${type}. Given Network Attachment does not exist&quot;
You are in the context of HostSetupNetworks. What is the given network attachment? I see that you passed the networkId to the addViolation. But it is meaningless, the message doesn't have placeholder for the networkId. And if IIUC, the addViolation(*, violatingEntity) is used to fill the following format- {message_name}_LIST. So you have to add a corresponding place holder to the message.
|Also maybe the attachment exists, but not on the specified host. So the message can be- &quot;Cannot ${action} ${type}. Network Attachment ${nameOrId} does not exist on the specified host&quot;
|same
|same
|same
|same
|same
|maybe- modifiedAttachmentExists
|maybe- isNewAttachment
|Please remove the white space.
|Refer to the comment in line 339.
|the &quot;this&quot; is redundant.
|I agree with you, (as you answered on patchset 26) this validation should be removed. You iterating over existing attachments, it cannot be null.
|Adding the host.getName() is redundant as I explained in the HostSetupNetworkValidator comments.
|same.
|You can use the MultiValueMapUtils
|1?
|1. I would call the method filterEntitiesByRequiredIds.
2. Why did you remove the java doc? Please add one.
|Please fix the formatting.
|What if the attachment exists (there is attachment with the given networkName) but the nicId on the attachment doesn't equal the nic.getId? (It can happen if the user would manually change the nics network, via the hosts config files).
I think the old attachment should be updated to contain the new nicId (we are not supporting this kind of out of sync).

note: please refer to comment in line 117, it must be fixed, so the attachment will have the correct nicId here.
|Here you call it configuredNetworkAttachments in the final version it is existingValidAttachments but the issue is the same- you should replace the old network attachment (in the list) with the updated one.
|How can you have newly created interface here? The HostSetupNetworks doesn't create interfaces.
|Correct.
|This code is wrong. What if the network is a vlan network. The overriden qos is on the vlan-device.
You shouldn't work with the interface at all. The network attachment should contain the overridden qos.
Of-course this shouldn't be done in this patch- which is big and reviewed enough. But please add a TODO, so you won't forget to fix it.
(You can refer to the comment in patch set 35- line 254 for more details).
|never mind, as long as you have TODO to fix it.
|The java doc is out-dated. Please fix it to actually describe the method.
|You cannot set a network on a slave via the engine. But you can do it manually via the host config files. In this case the network should be unmanaged and you shouldn't create a network attachment for it. I think throwing an exception is too violent and will fail the whole persistency.
|You have to a the message to the AppErrors files.
|Patchset 28-
If you're planning to use the parameter later in this class, I would pass a copy of the network attachment and not the same instance. You don't know what the inner command does to the parameters.
Martin Mucha
Jun 13 8:00 PM

true. I'm not creating copy constructor just for that, solved differently.

It is not solved. You are passing to the internal command the networkAttachment and then you use it (to determine the networkId and nicId).
You may save the nicId and networkId (which are of Guid type, therefore immutable) and use them.
|patchset 28-
Alona Kaplan
Jun 10 6:44 PM

Since HostSetupNetworks invoke refreshVdsCaps, you may find out the nic is not existing anymore. So please add null safety check for configuredNic.
Martin Mucha
Jun 13 8:00 PM

in that case, would be operation successful? I'm adding attachment to nic, which ceases to exist. This should not be successful. Is it or is it not?

It is really racy and rare scenario, but it is possible.
Since the refreshCaps is executed after the setupNetworks is finished, in between it is possible for the nic to be removed.
I don't know if it should be successful or not. It is so uncommon that IMO it doesn't really matter. Just avoid the NPE.
|Discussed it with Moti. Since it is really rare scenraio, we can leave the code as it and get a NPE.
So for me it is- Done.
|Same here, since the scenario is possible, please don't throw the exception.
I would just return null in this case.
|same
|The message is-
NETWORK_ATTACHMENT_NOT_EXISTS=Cannot ${action} ${type}. Given Network Attachment (id='${NETWORK_ATTACHMENT_NOT_EXISTS_ENTITY}') does not exist.
You should pass null as the replacement of NETWORK_ATTACHMENT_NOT_EXISTS_ENTITY.
|I guess you have the same check for update and remove. Why isn't part of a validation class?
|same
|I don't think you need any of these extra validations. Actually, I don't think this command needs any canDoAction validations at all.
This command invokes a HostSetupNetworksCommand which already has all the relevant validations. I would avoid this duplication.
You have to make sure these command is not invoked as multiple action for 2 reasons-
1. when invoking a command as a multiple action the result is returned to the ui immediately after invoking all the candos. It means that if you propagate a can do from an internel executed action. The cando won't be caught by the ui.
2. Two or more setup-networks commands cannot run simultaneously on the host.

Blocking a command from being run as multiple action is done via the MultipleActionsRunnersFactory. You can see- UpdateNetworkOnCluster for an example.
|You can use- Linq.firstOrNul(..), I think it is more readable.
|Please see the canDoAction related comment in- AddNetworkAttachmentCommand.
|Regarding the first paragraph- both of us agree the query is not necessary, so please remove it.

Regarding the second- since it is vds command. The parameter should be instance VdsActionParameters. So please create a new parameter the extends VdsActionParameters and contains the networkAttachmentId.
|You're querying the networkAttachment by id from the db just to get the id? (I mean- the db query is redundant).
|Please see the canDoAction related comment in- AddNetworkAttachmentCommand.
|Why do you need this getter? Do you use the completer anywhere but the canDoAction()?
|Since add and update has the same api to the HostSetupNetworks command (and IMO, the canDo is redundant), I think you can remove one of them.
|never used.
|never used.
|Remove unused.
|Please remove the commented code.
|You have to add validation to make sure the passed attachment doesn't contain id (you actually adding new one and not updating an existing one).
|If you're planning to use the parameter later in this class, I would pass a copy of the network attachment and not the same instance. You don't know what the inner command does to the parameters.
|Should be done just if the return value is returnValue.getSucceeded())
|What if getParameters().getNetworkAttachment() contains the nicId and not the name (you cannot assume the HostSetupNetworkCommand will complete it).

I suggest you to use the completer to complete the parameter and then getting the configuredNic by getDbFacade().getInterfaceDao().get(nicId).
|Since HostSetupNetworks invoke refreshVdsCaps, you may find out the nic is not existing anymore. So please add null safety check for configuredNic.
|Same here, maybe the id isn't passed to the parameter. You have to use the completer to be sure the id and name are set.
|Please add null safety check for createNetworkAttachment (it shouldn't be null, but better be on the safe side).
|Please remove the commented code.
|If you follow my comment in line 64, this method will becode redundant.
|You should create new parameter, which is instance of VdsActionParameters and contains just the attachment id.
|Please refer to the comment on patchset 21 line 56- the parameter should be changed to IdParameters.
|Please remove the commented code.
|As I wrote in patchset 21, the query is redundant, please remove it.
Just do- params.getRemovedNetworkAttachments().add(getParameters().getNicId());
|You have to add validation to make sure the passed attachment contains id (you actually updating and not and not adding a new one).
|Please remove the commented code.
|Please remove the commented code.
|As you wrote in the comment, you should use the managementNetworkUtil.getManagementNetwork(host.getVdsGroupId()) and not query the default management network as the 'queryManagementNetwork()' does.
You should query by vdsGroupId and not storagePoolId- each cluster in the dc can have different management network.
|How is this file related to the patch?
|Same question- why is this file in the patch?
|If you follow my suggestion on a previous patch- filling the slaves in the dao level, you won't need this query...
|Why do you create a new bond entity and not adding the slave to the already existing one.
In the current approach, if you add a new property to a Bond you will have to update this code...
|Please add-
@Inject
private InterfaceDao interfaceDao
as a data memeber to the class.
Calling to dbFacade should be avoided.
|Shouldn't you return just the bonds?
|I would call it, getBondsWithSlavesInformation(..) and will move this method (and the next one) to NetworkUtil. But as you wish, gave you the +2.
|Please make the messages more informative. Since they will be thrown upon a hostSetupNetworks command, without this information it will be very hard for the user to understand what is the problematic nic/attachment.
|Please add details to the error-
Network Interface $ifaceName cannot become slave, there's network ($netName) attached to it.
|Cannot remove bond $bondName, because it's used by Network Attachments ($attachmentsIds).
|Missing '.' at the end of the line.
Cannot ${action} ${type}. Given Network Attachment $attachmentId does not exist.
|NETWORK_ALREADY_ATTACHED_TO_HOST=Cannot ${action} ${type}. Network $netName is already attached to given host $hostName.
|Cannot ${action} ${type}. The Network of a Network Attachment cannot be updated (problematic attachment- $attachmentId).
|Display network ($netName) hasn't boot protocol assigned
|Cannot ${action} ${type}. Network interface $ifaceName is not a bond.
|The setup network errors are not relevant to user portal
|What about NETWORK_INTERFACE_IS_NOT_BOND? (Although as I wrote in the previous comment, you can remove all the errors from this file...)
|it has the same logic a validBond, just different error message. Mabe you can create a common method that get the error message as a parameter.
|? :)
|Consider changing the skull to * for example.
|Does the LabelNicCommand has any validation group? I didn't find where it is being set.
|Has the same logic as the labeledValidBond tests, please create a common method.
|same.
|IIUC, you will get IllegalStateException here, since 'PrimaryAddress' is not set.
|s/validModifiedBonds/validModifiedOrNewBonds
|Why don't you use the HostInterfaceValidator.isValidBond validation?
|Why did you add the spaces?
|Why not allowing move slave form one bond to another (just make sure it was actually removed from the previous bond)?
|Please remove the word 'probably' from the comment.
|1. What if the slave has vlan network attached to it? slave.getNetworkName() != null will return true, you have to check all the vlan devices of the slave. 2. If you add a slave to a bond and move it's network to another nic it should be valid, isn't it? (Your code here will block it. It refers to a question I asked you in a previous patch- how do you move a network from nic to nic- removing the old attachment and creating a new one or just changing the nic on the attachment).
|please rename to interfaceIsBondOrNull
|This is ok only when the this bond will be removed or the slave will be removed from its former bond, as a part of this request
|You didn't cover the following-
1. If the slave has vlan networks attached to it.
2. If the network attachment wasn't but was moved to another nic.
|1. You should check that all the attachments relate to the nic were removed (in case of vlan networks, more then one attachment can have the same nic).
2. The method name should be- isNetworkAttachmentsRemoved
|You've created a new IpConfiguration() and didn't add an address, so how do you expect primary address to be set?

The former code was better-
https://gerrit.ovirt.org/#/c/32775/40/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/NetworkConfigurator.java
|? )
|I would leave the code as is and wouldn't throw an exception.
But since it is a corner and unlikely case, I don't care. You can throw the exception...
|I agree with you, now you don't really need the user network attachments (new ones will be created accordingly to the vdsInterfaces).
Although the values mentioned on the nic may be not in sync with the user network attachment, 99.99999% of the time it is not the case.
But in the future the network attachment will contain the overridden qos config. The vds_interface doesn't have indication if the qos is overridden or not, so you will have to use the userNetworkAttachment to find it out.
|1. The name here doesn't match the name in the AppErrors files- ACTION_TYPE_FAILED_NETWORK_ATTACHMENT_CONTAINS_DUPLICATES
2. Where do you use this error? Refer to my comment on HostNetworkAttachmentsPersister.verifyUserAttachmentsDoesNotReferenceSameNetworkDuplicately(..)
Seems your intent was correct, you need to add this error to a new validation in NetworkAttachmentsValitors (instead of throwing exception in the persister).
|The error should be removed from this patch, since it is not related to it.
But please add this validation (in a separate patch) to the NetworkAttachmentsValidator. You have to make sure the user didn't pass the same network on more than one attachment.
Added the relevant comment to- https://gerrit.ovirt.org/#/c/34968/23/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/validator/NetworkAttachmentsValidator.java
|I saw that you've already added the validations.
Please ignore my comment.
|You can use -Linq.firstOrNull to find out whether the list contains networkAttachment with the specified networkId.
|Shouldn't the order be opposite? First the param and then return value.
|This should have been verified in the candoaction of the relevant commands. Why do you verify it here again?
If it is not verified (and it seems it isn't) please add to the relevant validator (NetworkAttachmentsValidator I think).
|The method looks very similar to the previous one. Please create a common method and reuse it.
|Please statically import when
|1. The id passed by the user is not verified by the canDoActions, so it cannot be used here. Therefore it should ignored.
Please remove the TODO from the comment.
2. s/useProvidedNetworkAttachmentId/userProvidedNetworkAttachmentId
|I think you can simply override it (with no TODO:)).
There is no need for cando (I don't see this kind of cando on other commands). But of-course, if you decide to add cando, it is also ok.
Just choose one of the approaches and don't live the code with TODOs:)
|Please add a test for this use case- the nicId on the attachment is different than the nicId reported from the host.
|Ignore, you've added tests.
|As I wrote on the previous patch, I don't see any reason overriding it.
|How is the above related. Here the issue is the nic_id not the attachment id.
The nic_id supplied by the user (in this stage the attachment is after the completion and NicIdNicNameCompleter) should be used.
I case the nic_id supplied by the user doesn't match the reported nic_id, the attachment shouldn't be persisted.
Please add test for this use case.
|s/useProvidedNetworkAttachmentId/userProvidedNetworkAttachmentId
|Please add space after the // - relevant to all the comments in the class.
|What about properties?
|Please move the assertions comparison to the captor to a separate method. It can be reused it three different places.
|what about properties and ipConfiguration?
|This error is not relevant for user-portal. You don't need to add it to this file.
|Now you have lone 234- assertIpConfiguration, this line is redundant.
|shouldn't it be?
assertIpConfiguration(attachmentBeingPersisted.getIpConfiguration(), userNetworkAttachment.getIpConfiguration());
|You're setting the same values as you set in-
'setUp()-interfaceWithAttachedClusterNetworkA'
Please extract the values to be final static.
|why is the '2' hard-coded? Please use- interfaceCustomProperties.size().
|The lines are too long. Please shorten them to fit the gerrit view (general view).
|IIUC, you get to this point after verifying attachment list is ok. So there is no possibility for network attachment to appear twice in the list.
|Was done in a latter patch?
|In case of new network attachment, attachment.getId() is null and you will get NPE here.
|The error message contains the attachment_id. In case of new attachment, there is no id, so please add separate error for new attachments or adjust the existing one for new attachments as well.
|same
|s/nicNameAndNicIdIsIncoherent/IsnicNameAndNicIdIncoherent
|1. s/was/were
2. The message is not use by this file, please move it to the relevant file.
|Please call- completeNetworkAttachment(..)
|Please call- completeBond(..)
|Please extract to a method. Can be used here and instead lines- 50-51. (I don't really understand the reason for switching the order, is there?)
|same
|Please change the test name- remove 'NetworkAttachment' from it.
|same
|same
|same
|same
|Wasn't the exception removed?
|Please remove the '=' sign from the message. It is illegal character and should be escaped. But as you can see non of our existing messages use this format in the message. So please just replace the '=' with space.
|same
|Please add the new messages also to- AppErrors.java
|same
|same
|s/unfied/unified
|s/If both was set/ If both were set
|s/getNetworkAttachmentCompleter/getNicNameNicIdCompleter
|testCompleteNetworkAttachmentWhenWhenBothIdAndNameDoesNotReferenceExistingNic/testCompleteNetworkAttachmentWhenBothIdAndNameDoesNotReferenceExistingNic (WhenWhen)
|Please statically import the 'when'
|1.Please extract the String to a public final static member  in the NicNameNicIdCompleter and  reuse it here.
2. Both nicId and nicName were specified, but they do not denote same nic.
|Can you?:) Please fix the code and remove the comment.
|I suggest here just ignoring it, and in the validator make sure the name and id match.
|Noticed it while reviewing another patch- you should have candoaction for this use case. Exception is to violent.
|please add space after the '//'
|why is it needed? The default one can be used.
|s/testValidateNetworkExclusiveOnNicsVmNetworkMustBeSoleAttachedInterface/testValidateNetworkExclusiveOnNicsVmNetworkIsSoleAttachedInterface
|testValidateNetworkExclusiveOnNicsVmNetworkMustBeSoleAttachedInterface1/testValidateNetworkExclusiveOnNicsTwoVmNetworksAttachedToInterface
|s/testValidateNetworkExclusiveOnNicsVmNetworkMustBeSoleAttachedInterface2/testValidateNetworkExclusiveOnNicsVmAndNonVmAttachedToInterface
|s/testValidateNetworkExclusiveOnNicsVmNetworkMustBeSoleAttachedInterface3/testValidateNetworkExclusiveOnNicsVmAndVlanAttachedToInterface
|This method check whether the attachment related to management network. I doesn't check whether yo remove it. I would keep the previous name.
|Please add @RunWith(MockitoJUnitRunner.class) to the class, so you can use @Mock.
|This is a general comment- daos should be injected,
DbFacade.getInstance() should be deprecated.
You can pass the daos to NetworkAttachmentValidator via the ctor (they can be injected in the command). Same as you pass the managementNetworkUtil.
|Please add test for the valid use case.
|The NetworkValidator can be a mock.
|Please be more explicit- setId on the network, pass to the get this id, set the id on the networkId property of the NetworkAttachment.
|same comment as the previous.
|Redundant empty line.
|the networkValidator can be a mock.
|Yes, that what I tried to say. If you can fix it, if no never mind (no so important...)
|The comment should have been placed in NetworkAttachmentValidator.getNetworkCluster but just here I noticed it- why do you query the networkDao? You need just the networkId, you have it on the attachment.
|Why do you need the Mockito prefix here?
|Please separate to two tests.
|null and &quot;&quot; are considered as empty strings. I would except the following tests-
1. createNetworkAttachmentWithIpConfiguration(NetworkBootProtocol.STATIC_IP, null, &quot;255.255.255.0&quot;);
2. createNetworkAttachmentWithIpConfiguration(NetworkBootProtocol.STATIC_IP, &quot;&quot;, &quot;255.255.255.0&quot;);
|same- null and &quot;&quot; are considered as empty strings. I would except the following tests- 1. createNetworkAttachmentWithIpConfiguration(NetworkBootProtocol.STATIC_IP, 192.168.1.1, null);
2.createNetworkAttachmentWithIpConfiguration(NetworkBootProtocol.STATIC_IP, 192.168.1.1, &quot;&quot;);
|s/staticIp/bootProtocol
|When(Null)IpConfiguration
s/testBootProtocolSetForDisplayNetworkWhenIpConfigurationWhenNetworkClusterDisplayIsFalse/testBootProtocolSetForDisplayNetworkNullIpConfigurationFalseDisplay
|The comment is relevant to the validator itself and not the tests- shouldn't you have a validation to make sure the ipConfiguration is set? Is it valid to have attachment with no IpConfiguration at all?
Same question for bootProtocol. Is it valid to have null boot protocol?
|has a lot of common with the previous method, please extract.
|Please add a valid test for display network (there is a valid test just for non-display network).
|Please add more tests for this validation (valid, mutipleGateway enabled, no ip config, no primary address set, etc.).
|Please use MockConfigRule-
example of using the rule-
@ClassRule
    public static final MockConfigRule mcr = new MockConfigRule(
            mockConfig(ConfigValues.HotPlugEnabled, Version.v3_1.getValue(), true),
            mockConfig(ConfigValues.HotPlugDiskSnapshotSupported, Version.v3_1.getValue(), true));
|Please be explicit, pass the actual id.
|space after //
|Please be explicit, set the networkId.
|The comment is wrong, remove it.
|Please be explicit, set the networkId.
|I would leave the name- getNetworkValidator(..). Create sounds like each time you call the method you get a new validator...
|duplicate- line 84
|s/dhcp/bootProtocol
|This test is very similar to the previous one, please extract to a common method.
(And to the two following ones)
|remove the IsFalse from the end of them method name.
|same
|Please add the same test for non-display network
|would be much nicer to have common method for all the gateway tests.
|Please be explicit, pass the actual network id.
|same
|seems fine. Just Remove the comment:)
|As I mentioned in an earlier patch, you're checking whether the network is management, not if it is being removed (the fact you're validating it is not removed depends on the context it is being called). I think the previous name was better.
|1. Please add 'engine:' prefix
2. Please move the rest api related classes to another patch.
|1. Why here and not in the 'HostSetupNetworksCommand(T parameters, CommandContext commandContext)' ctor?
2. Why are these groups needed? Which validation uses them?
|Please add the message to the other two AppErrors files?
|Please use injection to get the dao.
|same
|Please make sure the nic is not null before proceeding.
|IIUC, this method and all this patch are redundant.
How can you have network attachment with vlan device as its nic id? By definitin the nicId on a network attachment is the id of the base nic.
I'm sure there was a reason for you to write this code, maybe I miss something or there is some bug in the code, but by definition, this method should always return empty list.
(And if you some how convince me this method is necessary- networkAttachmentsOfVnicsOfBaseNic-&gt; networkAttachmentsOfVlanDevicesOfBaseNic)
|Please add valid test with more then one network configured on the nic.
|Please don't fix in this patch. Fix in- https://gerrit.ovirt.org/#/c/37156/66/backend/manager/modules/bll/src/test/java/org/ovirt/engine/core/bll/network/host/NetworkMtuValidatorTest.java
|This scenario is not interesting since two non-vlan networks cannot coexist on the same nic. Please make the second network vlan network.
|Please don't fix in this patch. Fix in- https://gerrit.ovirt.org/#/c/37156/66/backend/manager/modules/bll/src/test/java/org/ovirt/engine/core/bll/network/host/NetworkMtuValidatorTest.java
|1. The validation fails just for non-vm-non-vlan networks. Currently, vm-non-vlan network cannot co-exist with other networks on the same nic, there is another validation for checking it, so this mtu validation just ignores this case.
Once Yevgeny introduce his patches for allowing have vm-non-vlan network with other vlan netowrks on the same nic, the mtu validation will have to be expanded.
|Please don't fix in this patch. Fix in- https://gerrit.ovirt.org/#/c/37156/66/backend/manager/modules/bll/src/test/java/org/ovirt/engine/core/bll/network/host/NetworkMtuValidatorTest.java
|Why aren't you using createHostSetupNetworksValidator(..) like you did in the previous tests?
|Please add test for removing bond with non-existing id.
|I don't understand this /*false*/ comment.
|The expectedValidationResult parameter is really confusing. Maybe use it just as networkBondsSlaveCountValidationResult and calculate the expected result (the first result the is not valid).
|private void doTestValidModifiedBonds(Bond bond,
     ValidationResult interfaceByNameExistValidationResult,
     ValidationResult interfaceIsBondValidationResult,
     ValidationResult networkBondsSlaveCountValidationResult {
ValidationResult expectedValidationResult;
if (interfaceByNameExistValidationResult.isValid()) {
  if (interfaceIsBondValidationResult.isValid()) {
     expectedValidationResult = networkBondsSlaveCountValidationResult;
  } else {
     expectedValidationResult = interfaceIsBondValidationResult;
  }
else {
     expectedValidationResult = interfaceByNameExistValidationResult;
}
...
}

Or maybe even having a general method that get a list of results and return the first unvalid.

But it is not that important, just mentioned that when I was reviewing the code it was confusing. You can leave the code as is.
|As I wrote in the previous comment, the 'expectedValidationResult' is confusing (I would calculate it- the first result that is not valid).
It is just a suggestion, you can leave it as is.
|Why don't you pass 'networkAttachmentB' to the params?
|Why don't you pass the 'params' to the validator?
|Seems that line 824-828 are redundant. You can pass null as the simpleCustomPropertiesUtil (in case the customPropertiesFeatur is not supported, the code doesn't get to the point it uses simpleCustomPropertiesUtil),
|Please add test for the valid use case (network attachment has custom properties which are valid).
|Should be false (bond slave cannot be a bond).
|As I wrote in patch set 8- you should have the same validation for moving the network to a new nic. (If the network was attached to the previous nic via label, moving it to another nic should be blocked).
|Seems this is redundant, the code doesn't get to the point it calls the 'translateErrorMessages'.
|Answer to the TODO- in case the bond is removed, all its networks should be removed as well (labeled and unlabeled).
Otherwise, the removal of the bond we be blocked.
|What about 'BTW, I think you should have the same code for moving a labeled network to a new nic (it should be blocked). Is there such code?'
|I don't understand what trick you are talking about.
In HostSetupNetworksCommand you should avoid removing network that are attach by label from a nic (since the nic still has this label). But, in case of a removed bond, the nic doesn't exist anymore. It means it doesn't have this label. So you should block removing it (the opposite is correct, you should verify it is actually removed or moved to another nic).

BTW, I think you should have the same code for moving a label network to a new nic (it should be blocked).
Is there such code?
|This method can be package private.
|Please add valid test with more then one network configured on the nic.
|This scenario is not interesting since two non-vlan networks cannot coexist on the same nic. Please make the second network vlan network.
|1. The validation fails just for non-vm-non-vlan networks. Currently, vm-non-vlan network cannot co-exist with other networks on the same nic, there is another validation for checking it, so this mtu validation just ignores this case. Once Yevgeny introduce his patches for allowing have vm-non-vlan network with other vlan netowrks on the same nic, the mtu validation will have to be expanded.
|Comment for me- 
make sure the comments in https://gerrit.ovirt.org/#/c/35978/43..49/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/HostSetupNetworksValidator.java
were fixed here.
|The is not way to make synced network be out of sync by moving it to another nic.
|You should block any update of unsync network attachment 
(nicId, bootp-proto, qos...)  and not just the movement to another nic.
Please refer to SetupNetworksHelper.extractNeteork to see how it was implemented in the old command.
It check if the network was modified, if yes it retrun NETWORKS_NOT_IN_SYNC validation result.
NETWORKS_NOT_IN_SYNC is correct. Your new MOVING_NETWORKS_MAKES_IT_OUT_OF_SYNC is incorrect, it is not the moving that makes it out of sync. It is alreay out of sync, and therefore cannot be touched.
|It is illegal to change the network of a network attachment (and there is a special validation error for it). It doesn't relevant to the 'networkMoved' method.
|Please remove the commented code.
|I don't understand this comment.
|in case 'attachmentBoundToNicBecomingSlaveRemoved' is true, you don't need to proceed with the following calculations.
|Comparing the nicId is enough (you don't need to compare also the nic name).
|What if just the nicId is passed. The validation will fail?
|As I wrote in https://gerrit.ovirt.org/#/c/37242/66/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/HostSetupNetworksCommand.java
This message is redundant.
|What about boot-protocol, ip address, mask, gateway?
|I think it is clearer to have a separate file for this class.
|Please use Objects.equal
|Please use Objects.hash
|It is strange to start a class name with a verb. Maybe- ReportedConfigurationsFiller?
|Please add tests for this class (especially for the case described in line 45 comment)
|DbFacade.getInstance() shouldn't be used, please use injection.
|You have to pass the interface which has the 'networkAttachment.getNetworkId()' attached to it (Lets call it networkIface).
(Of-course the networkAttachment.getNicId() should be the base nic or the nic itself of 'networkIface', if its not the case we have a bug and an exception should be thrown).

The current code will return wrong isInSync result for vlan networks- it compares the base interface to the vlan network. It should compare the vlan device to the vlan network.
Since the vlan id case also be out-of-sync, the correct interface to compare the network/network-attachment to, is the iface with the attachment.network attached to it.
|Please use injection to get the dao.
|same
|Please make sure the network attachment is not null before proceeding.
|Please use injection to get the dao.
|Please use injection to get the dao.
|1. Please use injection for getting the dao.
2. Please make sure the returned nic is not null before proceeding.
|1. What about the sync status of boot-protocol, ip address, subnet mask and gateway?
2. What about the sync status of overridden qos? (The overridden qos should reside on the network attachment, and can be not in sync with the reported qos). (I guess you will introduce it when you will add the qos to the NetworkAttachment, just mentioning it here to make sure it is part of the qos TODO list).
|same
|In case qos is overridden, you have to compare the qos in HostNetworkAttachment to the values in VdsInterface.
|In case qos is overridden, you have to compare the qos in HostNetworkAttachment to the values in VdsInterface.
|same
|same
|same
|Please add a comment that 1500 is the default value.
|The problem is not a nic with out vdsId (it is not possible).
The problem is in case the nicId (pass as the parameter) is not valid and there is no nic with such id in the db.
in this case, there will be NPE here- interfaceDao.get(nicId).getVdsId()
|Please use Objects.equals(..)
|same
|same
|Please use Objects.hash(..)
|s/GetAllUnmanagedNetworksByVdsIdQuery/GetAllUnmanagedNetworksByHostIdQuery
|Please use injection to get the dao
|same
|s/GetUnmanagedNetworkByVdsIdAndNameQuery/GetUnmanagedNetworkByHostIdAndNameQuery
|BackendResource.castQueryResultToEntity() has treatment for non list return values. So it seems it should work passing the instance directly.
|should be private
|What if the vds is null. Please add protection.
|Didn't find in this patch validation of the unmanaged networks passed in the parameters (
Does the network exist? Is it indeed unmanaged?).
|Why List and not Set?
|Where do you use this overridden method?
|Why VdcQueryAuthType.User? Can this query be executed via the user portal?
|same
|How can the clusterId of a host be null?
In my comment on patchset 68 I meant that the host itself can be null. Its id passed as a parameter a can be not valid. So I suggested to check if the host is null to avoid NPE.
|Noticed it while reviewing another patch- you should have candoaction for this use case. Exception is to violent.
Since networkAttachment.networkExists takes care of it, I would just skip the completion (same as NicIdNicNameCompleter does).
|I suggest here just ignoring it, and in the validator make sure the name and id match.
|Noticed it while reviewing another patch- you should have candoaction for this use case. Exception is to violent.
|Please call it nicNameNicIdCompleter
|Should be $ENTITY_ID
|were supplied
|Please remove the empty line.
|I'm not sure why is this needed? You complete the network name/network id before executing the validator. So was supplied) should be enough.
Not that important for you to fix it, I just want to understand if I miss something.
|Why just create, what about update?
|Please add the network name.
|What about VALIDATION_NETWORK_ID_OR_NETWORK_NAME_MUST_BE_SET?
|I know it has different meaning. Just mentioned you forgot to add 'VALIDATION_NETWORK_ID_OR_NETWORK_NAME_MUST_BE_SET' to the AppErrors files.
|What about VALIDATION_NETWORK_ID_OR_NETWORK_NAME_MUST_BE_SET?
|Instead of this and the previous validation (interfaceOrItsVlanDoesNotHaveNetworkOrOneIsAboutToBeRemovedFromIt) you can simply check if the nicId is set on one of the attachmets in- attachmentsToConfigure. It will really simplify the code.
|Why is this needed?
|Missing '{..}'- ${NETWORK_INTERFACE_ADDED_TO_BOND_AND_NETWORK_IS_ATTACHED_TO_IT_AT_THE_SAME_TIME_ENTITY}
|It is still missing in the other AppErrors files.
|This is not a webadmin patch- the prefix should be 'engine:'
|Answer to TODO: no, but since the dst of binary operation can be just NetworkInterfaceModel the is no need for other 'A op A' validations.
|There is no such scenraio. But but do you need TODO for it? IIUC, there is no bug in the code.
|You can remove the surrounding else.
|The best is using Objects.equals(item1, item2).
|'DEFERRED' constraint was introduced in postgres 9.0
On RHEL 6.6 and CentOS 6.5 we use PG 8.4.

I agree and even prefer, first nullify the 'network' of all the updated nics and then doing the update.

Moti?
|Done
|Done
|Done
|Done
|1. this patch doesn't introduced the 'unless', it just added the missing replacement. So I don't understand how this comment related to the patch.
2. Why using when? It should fail, unless the status equals to the passed parameter.
3. There was a bug in the new replacement. The message is-
'ACTION_TYPE_FAILED_VDS_STATUS_ILLEGAL=Cannot ${action} ${type}. Operation can be performed only when Host status is ${hostStatus}.'
The replacement shouldn't be the current status but the status passed via the parameter. Done.
|I is not related to the labels introduction. So we can do it in another patch.
|Fixed the comment.
|1. done.
2. The attachment contains the id/name of the base nic.
In case of vlan network (which is in-sync), the ip configuration data resides on the vlan device and not on the base nic.
In case you have vlan logical network but the network actually attached to the base nic, it means the vlan property of the network is not in sync.
It means that in order to find out if a network is in sync or not, you have to find where it actually resides.

We have no concept of a network that should be attached to one base nic (via vlan or not) but actually is attached to another base nic. If a host reports a network is attached to another nic than configured in the engine, the attachment is updated accordingly. There is no out-of-sync for this.

Unmanaged network- is a network that is reported by the host on any nic, but is not attached to the cluster. It is not related to the issue here.

You can try to attach vlan network to a nic without this patch (via the rest)- you will always get an error the network is out-of-sync.
The reason you won't get this error via the ui is that there was another bug in the ui and 'overrideConfiguration' was always marked as true.
|Done
|Why? The other properties of the nic are irrelevant here.
|Done
|Done
|1. !(nicIdNotSet= true &amp;&amp; nicNameNotSet=true) =&gt; false
2. If an empty string is provided the candoaction of the command will show a message 'there is no nic with this name.

We can a validation here to for the validity of the nicName, it will help catching error earlier. But it will also add duplicate code, so I prefer not doing it.
|Done
|I prefer not using 'Object' type. So if you won't insist, I prefer leaving the code as is.
|The code should block any update related to unmanaged networks (Attaching to a nic, attaching a network to a nic with unmanaged network, attaching nic with unmanaged network to a bond). As I see, there is no such validation. Me/or you should add it in a separate patch.
The code here will run after this validation, so it can assume there is no unmanaged network on the bond.
|Done
|Done
|Done
|Done
|Done
|Done
|Changed it to a list.
Regarding the 'overwriting passed-in instances'. That's exactly what I wrote in the TODO, also you have a comment regarding it in the ui patch. I agree, we shouldn't pass bond as the parameter, we should pass only the relavent data.

Passing the slaves is not needed here, the only relevant data is the 'EngineManagedAttributes'. In this case- the 'labels'. ('QosOverridden' and 'CustomProperties' should reside on the attachment and should be removen from the VdsNetworkInterface- https://bugzilla.redhat.com/1246060).
|You are correct. Remove the @Singleton.
|The comment is not relevant to this specific patch.
Can be added to the TODO list:)
|Done
|We have this function and it is widely used. I think it is readable. So if you won't insist, I prefer to leave it as is.
|see the previous comment on the same issue.
|Done
|Done
|I don't think it should be changed in the future just because the historical purpose of the completers was different.
It is the purpose of the labels completer, complete unspecified network attachments (the user can specify the attachments manually and the result will be the same).
|1. Added- 'noNewOrModifiedAttachment = newOrModifiedNetworkAttachment == null;' to avoid duplicate checking of  'newOrModifiedNetworkAttachment' nullity.
2. Unmanaged networks have no attachment and no label, so I'm not sure how it is related.
|Done
|Done
|Done
|Please keep this patch UI only.
Please move this code to another patch.
|Done
|All the comment in this file are not relevant anymore- I removed this file in a later patch.
|The reason internalRunAction() and internalRunAction were package private is that I wanted just the infrastructure to use this methods.
In this case you should do something like- VfsConfigAction.

You should override- onActionExecute().
And call the labelsAction using runParallelAction.

It is exactly what VfsConfigAction is doing.
|Please look at the comment in- VfsConfigAction.
|I think the unlabeling action should also have 'runNextInCaseOfError = false' parameter. If the labelCommand stops the flow, the unlabel should do the same.
|As I mention in VfsConfigAction, in order to avoid the problem specified in the comment in kine 102, you have to-

uiAction.then(new UiVdcMultipleAction(VdcActionType.UnlabelNic, unlabelNicParameters, getModel())).then(getNextAction());

then(null);

uiAction.runParallelAction(getActionFlowState());
|You can use- Linq.findInterfaceByName(..) or arrange the nics using Entities.entitiesByName(..).
|I think that one of the goals of the new api is that the UI and the REST won't have to deal with vdsNetworkInterfaces (and especially with vlan devices). The HostSetupNetworksModel shouldn't work and not even contain entities of type VdsNetworkInterface. It should have just- NicToNetworkAttachments (with reportedConfiguration filled), ,NicToLabels, UnmanagedNetworks and Bonds (With id, name and slaves fields). Using those field we make the calculation of the HostSetupNetwork parameters very easy. IMO, leaving the HostSetupNetworks working with the VdsNetworkInterfaces and calculating the attachments upon each action is bug prone and makes this even more complicate than it already is.

I know it can take a huge amount of time to re-implement it, we should discuss it, maybe we should pospone in to the next release.
|Open a bug regarding it- https://bugzilla.redhat.com/1242230
|Please remove the commented code.
|Done
|same
|Done
|1. Since the Label/UnLabel command execute setup network internally. 'commitNetworkChangesAction' should be executed after them.
2. Also, the label actions should be performed before the 'VfsConfigAction'. The VfsConfigAction need the db to be updated with all the setup networks changes before it is executed (it also means that both all the labels commands need to be marked as waitForResult).
3. The scenario of removing a bond that has networks attached via label to it won't work.
Since first you call the HostSetupNetworks and try to remove the bond, but the bond has network attached to it (that will be detached just when the unlabel command will be called), so the HostSetupNetwork will fail on- BOND_USED_BY_NETWORK_ATTACHMENTS.
I'm not sure how it should be fixed, lets schedule a meeting to discuss it.
4. In case the 'mgmt' network is attached to a nic via label and the user wants to move it to another nic, the user will first have to call unlabel (since detaching labeled network via HostSetupNetworks is blocked). But calling unlabel means detaching the 'mgmt' network, which is not permitted.
So, there is no way for the user to move the labeled 'mgmt' network to another nic.
|not relevant anymore.
|Please look at the documentation of UiAction.onAllExecutionsFinish(..)'.
The close action should be added to the last action in the flow(commitNetworkChangesAction) and not to the first one (setupNetworksAction).
The purpose is to close the dialog just if 'all' the actions in the flow were executed.
If the flow was terminated before reaching all the actions the dialog will remain open.

So if the setupNetworksAction will fail, the dialog will remain open (as it is today).

But if the 'VfsConfigAction' fails (or partially fails) the dialog will be closed (the first action in VfsConfigAction can create new nics, so I want to inforce the user to reopen the dialog in case of VfsConfigAction partial failure).
|I fixed it in a later patch.
|So lets change it and pass just newly created entity that contains-
bondName, bondId and slaves.
|I fix the engine side and removed this method in later patches.
|Additionally,
'HostSetupNetworksCommand.applyUserConfiguredNics(..)' adds 'getParameters().getBonds()' to 'userConfiguredNics'. Why?
I think it is what causes the problem you're talking about.
|It is a trick to add an action that contains a separate chain to the outer Chain.
For example the original chain is- a-&gt;b-&gt;c.
And b contains- b = d-&gt;e-&gt;f.
So when b is executed, you execute d with the outer's chain flowSlate- (updateAction.runParallelAction(getActionFlowState()))
You want 'c' to be executed just after 'f' is finished, so you set 'c' as the next action of 'f' (lone 70).
You have to set the 'next' of 'b' as null (line 72) since you don't want 'c' to be executed immediately after running the internal chain (line 74), you want it to be executed after the internal chain is finished.
|Looking at the code I realize runParallelAction is a confusing name, the name should be runAsParallelAction (I can fix it, but I don't want to create you new conflicts, so if you can, please fix it).
|not relevant to this patch anymore. Removed the comment.
|Why not Set? When the order is not important and each element can appear only once the right structure to use is Set.
|Removed the TODO.
|Please use common method with lines 262-267
|Done
|This is redundant, a 'redraw(..)' is called after the operation's execution and a new model will be created (so updating the previous one is no necessary).
|Done
|It was a slave not a bond, its 'bonded' property is already false.
|Done
|Was already done in line 445.
|Done
|break?
|Done
|Previously, when a network was moved from nic to nic (and even dettached and then attached to a new nic), the NetworkParameters (bootProtocol, ip, qos overriden, custom properties...) of the network were preserved (Please refer to the usages of HostSetupNetworkModel.networkToLastDetachParams and LogicalNetwork.restoreNetworkParameters(..)).
Here you initialize those values with defaults.
|Nothing should be done. The nic passed as a parameter to this method already has the restored parameters.
|What about customProperties?
|Done
|You can use Entities.entitiesByName(..)
|Done
|Done
|Done
|The message is 'always sent'- I mean I the past.
It is a bug it always sent it as true, the override configuration value should reflect the users choice and not be default. Please refer to the last version of the patch.
|No, and the may be also other keys. thanks for the comment!
Done.
|Done
|Done
|Should this method be private? Will it be ever externally used?
|You marked it as done, but it is still public (patchset 24).
|The network is part of the identity key of the attachment. As I understand, it cannot be changed (networkNotChanged() should verify it, right?). So why do you need this (getOldNetwork()) method? Are you passing not completely internalized attachment when you want to remove it? If so, isn't is more readable to have RemoveNetworkAttachmentValidator.java?
|internalized = initialized (oops...)

And generally, when writing validations. it is ok to assume that more basic validations had run previously.

What I tried to say in the previous comment, is that it is weird to have a method called getOldNetwork in this class, since there is no option for different old and new network entities, one of the most basic validation should be the network is not changed. Why aren't you using the regular getNetwork() method? Is it because it uses networkAttachment.netowrkId and there is a chance the networkAttachment passed to the ctor is not fully initialized and doesn't contain the networkId? If it is the case (and since the other validations assume the networkAttachment is fully initialized), I suggested to move the notRemovingManagementNetwork to RemoveNetworkAttachmentValidator, to avoid confusion.

But now after rethinking it, the core problem is that you can pass a networkAttachment that is not fully initialized. It is because the parameter of RemoveNetworkAttachmentCommand is to wide. It should contain just hostId and attachmentId (and not the whole networkAttachment).
|You didn't refer to the comment on patchset 38-
&quot;This patch contains also non restapi code. Please create a new patch with all the non restapi related classes.&quot;
|Should you check StringUtils.isNotEmpty(ipConfiguration.getPrimaryAddress().getAddress()) ?
Same as you do for the gateway in line 151
|same
|A variable shouldn't start with a capital letter.
|This patch contains also non restapi code. Please create a new patch with all the non restapi related classes.
|'ipConfiguration.getPrimaryAddress() != null' redundant, Sounds like ipConfiguration.hasPrimaryAddressSet() should check it.
|Why do you need this getter?
|1. s/does not have set IPv4 address set/does not have IPv4 address set
2. Why not returning null in case the primaryAddress is not set. It will save you the need to call hasPrimaryAddressSet before each call the getPrimaryAddress. It is more intuitive to check if getPrimaryAddress() != null before using it.
|Please also check the the primaryAddress is not null (a null value can be added to ArrayList).
|If  ipConfiguration.getPrimaryAddress() will return null if it is not set, you won't need this trinary if.
|primaryAddress  != null instead of hasPrimaryAddressSet is more intuitive.
|The default values of IPv4Address are null, this method is not needed.
|1. Why do you need generic here? Isn't the violatingEntity always a String?
2. I would call the class- ValitationsWithViolatingEntities.
|maybe- validationResultToViolatingEntity (why do you need to specify it is a map in the parameter name?)
|A method should start with a verb- getFailingValidationResults()
|You can use the MultiValueMapUtils.addToMap(..) instead.
|Please move it to your TODO list. The code cannot be merged with this unclear TODO (what helper?).
|Maybe- getViolatingEntities
|Please call- addViolation(vdcBllMessage, null)
|Also, the translation to a map with the message as a key is really bug bug prone.
The ValidationResult has two fields- the message and the variableReplacements (both of them are part of its equals and hashcode).
When translating a map with ValidationResult as its key to a map with VdcBllMessages, you can end up with a map smaller than the original one (since ValidationResults with the same message but different variableReplacements will be merged).
|1. this method can be private.
2. Maybe getMessageToViolatingEntities(..)
|You can use the MultiValueMapUtils.addToMap(..) instead.
|I you translation you're ignoring the variableReplacements.
Please look at CommandBase.validate to see how the variableReplacements should be treated.
|Please replace causes by violatingEntities (here and in the rest of the class). It is not the causes, it is the list of the problematic entities.
|Please remove the commented code and consequently, remove this class from the patch.
|You should execute HostValidator.hostExists(..) here (before the completer), as I mentioned in a previous patch.
But it shouldn't be done in this patch (should be done in the previous one).
In this patch you moved the execution of the hostValidator to the HostSetupNetworkValidator. It is wrong since at least the hostExists valdation should be executed before the completer and the initialization of the HostSetupNetworkValidator.
|The valid parameter is never used.
|As I mention in the HostSetupNetworksCommand- the hostExist() validation is very basic and should be called before the initialization of this validator.
|Shoudn't you add '!' (not) here.
The fact that violations.addViolation returns the opposite of what validate returns is very confusing. I would add to FailingValidationResults class- public 'validate(..)' methods (same as the methods you removed from this file) and make the 'addValidation(..)' methods private.
|should be-
          if(validations.addViolation()
             &#124;&#124; validations.addViolation()
             ...)
|same here.
|Please remove the commented code and this class from the patch.
|same- please remove the commented code and this class from the patch.
|Seems that this paragraph -'Introduce HostSetupNetworks command'... shouldn't be part of this comment (refers to another patch).
|Regarding the comment in patchset 47-
&quot;You should execute HostValidator.hostExists(..) here (before the completer), as I mentioned in a previous patch. But it shouldn't be done in this patch (should be done in the previous one). In this patch you moved the execution of the hostValidator to the HostSetupNetworkValidator. It is wrong since at least the hostExists valdation should be executed before the completer and the initialization of the HostSetupNetworkValidator.&quot;

I don't know what previous patch I was talking about (since this is the patch which introduces this class...).
The check whether the host exists should be done before executing the completers.
|Just now I understand this is not 'engine: Introduce HostSetupNetworks command' patch, this is- 'core: refactored gathering violations to separate class'. There is an error in the comment.
So the previous patch is- 'engine: Introduce HostSetupNetworks command'.
I wrote a relevant comment there- You can ignore this one.
|This java doc is out-dated.
|Done
|This class is widely used, and has test class with a lot of dependencies. I prefer avoid doing this change in this stage.
|If you have VdsNetworkInterface which is not instanceOf Bond, but 'isBonded=true', it is a bug.

Ideally, 'isBonded' property should be removed. So, in new code I am trying to avoid using it. I will remove the use of 'isBonded' from this class.
|Please use the injected vdsDao.
|Please add dao test.
|I think that lines 244-245, should be part of 'buildNetworkInterfaceFromExternalProvider'
|what about the vmId?
|Done
|This 'for' is redundant, since 'BondNetworkInterfaceModel' ctor already does it- it calls 'setThisBondModelToRelatedSlavesModels'
|Will be fixed in another patch.
|IIUC, the whole intention of this patch is this line- adding the slaves to the VdsNetworkInterface of the bond.

This is not the correct place for doing it, the models are being built according to the nics, not the opposite.

The slaves of the bond VfsNetworkInterface should be initialized only once- upon the nic initialization (after querying the engine).
Any other update to the bond should be done via the 'operations', as it actually done.
|Done
|This is redundant. there is no need to update the model. After each command execution a redraw is called, the redaraw call initNicModel, so the models will be reconstructed according to the nics in 'allNics' list. Here the nic is updated with the 'bondName', it is enough.
|Done
|Marking nic (VdsNetworkInterface) as bonded- means it is a bond. Here, the nic is a slave. So this is a bug.
|The nic is a slave, marking it as 'bonded' means it is a bond.

I think the confusion is because 'NetworkInterfaceModel' has also 'bonded' property, and there it means the model represents a slave. Maybe it is a good time to rename it...
|Please update the tests to include qos.
|You have a bug here-
The fact the attachment already exist and you just updating it doesn't mean the qos exist.
So you have to check if the qos exist, you should just update it. Otherwise, you should save (add) it.

Also, if the qos is now null (and previously wasn't), you should remove the qos.

I fixed this bug for you in another patch.
|The overridden qos shouldn't be stored in the attachments table, it should be stored in the qos table like all the other qos types. Please take a look of how IntrfaceDao treats the overridden qos, it should be the same.
|+1
|?
|You can use- getInteger(..) instead of the newly created 'getNullableInt'
|Shouldn't you use- &#124;&#124; ?
boolean qosOverridden = overriddenOutAverageLinkshare != null &#124;&#124; overriddenOutAverageUpperlimit != null &#124;&#124; overriddenOutAverageRealtime != null
|getInteger(..)
|should be reverted.
|should be reverted.
|s/verifyUnsetStoragePoolIdAndName/verifyUnsetStoragePoolIdAndNameOnQos
|This method will be removed in a following patch.
|Please open a bug for creating the candoaction and handling bondOpts with no mode.
|Please remove the file form this patch.
|Please add a link to the bug.
|Not your bug, but still a bug. If a slave was added/removed to/form a bond, the reported speed is not relevant and you should re-calculate the speed. Also, if the bond mode was changed.
Since it is not a new bug, if it is complicated to fix it, leave the code as is and open a bug.
|I know it is the old code and not your bug, but since the bond options can contain custom value and we don't verify it actually contains &quot;mode=[number]&quot;, you can get NumberFormatException here.

As I understood from Ido, not passing the bond mode means the bond mode is the kernel default, which is 0. So in case the mode is not provided you should return here false. In case the mode is not a numerical value, a candoaction should be thrown. We should understand from vdsm how they verify the bond mode and add this verification to the engine- not relevant to this patch.
|I'm not sure how it can happen (maybe there is no candoaction for it), but you can mark that you want to override qos and eventually don't pass any value in the qos fields.

Regardless your TODO, you should rewrite this method to get networkAttachment instead of iface.
|As now you're using the NwetworkAttachment to find out whether the qos is overriden. And NetworkAttachment doesn't have the 'isQosOverridden', this problem is not relevant anymore.
BTW, 'isQosOverridden' should be removed from VdsNetworkInterface (the NetworkAttachment should be used to find out if it is overridden).
Yevgeny is working on it as part of- https://bugzilla.redhat.com/1246060
|I don't understand this TODO.
|The vds_interface can have more than one nic with the same name (On different host of course). You have to pass also the host_id as a parameter.
|tests?
|It is not related to this patch. And regardless to it, the change is redundant. The mapper already does it.
|Patchset 16 was ok, I don't understand why you moved this calculation to here.
It should be calculated before 'interfacesSpeed.containsInterfaceWithoutKnownSpeed()' is called. Otherwise 'interfacesSpeed.containsInterfaceWithoutKnownSpeed()' will always fail if there are newly created bonds.

Since we decided to remove this validation in a following patch, I'm reverting it to the state in patch-set 16 (so I'll fill comfortable not merging a bug, although it will be removed in the following patch).
|1. You should verify the 'networkImplementationDetails' are not null.
2. Please import-org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface.NetworkImplementationDetails;
|There is no network on the nic, so it is pretty weird to have 'NetworkImplementaionDetails'.
I think the null check is ok.
Do you have any other concrete suggestion?
|Please import-org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface.NetworkImplementationDetails;
|1. Copy form patchset13- You're calculating the implementation details and store them in 'existingNic.implementationDetails', so there is no need to recalculate it again. You 'vdsNetworkInterface' already has the desired details.

2. Please make sure the 'details' are not null before calling the 'isInSync()' method.
|Why do you need the 'this'?
|copy from patchset13- please return the surrounding 'if (!qos.isEmpty())'.
|Copying from patchset 13 (since i don't want to review it again)- Please verify the scenario in - https://bugzilla.redhat.com/1196275 works for you.
|Copy from patchset 13- Please also fix the issue described in bug- https://bugzilla.redhat.com/1192808.

If the interface with the unknown speed wasn't updated as part of the command. You shouldn't fail.
|Copy from patchset13- Don't forget to verify the bug you've opened on this issue and add to the bug a link to the patch.
|Copy from patchset13- Copy from patchset6- Don't forget to verify the bug you've opened on this issue and add to the bug a link to the patch.
|I didn't notice it is the helper and not the command itself. Accepted.
|Copy from patchset13- Why did you add all this daos? And why didn't you use injection?
|Accepted.
|Why don't you use @Inject, like you did in the other commands?
|same
|Copy from patchset13- The attachment can be null (in case the network was moved/attached to a new nic), please verify it before using it.
|Copy from patchset13- you can use baseNic.getName();
|Copy from patchset13- The attachment can be null, please verify it before using it.
|Please import org.ovingine.core.common.businessentities.network.VdsNetworkInterface.NetworkImplementationDetails
|We had a phone talk about this one, I hope now it is clear:)
|Copy from patchset13- If the qos was overridden to be empty, you shouldn't throw the error (Same network with no qos but attachment with). It means you should get here the effectiveQos and check whether it is null of empty.

Since this command won't support overriding qos anymore, you should use the db current values.
|Single 'nicId' can have multiple attachments.
This method should return Map&lt;Guid, Set&lt;NetworkAttachment&gt;&gt;.
|Copy from patchset13- tests
|Copy form patchset13- I agree, there is duplicity:) Please fix it.
|Copy form patchset13- injection
|If the networkAttachment is null, it means the network was previously detached and now was attached to a new nic, or the network was moved to another nic.
The network still can have qos (just not overridden one), you shouldn't ignore it.
I mean, you should use the qos of the network.
|I can be done in a separate patch.
|You should run all the sync test also on non-vlan nic.
|In this test the netowrk has no qos and the attachment have an unsync one.
Please add the same test for the case the network has un-sync qos and the attachment has no qos.
|Copy form patchset13- You should also check the sync state of the ip-configuration properties (and of course add tests for it).
|Please add test for the case the attachment is null and the network has/has no qos.
|Should you set the qos on the attachment?
|I've noticed a bug- in case the network is not in sync, the 'override qos' and the qos feils are still changeable.
they should be disable like the other fields.

Seems it should be fixed in- HostInterfaceModel.
|Done
|You should pass the base nic, not the vlan device.
You can pass- logicalNetworkModel.getAttachedToNic().getIface()
|Done
|The dialog should present only the actual vdInterface data. Currently it presents the attachment.qos if the qos is overridden. Otherwise, it presents the network.qos. Both are wrong- the actual qos should be presented- vdsInterface.qos).

The previous code had the same bug-
https://bugzilla.redhat.com/1192807

One you verify the bug is fixed, please add the gerrit commit to the bug.
|Done
|This code will add an attachment even if the network is 'out-of-sync' (although 'out-of-sync' network cannot be edited).
since if you just opened the edit dialog of an 'out-of-sync' network and then close it- you will end up with an attachment in the parameters. This will cause a candoaction- since you're trying to update an 'out-of-sync' network.

This scenario is part of a more general two bugs-
The problems we have-
1. Engine bug- if a network attachment is in the 'addedOrModifiedAttachments' list, and the network is 'out-of-sync' we throw a can-do even if no change was done.
2. Opening and closing the dialog without doing anything, still end up with an attachment in the parameters.

Both of the problem can be fixed in the same way, if the modified attachment equals to the original one- 1. sync check should be performed. 2. The attachment should be removed from the parameters.
|Opened a bug- https://bugzilla.redhat.com/1254320
|If the network is not in sync, the 'overridden qos' is the one on the existing attachment (in this case the 'qos' values in the dialog are taken from the nic, so they don't contain the 'overridden qos').
|Done
|s/networkAttachmentForNetworkAndNic/getNetworkAttachmentForNetworkAndNic
|1. s/networkAttachment1/networkAttachment
2. You can have more then one attachment for same 'nicId', which one of the will be returned? You should choose the one with the 'networkId'.
3. What if it is newly create attachment or a modified one?
If the attachment is in the parameters list, you should use it. Otherwise, use the existing one.
|See the comment in line 381, this method can be removed.
|format
|You removed the line- 'setQosOverridden(nic.isQosOverridden());'

But you should still somehow know if the 'qos' was overridden or not, since you want to set this property on the new nic the network will be attached to.
Seems you need to read this info from the attachment.

Note- 
1. You have a network with a label that is attached to a nic.
2. You're adding the label to the nic (bottom line- you're not doing any setup networks change, just adding the label to the nic's db row).
But, the ui detaches the network from the nic and reattaches it (that's the implementation of adding a label to a nic).
In the current implementation of the 'NetworkParameters(..)' you will lose the 'qosOverridden' property.
|Done
|See the comment in the 'NetworkParameters' The 'qosOverridden' property should also be copied from the params to the 'modifiedNetworkAttachment'.

I think that in the way the code is written today, 'restoreNetworkParameters' is called before the modifiedNetworkAttachment is created. So you can

1. either change the order of the things- first creating the attachment and then calling the restore.

2. Or you can separate the method to 'restoreNicParameters' and 'restoreNetworkAttachmentParameters'. And calling 'restoreNetworkAttachment' via the code that creates/update the attachments. (I prefer thos choice).
|Done
|same- you should take the 'qosOverridden' from the attachment (You can use the method HostSetupNetworkModel.getNetworkAttachmentForNetworkAndNic, to get the relevant attahcment).
|Done
|Why are you passing the old qos? You should pass the one from the NetworkParameters.
(If you will choose the second approach described in LogicalNetworkModel- line 85 comment).
|Done
|Same here, you should pass the qos from the network parameters. (If you will choose the second approach described in LogicalNetworkModel- line 85 comment).
|Done
|See the comment in line 210. This method should also get 'qos' as a parameter.
|format
|Adding comment so we won't forget to remove the comment before merging.
|Adding comment so we won't forget to remove the comment before merging.
|In all the tests, the overridden qos is null. Please also add/update the tests to test also overridden qos.
|It is for the tests I guess, can be package private,
|Same.
|Please refer to the next comment- the 'existingNetworkAttachmentMap' and 'existingNetworkAttachment' can be removed form this method.
|I fixed this bug for you in another patch.
|You've introduced a bug-

The old way for finding the nic was the correct one-
VdsNetworkInterface vdsNetworkInterface =                 Entities.hostInterfacesByNetworkName(getExistingNics()).get(existingNetworkAttachment.getNetworkName());

You should check the 'implementation details' of the nic with the network attached to it. It may be a vlan device or may be a base nic (each vlan device has its own implementation details).
|why not 'if (!valueConsitent.isValid())'? (like you did for requiredValuesPresent).
|Reminder for myself- refer to the comment in this line on patchset 13.
|Same code as- 313-315, please extract to a method.
|This line can be removed.
|Why do you pass 'null'? You should pass the 'attachment', that is the whole idea. You should get the effective qos of this nic, whether it is on the network or overridden.
If the 'effective qos' is null of empty it is ok. Otherwise, if '!hostNetworkQosSupported' you should add the violation.
|I would add a method- 'isMadatoryFieldsPresent' and reuse it here and in 'requiredQosValuesPresentForOverriding'
|I think that it is much clearer if for empty overridden qos this code won't be called.

But as you wish, you can leave the code as it is...
|Please use injection.
|Should you pass 'vlanNetwork' instead of 'baseNicNetwork'?
|tws
|Agree, you can remove it.
|You removed the 'qosOverridden' from here but didn't remove it from the scripts (insert and update).
I'm not sure how did you manage to pass any setup networks validation.
|This is a rest file. Why is it part of this patch?
|Please also add, that although if the map is passed, but the base nic is not in the map, the db is queried.
|Maybe you can call the previous method- calculateNetworkImplementationDetailsOverriddenQosOutOfSync and remove the 2 from this one.
|Why is this needed?
|1. 'networkToConfigure' should contains the 'qos' no matter if it's overridden or taken from the network.
The if should be- if (NetworkUtils.qosConfiguredOnInterface)
2. NetworkUtils.qosConfiguredOnInterface should get 'networkAttachment' instead of vdsInterface as a parameter.

All its usages should be fixed.
|If the qos is not overridden, you should use the one on the network (if there is one).
|There was no such requirement.
|Please create validateQos() method and move these methods to it.
|Please remove the TODO.
|Please use- networkAttachment.isQosOverridden()
|Regarding the first paragraph. I didn't understand it...

Regarding the second-
1. If network has qos, but on a specific host nic you don't want qos. You nullify all the values and get empty qos.
In this case there is no need to validate the values, since all of the are null. That's why the code was surrounded with 'if (!qos.isEmpty())'.

'HostNetworkQosValidator.requiredValuesPresent()' checks only the 'OutAverageLinkshare', since in case the qos is set, it is the only mandatory value.
|The original code has '!iface.getQos().isEmpty()' if- before doing the following validations.

I don't redeemer the reason, but there was a reason for this validation. Maybe if you edit the qos on the nic via the ui and then remove the values, you send an empty qos.
Please verify it.
|s/interfaceRelatedToAttachment/getInterfaceRelatedToAttachment

The java convention is to start method name with a verb.
|What about attachments of newly created bonds?
The new bonds are not part of the existingInterfacesMap and don't have an id.

Before fixing it, see my comment on line 247, you may not need this method at all.
|s/networkRelatedToAttachment/getNetworkRelatedToAttachment
|get
|All the attachments should be verified, not just the added/modified ones.
Please use attachmentsToConfigure (pass them as a parameter to the method) instead of params.getNetworkAttachments().
|See my next comment- you can get this name via the attachment.
|As I already commented somewhere in this patch- NetworkUtils.qosConfiguredOnInterface should be modified to get the attachment instead of the interface.
So there is no need to get the vdsNetworkInterface and its base name.
|Please verify the scenario in - https://bugzilla.redhat.com/1196275 works for you.
|Please also fix the issue described in bug-
https://bugzilla.redhat.com/1192808

if the interface with the unknown speed wasn't updated as part of the command. You shouldn't fail.
|Map&lt;String, List&lt;VdsNetworkInterface&gt;&gt; newBonds = NetowrkCommonUtils.getBondNameToBondSlavesMap(params.getBonds());
Map&lt;String, List&lt;VdsNetworkInterface&gt;&gt; existingBonds = NetowrkCommonUtils.getBondNameToBondSlavesMap(existingInterfaces);

result.addAll(existingBonds);
reuslt.addAll(newBonds); (// Please also clean speed from new/modified bonds, so it will be recalculated- it is a fix to a bug I previously asked you to open.)
return result;
|Please remove
|Please remove
|As I wrote in a previous comment, the 'networkInterface', you should pass the attachment.
|you can get the name via the attachment, the interface is not needed.
|You should determine whether the qos is overridden via the attachment.
The 'isOverridden' property should be removed from VdsNetworkInterface.
|You should get the overridden qos from the attachment.
|can be removed.
|Please add tests for the qos validations-
validateQosOverriddenInterfaces();
validateQosNotPartiallyConfigured();
validateQosCommitment(attachmentsToConfigure);
|Now that you've removed the '&#124;&#124; iface.isQosOverridden()', you should verify that all the calls to this method pass the correct hostQos. Until now it was sufficient to pass just the qos defind on the networks, if it was oveeriden by the nic, it was ignored.
Now that the overridden qos can also be out-of-sync, it will cause a bug passing the qos defined on the network when the overridden one is needed.

Examples of places that need to be fixed-
1. UpdateNetworkCommand.createSyncNetworkParameters-&gt; call to NetworkUtils.isNetworkInSync
2. GetVdsAndNetworkInterfacesByNetworkIdQuery.executeQueryCommand-&gt; call to NetworkUtils.calculateNetworkImplementationDetails
3. GetVdsInterfacesByVdsIdQuery.executeQueryCommand-&gt; call to NetworkUtils.calculateNetworkImplementationDetails
4. HostSetupNetworksCommand.getExistingNics-&gt; call to  NetworkUtils.calculateNetworkImplementationDetails
5. HostNetworkTopologyPersisterImpl.logUnsynchronizedNetworks
6. ReportedConfigurationsFiller.fillReportedConfigurations

And of course the corresponding tests.
|Please remove the redundant parenthesis.
|1. What if the 'ifaceQos=null' but the 'hostNetworkQos' isn't- you should mark all the qos related fields as out-of-sync.
2. The opposite- the 'hostNetworkQos' is null but the 'ifaceQos' isn't- - you should mark all the qos related fields as out-of-sync. (Currently, in this case you will get NPE).
|Don't understand this TODO- now 'notIsSync' is not related only to the 'network' but also to the 'networkAttachment'.
Please remove the TODO.
|Please use injection to create the util.
|Please use injection to create the util.
|Please use injection to create the util.
|Copy form patchset9- You're calculating the implementation details and store them in 'existingNic.implementationDetails', so there is no need to recalculate it again. You 'vdsNetworkInterface' already has the desired details.
|injection
|injection
|copy from patchset9- please return the surrounding 'if (!qos.isEmpty())'.
|Copying from patchset 9 (since i don't want to review it again)- Please verify the scenario in - https://bugzilla.redhat.com/1196275 works for you.
|Copy from patchset 9- Please also fix the issue described in bug- https://bugzilla.redhat.com/1192808.

If the interface with the unknown speed wasn't updated as part of the command. You shouldn't fail.
|Can you please explain me the fix? Looking at the code it seems to me the bug is still there.
|Copy from patchset6- Don't forget to verify the bug you've opened on this issue and add to the bug a link to the patch.
|injection
|If we have an attachment referencing in-existing network, it is a bug.
Please remove the TODO.
|injection
|Why did you add all this daos? And why didn't you use injection?
|Copy from patchset9- Please remove the TODOs and the commented line.
|Copy from patchset9- The qos part can be removed, please update the method name.
|Copy from patchset9- The attachment can be null (in case the network was moved/attached to a new nic), please verify it before using it.
|you can use baseNic.getName();
|Copy from patchset9- The attachment can be null, please verify it before using it.
|injection
|Copy from patchset9- If the qos was overridden to be empty, you shouldn't throw the error. It means you should get here the effectiveQos and check whether it is null of empty.

Since this command won't support overriding qos anymore, you should use the db current values.
|1. Injection
2. tests
|1. Please make the class injectable.
2. tests
|This class can be injected (all the parameters in the ctor are injectable).
|I agree, there is duplicity:) Please fix it.
|Injection
|injection
|Copy from patchset9- You should verify the networkAttachment is not null.
|This test should be changed (it seems that it shouldn't even work).
You should specify the overridden qos on the networkAttachment. And have separate test for in-sync and out of sync of the overridden qos.
|You should also check the sync state od the networkAttachment properties-
overridden qos and ip-configuration.
|Why always true?
|Please remove the commented code.
|please call- this(networkAttachmentDao, new QosDaoCache(qosDao));
|Please see the comment I added to the dao method.
You shouldn't call the dao method, it assumes you're passing the base nic.
|I suggest you to call 'calculateNetworkImplementationDetails'.
The 'NetworkInSyncWithVdsNetworkInterfaceFactory' can be private inner class and used only by the 'calculateNetworkImplementationDetails'. It will simplify things.

I think there is only one use case the factory is used to get the NetworkInSyncWithVdsNetworkInterface and not just the sync state. You can add to the class that you move 'calculateNetworkImplementationDetails' to and method for getting the 'NetworkInSyncWithVdsNetworkInterface' for this case.
|I would move the creation of the factory to 'calculateNetworkImplementationDetails' so that all the places that use it won't need to create it.
|If you're already here- please use injected interfaceDao.
|1. instead '!Boolean.TRUE.equals(nic.getBonded())' you can use- '!nic.isBond()'.
2. Regarding the TODO- Yes, seems we don't want to report bonds with no slaves...
I don't know why.
|I'm not sure I understand you answer. You're calculate the implementation details and store the in 'existingNic.implementationDetails', so there is no need to recalculate it again. You 'vdsNetworkInterface' already has the desired details.
|If the implementation details are calculated anyway, why no storing in in the existing nics list.
It can be really useful when implementing the 'unmanaged networks' validations.
|You don't need it to know if the network is in sync. 'getExistingNics()' already calculated the 'implementationDetails' so you can use its sync value, no need to recalculate it.
|You can use- 'getEffectiveHostNetworkQos' (which is now part of 'AbstractNetworkInSyncWithVdsNetworkInterfaceFactory' but should be moved to NetworkDbUtils).
|I prefer the old one will have reference to here. Since in the future it should be removed.
|Forgot to post the respond. Posted now.
|See the comment on patch set 6- please return the surrounding 'if (!qos.isEmpty())'.
|Copying from patchset 6 (since i don't want to review it again)-
Please verify the scenario in - https://bugzilla.redhat.com/1196275 works for you.
|Copy from patchset 6- Please also fix the issue described in bug- https://bugzilla.redhat.com/1192808.

If the interface with the unknown speed wasn't updated as part of the command. You shouldn't fail.
|Don't forget to verify the bug you've opened on this issue and add to the bug a link to the patch.
|Why do you use the MultiValueMapUtils and not result.putAll(newOrModifiedBonds);

Using MultiValueMapUtils, you will end up with have the same slaves twice in the map.
|getEffectiveHostNetworkQos should be moved to another place and shouldn't have this problem anymore, so just remove this TODO.
|There are ways to fix it.
But my idea is not fixing it. As far as I know, rest-api doesn't expose functionality for overriding qos via the old setup networks. Also, the ui which was the only customer of this functionality is now using the new HostSetupNetworksCommand.

So, I suggest removing from the old setup networks the support of overriding qos.

So, for example, you can removing this line.
|same. The qos part can be removed, please update the method name.
|This method can be removed.
|Please see the comment I added to the dao method.
You shouldn't call the dao method, it assumes you're passing the base nic.
|Ignore, the whole method should be removed.
|Please see the comment I added to the dao method.
You shouldn't call the dao method, it assumes you're passing the base nic.
|The attachment can be null, please verify it before using it.
|Please see the comment I added to the dao method.
You shouldn't call the dao method, it assumes you're passing the base nic.
|The attachment can be null, please verify it before using it.
|Please use getEffectiveQos(..).
|With the new implementation of 'calculateNetworkImplementationDetails' you won't need to create the factory here.
(I'm adding a comment so I won't forget to re-review this code in the next cycle).
|If the qos was overridden to be empty, you shouldn't throw the error. It means you should get here the effectiveQos and check whether it is null of empty.

Since this command won't support overriding qos anymore, you should use the db current values.
|Why do you need it? It has the same functionality as 'isEmpty()'.
|Please remove this comment.
|You are not invoking a stored procedure, You're calling another dao method.
|It makes sense to have the following stored procedure- getNetworkAttachmentByNicIdAndNetworkId
|I think it shouldn't be solved in the db layer, you should pass to the new method ('getNetworkAttachmentByNicIdAndNetworkId') the id of the base nic. Each place invokes the method should have its own treatment for it.

You can have a util method (not placed in the dao)-
getNetworkAttachmentForNicAndNetwork(VdsNetworkInterface iface, Network network)

This method will get the base nic id in the following way-

String baseNicName = NetworkUtils.stripVlan(nic);

Guid baseNicId;
if (!nic.getName().equals(baseNicName)) {
   VdsNetworkInterface baseNic= networkDao.getByName(baseNicName);
   baseNicId = baseNic.getId();
}
else {
   baseNicId = nic.getId;
}

return baseNicId;

and then will call the dao method (getNetworkAttachmentByNicIdAndNetworkId).
|Not that important.
I think the problematic name is -NETWORK, should be VM_NETWORK. But it is not related to this patch.
Please remove the TODO, I don't want to merge with it.
|Please move it to the same class you're moving 'calculateImplemetationDetails(..)' to.
|Why not - ifaceQosUnset != hostNetworkQosUnset?
|Please use 'ifaceQos.isEmpty()' instead of 'isSettingsUnset()'.
|As I wrote in previous comments-
this method should be moved to VdsBroker (so it can use the dao), and should construct the factory instead of getting it as a parameter.
You can move it to a class called- NetworkDbUtils.
|If it compiles without it, it is ok to remove it.
|I added a comment to the place this method is used (I think it is not needed). If you remove it, please move this code to another patch (or remove it).
|Seems identical to the previous test.
|Seems identical to the previous test.
|Seems identical to the previous test.
|It should be ok after moving the 'calculate' method to VdsBroker.
|Marchin opened a bug regarding it- https://bugzilla.redhat.com/1245741

We decided not to fix it.
|1. You should pass to this method the base interface.
2. You should verify the network attachment is not null.
|In case the 'qos' is overridden is should be taken from the attachment, not the 'iface'.
|should be- 'qosOnAttachment()'.
|You should check if it is currently out of sync, so you have to use the existing attachment. not the updated one.
|NetworkUtils.isNetworkInSync ignores the sync check if the qos is overridden. Please fix it.
|Why did you remove it?
|This patch doesn't include HostSetupNetworkModel. But there are several changes need to be done there.
1. The dialog should present whether the qos is overridden according to the networkAttachment and not to the vdsNetworkInterface.
2. The dialog should present only the actual vdInterface qos (it is a old bug, but should be fix- currently it present the vdsInterface.qos if the qos is overrdien. Otherwise, it presents then network.qos. In both of the case the actula qos should be presented- the one on the nic).
|Please see line- 1018, you have this value stored in 'targetNic'
|Should be done only if the qos was marked as overridden in the edit dialog.
|What if the qos is out-of-sync?
In the following scenario- opening the edit attachment dialog and clicking ok-
IIUC, you will copy the nic actual data to the attachment and eventually will get a candoaction on the engine side- you're trying to update out-of-sync network.

Maybe the solution can be not creating/updating the parameters in case changes weren't done. Or not creating/updating the parameters in case the network is out-of-sync.

(BTW, you have the same issue with ipConfiguration).
|+1
|The 'userPortalListModel' is not needed, you can call 'getWindow()' directly.
|s/db/engine
|Please rebase, this method no longer exist.
BTW, is was never relevant to this patch.
|never used.
|never used
|Seems the you should invoke here the 'networkExclusivenessValidator'.
|1. s/The following Network Intefaces/The following Network Interfaces violat
2. Are you sure it is working? You have the following variable in the method NETWORK_INTERFACES_NOT_EXCLUSIVELY_USED_BY_NETWORK_LIST
but seems that you pass the following replacement- NETWORK_INTERFACES_NOT_EXCLUSIVELY_USED_BY_UNTAGGED_NETWORK_LIST
|same
|The message is not needed by the user-portal.
|same
|s/host/Host
|1. Where do you use this method?
2. Please add tests for the new method- isDeviceNetworkFree.
|Please specify the non-available devices.
|To make sure the device is network free, you have to check it has a reported nic (and also test it:)).

Please take a look at 'isVfFree(HostDevice vf)'.

You method should be- @Override public boolean isDeviceNetworkFree(HostDevice pciDevice) { // Check that there is no macvtap device on top of the VM- // nics with macvtap attached are not reported via the getVdsCaps VdsNetworkInterface nic = getNicByPciDevice(pciDevice);

return nic != null &amp;&amp; !isNetworkAttached(nic) &amp;&amp; !isVlanDeviceAttached(nic);
}
}

'isVfFree(HostDevice vf)'- should reuse your new method.
|Of course this code is relevant just for network pci devices.
At the beginning of the method you should invoke-

networkDevice = getNetDeviceByPciDevice(hostDevice)
if (networkDevice == null &#124;&#124; isNetworkDevice(networkDevice)){
return false;
}

(&quot;getNetDeviceByPciDevice&quot; can be renamed to &quot;getParentDevice&quot;, when I wrote the code it was designed to be used only for vfs, now that any device can use it, the name is a bit wrong).
|You don't need 'getSingleMockedNonFreeDevice()' you can use the output of 'freeVfCommon'.
|You're right, it returns the free devices, you need the non free one.
|same.
|Please add the bug url to all the patches in the chain.
|Not directly related to the patch-
Shouldn't the if be-  &quot;if (!checkNetworks.contains(otehrNetworkOnNic.getName())&quot;
|Currently, the behavior of the MTU method in this case (two non-vlan vm networks) is undeclared- you can add it to the method's documentation.
It doesn't make sense to test it. I know you didn't add the test, but since you changed it (from being valid to being non valid scenario- which strengthens the argument it doesn't matter)- please remove it.
|This test is not important and in my opinion, should be removed.
Having two non-vlan vm networks is not a valid scenario (the mtu validation assumes this was already validated). So it doesn't matter what the validator returns in this case.
|I suggest, finding the non vlan network- if there is one.
And then making sure the mtu of all the other networks equals to it.

I think the method will be clearer that way.
|Why didn't any test caught the is a bug here?
|You passed &quot;otherNetwork&quot; twice.
|Please add &quot;webadmin:&quot; prefix to the comment.
|Please add the relevant bug.
|Why does the title broken into two lines?
|Please add link to the relevant bug.
|Nice!
|The parent method is the same, no need to override.
|You don't need two mocks for the reported configuration.
Removing this line and having only single mock will do the same.
|In the previous message the 'host' was with no capital letter. Please be consistent (I'm not sure what is the right way:)).
|I would add &quot;are you sure&quot; dialog, in case the user pressed the button by mistake.
|Why is this needed?
|Please use setWindow instead of setConfirmWindow, and reuse &quot;Cancel&quot;.
|Before start the progress you should do the following (in case the ok is pressed twice)-

ConfirmationModel model = (ConfirmationModel) getWindow();
if (model.getProgress() != null) {
      return;
}
|You have access to getConfirmWindow(), there is no need to query the state.
|The state is not needed, you can pass null (I'm not sure but maybe the method is overloaded and you can even pass nothing).
|s/sync/synchronize
|same
|I think it is enough to return null in case the 'networkName' and networkId' are null.
The HostSetupNetworks will catch it, since it have a canDo for this.
|If the 'networkName' is null you should use the 'networkId' not the 'id'.
|You're always overriding 'getParameters().getNetworkNames()'.
I suggest if the 'getParameters().getNetworkNames()' is not null or empty use it, otherwise, call 'updateModifiedNetworksNames'.
|Shouldn't the default be 1?
|same
|Do you mean 332-334?
|Done
|Why are you overriding it as always valid?
When attaching network to cluster, networks that were previously unmanaged can become managed and if they are attached to nics with no ip, it should be blocked.
|I'm not sure if the variables are case sensitive, but in the AppErrors file it is- &quot;$nicName&quot;.
|I'm not sure if the variables are case sensitive, but in the AppErrors file it is- &quot;$hostName&quot;.
|s/missingIpLabeledNic/missingIpNic
|Can you please explain me why is this method needed?
If the network and the nic has the same label- the network is attached to the nic and &quot;roleNetworkHasIpOnLabeledNics&quot; will catch the problematic nics.

If for some reason the network and the nic has the same label but the network is not attached to the nic, you don't need to validate this nic (the network is not attached to it:)), you nic to validate the one it is attached to.
|Shouldn't it be- isEmpty? (Although I think all the method should be removed)
|Shouldn't it be- isEmpty?
|Please add tests to test- roleNetworkHasIp
|Why didn't you add NETWORK_ADDR_MANDATORY_FOR_ROLE_NETWORK?
|The message is not relevant to user portal. Please remove it from the file.
|The message is not relevant to user portal. Please remove it from the file.
|s/network:/engine:
|Shouldn't the condition be negative?
|Please add 'get' tests for networks with and without qos.
|Agree with Omer, seem that-
setUsageNetworkPercent(vmStatistics.getusage_network_percent());
addNetworkUsageHistory(getUsageNetworkPercent(), usageHistoryLimit);

Should be removed from vm.updateRunTimeStatisticsData(..)
|The completion should be done before the cando validations, since HostSetupNetworksValidator.validateQosCommitment(..) will have NPE is case of null bondOptions (when trying to calculate the bond's speed).
|Why is this test relevant just for vlan nic?
|Still don't see the new tests in patchset 8.
|The are the are three ways for vlan to be out of sync-
1. NO VLAN on nic, VLAN on network
2. VLAN on nic, VLAN on network (but different number)
3. VLAN on nic, NO VLAN on network

If you will move the method to the base test class, as I suggested. You will cover cases 1 + 2.

In this class you should add method for case 3.
|1. You can move this test to the base test class, just instead of &quot;testIface.getVlanId() + 1&quot; do &quot;testIface.getVlanId() == null ? RandomUtils.instance().nextInt(100) : testIface.getVlanId() + 1&quot;
2. The method that should be in this class is- nic with vlan id and network with no vlan id.
|Why is this test relevant just for vlan nic?
|Why did you move the method back to here? Should be in the base class.
|This class is for test nic with vlan id.
This method tests a nic with no vlan id, this method doesn't belong to here.
|Why did you move the method back to here? Should be in the base class.
|?
|Please add the prefix- &quot;engine:&quot;
|?
|Please add the bug-url
|not related to the patch, but- s/sortedRemovedNetsworks/sortedRemovedNetworks
|To avoid passing the same 'EngineMessage' twice,
what do you think about the following?


Adding 'addReplacement' method to ValidationResult. The method will add replacement to 'variableReplacements' and return 'this'.

Adding 'assignVariable' method to ValidationResult. The method will use ' ReplacementUtils.getVariableAssignmentString' to 'addReplacement' and return this.

And the code will look as the following-
new ValidationResult(EngineMessage.ACTION_TYPE_FAILED_HOST_NETWORK_QOS_NOT_SUPPORTED).assignVariable(Collections.singletonList(network));
|What is the difference between- 
'getListVariableAssignmentString' and 'getVariableAssignmentStringWithMultipleValues'?
|why the LinqUtils.concat is needed?

new ValidationResult(EngineMessage.NETWORK_CANNOT_DETACH_NETWORK_USED_BY_VMS).addReplacment( ReplacementUtils.replaceWith(VAR_NETWORK_NAMES, sortedRemovedNetsworks)).                  assignVariable(vmNames);
|The message is- NETWORK_INTERFACE_ALREADY_IN_BOND=Network Interface already belongs to the bond.

You should add and use a new message that contains replacement for the bond's name.
|Line 787
|You're right.
|Seems this is not needed.
|Please refer to the comment on line 182.
|Please refer to the comment on line 182.
|Seems that just 'HostSetupNetworksValidator' is using this method and it can use 'getListVariableAssignmentString' instead. Please remove this method.
|I don't understand, why do you need this method?
Why not using- replaceWith(propertyName, items)?

i think this method is confusing and I don't see it extra value.

Also, I already gave you +2 on this patch. Next time, please don't modify already reviewed patch, especially if it has +2.
The only modifications that should be done are rebase conflicts and comments fixes.
|Same, confusing method with confusing name. Don't see its extra value.
|Please update to https://bugzilla.redhat.com/1136329
|Please open a bug (marked with keyword- 'CodeChange') and add it to the comment (otherwise it cannot be backported to 3.6).
|Doesn't seem it was done (looking at patchset 7)...
|The 'networkExists' still doesn't report the problematic network name in its message. So the problem still exist. Why did you remove the TODO?
|tws
|tws
|I don't fully understand your question. And I see you didn't fix my comment. It is not that important, so you can choose if you want to fix it or not.
|Why is this needed? It will return on 'emptyParameters'
|same
|same
|same
|same
|same
|tws
|Please add bug-url, otherwise it cannot be backported to 3.6.
|Please add a bug, otherwise it cannot be backported to 3.6.
|yes, why not?
Also, I'm not sure why the original code didn't have check if duplicates are allowed, but sounds reasonable to have it here.
|After the change, you can remove this method from VmInterfaceManager.
|Please use - 'dbFacade' that is already injected in this file.
|notSyncImage should be part of the status column.
|Duplicate method. you can use- getExistingNetworkAttachmentByNetworkId(..)
|IIUC, the reportedConfigurations are relevant just if the networks is out-of-sync.
Why passing reported configuration of a sync network? The network may be even moved to another nic, so the its original reported configuration doesn't relevant anymore.
|What if you attached a new network to a nic? It won't have reportedConfiguration, but it is attached.
|reportedConfigurations can be null for managed network- see comment on line 228.
|The test will be translated. So the replacement will work just for the English version. Templates should be used instead.
|same
|The line should be added just in case there is are values in the description section.
|The line should be added just in case there is are values in the usages section.
|Just for MTU. Replace all the other usages to use the new method.
|Why the previous method is still needed? (line 22)
|maybe- expectedIpConfigurationDefinition
|1. done.
2. Problematic because di.
|1. You have the 'ifaceQos' on the 'iface'. Why do you also pass it as a separate parameter?
2. I would have a constructor with-
NetworkAttachment networkAttachment,
        VdsNetworkInterface vdsNetworkInterface,
        Network network
And do all the other calculation here.
|Done
|Not your code, but still.
Isn't it more readable and less bug prone- to go over all the reported configurations and find out whether one of them is out of sync?
|Done
|It is relevant just if both- defined and actual boot protocols are STATIC.
|Done
|Why null? Why don't you pass the ipConfiguration of the attachment?
|why null?
|I think you forgot to push the changes. You've mark it as &quot;Done- changed to null&quot;. But it is still not null.
|Please remove the todo. Instead add the comment- //custom properties are not set here, it's done below.
|?
|Why not null?
|Yes, seems that null is ok since the 'custom properties' will be restored in line 218.
|The comment is relevant also to line 209
|I think that setting custom properties on a newly created bond won't work. The old setup networks assumes that all the nics have a name, but there is no guarantee for ids. Please change the 'CustomPropertiesFor' to work with names instead of ids.
|Why not null?
|Please also check the network actually exist (attached) in the target cluster (Otherwise the customProperties are dropped anyway).
|You are right. There are cases the custom properties will survive moving to another cluster.
1. If the target cluster is in the same dataCenter as the source cluster (and the network is attached to the target cluster), the networkAttachments will survive (so the custom properties will also survive).
2. If the target cluster is in different dc then the source cluster, the custom properties won't survive.

So please validate the customProperties only if- &quot;the target cluster is in the same dataCenter as the source cluster and the network is attached to the target cluster&quot;.

Didn't understand what do you mean by saying (patch set 5)- moving to another host won't persist the custom properties?
What are you moving to another host? What do you mean by saying moving to another host?
|Currently, just the first problematic network will be displayed.
Didn't understand why do you think the substitution won't work?
Please remove the TODO, and lets continue the discussion over gerrit.
|Please implement the TODO
|1. format
2. See the comment on line 911
|Since there is an open bug to substitute all the internal calls to the old setupNetworks with the new one.
After rethinking it, I think the easiest way is currently, to leave the code of this class as it was on patchset5. There will be a bug (the internal calls to the old setup networks will remove the custom properties), but once all the internal calls will be substituted, the bug will be fixed.
|see the comment on line 191.
|You can remove the &quot;, null&quot;. It will work the same.
|The second part of the if seems to me as a bug.
You should have the ability to remove custom properties from an attachment.
|I think this 'if' can be removed.
Correct me if I'm wrong, but IIUC, once a host is moved to another nic, its custom properties are lost anyway.
So there is no need for this validation anymore.
|I didn't see a code in the SetupNetworksCommand that ignores the custom properties in case it is invoked internally
So it seems that once this command will be invoked, it will remove the custom properties from all the nics.
|Are you sure you want to remove here the custom properties from all the nics?
The setup networks command should have code that ignores the custom properties in case it is invoked internally.
|Same, you are removing the custom properties from all the nics. SetupNetworkCommand should ignore custom properties if it is invoke internally (or fix the code here...).
|Why is it needed?
The custom properties are part of the attachments. The is no need to pass them separately in the new api. It is need just for the old api.
The api should ignore the CustomProperiesFor in case it is null (overload the UserConfiguredNetworkData constructor without the CustomProperties field, and pass null by default).
|Where is the code for ignorew custom properties in case the command is invoked internally?
|In old hosts bond0-bond5 are pre-configured. It means that even if on the engine side one of those bonds is removed, it will still be reported by the vdsm (just with no slaves).

Before the removed bond are added here, the labels are cleared from them.
So passing the removed bonds with cleared labels here, will eventually cause clearing from the db the labels of the &quot;removed&quot; pre-defined bonds.
|can be removed
|can be removed
|I think that setting custom properties on a newly created bond won't work.
The old setup networks assumes that all the nics have a name, but there is no guarantee for ids.
Please change the CustomPropertiesFor to work with names instead of ids.
|the name of the boolean is wrong. Should be- isVmOrEmptyNetwork
|Please use 'getExistingIfaces()' instead of 'existingIfaces'
|Please remove
|What if the 'newCustomProperties' is null and the 'existingCustomProperties' is empty (or the opposite)- it should return the 'cutstomProperties' weren't changed.
|format
|Why not creating an empty list in case of null? (like done for the other fields in the class)
|Please overload the ctor, to have a version that doesn't require to pass customProperties.

The new api should use the ctor with no customProperties.
|Should be ignored in case 'customPropertiesForNics' is null.
(It should be null when invoked from the new HostSetupNetworksCommand).
|The nics in the userConfiguredData are used only to update the labels.
We can pass a list of nicNameToLabel instead.

Pleae open a bug with codeChange keyword for that, please remove the TODO.
|No, these are another custom properties, they should be applied on the vnic.

Please remove the TODO.
|same
|Please update the script number.
|You fix should have also the following bug- https://bugzilla.redhat.com/1212461

I you can, please verify it actually fixed it and add the link to the bug here.

Thanks!!!
|Done
|Since you won't use this fields in all the case, it makes sense to lazy initialize them.
So I guess you mean I should add those fields and also and private getter method for their lazy initialization.

Doing makes this class very long. I prefer to leave it as is.
|I don't really understand what do you want me to do?
Initialize the suggested parameter in the constructor is not possible since in this stage there is not hostId, source and target clusterId.
So where do you think those new suggested parameters should be initialized?
|Done
|Refer to my reply in line 503.
|It means I will also have to move 'createIpConfigurationFromVdsNetworkInterface(..(' to 'NetworkAttachment', since NetworkAttachment doesn't have access to 'NetworkUtils'.

I don't like the idea of having this static method in NetworkAttachment.
|Done
|It is used here, line 268.
|Refer to the response in line 500.
|Refer to the response in line 500.
|Refer to the response in line 500.
|All those change were done in the following patch- https://gerrit.ovirt.org/#/c/47270/4
|Yes, in this case the HostSetupNetworks command will fail.
|Done the following-
isNetworkAssignedToCluster-&gt;isNetworkAssignedToTargetCluster
isAttachmentShouldBeRemoved-&gt;!isNetworkLabelExistInTargetHost
|Done
|Line 168- it is a role network, role network must have an ip.
I just preserved the old behavior that was introduced by you:)
https://gerrit.ovirt.org/#/c/25551/
|see my reply in ManageLabeledNetworksParametersBuilderFactory.
|I agree we can remove this factory. I think it complicates the code for no reason.
But it is beyond the scope of this patch. And there is no reason to backport this patch to 3.6.

So you are welcome to do this change on master, I'm ok with it:)
|see the reply in ManageLabeledNetworksParametersBuilderFactory.
|Done
|Fixed here. If there are other places you think should be fixed, please add a comment in the relevant place.
|What iteration? this call is not inside a loop...
|Done
|Done
|Done
|Please see comment in line #171. The class does have state. I leave the method static.
|But this method updates- 'hostIdToNics' which is one of the class' fields, so it cannot be static and cannot be moved to another class.
|I agree, but again it is not in the scope of this patch.
|was done in a future patch-
https://gerrit.ovirt.org/#/c/47509/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/HostSetupNetworksParametersBuilder.java
|Done
|Do you mean-  where do we make sure, that network INTERFACE is labeled? The nics that are passed to this class are just labeled nics. Changed the name of the parameter 'nics' to 'labeledNics'.
|Yes, that situation cannot exist.
But I modified the code to avoid redundant invocation of the else.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|it works...
|This patch is urgent for 3.6.0. Lets focus in comments that are relevant to this patch.
This method wasn't introduced here.
|+1
|You're right.
It seems that 'SetupNetworksHelper.customPropertiesChanged(..)' will have the same issue.
Please try to reproduce (and fix it as well) it by changing the custom properties on a non-vlan network on a new bond.
|I know I gave you +2 and merged but now I regret it...
'baseNic' on line 114 is returned from the db. How can you and interface in the db with null id? The id field is marked as NOT NULL.
|Instead of this change you can simply configure the closeCommand as 'isCancel'-
protected void initCommands(Model m) {
        UICommand closeCommand= UICommand.createDefaultOkUiCommand(CLOSE, this);
        closeCommand.setIsCancel(true);
        m.getCommands().add(closeCommand);
    }
|https://bugzilla.redhat.com/1241055 is enough.
|Please refer to https://gerrit.ovirt.org/#/c/46517/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/NetworkParametersBuilder.java line #118.
|Please refer to https://gerrit.ovirt.org/#/c/46517/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/NetworkParametersBuilder.java line #118.
|This implementation should be the general one and reside in- NetworkParametersBuilder.
|Now I see there are places that pass empty list as nics, just for it to store the newly added vlans. I'm so happy I got rid of this code in 3.6:)
But still, you fixed just the flow of AddLabelNic, the same issue is relevant to all the other flows that reach createVlanDevice(..), so please instead of passing null values as the existing nics, please pass param.getInterfaces (or even change the parameter to params and extract the interface here) in all the other usages.
|What for do you need the &quot;existingInterfaces&quot;? You cab use &quot;nics&quot;.
The change is valid for all the flows that are calling 'createVlanDevice' (A more suitable name would be now 'getVlanDevice()').
|The following code can be valid here as well-
protected boolean shouldAddVlanToNic(VdsNetworkInterface vlan) {
        return vlan.getId()==null;
}
|You say in the comment that the bug was introduced in patch- 779d378e2b51510b54950e8f1f384382bfc956a5.

&quot;In former code (prior to mentioned erroneous patch) was null valued mac used to gather nics from db, which indeed return no nics, thus no match was found and false returned.&quot;

But looking at the state prior to the &quot;problematic&quot; patch it seems that in case the return list from db is empty 'canPlugInterface(..)' returned 'true' in case of a 'null' 'macAddress'.
Your patch return 'false' in this case. So, it seems your patch is not reverting to the state prior the &quot;problematic&quot; patch.

Can you please explain exactly (step by step) how your patch is fixing the &quot;import template bug&quot; and specify the patch where this bug was introduced (since it seems not to be the one specified in the comment).
|Please refer to the comment in HostSetupNetworkModel. Seems that after issuing them, you won't need to use 'getAttachmentToConfigure' via the ui. So the method can be removed from this common file and return to the validator.
|By 'hasNetworkAttached', do you mean hasVmNetworkAttached?
|Why did you remove the code for setting &quot;mode 4&quot; as the default mode?
|As I understand, all you need to know is whether the bond has vm network attached to it. You don't need to calculate the attachments for it.

All you need to do is-

NetworkInterfaceModel nicModel = (NetworkInterfaceModel) item);
boolean bondHasVmNetworkAttached = false;

for (LogicalNetworkModel logicalNetwork : nicModel.getItems()) {

if (logicalNetwork.getNetwork().isVmNetwork()) {
 boolean bondHasVmNetworkAttached = true;
 break;
}
|Same, all you need to know is whether a vmNetwork will be attached to the bond.

You can achieve it doing the following-

Look at lines 631-635, it calculates the networks the will be attached to the bond.
You can move the calculation to here and check whether one of the networks in the result list is vm network.
|Refer to comment in line 602.
|Please refer to the comments in HostSetupNetworksModel- all these new parameters can be avoided.
|Lines 40-42 can be removed.
Please see the comments in HostSetupNetworkModel, it is easy to calculate there whether the bond has vm network attached. So there is no need to do this complicated calculation here.
|As I understand the bug, the list should be dependent on whether the attached network is vm network or not (not just whether it is attached).
|According to the bug, the ui bond mode field should now contain also modes 0, 3, and 6.
Also, there should be separate fields for mode and for options.

Is there a separate patch for those changes? Couldn't find one.
|Why did you change the modifier? If you want to change the list of bondingOptions, isn't is enough to do- 'getBondingOptions().setItems(newBondingOptions)'?
|You should also modify- SetupNetworksAddBondModel and SetupNetworksJoinBondsModel.
1. SetupNetworksAddBondModel is used in case of BOND_WITH (bonding two nics)- if one of the nics contain VM network the bonding options list shouldn't contain modes 0, 5 and 6.

2. SetupNetworksJoinBondsModel is used in case of JOIN_BONDS (joining two bonds to one bond). If one of the bonds contains VM network attached to it, the bond options list shouldn't contain modes 0, 5 and 6.
The selected bond mode is the one that is currently selected in the target bond (the one that the other bond was dragged on to), you should treat the case the selected mode is not in the list (something similar to how SetupNetworksEditBondModel treats it).
|Why do you pass 'hostSetupNetworksModel'? Where are you using it?

Instead, you should pass all the network that are attached to the bond- 'NetworkInterfaceModel.getItems()'.
|What about the vlan networks?
|You should pass whether the bond has any VM network attached (not whether is has network attached).
|Why do you set a new empty list, I think it should be enough to only set the new items.
|space after if
|Please use a common method with the backend to detect whether the bondMode is valid for vm network.
|You should also block creating/extending bond that has vm networks attached and problematic mode.

The following NetworkOperations (ADD_TO_BOND, EXTEND_BOND_WITH) should be blocked in case the bond has mode that is not valid for vm networks and the nic that is added to the bond (or the bond is being added to) contains vm networks.
|You are right.
|Cannot add VM network (not any network).
|What if the specified custom bond mode has more than one digit? You should read the whole number till the next space after the &quot;mode=&quot;.
|What if a custom bond mode is used (like 7 or 17, I know currently there is no such modes but maybe there will be in the future).

Since this method is used just for check 'isBondModeValidForVmNetwork()', maybe you can introduce a new method  'isBondModeValidForVmNetwork(String bondOptions)' and return the result of 'BondMode.isBondModeValidForVmNetwork()' in case of known mode, and false otherwise.
|It is still public. Why?
|Please check if the are any usages of this method outside this class. If not, please make it private.
|As I commented in the patch set 2, new modes can be introduced.

I think that if the mode in the 'bondOptions' is not know by this enum (BondMode), return a null (why returning 'BOND0'?)
|same
|Please add to the code a comment to explain why you're not using regx.
|I think that the kernel doesn't except spaces between the &quot;=&quot; and the key and value. Please verify it with Danken, and if it really doesn't please drop this code.
|same.
|If you will follow my comment in line #53, please treat the option 'BondMode.getBondMode(..)' returns null value.
|1. line 193- 200 should be part of the calling method- 'validateBondModeVsNetworksAttachedToIt(..)'.

This method should get the correct bond.

2. s/bondTocheck/bondToCheck
|Please add empty line after closing an if.
|why not- bondToCheck.getName() (I know it is the same, but lets be consistent with line 211).
|1. Since the ui should have the same logic, instead of duplicating the values here, I would add to NetworkCommonUtil a method- isBondModeValidForNetwork(..).
2. s/BOND_MODES_VALID_FOR_NETWORK/BOND_MODES_VALID_FOR_VM_NETWORK
|Please refer to my comment in line 444.
I think it will be easier to have a single place that verifies the bond mode vs the networks attached to it.

I mean adding to validate a new line (just before the return)-
vr = skipValidation(vr) ? vr : validateBondModeVsNetworksAttachedToIt(attachmentsToConfigure);
|There are several problems here- 
1. You are checking only the single non-vlan that can be attached to the bond.
The bond can also have multiple vlan networks attached to it, they also need to be checked.
2. 'modifiedOrNewBond' is taken from the HostSetupNeworksParameters.newOrModifiedBonds. The bond sent on the parameters is not fully filled by the client (the only relevant fields are bondName, id, bondingMode and slaves). I know it is confusing! We have a TODO to have in the parameters only the relevant fields and not the full bond entity. But the bottom line regarding to your code is that you cannot rely on the value return by- 'modifiedOrNewBond.getNetworkName()'.

My suggestion- take a look at 'NetworkAttachmentsValidator.validateNetworkExclusiveOnNics()'  it validates that all the networks that should be attached to the same nic (the final state after performong the HostsetupNetworkCommand) can co-exists.

You should do something similar- go over 'attachmentsToConfigure' which contains all the network attachments that will exist on the host after performing the hostSetupNetworkCommand.
If the attachment is related to vm network and should be attached to a bond that has '0, 5 or 6' mode, you should return an error.
Please notice that you should check the most update instance of the bond- if the bond exist in the hostSetupNetworkParameters.netOrModifiedBond, so this instance should be use (it is store in bondsMap). Otherwise the existing instance of the bond should be used (can be taken from- existingInterfacesMap).
|As I wrote in the previous comment- 'modifiedOrNewBond.getNetworkName()' shouldn't be used.
|shouldn't you fail only in case the network is a vm network?
|Please refer to the comment in line 434.
|If you'll follow my suggestion in line 444, this method can be removed.
|NewOrModifiedAttachment
|Should fail only in case of 'vm' network.
|NewOrModifiedAttachment
|Should fail only for vm network.
|s/isBondModeValid/isBondModeValidForVmNetwork
|I think the following two messages are enough for the user to understand what is wrong.

1. Network ${networkName} is attached to bond ${bondName}. VM networks cannot be attached to bonds in mode 0, 5 or 6.
2. Network ${networkName} is attached (via label ${label}) to bond ${bondName}. VM networks cannot be attached to bonds in mode 0, 5 or 6.
|My patches- https://gerrit.ovirt.org/#/c/47510 change updateNetworkCommand to use the new HostSetupNetworksCommand internally.

Please verify the scenario in this comment works, using my patches.
|There is a bug in the following scenario-
1. Create bond- mode 5 with NON-VM network attached.
2. Change the network to be VM network.
3. Open setup-networks dialog- you have a VM network attached the a bond with mode 5.

The desired behavior is- the setupNetworks command that is invoked by the UpdateNetworkCommand (step 2) should fail, and the network should become out-of-sync.
|Following the previous comment and the comment on line 646-
I suggest what I suggested on patchset2
|Following the previous comment and the comment on line 646, I suggest what I suggest in patch set 2 (lines- 434 and 444)-

Having one common method validating the bond mode.

Instead of splitting the validation between-
validNewOrModifiedBonds and
validNewOrModifiedNetworkAttachments

I think it will be easier to have a single place that verifies the bond mode vs the networks attached to it.

I mean adding to the method 'validate()' a new line (just before the return)-
vr = skipValidation(vr) ? vr : validateBondModeVsNetworksAttachedToIt(attachmentsToConfigure);

In 'validateBondModeVsNetworksAttachedToIt' you should go over 'attachmentsToConfigure' which contains all the network attachments that will exist on the host after performing the HostSetupNetworkCommand. If the attachment is related to vm network and should be attached to a bond that has '0, 5 or 6' mode, you should return an error. Please notice that you should check the most updated instance of the bond- if the bond exists in the hostSetupNetworkParameters.netOrModifiedBond, so this instance should be used (it is stored in bondsMap). Otherwise the existing instance of the bond should be used (can be taken from- existingInterfacesMap).

Also, in case the attachment is related to a nic that is 'out-of-sync' (in case of vlan network, the vlan device should be checked, not the base nic), it should be ignored (no need to check it against the bond mode).
To find out the whether the attachment is attached to an 'out-of-sync' nic, take a look at 'HostSetupNetworks.checkForOutOfSyncNetworks()' lines- 280-285 (maybe you can extract the code to a common class).
|It is enough to check only the nicName since it is being completed by the completer.
|You can use 'getNetworkByNetworkId', there is no chance there is networkName but no Id, the completer completes it.
|What if the attachment is attached to a new bond (it means- it is not in the existingInterfacesMap) or attached to an existing bond, but the bond mode was also changed on the current setup networks.

Example of a scenario with a bug-
1. Create bond with mode 5.
2. Click ok on the setup networks dialog.
3. Re-open the setup networks dialog.
4. Attach vm network the the bond.
5. Change the bonds mode to 1.
6. Click ok on the setup networks dialog.

Result- You receive a can do- says the bond mode is problematic.
Excepted result- The command should succeed (bond mode 1 is ok for vm network).
|It seems that 'checkBondModeForNewOrModifiedBond' has the correct functionality and should be used in both of the case (its name should be 'checkBondMode(..)'). Just in the case of 'modifiedOrNewBond == null' you should add method for getting the 'existingBond'.
|What if the network is attached via label, should you have a separate error message.
Please see my suggestion in line 184.
|You have 'bondsMap' that already maps parameter bonds by name and id, so please use it and remove this method.
|format
|Please also add tests for &quot;out-of-sync&quot; bond (the bond have problematic mode and vm network attached- should succeed) and &quot;out-of-sync&quot; bond that is marked to be synced (same- just the bond is marked to be synced- should fail).
|I think you lost the '!'.
Please fix in master as well (in master it should be in new patch since it is already merged).
|Please refer to the comment in line 151, patch set 3.
|Please give more informative name. For example- GetVfToPfMapByHostIdQuery.
|Please add to the return value comment- the key is- VF's VdsNetworkInterface id and the value is PF's VdsNetworkInterface id.
|?
|I know I wrote the code:) By looking at it again, in this method we have the deviceList. So we can find the device by hostId and device name in this list without any interaction with the db.

Also, doing this change may reduce the need of DaoHostDeviceFinder, CacheHostDeviceFinder.
|queryLabels invokes a chain of queries that the final one initiates the class models.
You should add your query to the chain (it can be the last one). Your query cannot be parallel to the chain since there is chance the chain will be finished before your query comes back. It will cause NPE in the models initialization since it assumes vfMap is not null.
|Looks identical to 899-906, please extract to a method.
|there is no need for this.
|In 'initNicModels()' you assume 'vfMap' is not null.
Just to be safe (although the backend shouldn't return null list) I would add here a condition the initialize 'vfMap' with empty map in case it is null.

Please verify setupNetworks works properly using a host with no VFs.
|'queryNetworkAttachments()' is already part of the main chain (after 'queryInterfaces()').
Please add 'queryVfMap()' to the main chain (comment in line- 729).
|See line 151- IMO this data member can be removed.
|I think the 'vf' data meber is redundant. The 'isVf()' method can return- physicalFunction != null
|After reading the bug, I think the problem is that Michael managed to create a bond with more than 15 characters via the ui, it should be blocked (and it seems to be blocked, I added needinfo on the bug).

I believe the logic for allowing to change illegal bond name is overkill and not needed.

IMO, this patch should be abondened. But lets wait for Michael reply on the bug to get more details.
|The view should display the model data, it shouldn't have logic for showing data that doesn't represent the model values.
The root cause of the problem resides in- ClusterNetworkModel.

public ClusterNetworkModel(Network network)-&gt;if (network.getCluster() == null)-&gt; getEntity().setCluster(new NetworkCluster(/*isRequired*/!network.isExternal()));

It means that in case of detached network the required value is true by default (in case of internal network), it should be changed to be false (no matter if the network is internal or external).
|I didn't introduce this method, just using it.
Do you want me to fix it in another patch? I don't want to backport it to 3.6.
|Done
|I think that EntityChangedEvent is more suitable here.
EntityChangedEvent is a private case of PropertychangeEvent, when the changed property is 'Entity'.
|Here it is actually the editor, the previous name- 'customEditor' was good.
|You can have a single place that holds the custom key-word and is share among all the usages. But ApplicationConsts is use for localization, since &quot;custom&quot; is a key value that shouldn't be localized, it is not the correct place to store this constant.

Please remove the TODO.
|I would call it- customBondMode, here we are in the model, so it represents a value and not an editor.
|see my answer in AsyncDataProvider.
You can store the &quot;custom&quot; string as public static final in this (HostBondInterfaceModel) file.
|Are you sure the is no way getBondingOptions().getSelectedItem() will return null?
|Since now you connect a model value the the view editor you should set the value a visibility of the editor via the model.

I mean the logic in-
updateBondOptions(..) and
edit(..)-&gt;
 customEditor.asValueBox().addValueChangeHandler(new ValueChangeHandler&lt;String&gt;() {
            @Override
            public void onValueChange(ValueChangeEvent&lt;String&gt; event) {
                for (Map.Entry&lt;String, EntityModel&lt;String&gt;&gt; pair : object.getBondingOptions().getItems()) {
                    if (&quot;custom&quot;.equals(pair.getKey())) { //$NON-NLS-1$
                        pair.getValue().setEntity(event.getValue());
                    }
                }
            }
        });

should be moved to the model.
|Done
|Consider have &quot;isEmptyAllowed&quot; parameter to the class, so it will be possible to control whether empty field is allowed or not.
|Why don't you set the message here?
|Why don't you set the message in the ctor?
It will safe you the need of overriding the 'validate'.
|Why do you need this method? You have 'public String getMessage()'.
|This field should be in the format of: &lt;{0}&gt;
|The message you are using &quot;the value for parameter &lt;{0}&gt; should be in the format of: &lt;{1}&gt;&quot;-
It is used for validating a singe parameter within custom properties parameters.

Maybe use- This field should be in the format of: &lt;{1}&gt;.
|instead 34-35 please call- this(emptyStringAllowed);
|Shouldn't you have a different message in case of empty string? (Seems 'IpAddressValidation' have an example of how to implement it).
|I'm not sure- why do you need this method?
|same?
|I know, but it should working.
Same as -

    @DefaultMessage(&quot;the value for parameter &lt;{0}&gt; should be in the format of: &lt;{1}&gt;&quot;)
    String customPropertyValueShouldBeInFormatReason(String parameter, String format);

is working.
|why not &lt;&gt;?
|Please see- https://gerrit.ovirt.org/#/c/45366/5/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/validation/KeyValueFormatValidation.java line #24.

Maybe you won't need this string at all.
|https://gerrit.ovirt.org/#/c/45367/4/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/HostBondInterfaceModel.java line #9 (maybe you won't need the 'NotEmptyValidation')- not that important.
|s/engine/webadmin
|Since the original 'vmIfaceManager.existsPluggedInterfaceWithSameMac(..)' was retrieved to 'vmIfaceManager', now you have duplicate code.
Consider changing the code to the original one, prior '2f471d83d145d7bc6674c6039bf7f8d1ba9ed137'.

private static boolean canPlugInterface(VmNic iface) {
        VmInterfaceManager vmIfaceManager = new VmInterfaceManager();
        if (vmIfaceManager.existsPluggedInterfaceWithSameMac(iface)) {
            vmIfaceManager.auditLogMacInUseUnplug(iface);
            return false;
        } else {
            return true;
        }
    }
|As a reply to your TODO in line #126-
Seems that your code (&quot;moveMacsFromOldMacPoolToNewOne();&quot;) should be moved to line 92. And should be in the same transaction with &quot;getStoragePoolDao().updatePartial(getStoragePool());&quot;.

Line 91 includes the update of the dc mac pool.
So in case of a failure (crashing of the engine for example) after the mac pool update and before moving the macs to the new pool, the dc will be in inconsistent state and needs to be reverted.
|This command is marked as '@NonTransactiveCommandAttribute' so the execute doesn't run in one transaction.
But now, afte discussing it with you over iirc, I understand 'sourcePool.freeMac(mac);' and 'targetPool.forceAddMac(mac);' don't update the db, they update only the in-memory instances of the pools. So there is no need for transaction.

Anyway, I don't see how moving the code to line 92 creates more danger. But since the transaction is not needed, the movement is not necessary as well.

Regarding your TODO, I guess I didn't understand it.
After discussing it with you, I understand this TODO is not relevant anymore and is a leftover of a code that was removed.
So please- remove it.
|What if the released mac is used by another dc using the same mac pool?
|Why not using &quot;getNewMacPoolId()&quot; in getPermissionCheckSubjects as well (please notice there is also a null check- 'getParameters().getStoragePool() == null', please add it here as well).
|'() -&gt;' won't work when backporting to 3.6
|You can createSetVariableString instead of replaceWith, but as you wish...
|same
|same
|same
|Seems the return statement doc is not describing the correct method.
|Why did you changed it to IPv4AddressConverter instead of IPAddressConverter?
|can be parse into {@link String} empty {@link java.lang.String} ?
|Why did you changed it to IPv4AddressConverter instead of IPAddressConverter?
|s/foramt/format
|This method is used only internally. I would make it private and remove it from the interface.
If you will decide to keep it, please rename it to 'convertPrefixToMask(..)'.
|Should it be called- 'convertPrefixToMask(..)'?
|Please add empty line.
|The following patch modifies only backend class. Why is the change of 'Common.gwt.xml' needed as part of this patch?
|The changes in this patch are not actually need to fix the bug mentioned in the patch.
Please remove the bug from the comment and merge this patch only to master. There is no need to backport it to 3.6.
|Please add empty line.
|As far as I remember, when-&gt;thenReturn shouldn't be used for spied object.
|What if subnetA is null?
Please use 'Objects.equals(..)' instead.
|Once the comments in https://gerrit.ovirt.org/#/c/47471/9/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/businessentities/network/ReportedConfigurations.java will be issued, you won't need this method.

Any way, instead if lines- 37-41, you can use 'Objects.equals(..)'.
|Please add empty line
|Please add empty line
|Please add empty line
|Please add empty line
|Why do you need 'networkSubnet' as a parameter? You can use - 'getPrimaryAddress().getNetmask()'
|IMO, this class shouldn't be familiar with specific 'ReportedConfigurationType's. It is the responsibility of NetworkInSyncWithVdsNetworkInterface.

I think you should remove the 'ReportedConfigurationType.NETMASK' example from this comment. And add a comment to ' public &lt;T&gt; ReportedConfigurations add(ReportedConfigurationType type, T actual, T expected)' which explains that it has default implementation for calculating whether it is 'inSync'.
|This fix should be moved to NetworkInSyncWithVdsNetworkInterface. Please see how 'ReportedConfigurationType.MTU' passes its 'inSync' state. 
'ReportedConfigurationType.NETMASK' should do the same.
|This patch uses 'SubnetUtils' only in the backend code. So I'm not sure how is the update of 'Common.gwt.xml' related to the patch?
|s/psi/pci
|Why not checking whether the map is empty?
|Why this check is needed?
|Why the 'vmDevice.getIsManaged()' check is needed?
|But in case there is a proper unmanaged device that is using the same address. The user won't be able to plug its device back.
|Did verify it, but it seems that yhis patch will fix the issue for &quot;New&quot; dialog. But for edit dialog it will always display &quot;passthrough or pv, even if the actual selected type is something else.
|Instead of 'VmInterfaceType.pv', you should use- AsyncDataProvider.getInstance().getDefaultNicType(getNicType().getItems())
|It should be done in the canDoAction.
If for example you have in the parameter an attachment that is related to an out of sync nic. The can do action will fail the operation even if the attachment is identical to the existing one.
|same
|Please use- GetHostBondsByHostIdQuery instead.
|'iterator .hasNext()' why is there space?
|I would arrange the 'existingNics' by id before the outer loop. I will safe the inner loop.
|missing- 'continue;'
|Please consider changing the name to something like- 'isNewOrModifiedBond'. 'bondRelatesToAlreadyExistingNic' is confusing since a modified bond also related to already existing bond, it just contains a/some changes.
|There is also the 'bondType' property. Didn't find any usage for that. But please make sure it is indeed the case. If yes, please also (of course in another patch) remove this property from VdsNetworkInterface and column from 'vds_interface' table.
|What if one null and the other one is empty? (Not sure that use case can happen...)
|You should ignore attachments with 'override configuration' flag (maybe it is ok to remove attachments with 'override configuration' flag but in fact are in sync, but for sure it is a bug to remove the ones are actually out-of-sync and need to be synced).
|'iterator .hasNext()' why is there space?
|I would arrange the 'existingAttachments' by id before the outer loop. I will safe the inner loop.
|missing- 'continue;'
|What about 'if (this == networkAttachment) return true;'?
|The 'ipConfiguration.equals' uses 'Objects.equals' to compare arrays. I'm not sure it is good enough for this case (or any case:)). Please fix it.
|Why are you comparing the 'overrideConfiguration'? The existing attachment for sure doesn't have a value in this field.
|Why are you comparing 'reportedConfigurations'. The 'attachment' taken from the parameters for sure doesn't have value in this field.
|Please see the comment in https://gerrit.ovirt.org/#/c/45335/9/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/businessentities/network/NetworkAttachment.java line #192. There is no need to compare the 'ReportedConfigurations'. So there is no need for the methods added in this file.
|Instead of doing it, you should override 'shouldExecute()' method of 'setupNetworksAction'.
Please refer to 'getCommitNetworkChangesAction' for an example.
|Is it a new fashion?:) Please remove the space after &quot;!&quot;.
|You can do it, up to you...
|Maybe return null in case of success=false (in case the return value is actually null, return an empty list).
|consider moving lines 183-188 to a method- getExistingBonds
|The break was needed when you had two nested loops. Now that you have only one loop, it is not needed. I think it will even cause a bug since you will stop the iteration on the first 'equal' bond.
|It makes more sense for me to move this check out side of the method... (You can leave it here, just saying...)
|I'm ok with having this 'duplicate' code.
But if you wish to fix it only for master, welcome.

Please remove the TODO.
|See the comment in line- 289
|s/webadmin:/engine, webadmin:
|Besides parameters.isEmptyRequest(), I don't see the extra benefit of the other part of the return statement.

Correct me if I'm wrong, but as I see, the updated attachment, bond. label are in the parameter, but were not actually changed (the parameter value contains the current value), this method will still return 'false'.
|Please use injection- 'Injector.get(VdsDao.class);'
|I think the intention was to avoid moving host to non-operational state while the network is being configured for the first time.

But in case the network was operational (attached to the only host in the cluster), it means the network was fully configured in the cluster. Currently, moving the host to maintenance, detaching the network from the host and then activating the host-
Will cause the host to be non-operational.

But if the network will be marked as non-operational while the host is in maintenance state, activating the host will end up with a host with up state.

If you ask me, I would leave it as is.
|The removal of the static causes the patch to fail compilation.
|If you call the command from the rest-api, you can send the bonds without the 'networkName' initialized. This should work, the command ignore the value passed on 'parameters.bond.networkName'.
|You cannot rely on the value of 'networkName' in 'getParameters().getBonds()'. This property of the bond is not validated and should be ignored by the command. In the future we plan to stop using Bond as the parameter and use a class that has only the needed properties.
|The 'modifiedInterfaces' contain just the existing nics with label changes.
The list you should check is 'getNetworks()'.
|s/isManagementNetworkChanged/managementNetworkChanged
|s/isManagementNetworkChanged/managementNetworkChanged
|Please use -'getExistingNicsBusinessEntityMap()' instead of directly- 'existingNicsBusinessEntityMap'.
|Where do you check if the bond was changed?
|Please add the bug-url
|You remove SetupNetworkHelper from the patch, which is ok.
But you also change the message to SetupNetworkHelper is using in the previous patch. Now the old setup networks code change is reverted, please also revert it to use the old message text.
|This class is extremely long anyway. Please consider moving this logic to a separate class.
|'vmNames.size() == 1' is redundant.
|shouldn't you add the network names to the message?
|same.
|nicNames?
|s/networkNamesToInterfacesMap/networkNameToInterfacesMap
|Why is it needed, can't you use the keys of the previous map?
|As I understand the code, you don't even need the nics name. It is enough to pass list of the network name and list of the vm names (the two maps are passed currently as parameters complicate the code).
|A single network on a single host cannot reside on more than one nic, so this inner for is not needed.
|The is no need to create nics, the test will pass without it.
|Please use 'ParametersBuilder' to build the parameters.
|Why do you sort it?
|Again, why do you sort it?
|never used, please remove.
|IIUC, this message is for single network. So please change-
&quot;Network(s)&quot; to &quot;Network&quot;
&quot;${networkNames}&quot; to ${networkName}
and &quot;are&quot; to &quot;is&quot;
|s/Network(s)/Networks
|s/Network(s)/Networks
|Please refer to the comments in https://gerrit.ovirt.org/#/c/44719/8/backend/manager/modules/dal/src/main/resources/bundles/AppErrors.properties
|The is no way to get this errors via the user portal, so the messages can be removed from this file.
|Please refer to the comments in https://gerrit.ovirt.org/#/c/44719/8/backend/manager/modules/dal/src/main/resources/bundles/AppErrors.properties
|Shouldn't you pass the networkName as well?

Please verify the old setup networks displayes the message correctly.
|same.
|Where is this used?
|same
|same
|same
|I think it makes sense to move the sorting into the DetachNetworkUsedByVmValidator.
Here it is really unclear why the networks should be sorted before they are passed to DetachNetworkUsedByVmValidator.
|Although it seems there was a bug in the original code (I think the error message is wrong). Since we are going to remove this command in 4.0 I prefer not to waste time understanding if there was actually a bug or not- please keep the original logic. It was 'if (bond == null)', means now it should be- 'if (!bondExists)'.
|Why 'vf1' and not 'vf'?
|Do you have an idea how it is possible to get 'null' netConfigDirty? It is important to understand since currently I'm not sure if in case of null it means the data is already persisted or not.
|Not that important if you merge all the patches together. But- 
1. https://gerrit.ovirt.org/#/c/49231/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/dc/predicate/ManagementNetworkCandidatePredicate.java 
2. https://gerrit.ovirt.org/#/c/49231/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/predicate/ExternalNetworkPredicate.java
should be part of the current patch.
|As far as I understand- the VdsEventListener is singleton. Therefore, is is used by all the host. You want just the relevant host listeners to be notified in case the host changed its status to up.
|Consider have a map of hostIdToStatusListener (in the setupNetworks case, just one can run on a host on the same time, so just one listener per host is enough).
The map should be ConccurentHashMap since the it can be accessed via multiple threads.
|s/WAIT_FOR_UPSTATUS_TIMEOUT/WAIT_FOR_UP_STATUS_TIMEOUT
|Its been a long time since I had to use java.util.concurrent.  But as far as I remember BlockingQueue should be proffered over wait/notify.
(http://www.javamex.com/tutorials/synchronization_producer_consumer.shtml)
What is the reason you didn't use it?
|Please mention that it is relevant only if 'multipleGateways' feature is not supported.
|The test result should be valid- since even though the 'multipleGateways' is not supported, the network is management.
|This method is not is use any more, You should mock the one that also gets the clusterId.
|jsonrpc.Executor/7::DEBUG::2015-12-14 17:57:49,571::__init__::509::jsonrpc.JsonRpcServer::(_serveRequest) Calling 'VM.hotplugNic' in bridge with {'params': {'nic': {'macAddr': '00:1a:4a:16:01:52', 'specParams': 
{}, 'hostdev': 'pci_0000_02_10_2', 'deviceId': '926beebb-2389-42f5-b9ae-a1ab1ff56257', 'device': 'hostdev', 'type': 'interface'}, 'vmId': '5265b214-52b9-4bfe-b661-c81c19e77df8'}, 'vmID': '5265b214-52b9-4bfe-b661
-c81c19e77df8'}
jsonrpc.Executor/7::DEBUG::2015-12-14 17:57:49,584::utils::645::root::(execCmd) /usr/bin/taskset --cpu-list 0-7 /usr/libexec/vdsm/hooks/before_nic_hotplug/50_vmfex (cwd None)
jsonrpc.Executor/7::DEBUG::2015-12-14 17:57:49,703::utils::663::root::(execCmd) SUCCESS: &lt;err&gt; = ''; &lt;rc&gt; = 0
jsonrpc.Executor/7::INFO::2015-12-14 17:57:49,704::hooks::101::root::(_runHooksDir) 
jsonrpc.Executor/7::INFO::2015-12-14 17:57:49,704::vm::2011::virt.vm::(hotplugNic) vmId=`5265b214-52b9-4bfe-b661-c81c19e77df8`::Hotplug NIC xml: &lt;interface managed=&quot;no&quot; type=&quot;hostdev&quot;&gt;
        &lt;mac address=&quot;00:1a:4a:16:01:52&quot;/&gt;
        &lt;source&gt;
                &lt;address bus=&quot;2&quot; domain=&quot;0&quot; function=&quot;2&quot; slot=&quot;16&quot; type=&quot;pci&quot;/&gt;
        &lt;/source&gt;
        &lt;driver name=&quot;vfio&quot;/&gt;
&lt;/interface&gt;
|Traceback (most recent call last):
  File &quot;/usr/lib/python2.7/site-packages/yajsonrpc/__init__.py&quot;, line 527, in _serveRequest
    res = method(**params)
  File &quot;/usr/share/vdsm/rpc/Bridge.py&quot;, line 279, in _dynamicMethod
    result = fn(*methodArgs)
  File &quot;/usr/share/vdsm/API.py&quot;, line 431, in hotplugNic
    return curVm.hotplugNic(params)
  File &quot;/usr/share/vdsm/virt/vm.py&quot;, line 2015, in hotplugNic
    hostdev.detach_detachable(params[hwclass.HOSTDEV])
KeyError: 'hostdev'
|Why not- getNicType().getItems() != null?
|Why not getNicType().getItems() != null?
|Please add a null check for 'supportedVnicTypes'
|Please update the items only if it the first time, I mean- 'getItems()' is null. Otherwise, just update the selection.
|Please update the items only if it the first time, I mean- 'getItems()' is null. Otherwise, just update the selection.
|Done
|Since the 'hostdev' property was already reported by the vdsm before this patch. After adding the 'host_device' column to 'vm_device' table, already existing vms will continue report the same hash (since in the vdsm side, no change 'as done). It will cause the 'vm-device' table not to be updated with the 'hostdev' value (until an actual change will be done to the vm).
In order to solve this, I nullify all the hashes of vms with plugged, passthrough vnic/s.
|Done
|Each place that is using this method takes care of its rollback mechanism.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|The method should be called from 'HotPlugNicVDSCommand'. Do you have an idea how to do it without making the methos static?
|s/supprted/supported
|Done
|See the comment on patch set 1. &quot;Those messages are not relevant for user portal.&quot;
you marked it as done, but I still see the messages here.
|Please take a look at- NetworkAttachmentsValidator.ipConfiguredForStaticBootProtocol()
if already has this check.
|Between what two cases? 'incompleteIpConfigurationValidationResult(..)' method gets a message a network name and a nic name. That's exactly what you need. Isn't it?
|Why aren't you using 'incompleteIpConfigurationValidationResult'
|Please also add test for- there is ip 'Configuration' but there is no primary address.
|Missing '.' at the end.
|Missing '.' at the end.
|Those messages are not relevant for user portal.
|Should be part of- 'validNewOrModifiedNetworkAttachments'
|Never used, please remove.
|As I understand from the documentation the first index is 1.
I know it works this way, but it seems to me more readable to use 1,17 instead of 0,18.
|same
|HostSetupNetworksCommand doesn't have a @Valid annotation on its networkAttachments parameters, therefore this annotation won't take affect there. If I remember correctly, HostSetupNetworks doesn't have canDoActions for the validation validated by annotation in the HostNetworkQos. So, IIUC, when performing HostSetupNetworks we still have a bug (Your fix is fixing only the flows of Add/UpdateNetworkAttachmentCommand).
|s/validateNetworkAttachmentsFromRequest/validateEntitiesFromRequest
|Why did you remove the 'RemoveEntity.class' group?
|Consider moving this validation to the end of the canDoAction.
Since this validation has general messages that doesn't specify the identity of the problematic entity, I prefer to have it as the last one.

In this way, in case the HostSetupNetworkCommand has another validation that has more specific message, it will be displayed and not the general one.
|I like your solution. Added Moti to hear what he thinks about it.

My only concern is that those @valid messages are most of the times not informative enough and don't contain the name/id of the entity that caused the problem. I think that in the case of setup networks, where a lot of entities are involved it is important information, so please extend the relevant messages to contain this info.

Also, I believe there are some validations that were added to HostSetupNetworksValidation instead of the &quot;@Valid&quot; ones.
Is so, they should be removed (can be done in a separate patch, but they are redundant).
|1. Please remove the '/*&lt;T extends BusinessEntity&lt;?&gt;&gt;*/'
2. HostSetupNetworkCommand is long enough. Consider moving to a separate class.
|Done
|Done
|Should return default ('NONE') configuration.
|in case passthrough is not supported, there is no need to init this listener.
|The message is- &quot;The selected Profile is passthrough. SR-IOV passthrough is not supported for Cluster version {0}&quot;

It is used when validation vnic dialog- when a passthrough profile is selected on an unsupported version.

Here the message is not suitable. It should be some like- &quot;Passthrough property is not supported for Cluster version {0}&quot;
|Sorry for confusing you, but i think that in order to make it work you should first set the 'ChangeProhibitionReason' and then the 'IsChangeable'.
Did you manage to verify it (see the tooltip) in the current order?
|Shouldn't it be the opposite condition?
|You should return the validation you removed in patch set4.
|Since you should return the validation you removed from VnicProfileValidator, and the validation used thus message. You need to introduce a new message instead of modifying this one.
|Please shorten the comment line so it will fit the preview box.
|The bug url has nothing to do with the patch.
|1. Please use- (Boolean) AsyncDataProvider.getInstance()                     .getConfigValuePreConverted(ConfigurationValues.NetworkSriovSupported, version) instead of hard coding 3_5.
2. BTW, there is already a ui code validating a pciPassthrough vnic type is not selected in an unsupported cluster version. Once you will try to click ok, the type list box will be surrounded with a red square and a tooltip explaining it is not supported in the following cluster version. I think it is enough and there is no need to remove the pciPassthrough type from the list. I asked the reporter to remove this new requirement for removing the type from the list. Please remove it from patch as well. Lets leave it as implemented today.
|This shouldn't be done here. It should be done or in the presenter after the init or in the model. The provider is only responsible for connecting the model to the presenter.
|The view should be stupid and just present what the model says it to present. Please move this logic to the model &quot;VnicProflieModel- passthrough.setIsAvailable(false)&quot; will make the passthrough checkbox no visible).

Also, please don't hard coded v3_5. You should use-  (Boolean) AsyncDataProvider.getInstance()                    .getConfigValuePreConverted(ConfigurationValues.NetworkSriovSupported, version);
|BTW, the bug reporter asked you to make the passthrough checkbox disabled and not invisible (it is better ux practice to disable the widget and explain the user why it is disabled in the tooltip).

It should be done in VnciProfileModel ctor in the following way- 
boolean isPassthroughSupported =
                (Boolean) AsyncDataProvider.getInstance()
                        .getConfigValuePreConverted(ConfigurationValues.NetworkSriovSupported,
                                clusterCompatabilityVersion);

getPassthrough().setIsChangeable(isPassthroughSupported);
                    getPortMirroring().setEntity(false);

                    getNetworkQoS().setChangeProhibitionReason(ConstantsManager.getInstance()
                    .getMessages()
                    .passthroughProfileNotSupported(clusterCompatabilityVersion));
|+1
|Done. Thanks!
|Done
|QosBase has @NotNull also for StoragePoolId.
The qos on the networkAttachment doesn't have StoragePoolId by definition (anonymous HostNetworkQos shouldn't have name and strogePoolId by definition, you can take a look at 'NetworkAttachmentDaoImpl.verifyUnsetStoragePoolIdAndNameOnQos(..)' which verifies it).
|HostNetworkQos have two uses-
1. Added to a DC.
2. Added to a NetworkAttachment.

For 1. You still need the name @NotNull validation.
|please rename hostMaxSupportedClusterVersion to clusterCompatibilityVersion.
|shouldn't it be- (index +1) % numberOfMacsInRange ?
|The assertThat is inside the for loop. So I don't understand how its output will differ from the logs output.
The assertThat default message also displays expected and actual value. But if you what you can set via the assertThat any custom message you wish.

Currently your logs are printed also for values that passed the test. I don't see any reason doing so.
Other than that, I don't see any difference between using the logger and using the assertThat default/custom message. Is there any?
|Why do you need the logger? You can pass a message as the first parameter of 'assertThat(..)'.
|Wouldn't it work without the hashCode?
I mean -  ranges.stream().indexOf(actualRange);
|Different ranges can have the same hash code. So presented calculated index can be misleading.
|see the answer there:)
|Why do you need logger? You can add a message as the first parameter of 'assertThat(..)'.
|I prefer to backport it. I think the risk of not backporting it is higher than backporting it.
|https://bugzilla.redhat.com/1271220
|I believe it makes sense to validate the complete entities (BTW, I think that 'fillInUnsetBondingOptions()' should be part of 'completeMissingDataInParameters()').
Even if today the incomplete bond will somehow pass the entities validation.

But since we are going to remove the use of the 'Bond' entity here and pass a new class that contains only the needed properties. I believe this new class don't have entities validation at all. So it doesn't worth the time talking about it...

So you can leave 'fillInUnsetBondingOptions()' as is or move it to 'completeMissingDataInParameters()'. As you wish...
|Should also be done before the entities validation.
|Since the completions is a heavy operation, I prefer to leave it here (after the host validation). And moving the entities validation to be after the completion.
|Please add some more details about the patch to the comment.
|This command should be supported anymore in 4.0.
There is a bug for removing it.
Until than, please leave it as is (unless you don't have any other option- like compile error).
It doesn't worth the effort of changing and reviewing it.
|Same comment as- https://gerrit.ovirt.org/#/c/45567/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/AddBondCommand.java
|Same comment as- https://gerrit.ovirt.org/#/c/45567/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/AddBondCommand.java
|Isn't the purpose of this patch is to get rid of those '//TODO MM'?
|I would say ID_OR_NAME, but it is not that important.
|The purpose of this patch is to remove those comments. Please don't add new ones.
|Why HostInterfaceValidator.interfaceExists(getParameters().getNicId()) is not used here? (Can be done in another patch)
|The message is- &quot;Cannot ${action} ${type}. The host network interface (id ${nicId}) does not exist.&quot;
Therefore- &quot;nicId&quot; should be used and not &quot;interfaceId&quot;.
|Why isn't this validation part of HostInterfaceValidator? (Can be done in another patch)
|Same comment as- https://gerrit.ovirt.org/#/c/45567/2/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/AddBondCommand.java
|Please remove commented method.
|Why do you call the parameter nicId if it represents the nic name?
|I think this method should check only case 'b' and have proper method to explain the problem.

All the other case are covered by 'nicActuallyExistsOrReferencesNewBond(..)'.
|The message doesn't exist in the ui AppErrors files.
|space after //

Please format your code will the ovirt standard formatter. It will avoid this kind of comments during the review.
|Forgot the link-
http://www.ovirt.org/Building_oVirt_Engine/IDE#IntelliJ
|a. I'm using eclipse with the official engine-code-format.
If I have a comment with this format -&quot;//comment&quot; the formatter fixes it to- &quot;// comment&quot;.

Instructions of adding the oVirt formatter to IntelliJ- 
b. Never told you it is a java standard. It is oVirt format standard. That's why we have a common formatter that all the developers should use.
c. The fact that we have a lot of unformatted code in the code, doesn't mean we should add new unformatted code.

It is not that important to me, gave you +2.
|same
|please
|I don't understand what is the problem with the completions you are talking about.
The code here assumes you are after the completions.

a. In line 453 you're calling to- 'validateCoherentNicIdentification(..)' - so case 'a' is covered there.
b. If only the network name is set it means the completer didn't manage to complete the id. Therefore, the nic name is wrong and doesn't exist.
And as you mentioned in the note- seems the 'name set, id null' case is not covered, and this can cause NPE (please verify it...). So this case should also have a validation.
c. In none of this values is set- it means the user didn't set any of the values.

So in conclusion-
3 new/changed validation messages are needed-
1. network name doesn't exist
2. network id doesn't exist
3. In case of update- at least nic name or nic id should be passed. In case of add- nic name should be passed.
|The comment (and code) is not accurate. The are two separate cases for which the name can be null-
1. Name and id are null - you should provide and error that both name and id are null and in case of updating at least one of them should be provided. In case of adding, name should be provided.
2. Name is null, id is not null- you should provide an error that a nic with the provided id doesn't exist.
|I would change it to- 'networkIdAndNameIsSet(..)'. Currently the validation catches 2 cases-
1. Both id and name are null- should display a message specifying at least one of them should be set. 
2. Name is not null but not valid (not refer to an existing network).

I think this validation shouldn't catch case 2 since the message it displays doesn't fit to this case.

Case 2 should be caught by the next validation- 'networkExists()'.
|The message is- NETWORK_ATTACHMENT_NOT_EXISTS=Cannot ${action} ${type}. Given Network Attachment (id '${NETWORK_ATTACHMENT_NOT_EXISTS_ENTITY}') does not exist.

You should pass the id as replacement.
|Maybe- return validate(hostInterfaceValidator.interfaceExists(nicId)) &amp;&amp; validate(hostInterfaceValidator.nicIsNotLabeledWithSpecifiedLabel(getLabel()));
|Please refer to https://gerrit.ovirt.org/#/c/45567/3/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/HostSetupNetworksValidator.java #458
I would change the method to interfaceHasNameOrIdSet
|What if the 'networkId' is null but the 'networkName' is set (with non existing name)?
Anyway, it would be nicer to display the 'networkName' if there is one. Otherwise, display the 'networkId'.
|Please first read the comment on line 140.
I would change the message to HOST_NETWORK_INTERFACE_DOES_NOT_HAVE_NAME_OR_ID_SET and the text to imply that at least one of those two properties should be set.
|I would check- attachment.getNicName() == null &amp;&amp; attachment.getNicId() == null

The reason is we don't want to catch here the case- 'nic of such ID does not exist thus name cannot be calculated. getNicName is null and nic does not exist.' since the error message doesn't suite to this case. 'nicActuallyExistsOrReferencesNewBond(..)' will catch this case and here more suitable error message.
|It is used by-
AddBondCommand, AttachNetworkToVdsInterfaceCommand and UpdateNetworkToVdsInterfaceCommand.
Those commands should be removed in 4.0. But while they exist, you can't remove this enum, it will fail compilation.
Please remove the comment.
|You are right! Please fix in a separate patch.
I'm not sure the user will understand what is role, maybe its better to specify (Display, migration, gluster)- please consult Dan about it.
|Please add space after the &quot;*&quot;.
|Please add space after the &quot;*&quot; and after the &quot;//&quot;.
Relevant to all the comments in this method.
|Please refer to the jenkins error, there are some failed tests in this class.
|Didn't you change it to- BOND_DOES_NOT_HAVE_NEITHER_ID_NOR_NAME_SPECIFIED?
|1. s/on/one
2. Should be fixed in all the other AppErrors files as well.
|Please add a space after the '*'.
Relevant to all the comments you added to this file.
|You can see my suggestion in line 473.
The suggestion was applied, so for me, this comment is done.
|Why do you assume the user wanted to add bond and forgot to put the name. Maybe he wanted to update and forgot to put the existing name/id.
|The message is- HOST_NETWORK_INTERFACE_DOES_NOT_HAVE_NAME_SET=Cannot ${action} ${type}. The host network interface does not have name set.

Since HostSetupNetworksParameters have a list of bonds and also a list of attachments with interface id/name - 
1. The phrase 'The host network interface' doesn't fit here.
2. It will be hard for the user to understand where his error is. He also have attachments/bonds that have only nic_id and not name, and he may think the error is in one of them.
I would change the method to be more explicit (you're welcome to rephrase it to proper English:))-
Among the given bonds, there is a bond with neither nicName nor nicId.
If you wish to add a new bond, the nicName is mandatory. If you wish to update an existing bond you should pass nicName or nicId or both of them.
|You cannot rename existing bond. We don't support it.
Previously (patchset3) 'validateCoherentNicIdentification(..)' was used to make sure the bond_name and bond_id identify the same record.
This validation is still needed, please return it.

ValidationResult validateCoherentNicIdentification = validateCoherentNicIdentification(modifiedOrNewBond);
            if (!validateCoherentNicIdentification.isValid()) {
                return validateCoherentNicIdentification;
            }
|I think it would be nicer to moved this whole method to NetworkAttachmentValidator.
Cuurenlty, the 'networkExists' method that NetworkAttachmentValidator is never used. So it simply can be substituted with this code.
|Please add a space after the '*'. Relevant to all the comments you added to this file.
|What do you mean by - 'noinspection ConstantConditions' ?
|Seems this method is never used.
Please see the comment - 
https://gerrit.ovirt.org/#/c/45567/3..6/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/HostSetupNetworksValidator.java #695
|testValidModifiedBondsFailsWhenBondIsUnnamed/testValidModifiedBondsFailsWhenBondNotHaveNameAndId
|Please add prefix- 'At least on of them should be set'.
|Seems it is never used...
|The new message are not relevant to the user portal. Please remove them from this file.
|The comment in line 29 is a bit unclear (how can network attachment contain unmanaged network?). Please update it to something like- 'check if an attachment is added to a nic containing unmanaged network'.
|You can leave the code as is.

But you can also do the following
Change the message to-
REMOVED_UNMANAGED_NETWORK_IS_A_CLUSTER_NETWORK = Cannot remove unmanaged network ${REMOVED_UNMANAGED_NETWORK_IS_A_CLUSTER_NETWORK_ENTITY} from host, as it is an existing cluster network.

EngineMessage engineMessage = EngineMessage.REMOVED_UNMANAGED_NETWORK_IS_A_CLUSTER_NETWORK;
return new ValidationResult(engineMessage,                       ReplacementUtils.getVariableAssignmentString(engineMessage, removedUnmanagedNetworkName));
|Lines 99-100 are redundant, since you already verified the network is unmananged (doesn't exist in the cluster). But you can leave it as is, since this extra check is not a heavy operation and keeps this method complete.
|Missing &quot;.&quot; at the end.
|Missing &quot;.&quot; at the end.
|This check is not needed. You permit removed networks from a nic with unmanaged labels, so you should also permit removing labels.
The problem with unmanaged network is that you don't know about it properties. So doing an operation that require knowing the network properties (vlan id/ mtu, etc) should be blocked. Removing a network/label from a nic with unmanaged network is not that kind of operation.
|This check is not necessary. The network attachment check (lines 18-19) will catch this case, since the attachment will have to be part of the modified attachments list (its nic is changed).
|Same comment as on line 15.
|Currently, this validation catch only the case the slave has a managed network attached to it.
Please add a treatment for the unmanaged network case.
|s/nicWithUnmanagedNetworks/nicsWithUnmanagedNetwork
|This method is redundant, please look at the comment I added to the comment file of the patch.
|not needed- refer to following comments
|I don't see a code for this check. Although I think this code is not needed. You should block code that refers on the network properties (mtu, vlan id, etc). You don't need to check the network properties when removing a slave from a bond.
|not needed- refer to following comments
|Please add spaces - &quot; : &quot;
|The vlan network that are attached to a bond, reside of the bond's vlan device and not on the bond itself. Therefore, newOrModifiedBond.getName() may return bond1.123. You should strip the vlan to get the bond name- NetworkUtils.stripVlan(newOrModifiedBond);
|This method is redundant, please look at the comment I added to the comment file of the patch.
This is already validated in 'validateAttachements(..)' method.
|Refer to the comment in line 86.
|Why do you need both 'existingBond' and 'newOrModifiedBond' as parameters? You use both of them to get the name, which is the same on both of them.
|This method is redundant, please look at the comment I added to the comment file of the patch.
This is already validated in 'validateAttachements(..)' method.
|Refer to the comment in line 86.
|Refer to the comment in line 86.
|You are not using this method. Please use it like HostSetupNetworksValidator does (just to be consistent with the rest of the code), instead of throwing an exception.
|Please remove. Refer to the comment in line 170.
|Please add test for also for vlan networks.
|Same as 73.
|What if the unmanaged network is attached to a vlan device that its base nic is the slave.

for (VdsNetworkInterface iface : existingInterfaces) {
    if (slaveName.equals((NetworkUtils.stripVlan(iface))) {
       // Check if the iface isManaged.
    }
}
|Please remove the space after the '('.
|This case shouldn't be blocked.
|Please update the comment. The bond validations are not part of this class anymore.
|check if attachment is added to a nic containing unmanaged network.
|I think the name unmgmtNic is little bit confusing since we use 'mgmt' term when we talk about management network.
Please change to unmanagedNic. - Relevant to all the places in the file that are using this name.
|The 'validateLabels' should be called before the 'validateAttachements' otherwise it will be affective only adding the label doesn't cause networks attachment to the nic.
If a label has networks with this label it means that the attachments related to those labels will be in the attachments list. So the attachments validation will catch the error and the error message will not be very accurate (it will explain the network attachment to the nic is problematic, but the user wanted to attach a label to the nic...)
|See the comment in line 81
|Please format with the oVirt standard formatter. (Should be &quot; : &quot;)
|Instead of the if (x &#124;&#124; y) you can simply use-

before the for loop save-
baseUnmanagedNicName = NetworkUtils.stripVlan(unmgmtNic);

for ..
if (attachement.getNicName().equals(baseUnmanagedNicName))
|format ' != '
|You can fix the comment in line 68 and 81 and keep this method as is. Or you can simply save a set of base nic names-
Set&lt;String&gt; nicsWithUnmanagedNetworks = new HashSet&lt;&gt;();
...
nicsWithUnmanagedNetworks.add(NetworkUtils.stripVlan(nic));
|The validation here caused me to realize there is another validation we should add to the unmanagedNetworkValidator.

We should check if the networks in the 'removedUnmanagedNetworks' parameter are actually unmanaged networks (don't exist in the cluster)!
I think that passing in this list a name of a network that doesn't exist in the cluster and doesn't exist in the host is harmful (please verify).
But I think that if you pass a network that is attached to the host (and to the cluster, aka managed). You will end up with removing this managed network from the host. And this should be blocked.
|Why aren't you using 'createNic(..);
|Why aren't you using 'createNic(..);
|Why aren't you using 'createNic(..);
|Why aren't you using 'createNic(..);
|s/eth.100/eth0.100
|Is this method ever used?
|The is no need to add to messages to the user portal. This file can be removed from the patch.
|I think that SetupNetworksVDSCommand should also be modified to not sending customProperties key to the vdsm in case there are no custom properties. It is how the new HostSetupNetworkCommand work, so it should be consistent.
|Please refer to - https://gerrit.ovirt.org/#/c/53314/3..4/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/vdsbroker/HostNetworkAttachmentsPersister.java
you should pass null here (or use the new ctor I advised to introduce).
|Please refer to - https://gerrit.ovirt.org/#/c/53314/3..4/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/vdsbroker/HostNetworkAttachmentsPersister.java
you should pass null here (or use the new ctor I advised to introduce).
|It is not the only purpose of this instance. It also contains the customPropertiesForVdsNetworkInterface and the nic labels.
|Should be calculated only if 'syncIpConfiguration' is true.
Please moved it to the section in line 122, and do the calculation only if needed.
|I think there is a bug here -
I see that in all the places that use the new HostSetupNetworks command, you pass 'new CustomPropertiesForVdsNetworkInterface()'. It means 'customPropertiesForNics' is not null and in case the are custom_props on the attachment, they will be removed.

Proposed solutions -
1. Fixing all the places that use the new api and pass 'new CustomPropertiesForVdsNetworkInterface()' to pass null.
2(prefered). Have another ctor that pass  'customPropertiesForNics' and 'syncIpConfiguration' as null and false.
Using this ctor when the new api is used.
2. First check that 'customPropertiesForNics.hasCustomPropertiesFor()', if the result is false, not consdering it as changed custom properties. (The worst solution in my opinion).
|Cnnsider storing this value in a local variable. It is calculated twice.
|format (indentation)
|But currently, your legacy tests test just update of an existing network attachment. You should also test creation on a network attachment.
|Why did you remove that?
|Agree with Marcin. This comperison of the ids has nothing to do with vlan. It just means that the network wad moved to a new nic. Therefore, the attachment's nicName and nicId properties should be updated.
How about- nicChanged?
|I think that you introduced a bug to the new api here. When using the new api, an out of sync ip configuration will be synced even if the user didn't request it.

I agree that this code is needed when working with the old setup networks, otherwise updating ipConfig via the old setup networks will always end up with out of sync nic.

Maybe we should pass parameter &quot;forceUpdateAttachments&quot; or something like this to differentiate between when it is called via the old api and when via the new.
|Leave it as is.
|Why do you need to set the properties in this test?
As I understand, all that matters is that the network shouldn't be in the cluster.
|Why do you need to set the ip configuration in this test?
|Same method a this should be added for testing change/no changes in the ipConfig and in the customProperties.
|The 'customPropertiesForNics' is used only for the old setup networks. 'userNetworkAttachments' exist only when calling the new hostSetupNetworks.
I'm not sure how the change here related to the patch and why do you mix 'customPropertiesForNics' with 'userNetworkAttachment'.
|Same here, how is this change related to the patch?
The patch is dealing with existing networkAttachments which are not part of the userNetworkAttachments. So why do you need to add changes to this test dealing with userNetworkAttachments?
|Please add also this bug to the comment - https://bugzilla.redhat.com/show_bug.cgi?id=1308336
|I think that you should do the update only if the customPropertiesForNics.hasCustomPropertiesFor(nic) == true
|Not that important, but - :)
https://bugzilla.redhat.com/1308336
|Done
|s/duplicase/duplicate
|Done
|Done
|Done
|Done
|Please move it to the else- #917
|I'm ok with the patch as is... I don't have an idea for a suitable name:)
|Instead of adding this injected ctor here, I would add a new class that extends ImportNetworksModel and has this ctor.
So the base class will have the general ctor and the children will have the injected ones with the explicit model type.

The way it is implemented now is a bit confusing.
|I would leave it as is. Its not completely the same, there is the 'overridingConfiguration' issue.

But if you want to refactor it, I'm not against it. Just please do it in another patch.
|Its not directly related to this patch.
But here we have the same issue we had with the full Bond as a parameter.
All we need to pass as the userConfiguredNics is a map between the nic name and its labels. There is no reason to pass the whole VdsNetworkInterface.

If you can, please fix this issue too (in another patch:))
|Why do you translate a Bond to CreateOrUpdateBond. why don't you create 'CreateOrUpdateBond' in the first place.
|see #838.
|see #838.
|No, you can leave it as is.
|see #838.
|1. Why do you set in to null if in line 975 you give it a value?
2. where do you use this method?
|see #838.
|Was the original code wrong?
NetworkCommonUtils.fillBondSlaves(allNics);
        result.setBonds(hostSetupNetworksParametersData.newOrModifiedBonds);
|You can call failValidation instead of validate.
|This method is not related to networks and is used by non related to networks commands.
Please move it to the HostValidator under org.ovirt.engine.core.bll.validator.

I think you can replace org.ovirt.engine.core.bll.validator.Hostvalidator.validateStatus() with this one.
|99- 107 can be replaced by - 
final ValidationResult hostValidatorResult = new HostValidator(vds).validate(isInternalExecution());
        if (!hostValidatorResult.isValid()) {
            return validate(hostValidatorResult);
        }

But I wouldn't spend time of refactoring and verifying this command. I should be completly removed in 4.0.
I suggest removing this file from the patch...
|Please remove
|the are still two place in the code that use the old 'ACTION_TYPE_FAILED_VDS_STATUS_ILLEGAL'.
Consider replacing them to use the new message and removing the old one from the code.
|Why don't you use 'readVdsNetworkInterfaces' here?
|Please ignore, now I see it is not list as the other ones. and the next patch takes care of it.
|same
|Please ignore, now I see it is not list as the other ones. and the next patch takes care of it.
|same
|Please ignore, now I see it is not list as the other ones. and the next patch takes care of it.
|This is the only relevant one:)
|same
|I see it is done in the next patch. So, done:)
|It's ok to have it here, but as you wish, just decide:)
|Please decide and remove the comment:)
Both of the options are ok.
Another option, if it is used only for the test, the test can use - Entities.entitiesByName(nics).keySet()
and the method can be removed from here.
|What duplicity? A bond can have more than one slave. so more that one nic can have the same bond name.
|Bond with no slaves is supported by the OS, so for sure it is not a db corruption.
|Please rebase the whole class was completely modified.
|Why do you return 'cluster_view' and not cluster?
|Why didn't you update hashCode and equals?
|Please update the comment - s/StoragePool/Cluster
|Please add a java doc.
|Will 'testSave()' pass without it?
I think you should have this set here.
|You didn't respond to my comment on patchset 15 &amp; 18- Why do you need to pass the 'macPool' as a parameter to the method? Is there a use case the passed 'macPool' is not the result of the 'getMacPool()' method??
|s/poolPerDc/poolPerCluster
|Please use injection to get the macPoolDao.
|I can see that after moving the 'mac per dc' to the compatibility layer, this method still exist but never used. Please remove it.
|Please use injection to get the dao.
|Why do you need this method. Are there cases 'getMacPool()' is not sufficient?
As I see, all the use cases of this method are - 
1. calling 'getMacPool(getClusterId())' -&gt; which is equivalent to calling 'getMacPool()' directly.
2.  calling 'getMacPool(calculateClusterId)' -&gt; since I think 'calculateClusterId()' is redundant and 'getClusterId()' can be used instead, it is the same case as 1.
|Why do you need this method? The class already has 'getClusterId()' method.
|Please refer to the comment above. Why do you need to pass the 'macPool' to this method? Is there a use case the 'getMacPool()' won't return the same result as the manually passed 'macPool'?
|Why is this method needed? The parent method does exactly the same.
|never used.
|Please move to a separate patch.
|Why is this method needed? I think the parent 'getMacPool()' method will return the same result.
|Why 'calculateClusterId()' is needed here?
|Comment for me- this change was removed in https://gerrit.ovirt.org/#/c/57721
|Comment for me- this change was removed in https://gerrit.ovirt.org/#/c/57721
|Comment for me- this change was removed in https://gerrit.ovirt.org/#/c/57721
|Dealing with macs shouldn't be part of this command anymore.
Removing the dc doesn't necessary mean its clusters are removed. And in case the cluster is actually removed, the removal of the cluster will take care of returning the macs back to the pool.
|Comment for me- this class was removed in https://gerrit.ovirt.org/#/c/57721
|Looking at the latest patch in the branch. 'clusterDao' is still there and never used.
|same.
|Comment for me- this change was removed in https://gerrit.ovirt.org/#/c/57721
|Comment for me- this change was removed in https://gerrit.ovirt.org/#/c/57721
|Why is this needed? In the 'createCommand()' you init the 'macPoolDao' and the command itself doesn't use the injector to get the 'macPoolDao' (it uses @inject).
|is it ever used?
|Why is this needed?
|why is this needed?
|Why is this needed? As far as I know, the injectoRule is needed only if you're using 'Injector.get(MacPoolPerCluster.class)'.
Since in the tested command you're using '@inject', I'm not sure I understand how the change here gives something.
|Comment for myself - the changes here were reverted in https://gerrit.ovirt.org/#/c/57721
|Comment for myself - was removed in https://gerrit.ovirt.org/#/c/57721
|Please move to a separate patch.
|Please rebase, the file doesn't have '@DefaultStringValue' any more.
|Please update the UserPortal AppErrors.properties file as well.
|same
|never used (at least in the final version that includes all the patches), please remove.
|never used (at least in the final version that includes all the patches), please remove.
|You didn't respond to my comment on patchset 15- Why do you need to pass the 'macPool' as a parameter to the method? Is there a use case the passed 'macPool' is not the result of the 'getMacPool()' method??
|This field is never used. Please remove.
|Please removed the commented code.
|Please remove the commented code.
|Where do you use this method?
|Please use injection to get the dao.
|Why don't you pass the actual 'requestedMacPoolId'? Is it enough to have permissions on the default one? Shouldn't you have permissions on the requested mac pool (in case it is not the default one)?
|Please change all the usages and the message itself to &quot;CLUSTERS_USING_MAC_POOL&quot;
|Should be clusters.
|s/DC/cluster
|redundant space before the '@'
|s/data center./cluster
|s/was/were
|Yes, I think it can simplify the code. But its up to you to decide whether to do it or not.
|Why is this method needed?
|Where is it used?
|instead of 'getParameters().getCluster()', please use 'getCluster()'.
|Please use- 'getOldMacPoolId(..)'
|s/poolPerDc/poolPerCluster
|Seems that this method is used only by - ImportVmTemplateCommand
Please move it to there.
|I guess that the users who will use this feature are the ones that doesn't need the new behavior of mac pool per cluster.
So I would add - if not all the mac pools in the dc cluster's are the same, then block this option of updating all the clusters via the update dc command.
|Why do you need this method? Shouldn't you remove the macPoolId from the 'getParameters().getStoragePool()'?
|From patchset 34 - Please notice that if you add this @valid annotation to ipv4 it may introduce a bug, since the ipv4.netmask can represent netmask or prefix. Currently, the annotation netmask has, doesn't support prefix.
|Why is this needed? Isn't the mask validation enough?
|Why don't you use the @Mask annotation (same one that is used by the VdsNetworkInterface.subnet)?
|Please refer to https://gerrit.ovirt.org/#/c/51131/42..49/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/businessentities/network/IPv4Address.java #20

I'm not sure this new constant is needed.
|Is this still correct now you introduce ipv6? Cannot you send just ipV6 address?
If yes, doesn't ipV6 needs this validation as well?
|1. Do we support more than one ipV6Address? If not, please add the same 'Size' validation IPv4 has.
3. Both IPv6 and IPv4 don't have the @valid annotation.
I think it means they are not validated (although they have internal validation annotations).
Please notice that if you add this @valid annotation to ipv4 it may introduce a bug, since the ipv4.netmask can represent netmask or prefix. Currently, the annotation netmask has, doesn't support prefix.
|Please rearrange the methods in the file (getters, setters then other).
|Why doesn't it have size annotation?
|GENERAL_GATEWAY_SIZE=20, IPv6 can be up to 39 chars.
|s/netmask/prefix
|Please add new relevant tests to NetworkAttachmentDaoTest
|shouldn't 'ipv6_boot_protocol' be of 'int' type?
|Why like and not '='?
|For me it makes more sense for the id to be the primary key. But since there is no much difference between primary key and unique not null. it is not that important.
http://stackoverflow.com/questions/20404730/what-is-difference-between-unique-key-with-not-null-constraint-and-primary-key
|It is the primary key, so it is unique by default. The unique constraint is not needed.
|I'm not sure what is the difference between unique constraint and unique index and reading the documentation it seems it is not recommended to use it (http://www.postgresql.org/docs/9.0/static/indexes-unique.html). But if you meant to add a regular index, please use- fn_db_create_index.

But,
PostgreSQL automatically creates an index for each unique
constraint and primary key constraint to enforce uniqueness. Thus, it is not necessary to create an index explicitly for primary key columns.

http://www.postgresql.org/message-id/4C6BA0F6020000250003481C@gw.wicourts.gov
|I'm not sure, what is the use case for this query?
|1. Why do you need this query? When you will ever need to get all the filters in the system without any filtering?
2. QueriesCommandBase is parametrized. Please pass the parameter type to it. It should be at least VdcQueryParametersBase.
|Queries are created using reflection. Why do you inject the ctor?
|Why do you pass a parameter? It is not store/used anywhere.
|Don't you want to give the user the option to specify at least if he wants to refresh the session or not?
|Why is it package private?
|Why do you need this query? Queries are mostly used by the ui, I cannot think of any use case the ui will need this query.
|Same here - Why do you need this query? Queries are mostly used by the ui, I cannot think of any use case the ui will need this query.
|1. Please add 'appendAttributes()' method. I think the parameters are printed in case of info log level.
2. Please add serialVersionId.
|Please add serialVersionId.
|Please see the previous comment. This query is the only one that is required. All the others can be removed.
|This ctor is redundant.
You have- @Inject
    private HostNetworkQosDao hostNetworkQosDao;
Why do you also need to inject it via the ctor?
|Please use- createIdParameterMapper(id)
|Some day 4.0 won't be the latest version. Please change the test name.
|Please removed the commented code.
|same
|I think that now you don't have tabs, this is not needed.
|If the ui validation of the form is working, it can be considered as verified.
|Please remove the commented code.
|same
|same
|Please remove the commented lines.
|Done
|Done
|As I see, you can pass any decorator, Compensating or TxAware.
Please fix the comment.
|Where is this class ever used?
Isn't it enough to have ComesatingMacPool only.

In which case you want to persist the mac pool changes at the end of a transaction? All the cases I can think of, the mac pool changes should be persisted at the end of the command only.
|Please use-
select fn_db_create_constraint('vnic_profiles', 'network_filter_id_fk', 'FOREIGN KEY(network_filter_id) REFERENCES network_filter(filter_id) MATCH FULL');
|Since 'MacAntiSpoofingFilterRules' is supported for 3.6 and more. And 4.0 should supported anything under 3.6, this 'MacAntiSpoofingFilterRulesSupported' can be removed from vdc_options. Therefore, the view is redundant as well.
|same as the comment in line 24. I think this view is not needed.
|Since 'mac_anti_spoofing_filter_rules_supported' property should be removed from vdc_options, all the following code can be simplified.
As far as I remember our discussion was to use - &quot;EnableMACAntiSpoofingFilterRules&quot;;&quot;true/false&quot;;&quot;general&quot;
to find out the default filter (none of noMacSpoofing)
|Done
|Done
|s/being being/being
|s/determine/determined
|As we spoke, we decided to remove this no filter and just mark no filter with 'filterId' null value. Please update the patch accordingly.
|will be point/will point
|Please add a validation for the 'networkFilterId' to here as well.
|Please also check the empty filter case (null filter_id).
|s/being being determine/being determined
|Done
|This property is not relevant anymore and was discarded in 4.0.
|It is not related to this patch.
|Done
|Not relevant for 4.0. Should support only &gt;3.6.
|same
|Done
|Why do you use 'MATCH FULL' as I understand it is only relevant for multi column fks.

http://www.postgresql.org/message-id/Pine.BSF.4.21.0109052151380.90362-100000@megazone23.bigpanda.com

Since I'm also the one fixing my comments - done:)
|Why like and not &quot;=&quot;?

Done
|What if 'EnableMACAntiSpoofingFilterRules' is false?
|Done
|Done
|What about ipv6?
|Don't you want to modify the message as well?
|same
|The path is related to NetworkInterfaceModel, not to VdsNetworkInterface. Therefore, unless you change NetworkInterfaceModel, those fields shouldn't be changed.

But since this class is going to be removed anyway (it is used only by the ancient 3.0 api), it is not that important...
|Those fields are related to HostInterfaceModel and not to VdsNetworkInterface.
Your change here will cause things not to work since HostInterfaceModel still have the old names, it should be updated as well.
|same
|same
|Why do you add new field 'ipv4Address' instead of updating the existing one?
|same
Please move the new field creation to here.
|same
|same
|Why do you add new field instead of updating the name of the existing one?
|Please use 'entity.setIpv6Prefix(getInteger(rs, &quot;ipv6_prefix&quot;));' instead.
|Please add explicit tests to test saving and getting of ipv6 values.
Currently you make sure that setting them doesn't cause any error, but you don't make sure the correct result was set and is retrieved by the get.
|what about @Ipv6
|validation?
|what about @Ipv6
|what about the ipv6 new properties?
|what about the ipv6 new properties?
|what about the ipv6 new properties?
|Please add dao tests to test this change.
|Should 'v_ipv6_boot_protocol' be of 'int' type?
|You're not consistent. As I understand the type should be int. But in most of the places you've added it is 'VARCHAR(20)'. So please deside what is the correct type to be used and be consistent.
|shouldn't its type be int?
|Why not @Singleton?
|you should read the data from the cfg entry. Not directly from the nic properties.
|Reading the ip info from the cfg was deprecated in 3.6.
I understand that you need to keep backward compatibility for reading ip info from the cfg for 3.5. But Ipv6 is a new 4.0 feature, the ipv6 info is not even reported in the cfg. Why do you need this class?
|See https://gerrit.ovirt.org/#/c/51820/33/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/vdsbroker/CfgIpv4InfoFetcher.java #10 (if you decide not to remove the class).
|This class should be removed, but if you somehow you convince me it is needed. Can you please explain me the code of this method? Why do you care about the ipV4 boot protocol? What is IPV6INIT?
|This comment seems to be wrong and not relevant to 4.0 anymore. Please remove it.
|Why do you store the address with the prefix? You have a separate field for the prefix.
|Please move this code to the BootProtocolResolver, the BootProtocolResolver is long enough and also it will be easier to test it.
|What about the ip? If it should be read from the cfg entry, this method should take care of overriding it on the iface.
|Why do you pass the 'bootProtocolResolver' to the method? It can be injected.
|What is the purpose of this key?
|Where do you read this key?
|Maybe 'getIpv6FullAddress' or get 'getIpv6AddressWithPrefix'?

Having to methods, one called 'getIpv6Address' and the other 'extractIpv6Address' is a bit confusing.
|if 'cfgEntriesDeprecated', this code should be invoked.
|why not @Singleton?
|What about ipV6, what if the attachment has non NONE ipV6 boot-proto? Isn't it enough?
And what if the ipV6 bootproto is NONE - should it be changed to dhcp in case of a role network?
|Why do you require both IPv4 and IPv6 to be configured and contain gateway to mark the nic as default route?
Isn't one of them enough? Or maybe we should have two default_route properties, one for IPv4 and one for IPv6.  Please consult Danken.
|Why do you check the 'Gateway' in case of DHCP?
|Why do you check the 'Gateway' in case of DHCP?
|what about IPv6? Please refer to https://gerrit.ovirt.org/#/c/52380/37/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/HostSetupNetworksParametersBuilder.java #130
|What about IPv6? Maybe the host address was configured using IPv6.
|Please make sure to cover all the comment fixes in this patch by the tests.
|What if it has IPv6 config? It it enough to have just one of them?
|same check should be done for IPv6
|same check should be done for IPv6
|same check should be done for IPv6
|ipv6PrefixHSNVC? What is HSNVC?
|s/isPrimaryAddressExist/isIpv4PrimaryAddressExist
|s/getPrimaryAddress/getIpv4PrimaryAddress
|s/addReportedIpConfiguration/addReportedIpv4Configuration

Please add the same method for ipv6 (and update the tests accordingly).
|Same should be done for ipv6
|Why do you allow ipv6 address to contain &quot;/&quot;? You have the prefix field to store the prefix it shouldn't be stored on the ip field.
|s/putPrefixOrNetmaskIfNotEmpty/putIpv4PrefixOrNetmaskIfNotEmpty
|What about the ipv6?
|same
|s/ipAddress/ipv4Address
|What about the ipv6?
|Please change the names of the members in netParams to reflect they are related to ipv6.
|Are you sure this is the correct algorithm to determine whether the network should be configured as deafultRoute?
|You didn't answer to the comment from patch set 37 - What about IPv6? Maybe the host address was configured using IPv6.
|what is DIC?

Done.
|Please remove the space.

Done.
|Where do you define 'NON_CONFIGURABLE_NETWORK_FILTER'?

Done.
|what if the 'vnicProfileId' is null?

Done.
|what if 'networkFilterId' is null?

Done.
|Yes, it is what libvirt api allows.
|Why is this query needed?
|You should pass the column name, &quot;getNetworkDataCenterCompatibilityVersionByNetworkId&quot; is not the column name.
|Done
|rest+engine
|Done
|?
|The entire method was removed.
|The entire method was removed.
|?
|Done
|?

Done.
|Are there cases that 'networkFilterDao' is not needed?

Done.
|Done
|Please use &amp;&amp;

Done.
|s/InValid/Valid

Done.
|s/inValid/invalid

Done.
|s/FIlter/Filter

Done.
|Please pass the name as a parameter.

Done.
|Done
|Although the HostSetupNetworks will ignore it. Isn't it better not adding it to 'attachmentsToSync' at all in case 'attachmentToSync.isQosOverridden()'.

Not that important, giving +2...
|Copying the comment to here since it is the only relevant one (so I won't need to re-review patchset 2 again. The answer to your question on the comment is in patchset 2) -
- Should be done only if the qos is not overridden by the attachment.
|s/vds/host
|s/vds/host
|s/vds/host
|s/vds/host
|I don't know:) You can change it to be 'List' and add somebody from the infra team as a reviewer (on a different patch of-course).
|This method can be removed since in 4.0 SetupNetworks is supported for sure.
|ok
|Why don't you extend 'HostSetupNetworksParametersBuilder' like the other command that call setup networks do?

Consider even reusing 'SyncNetworkParametersBuilder' which is currenty privater class of UpdateNetworkCommand. But seems that besides the labels logic it has, all the other logic can be reused here.
|I think that yes, but it is not the reason for the comment.
We have a util, lets use it...
|Please use - StringUtils.join(Entities.objectNames(networks), &quot;, &quot;)
|You are marking here you want to sync this network. Placing the 'OverrideConfiguration' flag in the attachment wasn't the best choice and it is confusing, but it means that all the un-synced properties refer to  this network will be synced (network, dc qos/overriden qos, attachment).

In case we have a network attached to a  nic with overridden qos, it means the qos updated here has nothing to do we this network. There is no reason to sync this network.

The setup network and vdsm cannot take care of it, since they don't know the reason you marked you want to sync this network, they just apply the dc values on it.

So for example in case the qos is overridden and  out-of-sync, changing the dc level qos, shouldn't sync the network. It should stay out-of-sync.
|Should be done only if the qos is not overridden by the attachment.
|I'm not sure what is it good for to have the same predicate for ipv4 and ipv6. All the ipv4 addresses that don't equal to the baseAddressString will invoke the ipv6 check although it is not necessary.
|'NetworkUtils.getHostByIp(..)' also uses 'InetAddress.getByName(..)', should there be also this substitution?
|Done in a separate patch.
|Why don't you use the IpAddressPredicate?
Is this predicate needed in the first place? Isn't it enough to compare the string also for ipv6?
|Currently VBOB.findActiveNicName(..) duplicates the code in lines #66-#77.

The code here can be simplified to -
1. removing the code in lines #66-#77
2. Adding after line #176 (inside 'findNicToSetupManagementNetwork(..)')
  log.info(&quot;The management network '{}' is already configured on host '{}'&quot;,
                    managementNetworkName,
                    host.getName());
}

3. adding to the beginning of 'findNicToSetupManagementNetwork(..)' -
if (managementNetworkName.equals(host.getActiveNic())) {
// same log as in point 2
}

This change may also eliminate the need  of 'InterfaceByNetworkNamePredicate' and its complicated abstract tests with 'InterfaceByAddressPredicate'.
|instead #155-#157 you can use - IpConfiguration ipConfiguration = NetworkUtils.createIpConfigurationFromVdsNetworkInterface(nic);
|Please add a comment explaining why converting to numeric format is necessary.
|Why do you replace '/' with '%'? Please add a comment explaining it.
|Please refer to Piotr's comment https://gerrit.ovirt.org/#/c/53311/26/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/TransportFactory.java #22. Make sure he approves using 'sun.net.util.IPAddressUtil' before merging this patch.
|I would accept it to return false, but not that important...
|In the Ipv6AddressPredicate you have a complex logic to compare the ipV6 on the  interface to the host ip. Why do you here just using a simple string comparison?
|Even the VdsStatic.hostName should support ipv6 only on 4.0 or upper cluster versions.
|HostAddressValidation is widely used. Are you sure that all the places the use it actually support ipv6.
I suggest to add a boolean to the class that marks whether ipv6 format is valid. By default it should be false.
|Ignore the second one, it was intended to another patch.
|why do you need the ?: here?
|Even the VdsStatic.hostName should support ipv6 only on 4.0 or upper cluster versions.
|This validation is used by the @HostnameOrIp annotation.
Are you sure that all the places that are using this annotation support ipv6? (VdsStatis.consoleAddress, FenceAgent.ip)
|The is no need to add //$NON-NLS-1$ //$NON-NLS-2$ in the engine side, just ui.
|Why do you update 'jboss-deployment-structure.xml' in the previous patch and the module just here?
|Why do you need the `[]` around the ipV6 address in vdsServer and here not?
|same
|why do you need the &quot;/&quot; and &quot;:&quot; around the path. Doesn't the url takes care of it?

I think it may cause bug in 'HttpImageTaskVDSCommand.getMethod(..)'
|+1
|I'm not sure why do you need a helper method to get all the vms and then mapping the vms to their name?
Why not returning a list of vm names in the first place (it will safe you one iteration over the list).

But as you wish, it is just a suggestion.
|Can be simplified to - return findNamesOfActiveVmsUsingNetworks(vdsId, Arrays.asList(networkNames));
|Why is it needed here? Where is it used?
|Please solve it in the test class. You can override the method in the spy create for the tested class.
|ok.
|You can add getter for the injected types and override it here.
But beside reducing the visibility of the injected types in the command it is basically the same as what you've done.

You can also try to injectMocks of the command. But I'm not sure it will work, since the command injection are not standard.
Seems that 'AttachDiskToVmCommandTest' does that -
 @Spy
    @InjectMocks
    private AttachDiskToVmCommand&lt;AttachDetachVmDiskParameters&gt; command = new AttachDiskToVmCommand&lt;&gt;(parameters, null);
|I think this is wrong, please refer to my comment in patch set 9.
|The 'validate()' method already verifies there are enough free macs (all the nics should get new mac).

Here you validate only that the number of nic with empty mac is less or euqual to the number of free macs.
This validation is redundant in case of 'isImportasNewEntity' since all the nics should get new mac and not only the empty ones. So the validation it has in 'validate' method is enough.
On the other hand, in case '!isImportasNewEntity', the second validation is needed since you have to allocate new mac for the nics with the empty macs.
|If you 'importAsNewEntity' you have to allocate new mac addresses for all the nics. So if the nics have already existing macs, they should be ignored.
That's why you check there are enough free macs for all the nics (in 'validate()').

Here, you assume the existing macs don't need to be allocated (See 'VmInterfaceManager.add(..)'). You just need to verify they have valid format.
And the nic with no mac have to get new address. So you need to make sure that just the amount of the free macs is bigger or equal to the amount of nics with empty macs.

So it seems to me the correct fix is to surround the two mac validations here with (!getParameters().isImportAsNewEntity())
|I agree, seems the check here is not necessary.
But I will take a deeper look on Sunday.
|Does anybody listen to this event? If yes, the listener should also be aware the property name has changed? If not, this even is redundant.
|Did you introduce a place that listens to this property change? If not, why do you need it?
|Please refer to https://gerrit.ovirt.org/#/c/53502/30/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/HostInterfaceLineModel.java #58
|Please refer to https://gerrit.ovirt.org/#/c/53502/30/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/HostInterfaceLineModel.java #69
|What about the ipv6?
|?
|Please remove the file from the patch.
|Please add empty line after the title
|Why did you remove this check?
|same
|Please rearrange the getters and the setter (get+set per property).
|The implementation is the same as in HostNetworkQos, please implement in HostNetworkQosProperties.
|Please rearrange the getters/setters.
|The implementation is the same as in HostNetworkQos, please implement in HostNetworkQosProperties.
|Why didn't you add 'adPartnerMac' to the appendAttributes?
|Why didn't you add 'adPartnerMac' to the hashCode?
|Why didn't you add 'adPartnerMac' to the equals?
|Please refer to https://gerrit.ovirt.org/#/c/53852/3/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/VdsManager.java #687

I think there is no need to add this entity.
|s/patner/partner
|Why did you add it to the VdsManager.refreshCapabilieties ?
This method is called only when moving trying to move host to up state and when RefreshHostCapabilitiesCommand command is called.
However, VdsManager.refreshCapabilieties is called also from other places directly (for example from HostSetupNetworkCommand).
Don't you want to the log to be displayed in this case?

I would move the log to VdsBrokerObjectsBuilder.addHostBondDevices.
I thins way you will cover all the places that call VdsManager.refreshCapabilieties and won't need to store the 'AdPartnerMac' info on the 'Bond' object.
|The standard in our system to know whether a feature is supported is to add an entry for it to the VdcOptions table.
Please take a look a 'FeatureSupported.sriovHotPlugSupported' for an example.
|You should log the error only if the status of the bond is up.
|Please refer to https://gerrit.ovirt.org/#/c/53852/3/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/VdsManager.java #687

I think that the logging should be done here.
|Changed the first line of the already expanded comment to- /* We are calling the &lt;code&gt;redraw()&lt;/code&gt; to create the BondModel which is needed by the following operations (attaching the networks and the labels to the bond). */

You can look at the implementation of &quot;attachNetworks&quot; and &quot;attachLabels&quot;, the are getting the bond model by doing -
&quot;NetworkInterfaceModel bondModel = nicModelByName.get(bondName);&quot;
Without calling the first redraw, the bondModel won't be part of the &quot;nicModelByName&quot; map at this stage.
|Since the concept of using assertions in this model wasn't introduced by this patch. I prefer to discuss it with the team, and if we decide assertions are bad and shouldn't be used as a rule, I will remove them/replace with exceptions in a following patch.
|Done
|Please refer to my reply regarding the assertions- #784
|Please refer to Eli's comment in https://gerrit.ovirt.org/#/c/54077/5/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/action/VdcActionType.java
|Just mentioned that the fields removed here should be part of the upgrade script Eli ask for as well.
|I guess Eli is talking about AuditLogType...
|+1
|This change is not related to the patch. Please move it to a separate patch.
|yes
|yes
|yes
|Please refer to Eli's comments in the https://gerrit.ovirt.org/#/c/54077/5/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/action/VdcActionType.java

Same should be done here.
|yes
|yes
|yes
|yes
|Why do you have bootProtocol (#33) and ipv4BootProtocol?
|This class is not needed. IPv6 cannot be read from the cfg.
|Expect the removal of SetupNetworks, all the other changes in this file are not relevant to the patch. Please move them to a separate patch.
|I would call it - 'networkMovedToDifferentNic'
|I understand why you introduced 'UserOverriddenNicValues' class. I just don't understand why you introduced it here in the ui file, it seems to me engine only class. Will the ui ever call 'vdsInterface.overrideEngineManagedAttributes(..)'?

Did you add this class here because the ui didn't work without it? If not, and the ui is working properly without it, please remove it from here.
|Why is it needed here? It is ever passed to the ui?
|Before calling this method, you have to check -
'userOverriddenNicValuesByNicName.contains(reprtedNic.getName())'. Otherwise, you can get NPE in 'overrideNicWithUserConfiguration.overrideEngineManagedAttributes(..)'.
|ok, please remove this comment from the code.
If I need this comment to understand what you have done, we have a problem:)
|In my opinion, this 'if' can be removed. Since this is a private method, you can assume the 'dbNic' in the parameters is in the 'reportedNicsByNames' list (you can add 'assert' to verify it).
This 'if' doesn't give you any added value, since in case you actually somehow get into this 'if' and return 'null', you will have a 'NPE' in 'prepareNicsForCreate' and 'updateModifiedInterfaces'.
|I said it cannot happen since you filter out all the dbNics that are not reported prior calling this method -
dbNics.stream().filter(dbNic -&gt; reportedNicsByNames.containsKey(dbNic.getName()))
                .map(this::mapDbNicToNicForUpdate)
|ok
|ok
|Please refer to my comment in the previous patch - I believe that 'mapDbNicToNicForUpdate(..)' shouldn't null values.
|Please give the patch more descriptive title.
|Please refer to the same comment in the previous patch -
You will get NPE if 'userOverriddenNicValuesByNicName.get(nicName)' return null.
|Please give the patch more descriptive title.
|Please reply to my comment from patchset22 - &quot;As I mentioned in a previous patch, you cannot just change the property name of the event. Maybe somebody is listening to this property change. If not, then raising the event is redundant (so please remove it).&quot;
|Why do you block changing of the static address on both ipv4 and ipv6 if just one of them equal to the host name?
|The comment should be on ManagementNetworkAttachmentModel, but since it is not part of this patch I write it here.

The 'none' boot protocol is disabled (in the ui and engine) in case of management network. Now that we have ipv4 and ipv6, isn't it enough to configure bootprotocol only for one of them and leaving the other one as none?
|As I mentioned in a previous patch, you cannot just change the property name of the event. Maybe somebody is listening to this property change. If not, then raising the event is redundant (so please remove it).
|Please refer to https://gerrit.ovirt.org/#/c/54559/22/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/hosts/HostSetupNetworksModel.java #360
|What about number validation to the prefix?
|Since you added tabs to this dialog, you should also mark the tab validity (the tab should have red border if it has invalid field/s).
Please refer to 'NetworkModel.validate(..)' for an example.
|I think you will get NPE here, since you didn't update NetworkCommonUtils.createDeafultIpConfiguration() to create default ipV6Config.
|Why don't you use -  'ValidationUtils.IPV6_PATTERN'?
|1. why did you remove the name editor, it was shown in the edit mgmt.
2. If you decide it is indeed unneeded -
 2.1 Please add the mgmt network name to the mgmt edit dialog tile.
 2.2 Please remove the 'EntityModel name' from the 'NetworkAttachmentModel'.
|Ignore the comment.
|Please remove 'noneBootProtocolAvailable' from the model.
|Done
|Done
|Done
|Please notice the change that was done in - https://gerrit.ovirt.org/#/c/55632
|I would move this code to 'updateActionAvailability'.
so 'updateActionAvailability' will have the following line -

newCommand.setIsExecutionAllowed(isExecutionAllowed);

I know it is enough to update the 'new' command only once, but 'updateActionAvailability' is the standard place to specify the 'ExecutionAllowed' of all the commands.
|The standard name of this method is 'updateActionAvailability' and it should be used to update all the need command in the list model. So please keep the original name.
|Why do you need a util for simply getting the host name?
|For this to work, the replacement in the AppErrors file should be ${ACTION_TYPE_FAILED_EXTERNAL_PROVIDER_IS_READ_ONLY_ENTITY}.
Currently it is - ${providerName}. So there is still a bug.
|EngineMessage.NETWORK_ATTACHMENT_NOT_EXISTS ?
Shouldn't it be - '$providerName'
|Should be ${ACTION_TYPE_FAILED_EXTERNAL_PROVIDER_IS_READ_ONLY_ENTITY} instead of ${providerName}

You marked it as done, but it isn't

nm, I will update it with the new gerrit edit option.
|still missing the _ENTITY :)
Should be ${ACTION_TYPE_FAILED_EXTERNAL_PROVIDER_IS_READ_ONLY_ENTITY}

Please run the ui and verify you get this error formatted correctly.
|Should be ${ACTION_TYPE_FAILED_EXTERNAL_PROVIDER_IS_READ_ONLY_ENTITY} instead of ${providerName}
|same
|You should touch only the base files (those without the _language.properties suffix).
The translators take care of the other files.
Please remove this file from the patch.
|Done
|We are getting the 'existingNetworkAttachments' from the db only once and then we update it manually. For example, 'persistOrUpdateUserNetworkAttachments(..)' is adding userNetworkAttachments to this list.

Currently  'removeUserRemovedNetworkAttachments(..)' is called before 'persistOrUpdateUserNetworkAttachments(..)' and also 'persistOrUpdateUserNetworkAttachments(..)' give id to the newly added attachments, so this check can be removed (my original intention with this check was to be safe in case the order of the methods is changed and we manually add new attachment with no id to the list). Done.
|It is a leftover from patchset 1. Good catch! done.
|Why did you remove the surrounding 'if'- 
 if (!provider.isRequiringAuthentication()) {
networkForCreate.setTenantId(DEVICE_OWNER);
}
|Please remove this comment, it is wrong.
|Done
|You're welcome to suggest a new format to the devel mailing list. Meanwhile, it is the standard format that should be applied in our project - &lt;ovirt-src-root&gt;/config/engine-code-format.xml.
|It is the concept of all the validation messages in this file, we don't aggregate errors, we display only the first one we find.

The problem was that 'validateNotRemovingUsedNetworkByVms' was called inside a loop that goes over all the attachment and always did the same (went over all the attachments).
That's for sure is wrong.

There is already a patch removing DetachNetworkUsedByVmValidator and compressing the 4 messages to one single message - https://gerrit.ovirt.org/#/c/54967/

I will let Edi know that now there is no way the message will include more than one network. Thanks!
|After rethinking it, I came to the conclusion that it is better to have only one single way to move a network from nic to nic. So I disabled the option (by candoaction) to have in the same network command the same networked referenced by two different attachments (one removed and one new). So if the user want to move a network from nic to nic, he has to update the already existing attachment.

The change was done in - https://gerrit.ovirt.org/#/c/55687/1
The current patch was kept for the cleanup/renaming issues,
please re-review it.
|s/loosing/losing
|Why do you check that the bootprotocol is not NONE?

Having none bootproto with ip/prefix/gateway is not valid.
Because of this if, you're not validating it.
|same
|Didn't you want the boot protocol to be none?
|same
|Please add test:)
|Please update the relevant tests and add new ones for IPv6.
|+1 Please use the FeaturSupported mechanism,.
|Please move it to 'VdsProperties'.
|Please rename the script name to &quot;.._add_switch_type_to_vds_interface_and_cluster.sql&quot;
|Please use the field from 'VdsProperties'.
|In 4.0 we should still support 3.6 hosts which don't have this key. Please use the FeatureSupported mechanism to determine whether the key is mandatory or not.
|Consider add to 'reportedConfigurationsFiller' a 'fillReportedConfigurations' that calculated the cluster by itself.
|Why not doing it as part of the 'setUp()'?
Just a suggestion...
|same
|Please move it to the relevant patch.
|Why isn't it final like its friends?:)
|Consider adding to 'NetworkInSyncWithVdsNetworkInterface' a ctor that calculate the cluster by itself instead of calculating it upon each use of the current ctor.
|You can use - Objects.toString(value, null);
|NetworkInSyncWithVdsNetworkInterface.isNetworkMtuInSync() should take care of this case. So I'm not sure I understand the comment.

why do you need to touch the qos and mtu in this test?
Wouldn't it work without it?
|s/updateing/updating
|Why do you pass the cluster as a parameter. You can simply use 'getCluster()'.
|Isn't it the REST's responsibly to do this?

I would add a general method to ClusterOperationCommandBase.executeCommand() with the code in AddClusterCommand.
There shouldn't be special treatment for update.
|Copy from patchset 6- Isn't it the REST's responsibly to do this?

I would add a general method to ClusterOperationCommandBase.executeCommand() with the code in AddClusterCommand. There shouldn't be special treatment for update.
|s/NetworkAttachment/Cluster
|How lines 613 - 618 related to the patch?
|s/patner/partner
|I would change the number to 4 anyway, to keep the style and spaces in the panel consistent.
|For consistency, I wouldn't use a TooltippedIcon, but would use a regular icon and add the explanation to the already existing tooltip.

or, another option, just don't add this icon to the setupNetoworks dialog. it is enoght to have it in the subtab. Danlken is ok with it.
|Now I saw the next patch, I understand there is no need for the opposite direction. Please ignore the previous comment.
|what about the opposite direction? If you update from 3.6 to 4.0, don't you need to update the switchType to OVS?
|Please rename to 'isOvsSupported()'.
|Please use ConfigurationValues and not 4.0 version hard coded here.
You can see - ConfigurationValues.AdPartnerMacSupported as a reference.
|Please remove the comment.
|same (at least please don't use 'version40OrNewer' terminology in the comment).
|same
|The ui has a cache of all the values in the VdcOptions table, so you don't even have to query the backend to get the 'adPartenerMacSupported' value.
You only have to add 'adPartenerMacSupported' to 'ConfigurationValues.java' and call 'AsyncDataProvider.getInstance().getConfigValuePreConverted(ConfigurationValues.AdPartenerMacSupported, vds.getClusterCompatibilityVersion()'
|I would move this logic to the ui side and remove the 'AdPartnerMacValid' field from Bond.
I don't like to have fields on entity that are not always filled. And it sees to me as ui logic to decide whether to show alert or not.
|Maybe worth adding 'adPartnerMacValid' and 'adPartnerMac' to here.
|why isn't it part of the 'equals' and 'hashCode'?
|Why is this needed?
|copy paste?:)

There is option to set a vnicProfile as publicly used. It doesn't seem to be relevant to Qos.
|Please use AddHostNetworkQosCommand internally instead of re-implementing it.
|Having methods with names - findMigrationIpAddress and getMigrationNetworkAddress is confusing.
Maybe change to findValidMigrationIpAddress
|why public?
|why public?
|Using the 'DefaultTimeout' means that we will wait max 2 minutes.
The regular ConfigValues.vdsTimeout timeout we use is 180 seconds. Why here you decided to use 120 seconds (2 minutes)?

Dan and me think the best solution is to have ConfigValues.setupNetworksTimeout which will be by default 180 seconds and adding the capability to configure it via engine config (there are some users that asked for it).

The engine config change can be done in a separate patch.
|Is there a separate patch for making it a config value and adding the possibility to update it via engine-config tool?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|s/iBonds/Bonds
|I'm not sure I understand what this patch fixes.

Currently we use 'task.get(timeout, TimeUnit.SECONDS);' when polling. And per each attempt of poll we create a new task.
So we do have a timeout for the polling.

As I see, in all the use cases of polling in the system we don't call 'pollTask.get(..)' more than once. Since the timeout we are using for the polling (SetupNetworksPollingTimeout) is 3 seconds, I'm not sure why do we need to add a 2 minutes timeout to the whole polling command?

The only problem I see is that 'task.get(timeout, TimeUnit.SECONDS);' has two kinds of exceptions -

1.VDSNetworkException - In this case we don't close/cancel the connection/task and before your code it seems the connection/task stayed alive forever (is this the bug you fixed in the current patch)?
2. TimeoutException - in this case we cancel the 'httpTask'. Isn't it enough?
|Please add and public final string for &quot;Internal timeout occured&quot;.

https://gerrit.ovirt.org/#/c/57083/2/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/vdsbroker/FutureVDSCommand.java declares this string again and compares it to the string declared here.

Please make both of the places reuse the same constant.
|I think the name is ok, you cannot describe everything the class does in its name.
|Why do you need to call it here?
|Moti?
|s/on on/on
|If 'networkAttachment.getReportedConfigurations() == null' (there are no reported configurations), it means we have new attachment which was created by the ui.
When moving attachment for a nic to another nic the ui doesn't re-use the old attachment, it creates a new one and just copies the old one's id.
So in this case we will have an attachment, with id, with no reported configurations. And it is for sure in sync.
|Done
|'shouldBeSyncedNetwork' check whether the network is marked to be 'synced'.
It is true only if the network is currently out-of-sync ('!syncedNetwork')) amd marked in the edit dialog as need to be synced ('Boolean.TRUE.equals(getIsToSync().getEntity())').

I don't understand your comment, what do you mean by 'oth '!synced' and 'synced' leads to sync'?
You need to read the data from the dc level entities in case the attachment is new or in-sync or marked as should be sync.

In the other cases (the attachment is out-of-sync and is not marked as should be synced), the data should be read from the nic.

I think the variable name are ok explains well what's going on.
Please give me a concrete suggestion for a renaming since I cannot think of such...
|Done
|Why is it here and not part of VdsStaticDaoImpl?
|Why don't you add the config value in '0000_config.sql'?
I cannot find any other config_value the was added using an upgrade script.
|@Eli, are you ok with the upper case select here?
|The actual problem in this bug is not that the ui fails to deal up with null ipV4 or ipV6 primary address. 
It is that ipV4 and ipV6 primary addresses shouldn't be null.
'HostSetupNetworkCommand.fillInUnsetIpConfigs()' should've filled them with default values. The bug is that it fills defaultIpConfig only in case  'attachment.getIpConfiguration() == null' but if its not null and only one of the configs is configured (ipv4 or ipv6) or both of them are not configured. It should fill the missing configs with default value and not leave it with null primary address.
|Fixed the commit message and extract the condition to a variable.
If the nic id is null, it means it is newly created nic (can be only bond). There is no reason to override the attachment params with the info of this new nic (which apparently has nulls in all the values).
|I suggest to move the command creation and execution treatment to ClusterModel.
You can pass the list model to ClusterModel, so it will be able to set the confirmWindow.

Also, make sure the 'target' is the clusterModel.

You can see 'NetworkModel.addQosCommand' as an example.
|You didn't add the macPoolCommand to 'executeCommand' of this class.
Maybe I miss something, but I'm not sure how it suppose to work...
|The presenter shouldn't control the gwt widgets directly.
I suggest keeping 'HasUiCommandClickHandlers' and adding a new method to the view for 'makeMacPoolButtonInvisible'.

Or you can achieve make the button invisible for free by setting a command and mark is as 'isAvailiable=false'.

(I still think the adding of the command and its treatment should be part of the ClusterModel and not the ClusterListModel).
|Done
|Please fix the commit message according to the new code.
|tws
|s/hash/slash
|s/craete a an/create an
|HostSetupNetworkCommand has a method called 'fillInUnsetIpConfigs(..)'. Please move the logic here to this method.
This class is named 'NetworkIdNetworkNameCompleter', its purpose is to complete 'networkId' and 'networkName', not ip configuration.
|Please move 'fillInUnsetIpConfigs' to 'IpConfigurationCompleter'. It doesn't make sense to have two places it the code that treat the completion of the ip config.
|In case the 'ipConfiguration' is null, there will be NPE here.
|This class is used to invoke bll command via vdsBroker.
It is the way to invoke 'RefreshHostCapabilitiesCommand' when an event arrives.
|Done
|Why didn't you remove the members (ReceiveRate/TransmitRate) from NetworkStatistics?
|Please use the method 'getInteger()'. It is implemented in 'BaseDao'.
|This is not needed, the bond itself doesn't hold its name in the 'bond_name' field.
|You can use UiMessages.
|StringUtils.join(..)
|There is 'special' 'StringUtils' for GWT (org.ovirt.engine.ui.uicompat.external).
You can use it.
|Why do create a new script. Please update the existing one.
Your new script will fail the upgrade of users that already ran the old script.

By updating to old one- user that ran the old one and succeeded won't need to run it again.
Users that had a problem with the old one, will run the new one,
|Why the 'id' is not part of the equals?
|same
|@Ipv4OrIpv6 supports null value and this should be tested. Please add a separate test for the combination with @NotNull.
|Why didn't you add it to the 'clone' method?
|Why didn't you add it to 'equal' and 'hashCode' methods?
|Why is this fix part of this patch?
|If it is 'null', shouldn't you remove the 'ReportedDnsResolverConfiguration'?
|+1
|tws
|CREATE TABLE
|Does it make sense to add DnsConfig to attachment that is not related to the default route network?
If not, please add a validation to block it.
|Please add tests to this class:)
Can be done in a separate patch.
|I'm not sure how vm is related here. Did you mean host?
We should allow configuring dnfConfig only on hosts that belong to a cluster with supported compVer.
I would add this code to the validation path of add/update network and setup networks.
The code here seems to me ok, network shouldn't be marked as out-of-sync if the cluster doesn't support dnsConfig. It doesn't matter what is the exact version of the specific host.
|Why storing nics is a map by network name should be in dao? Please explain.
|Where do you use it?
|Why null? Please add actual value to test 'reportedDnsResolverConfiguration'.
|Please verify with Dan it is the desired design.
|In case the engine doesn't contain dnsConfig but the host does report one, why it is marked as inSync?
|Please add a test to verify non default route networks are ignored.
|Please add it to your trello and remove from the code base.
|Please add more informative commit message.
|'this' is not needed.
|I think it is cleaner to add the hostDnsConfig as a parameter to &quot;FromNic&quot; constructor.
|I want you to be able to use it in DnsServerEditor. For it, it needs to be EntityModel. That's why I told you to see how ExternalSubnetModel implement 'dnsServers'.

What is the class you used to 'mimic' its behaviour?
|Why is this model needed? ExternalSubnetModel also has list of 'dnsServers'. Why didn't you implement it the same way or at least extended here EntityModel?
|You will have NPE in line 22.
|Please remove the &quot;this&quot;.
|The required action is to keep this behaviour for 'dnsConfig'.
If you configure 'dnsConfig' on a 'net1' attached to 'eth0' and move 'net1' to 'eth2' the 'dnsConfig' should stay (same as 'ip configuration').
|When we move a network from nic to nic we take the defined 'attachment' values to the new nic.
Please follow the usages of 'NetworkParameters' for more details.
|The networks in the setup networks dialog can be out-of-sync. It means the actual configuration is different than the desired one.
When a network is out-of-sync, the edit network dialog will show the actual values defined on the nic.

In the case here, if the network is out-of-sync, the dns-host value should be displayed.
|The above is not valid. You always display the attachment 'dnsConfig'. In case the networks is 'out-of-syc' you should display the host's one.

Please use modify the 'syncWith' method instead of adding the code here.

Please notice that since the 'dnsConfig' reside on the host and not on the nic - you will have to pass the host/it dnsConfigValue to - 'syncWith(new InterfacePropertiesAccessor.FromNic(nic));'
|please remove the 'this'.
|same.
|I prefer to have the label in the 'localize' method in the java code. It is easier to find and maintain it this way.
|Why didn't you use DnsServerEditor + DnsServersWidget?

Seems your classes are very similar to those two.
What do I miss? (If NameServerModel was EntityModel you could just use those classes. Don't you?).
|I told you, please use DnsServerEditor + DnsServersWidget  instead of creating new classes for the same purpose.
Unless you have a good reason why you cannot reuse those classes.
|Why is it needed here? When 'model.getNameServerEntity()' can ever be updated. I think you meant to add listener to the address editor, it is needed to affect the 'enabled/disabled' state of the &quot;+&quot; button of the &quot;AddRemoveRowWidget&quot;.
|I prefer to add the label in the java code. It is easier to maintain it this way.
|Shouldn't it be - NameServersWidget?
|What is the TODO here?
|What about the other AppErrors files? (frontend, webadmin, userportal)
|As Yevgeny asked, why did you mark the command as '@NonTransactiveCommandAttribute'. If you remove the annotation you won't need to open a new transaction here.
|Why so you need this check?
|Same comment as on the add command line 45.
|1. Please add this check to 'VmNicFilterParameterValidator' (idIsValid()).
It will be easier to test it this way.
2. Shouldn't you check first 'getParameters().getFilterParameterId() != null'?
|Consider moving to the abstract command.
|Is there a use case the client passes the desired id?
|1. You should first check the id of the vm is valid, otherwise you can get NPE here.

Something like this-
if (getVm() == null) {
            addValidationMessage(EngineMessage.ACTION_TYPE_FAILED_VM_NOT_FOUND);
            return false;
        }
2. This validation can be part of the abstract class.
|Should be part of the abstract parent class.
|See https://gerrit.ovirt.org/#/c/68448/24/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/vm/AddVmNicFilterParameterCommand.java line 38.
|same about moving to abstract.
|Why is this needed?
|+1
|Is there a use case of getting id from the client? If so (and I think not), you shouldn't validate only there is no filterParameter with this id, you should verify there is no entity in the system using the same id.
|Please use different messages for 'idIsFree' and 'validId' so it will be easy for the user to understand what is wrong with his input and how he can fix it.
|'null' name is a bad parameters from the client. It is nicer to give the client an error message that explains what is wrong with his input instead of throwing an exception here.

You can use @NotNull annotation on the mandatory properties of VmNicFilterParameter.
|You can validate the format of the name by adding '@Pattern' annotation to the 'VmNicFilterParameter.name' property. See 'Network.name' for example.
|same
|same as line 65.
|Please add @Valid annotation here. And @NotNull annotation on VmNicFilterParameter's properties.
|Please use @NotNull annotation instead of throwing exception.
|Please be more informative. Why the id is not valid?
|Please be more informative. What is the format of a valid name?
|Please be more informative. What is the format of a valid value?
|Please remove this IDE specific comment.
|why is the &quot;WeakerAccess&quot; needed?
|Please change to the correct bug url.
|????
|'isManagement()'? Please fix.
|What about the other four AppErrors files?
|Please add tests.
|Please refer to - https://gerrit.ovirt.org/#/c/71184/1/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/cluster/ManageNetworkClustersCommand.java

This patch is not needed and even harmful.
|???
|what about the other AppErrors files?
|???
|now you only have to change the 'null' value in line 88 to 'managementNetwork.getId()'
|I would change to -
if (getNetworkCluster().isDefaultRoute() &amp;&amp; !getOldNetworkCluster().isDefaultRoute())

In my opinion, it is more readable since you don't want get here if you change the network not to be default route (the validation should catch it).
|If you apply the suggested change, the trinary condition won't be needed.
|What error? Please extract the code for finding the management network to a separate method. I would even add it to ManagementNetworkUtil.getManagementNetwork(clusterNetworks);
|To fit the error message, you should check 'if (list.size() == 0) '
|Please remove this comment from the code.
|Please add documentation and tests to the method.
|???
|???
|tws
|???
|tws
|The reason the code was written this way is to reuse existing command and to avoid needless code duplication.
Correct me if I'm wrong, but there is only one transaction that is handled by ManageNetworkClustersCommand. All the other internal command will run in this transaction (the default transaction scope is 'required').

Now to the way to make your code working -

There is no actual need to validate there is always a 'default-route' set. It is ok to unset the default route (same as it is ok to unset all the other role except the management once). If the is no default route set, the default one will be the management network.
|Yes, Network -&gt; Cluster (clusters sub tab under networks main tab)
|When you detach the network (the attached checkbox is unchecked), you should remove all the roles of the network.
Please remove the comment (and of course verify it:)).
|Why false? It won't work for Network-&gt;Cluster. There you should allow multi-selection (check-box instead of radio button), since each 'ClusterNetworkModel' belongs to different cluster.
|Where?

When you open the dilaog via the network -&gt; cluster sub tab, the default route has a checkbox instead of radio button?

The parameter here, that you pass always as false, is what should make it work. You should pass 'multipleSelectionAllowed'.
|It is ok, you should be able to edit the default route only for internal networks.
And of course if the network is not attached to the cluster, is doesn't make sense to edit it.
|You understood it correctly. Please remove the comment.
|You can of course keep the comment, but remove the word 'Probably' and phrase it like you know what you are talking about.
|It is just a way to sort the values.
You can change it to binaries as you suggested - 1, 2, 4, 8 and 16.
Management- 16
display- 8
migration - 4
route - 2
gluster -1
|Please keep the management network with the highest number. So it will be displayed first.
|Please give more informative title.
|Please give more informative title.
|To avoid duplication, I would change this method to only call 'forceAddMacs' with single mac.
|same - would call 'addMacs' with single mac, to avoid duplication.
|Why not simply - 
List&lt;String&gt; addedMacs = macs.removeAll(notAddedMacs);
|It is not accurate (in case of 'TransactionalMacPoolDecorator' for example).
I would omit this description.
|I asked you to do it because I wanted the validation to be part of the validate method of ChangeVmClusterValidator.

Now I see the 'ChangeVmClusterValidator.validate' method is also used in 'MigrateVmCommand' flow when the 'targetCluster' is changed (apparently it can happen - https://bugzilla.redhat.com/1150191).
Don't we want to fix this flow as well?
If not, feel free to move the validation back to the command.
It doesn't make sense for it to reside in the validator without being part of the validate method.
|I wanted the code be in validate method. As you don't want to do it, leave the validation in the commad (preceding patch).
|Please move this validation to ChangeVmClusterValidator.
|Shouldn't you also check the targetMacPool doesn't allow duplications?
|Since this should be verified in the validation stage before calling this method the exception here should be enough.
The actual problem is that you don't lock the source and target mac pool when you validate and perform the operation.
|You can return a validation error and the command that executes the message can add the error to its error messages (by calling 'validate'/'failValidation' method with the result), the same as done in the validation flow. In most of the cases the commands are blocking, so the client (ui/rest) gets the result of the command just after the end of the execution. So you can add validation errors in the execution flow as well. The user will see it as a regular validation error.
|I'm not sure I understand why it won't work.
But its ok, you can leave it as is:)
|You can return the problematic macs as the return value of the method. And add the validation error treatment to the command.
Up to you. I'm ok with the exception.
|Please add the same test to the case macpool supports duplicate macs.
|Yes, I saw. thought I removed this comment. Oops.
|Why hard-coded? Please use the same 'constant' as the tested class.
|If my comment in https://gerrit.ovirt.org/#/c/71804/6/frontend/webadmin/modules/webadmin/src/main/java/org/ovirt/engine/ui/webadmin/section/main/view/popup/host/VfsNicLabelWidget.java will be applied, this change won't be needed.
|This won't be needed anymore if you'll call 'selectedLabelChanged' (see comment on line 83) before adding the listener in 'onAdd'.
|1. Please export lines 82+83 to a method 'selecetLabelChanged'.
2. Please call the method also before add the listener.
|I meant extract not export:) Maybe it is the reason for the misunderstanding.
You can place the method here in VfsNicLabelWidget. It is just a helper method to avoid duplication of the code.

public void selecetLabelChanged(VfsNicLabelModel model) {
       ValueChangeEvent.fire(this, null);
       model.updateSuggestedLabels();
}

For example, here, the method should be called before adding the listener (line 78) and inside the 'eventRaised(..)' (line 82).

The call before adding the listener is needed to initialize the suggestions list when you build the dialog. You first fill the dialog with data and just then add the listeners, so without doing it, until the first selection is changed, the suggestions list of all the items will be wrong.

Once you call the method before adding the listeners as well, setting the items when creating a ghost entry is not needed anymore. Since it was the reason for changing the model to be protected, the need it eliminated.
|same
|same
|As I understand, 'value.setItems(getModel().getSuggestedLabels());' is not needed anymore as I explained in patchset 6.

Did you check it and found out it is needed?
|Please change 'VfsNicLabelWidget.this' to 'this', you're not inside an inner class, the prefix is not needed.
|same
|And it is a bug:)
|Instead of 'source', you can pass 'this' so there won't be a need to pass parameter to 'selectedLabelsChanged'.
|Instead of 'INVALID_NETWORK_FILTER_ID' you should pass null.
|Please give more informative title.
|I would add this logic to 'passthroughProfileContainsSupportedProperties()' so there will be a centralized place that validates passthrough unsupported fields are not set.
|I would go with 2
|Please add test for network filters.
|I would say -

Cannot ${action} ${type}. 'Port Mirroring,'Qos' and 'Network Filter' are not supported on passthrough profiles.
|You removed the key...
|same
|same
|same
|Done
|Done
|It will be considered as a new bond.
The purpose of the patch is to reuse the id in case the name is reused.
|Done
|Done
|Done
|Example - {slot=0x19, bus=0x00, domain=0x0000, type=pci, function=0x0}
http://stackoverflow.com/questions/24814577/comparing-two-maps
|In a separate preceding patch, please rename ipV4 related items (lines 14-17) to have ipv4 prefix.
|Ipv4 has the following code - &quot;bootProtocol == null) ? Ipv4BootProtocol.NONE : bootProtocol;&quot;

Why didn't you adopted the same code here?
|Please add test for many.
|same
|setters/getters
|Actually 'SetupNetworksBondPopupView.updateBondOptions()' should've done the work.
But it has a bug, it updates the value of 'customBondEditor' manually via the view.
Setting the value manually via the view doesn't fire any event, therefore, the model is not updated and still &quot;thinks&quot; the value is null (although actual value is displayed).

The fix should be, moving 'SetupNetworksBondPopupView.updateBondOptions()' and its registration to 'getBondingOptions().getSelectedItemChangedEvent()' to the model ('SetupNetworksBondModel').

Notice - to manipulate whether the editor is enabled (in the model side), you should use 'setIsChangeable(..)' method.
|The 'list' is never used. Please remove it.
|You should call 'updateBondOptions()' also before registering to the listener, to align with the changes were done in the model initialization before you added the listener.
|Before the 'if' statement you should add - 'getCustomBondEditor().setIsValid(true)'
otherwise, if you have an error in the 'customEditor' and than you change the 'bondOption' to 'nonCustom' one, the 'customEditor' will still be marked with error.
|1. Would call the method 'onBondingOptionsSelectionChange'.
2. There is no need to pass the 'list' as a parameter. You can call directly to 'getBondingOptions()'.
|It also cleans the vm data from the vf secheduler. I wouldn't expect getter to do it. You can change to getter and move the clean outside the method.
|Maybe pass the parameters to the init method. In my opinion it is more readable.
|Please remove the commented code.
|If I understand correctly, the purpose of the patch is to fix a specific problem - failure of migration because of 'refreshCaps' failure to take a lock.
It is enough to take a waiting lock inside the ActivateDeactivateVmIntefaceCommand before calling the refresh, instead of locking the host for the whole migration period.

You can pass 'lockProperties.withScope(Scope.Execution).withWait(true)' as the 'lockProperties' of the parameters you pass to 'RefreshHost' (the 'RefreshHost' should pass it the 'RefreshCaps').
|You're overriding the already existing exclusive locks.
|The migration can take a lot of time. In my opinion it doesn't make sense to take such a long lock on the host.
|Consider changing to 'wait' lock only in case of internal command. So 'bad' users won't overload the system.
|You shouldn't perform --hot-- plug for all those statuses.
For example - in case the vm is down, there is not need to send a request for unplug to the vdsm, you need just to update the db.

Hot plug is only required if the vm if up or (the new change) powering up.
|ignore
|What do you test here?
|Please add test also for re-assigning the roles.
|Each network cluster has exactly one network that matches it.
So the entire load and nested loop were redundant.
|I think the purpose of this code was to enable moving network to be operational in case the host status moved from up to another status (and it was the only host that caused the network to be non-operational).
So this removal may cause a small regression. Please verify it before merging the patch.
|Please use the column name and not its index.
|1. Why no a stored procedure?
2. In case the infra team will be ok with not using a stored procedure, consider implementing SearchDao.
|You can simply call 'interfaceDao.getAllInterfacesForVds(hostId)' instead of 'hostNicsUtil.findHostNic' the calculation done the are simply not needed here. It retrieves the 'networks' and calculation the 'networkImplenetaionDatails&quot;. Which is not used here.
|1. Please make sure the infra team is ok with not using a stored procedure.
2. Consider implementing SearchDao.
|It is the second patch I see this code. Please reuse it.
|Shouldn't it be '== null'?
|1. The query here seems to me redundant. 'checkIfExistsHostThatMissesNetworkInCluster' also checks the host status, so it is enough to call only it.
2. Although I think the query is not needed. If you decide to keep it. You can keep cache with result per cluster.
|As I understand from the bug, lately, there was a regression.
I don't remember that there was ever behaviour like in this patch.

When adding a new network to an empty cluster it should be marked as operational. Changing the network to be management or any other change, shouldn't affect its status.

We should try to reproduce the bug and understand what causes it.
1. Is the newly added network (to empty cluster) marked as operational?
2. Is updating its role to management affects its status?
|Please add  comment to explain we know we are adding here a 'bug' and losing control of what is the actual management network.
|I suggest moving the 'AddClusterCommand.validateManagementNetwork' to 'ClusterOperationCommandBase' and reuse it here.
This way, the method here (validateManagementNetworkAttachement) can be removed.
|Done
|Done
|Done
|Done
|Done
|What do you suggest?
|Done
|Done
|Doesn't it make sense to have those validation in the update use case as well?
|But your are detaching it to a dc that has networks.
You should verify the 'mamangementNetworkId' specified in the parameters is valid (1. the network belongs to the dc the cluster is attached to. 2. network not external). I agree that you cannot verify the netork is required since it is a networkCluster property and the network cluster doesn't exist yet...
|Please change to private and add a getter method.
|Done
|Done
|Please fix the comment from patchset 5.
|Yes.
And also, you need to add validation (canDoAction) to HostSetupNetworkCommand, to make sure 'defaultRoute' network has ip configuration.
|Seems everything is covered. Great. So just remove the 'shouldSetDefaultRoute' from here.
|Regarding 1- as I understand it is valid, but not common usecase. Not sure we need to waste time implementing it.
|1. In my opinion, the correctest way is to consider empty dnsConfig on network and attachment as if the user asks to remove the dns config from the host. And of course marking it as out-of-sync in case the host still has dns config.
But, since most of our users already have dns-config on the host. It will cause all the default-route networks to be marked as out-of-sync. I discussed it with Dan and he thinks (and I tend to agree), the best way is to keep it as you implemented. Ignore it.
It means we won't have a way to remove dns-config via the engine.
2. In host setup network command we should throw validation error in such case. And here we should mark the network as out-of-sync.
|I know it was part of a previous patch, but can you please remind me why
1. '(nameServersOfNetworkAttachment != null &#124;&#124; nameServersOfNetwork != null)' is needed? Isn't having a reported 'default route' on the host, and not having any desired default mac on the network or networkAttachment should be considered as out-of-sync?
2. Why 'shouldSetDefaultRoute' is needed? A role network should always return true for 'ShouldSetDefaultRouteFlagAndDnsData.test'.
In case somehow it doesn't, we shouldn't ignore it and at least mark the interface as out-of-sync.
|IIUC, it is ignored because there is no boot protocol. It is not clear from the test's name, please fix it (if you decide to keep the ignore logic).
|Should you check it is the default route ((networkCluster.isDefaultRoute())?
|In patch set 7 still not fixed
|The third parameter is not needed, it is the default.
|Why did you remove this test?
|The 'networkCluster' is lazy loaded and cached, so there will be max one db call per validation cycle. Why do you think it is better to move the 'networkCluster' initialization to the constructor?
|Don't insist. Please remove the comment.
|This patch is only refactoring. Right? In the original code &quot;parameters.getUpdates()&quot; weren't processed.
|thanks! +1
|Please move this code to 'persistTopology(..)'.
|1. You're doing two db operations (fetching and updating) instead of one.
2. Why isn't the validity important?

Please, let's avoid the endless discussion.
Both of us agree it makes sense to do the change. So please, do it.
|I would add a stored procedure for updating only the dnsConfig.
|1. As Dan wrote over the e-mails, our goal is to separate networking code from other engine related code. You are right, current 'VDSCommandType.GetCapabilities' returns much more than only networking data. But currently, here, we persist only the network related data. So it is pretty easy to switch 'VDSCommandType.GetCapabilities' with a network specific verb.
I would add to 'HostNetworkTopologyPersister.persistAndEnforceNetworkCompliance' persistence of the DnsConfig.

--------------------------------------------------------
Some comments about the current code (although, I would change it as suggested in point 1).
--------------------------------------------------------
2. Please notice that VdsManager line 723 calls 'getHostNetworkTopologyPersister().persistAndEnforceNetworkCompliance(vds)'. And then you call it here again (now with user configured data).
3. I would call 'runInternalAction(VdcActionType.RefreshHostCapabilities, parameters)' and not the vds manager directly.
|why reported?
|Do you plan to pass here only the networks that are out of sync on the host?
|The patch is exactly the direction I was talking about!
Now you need to set 'overrideConfiguration=true' for all the 'updatedNetworkAttachments'.
|Patch Set 5:

(4 comments)
|Patch Set 5:

(2 comments)
|Patch Set 7:

(1 comment)
|Patch Set 11: Code-Review+2
|Patch Set 6:

(2 comments)
|Patch Set 7:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 7:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 6:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 12: Patch Set 10 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 12: Patch Set 10 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23.
|Patch Set 23: Code-Review+2 Verified+1
|Patch Set 24: Patch Set 23 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 21: Patch Set 19 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Patch Set 32: Verified+1
|Patch Set 33: Patch Set 32 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 18: Patch Set 16 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 23: Patch Set 21 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34.
|Patch Set 35: Patch Set 34 was rebased
|Patch Set 35: Code-Review+2 Verified+1
|Patch Set 36: Patch Set 35 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 28: Patch Set 26 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 37: Patch Set 35 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Uploaded patch set 39: Patch Set 38 was rebased.
|Patch Set 40: Patch Set 39 was rebased
|Patch Set 40: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 19: Patch Set 17 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 24: Patch Set 21 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Patch Set 35: Verified+1
|Patch Set 36: Patch Set 35 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 30: Patch Set 28 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34.
|Uploaded patch set 35.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Patch Set 36:

(8 comments)
|Uploaded patch set 37: Patch Set 36 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Uploaded patch set 39: Patch Set 38 was rebased.
|Patch Set 39: Verified+1
|Patch Set 40: Patch Set 39 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 29: Patch Set 27 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Patch Set 32:

(1 comment)
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37: Patch Set 36 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Patch Set 5:

(12 comments)

Regarding to the general comment-
1. UiCommand has a lot of unrelated properties and logic. I want a clean start. I don't see any good reason reusing it.
2. This phase of comment fixes still doesn't contain tests. Will add it in the next phase (tomorrow I hope).
3. I hope now I addressed all your comments and also did some more small fixes the code is clearer.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Patch Set 19:

(17 comments)
|Uploaded patch set 22.
|Uploaded patch set 23.
|Patch Set 19:

(1 comment)
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 37: Patch Set 35 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Uploaded patch set 39.
|Uploaded patch set 40.
|Patch Set 25:

(18 comments)
|Uploaded patch set 41: Patch Set 40 was rebased.
|Uploaded patch set 42: Patch Set 41 was rebased.
|Uploaded patch set 43: Patch Set 42 was rebased.
|Uploaded patch set 44: Patch Set 43 was rebased.
|Patch Set 25:

(3 comments)
|Uploaded patch set 45: Patch Set 44 was rebased.
|Uploaded patch set 46.
|Patch Set 45:

(10 comments)
|Uploaded patch set 47.
|Patch Set 45:

(3 comments)
|Uploaded patch set 48: Patch Set 47 was rebased.
|Patch Set 49: Patch Set 48 was rebased
|Patch Set 49: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 30: Patch Set 28 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37: Patch Set 36 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Uploaded patch set 39: Patch Set 38 was rebased.
|Patch Set 39: Verified+1
|Patch Set 40: Patch Set 39 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Patch Set 35: Code-Review+2
|Patch Set 35: -Code-Review
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37: Patch Set 36 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 30: Patch Set 28 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Patch Set 32:

(5 comments)
|Uploaded patch set 34.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37: Patch Set 36 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Uploaded patch set 39: Patch Set 38 was rebased.
|Patch Set 39: Verified+1
|Patch Set 40: Patch Set 39 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 28: Patch Set 26 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30.
|Patch Set 16:

Lior- we use a radio button and not a checkbox since we wanted to add explicit text to each option.
Also, when selecting the second option of 'Specific Networks' networks and labels widgets are shown. Eldan and me thought using a radio button will make the ui experience better in this case.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37.
|Patch Set 38: Patch Set 37 was rebased
|Patch Set 38: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 27: Patch Set 25 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Patch Set 9:

(3 comments)
|Patch Set 9:

(2 comments)
|Uploaded patch set 31.
|Uploaded patch set 32.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Patch Set 37: Patch Set 36 was rebased
|Patch Set 37: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 27: Patch Set 25 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Patch Set 9:

(2 comments)
|Patch Set 9:

(1 comment)
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Patch Set 36: Code-Review+2 Verified+1
|Patch Set 37: Patch Set 36 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12: Commit message was updated.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27.
|Uploaded patch set 29: Patch Set 27 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Patch Set 25:

(3 comments)
|Uploaded patch set 31.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37: Patch Set 36 was rebased.
|Uploaded patch set 38: Patch Set 37 was rebased.
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 28: Patch Set 26 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 35: Patch Set 34 was rebased.
|Uploaded patch set 36: Patch Set 35 was rebased.
|Uploaded patch set 37: Patch Set 36 was rebased.
|Patch Set 37: Code-Review+2 Verified+1
|Patch Set 38: Patch Set 37 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 14: Patch Set 12 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Patch Set 21: Verified+1
|Patch Set 22: Patch Set 21 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 15: Verified+1
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 23: Patch Set 21 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Patch Set 31: Patch Set 30 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(5 comments)
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 15:

(1 comment)
|Patch Set 15:

(1 comment)
|Patch Set 15:

(3 comments)
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 17: Verified+1
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 21: Patch Set 19 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Patch Set 23:

(1 comment)
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Patch Set 24:

(4 comments)
|Uploaded patch set 26.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 28: Patch Set 27 was rebased.
|Patch Set 28: Verified+1
|Patch Set 29: Patch Set 28 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 10: Patch Set 8 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 18: Patch Set 17 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Patch Set 18: Verified+1
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Patch Set 23:

(3 comments)
|Uploaded patch set 24.
|Patch Set 24:

(1 comment)
|Uploaded patch set 25.
|Patch Set 24:

(1 comment)
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Patch Set 27:

(1 comment)
|Uploaded patch set 29: Patch Set 28 was rebased.
|Patch Set 29: Code-Review+2 Verified+1
|Patch Set 30: Patch Set 29 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 6:

(11 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 6:

(1 comment)
|Patch Set 8:

Arik- seems that the vm_ids would be left in the db, although the vm won't run. And it is indeed a bug. I don't have how to verify it since multipass is malfunctioning.

After I'll verify there is no any 'magic' that causes it to work, on the first refresh of the vms I'll remove from the host_device table the ids of the the vms that are in 'down' state (I will do it in a separate patch).
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14: Verified+1
|Patch Set 14:

Arik- the fix to your comment on patchset 8 is in https://gerrit.ovirt.org/#/c/38624/13
|Uploaded patch set 15.
|Patch Set 14:

(3 comments)

As Roy and Michal suggested, the vfs scheduling result is now stored in a singleton class called VfScheduler.

All the vfs scheduling logic was moved to the new class and
a test class was added.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 20: Patch Set 18 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Patch Set 23: Verified+1
|Patch Set 24: Patch Set 23 was rebased
|Patch Set 4:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 6:

Some general issues-
1. Shouldn't you update the host_device.vm column when running the vm?
(and clean this value when the vm is no longer running).
2. Since over commitment of device is permitted, on RunVmCommand you should block running a vm with devices the are already attached to a running vm.
|Uploaded patch set 7.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Patch Set 21:

(1 comment)
|Patch Set 21:

(1 comment)
|Uploaded patch set 26.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(3 comments)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 9: Patch Set 7 was rebased.
|Uploaded patch set 10.
|Patch Set 9:

(2 comments)
|Patch Set 10: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(4 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 9: Patch Set 7 was rebased.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 10: Patch Set 8 was rebased.
|Patch Set 10: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 2:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Verified+1
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(4 comments)
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

Omer- once a vm has a vf attached to it, it means the vm user has a direct access to the vf and he can modify it as he wishes.
Since the source host doesn't have any access to the vf once it is attached to a vm there is no way to perform smooth migration.
The are some tricks of how making migration with vfs work, but currently we don't support it.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8: Commit message was updated.
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(3 comments)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11:

(5 comments)
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11:

(4 comments)
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11:

(2 comments)
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11:

(3 comments)
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11:

(5 comments)
|Patch Set 11:

(1 comment)
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 10: Verified+1
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 6:

(4 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 8:

(2 comments)
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Abandoned
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 4:

(2 comments)
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 12.
|Patch Set 12: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Code-Review+1
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 17: Commit message was updated.
|Patch Set 17: -Code-Review Verified+1
|Patch Set 18: Patch Set 17 was rebased
|Patch Set 19: Patch Set 18 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 1:

(7 comments)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 7:

(4 comments)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 4:

What about tests? :)
|Patch Set 5:

(2 comments)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 6:

(4 comments)
|Patch Set 6:

(1 comment)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 5: Code-Review+2
|Patch Set 5:

(2 comments)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 1:

(1 comment)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 7:

(14 comments)
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 13:

(3 comments)
|Patch Set 14: Code-Review+2 Verified+1
|Patch Set 1: Code-Review-2

add_host_nic_vfs_config.sql should be before 03_06_1110_add_vfs_config_networks_and_labels_tables.sql
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 3:

(3 comments)
|Patch Set 10:

(1 comment)
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 14:

(5 comments)
|Patch Set 16:

(1 comment)
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 18: Code-Review+2 Verified+1
|Patch Set 19: Patch Set 18 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: -Code-Review
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 12: Patch Set 10 was rebased.
|Uploaded patch set 13.
|Patch Set 13: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 9:

(2 comments)
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 15: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1:

(3 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 2:

(6 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Code-Review+2 Verified+1
|Patch Set 38: Code-Review+2
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 31:

(4 comments)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2:

(1 comment)

Added the new element to rsdl_metadata.yaml.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Code-Review+1 Verified+1
|Patch Set 6: -Code-Review
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 3:

(2 comments)
|Patch Set 2:

(4 comments)
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 8: Patch Set 7 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+1
|Patch Set 2: -Code-Review Verified+1
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2 Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3:

(3 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 2: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review+1

Will give +2 once Eli will approve.
|Patch Set 3:

(4 comments)

Nice! Just few small comments.
|Patch Set 8: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Abandoned
|Patch Set 8: Code-Review+2

(2 comments)
|Patch Set 8:

(4 comments)
|Patch Set 8:

(2 comments)
|Patch Set 9: Code-Review+2
|Patch Set 6: Code-Review+1
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+2

(1 comment)
|Patch Set 5:

(3 comments)
|Patch Set 6: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review-1

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+1

Please notice Moti added a comment to the patch.
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 14:

(1 comment)
|Patch Set 26:

(3 comments)
|Patch Set 36:

(2 comments)
|Patch Set 51: Code-Review+2
|Patch Set 52: Patch Set 51 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully rebased as e61e1693b96654ddb550213e931e90053f3f2d64
|Patch Set 3: Code-Review+2

(1 comment)
|Patch Set 22: Code-Review+2
|Patch Set 25: Code-Review+2
|Patch Set 26: Patch Set 25 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Patch Set 25: Code-Review+2
|Patch Set 26: Patch Set 25 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+1

(1 comment)
|Patch Set 20: Code-Review+2
|Patch Set 20: Verified+1
|Patch Set 21: Patch Set 20 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 20: Code-Review+2
|Patch Set 21: Patch Set 20 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 19: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 20: Patch Set 19 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 20: Patch Set 19 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 20: Patch Set 19 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Patch Set 19: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 13:

(1 comment)
|Patch Set 23:

(1 comment)
|Patch Set 23: Code-Review+2
|Patch Set 38: Code-Review+2
|Patch Set 39: Patch Set 38 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 11: Code-Review+2
|Patch Set 21: Code-Review+2
|Patch Set 36: Code-Review+2
|Patch Set 37: Patch Set 36 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 20: Code-Review+2
|Patch Set 21: Patch Set 20 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 14: Code-Review+1
|Patch Set 36: Code-Review+2
|Patch Set 40: Code-Review+2
|Patch Set 51: Code-Review+2
|Patch Set 52: Patch Set 51 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 13: Code-Review+1
|Patch Set 25: Code-Review+1
|Patch Set 35: Code-Review+2
|Patch Set 39: Code-Review+2
|Patch Set 50: Code-Review+2
|Patch Set 51: Patch Set 50 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 13: Code-Review+1
|Patch Set 25: Code-Review+1
|Patch Set 35: Code-Review+2
|Patch Set 39: Code-Review+2
|Patch Set 50: Code-Review+2
|Patch Set 51: Patch Set 50 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 15: Code-Review-1

(6 comments)
|Patch Set 28:

(2 comments)
|Patch Set 38:

(1 comment)
|Patch Set 38:

(1 comment)
|Patch Set 53: Code-Review+2
|Patch Set 54: Patch Set 53 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 37: Code-Review+2
|Patch Set 48: Code-Review+2
|Patch Set 49: Patch Set 48 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 16: Code-Review-1

(1 comment)
|Patch Set 28: Code-Review+1
|Patch Set 38: Code-Review+2
|Patch Set 54: Patch Set 53 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 15: Code-Review-1

(1 comment)
|Patch Set 27: Code-Review+2
|Patch Set 37: Code-Review+2
|Patch Set 52: Code-Review+2
|Patch Set 53: Patch Set 52 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 14: Code-Review+1
|Patch Set 35: Code-Review+2
|Patch Set 51: Patch Set 50 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 14: Code-Review+1
|Patch Set 35: Code-Review+2
|Patch Set 50: Code-Review+2
|Patch Set 51: Patch Set 50 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 15:

(2 comments)
|Patch Set 26:

(1 comment)
|Patch Set 36: Code-Review+2
|Patch Set 51: Code-Review+2
|Patch Set 52: Patch Set 51 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 14: Code-Review+1
|Patch Set 25: Code-Review+2
|Patch Set 50: Code-Review+2
|Patch Set 51: Patch Set 50 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 4: Code-Review+2
|Patch Set 15:

Please merge it with http://gerrit.ovirt.org/#/c/33684
|Patch Set 19: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 14:

(2 comments)
|Patch Set 26:

(2 comments)

Seems that you forgot to push the fixes you've done according to patchset 14 comments.
|Patch Set 52: Patch Set 51 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2

(2 comments)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 14:

(8 comments)
|Patch Set 25:

(1 comment)
|Patch Set 34:

(1 comment)
|Patch Set 36: Code-Review+2
|Patch Set 51: Code-Review+2
|Patch Set 52: Patch Set 51 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 7: Code-Review-2

(1 comment)

This patch is uncompleted.
|Patch Set 14: Code-Review+1
|Patch Set 33: Code-Review+2
|Patch Set 33:

no changes since patchset 29
|Patch Set 34: Patch Set 33 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 9:

(25 comments)
|Patch Set 9:

(6 comments)
|Patch Set 22:

(22 comments)
|Patch Set 22:

(5 comments)
|Patch Set 31:

(6 comments)

Publishing the comments so far. The review is not finished yet...
|Patch Set 32:

(1 comment)
|Patch Set 31:

(19 comments)
|Patch Set 31:

(2 comments)
|Patch Set 44: Code-Review+2

(2 comments)

Please notice there are two small comments.
|Patch Set 48: Code-Review+2
|Patch Set 49: Patch Set 48 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 8:

(50 comments)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(2 comments)
|Patch Set 17:

(24 comments)
|Patch Set 8:

(1 comment)
|Patch Set 24:

(11 comments)
|Patch Set 34: Code-Review+2
|Patch Set 35: Patch Set 34 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 6: Code-Review+1
|Patch Set 12: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 5:

(4 comments)
|Patch Set 9: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 19: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 6:

(4 comments)
|Patch Set 10:

(2 comments)
|Patch Set 14: Code-Review+2

There is still a really small comment about a space you've missed in a java doc. Please fix it before pushing the patch.
|Patch Set 19: -Code-Review
|Patch Set 19: Code-Review+1
|Patch Set 22: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 5: Code-Review-1

(5 comments)
|Patch Set 9:

(2 comments)
|Patch Set 10: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 6: Code-Review+1
|Patch Set 13: Code-Review+2
|Patch Set 11: Code-Review+2
|Patch Set 24: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 7: Code-Review+1
|Patch Set 28: Patch Set 27 was rebased
|Change has been successfully rebased as 12ec5c547c13f5c2dc93b514fb8a0cea3a070583
|Patch Set 8: Code-Review+1
|Patch Set 11: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 5: Code-Review+1
|Patch Set 8: Code-Review+2
|Patch Set 17: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+1
|Patch Set 7: Code-Review-1

Please merge this patch with http://gerrit.ovirt.org/#/c/33499
|Patch Set 9: Code-Review+2
|Patch Set 17: Code-Review+2
|Patch Set 18: Patch Set 17 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 7: Code-Review+1
|Patch Set 10: Code-Review+2
|Patch Set 9: Code-Review+2
|Patch Set 18: Code-Review+2
|Patch Set 19: Patch Set 18 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 6: Code-Review+1
|Patch Set 9: Code-Review+2
|Patch Set 17: Code-Review+2
|Patch Set 18: Patch Set 17 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+1
|Patch Set 6: Code-Review+2
|Patch Set 13: Code-Review+2
|Patch Set 14: Patch Set 13 was rebased
|Change has been successfully rebased as e6d4471bac4208b7447db92e4b62158b8a6d49ae
|Patch Set 10: Code-Review+2

Please make sure there a no jenkins errors
|Patch Set 14:

(1 comment)
|Patch Set 14:

(1 comment)
|Patch Set 14:

(1 comment)
|Patch Set 14:

(1 comment)
|Patch Set 14: Verified-1
|Patch Set 14:

(1 comment)
|Patch Set 14:

(1 comment)
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 22: Patch Set 21 was rebased
|Patch Set 22: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 5: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 8: Code-Review+1

+1 frontend
|Patch Set 4:

(1 comment)
|Patch Set 10:

(4 comments)
|Patch Set 14:

(1 comment)
|Patch Set 16:

(1 comment)
|Patch Set 19: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)

Please notice there is a small inline comment.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 10: Code-Review+2
|Patch Set 9:

(6 comments)
|Patch Set 13:

(2 comments)
|Patch Set 9:

(1 comment)
|Patch Set 14: Code-Review+2
|Patch Set 10:

(2 comments)
|Patch Set 14: Code-Review+2
|Patch Set 4: Code-Review+2

(3 comments)
|Patch Set 7: Code-Review+2
|Patch Set 4:

(6 comments)
|Patch Set 9: Code-Review+2
|Patch Set 3:

(3 comments)
|Patch Set 6: Code-Review+2
|Patch Set 3:

(3 comments)
|Patch Set 3:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2

(2 comments)
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 2:

(3 comments)
|Patch Set 4: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 7:

(2 comments)
|Patch Set 7: Code-Review-1

This patch should be merged into- http://gerrit.ovirt.org/#/c/32781
|Patch Set 1: Code-Review+2
|Patch Set 7:

(6 comments)
|Patch Set 8: Code-Review+2
|Patch Set 8:

Please add tests. It can be done in a separate patch.
|Patch Set 11: Code-Review+2
|Patch Set 2:

(4 comments)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1

+1 frontend
|Patch Set 2:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review

From gui perspective it is +2. But since there is open discussion on engine patch I&quot;ll give the +2 after the engine patch will be approved.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

The changes in this patch should be done automatically by zanata. But since it is urgent for the build, was fixed manually.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully rebased as 2dae71732abe3c578f71a39b58d070c8cd90e7a8
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit ea54f03c2843ab50ca4b13f80f52375fa85a67c5
|Patch Set 1: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit e5d7cd5a42d6b48a28082e12de927386193021ad
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review-1

(11 comments)

PLUGGED_UNLINKED_VM_INTERFACE_WITH_EXTERNAL_NETWORK_IS_NOT_SUPPORTED entry should be added also to the user portal AppErrors.properties file.
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Abandoned

Was pushed to 3.5 by mistake.
|Restored
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 10: Code-Review-1

(12 comments)
|Patch Set 12:

(8 comments)
|Patch Set 10:

(3 comments)
|Patch Set 13:

(6 comments)
|Patch Set 15: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Change has been successfully rebased as dae9285bc08774f9b903ffb596196b03fd2f9d2b
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Abandoned

Target release is 3.6
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit 61c8cd6fed52ac0b9d2f9784f3bd57fe8362cc30
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Change has been successfully merged into the git repository.
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit c8c09af166e5e2cf21fdf918b9c96466e706e81d
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully rebased as b0238c4650745a8fae5764b9f3d864200c162330
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit bf124d04ab81cd41f90715a3bf39d192815959dd
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

I&quot;ve asked Martin. What he was talking about in the bug is the header splitters.
So I don't think there is any reason to involve the ux team.
Nobody complained about the division of the columns, and I think the division is correct.
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit 52a68dcd03c1e6d303dfe1d7292d9709464174e6
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(3 comments)
|Patch Set 2:

As we discussed just summarizing the problems that came up-
1. Menu operations don't update the status panel.
2. Since successful label attachment to a nic doesn't provide any error. If there is a warning in the status bar it will remain.
3. There is no benefit to 'keepStatusText' functionality introduced in the view. It just causes the bug in point 2.
4. Is there any scenario we want to get the 'drag to make changes' message after the initial one was overridden? If no, there is no need for the view to set it (init the status panel) upon each redraw (nicsChangedEvent).

Another problem not directly related to this patch-
Adding label to nic (not bond) with 'out-of-sync' and I guess also 'unmanaged' networks provides the following error-
&quot;Cannot perform bond operation with an out-of-sync network. You could detach net4 first.&quot;
|Patch Set 4: Code-Review+2

(1 comment)

Please fix the small inline comment.
|Patch Set 1:

(2 comments)
|Patch Set 4:

(1 comment)

Didn't see on the bug that #comment 6 was verified by danken.
Please ask him to verify it.
|Patch Set 5: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: -Code-Review Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully rebased as 6ad2eb5bf5e330f8a7d840286b24136b03896ed9
|Patch Set 1:

(6 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 5:

(7 comments)
|Patch Set 7:

(1 comment)
|Patch Set 10: Code-Review+2
|Patch Set 12:

(3 comments)
|Patch Set 13:

(2 comments)
|Patch Set 12:

(3 comments)
|Patch Set 14:

(1 comment)
|Patch Set 12:

(1 comment)
|Patch Set 16: Code-Review+2
|Patch Set 11:

(4 comments)
|Patch Set 12:

(2 comments)
|Patch Set 12:

(1 comment)
|Patch Set 14: Code-Review+2
|Patch Set 11:

(3 comments)
|Patch Set 12: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 7:

(10 comments)
|Patch Set 11: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1

well done!
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

Sure, it was verified with unit tests.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit fe099cb139e421521b757b05f900f24029631239
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Change has been successfully merged into the git repository.
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit accfcdb74f52061a9b8090e8cd7944cc6f77f3de
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully rebased as e71e719e0f8e90b30fb0f7c57ce7de4b07cb963d
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit dbdddacba4040dc88870b1a34d85f5de61591f81
|Patch Set 2: Code-Review+1

+1 for frontend
|Patch Set 8:

(6 comments)
|Patch Set 9:

(2 comments)
|Patch Set 10: Code-Review+1

+1 for frontend
|Patch Set 11: Code-Review+1

+1 for frontend
|Patch Set 3:

(5 comments)
|Patch Set 5: Code-Review+1

+1 for frontend
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(2 comments)

You are right. The tab validation definitely should be done in a more generic manner. But since now we are backporting bugs to ovirt_35, I don't think it is the time to do such infra change.
Can be done as a feature to 3.6:)
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully rebased as 39fa0d98b4d58454a77783f958497abcf0197774
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch master as commit 22199ca101161e071511d9d4ba337609ec4f1198
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully rebased as c57055367478087dbdb3602671f8331b747bd9df
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit 9fb1cb5814cc50d8d3d239b25a07b2ff98c0f89b
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: -Code-Review Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully rebased as 27b97db8ba54239eb7a01477fea4e499df1ba395
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit 3ee3e0a49541e72c02ee653fac76126b30850e81
|Patch Set 2: Code-Review+2
|Patch Set 2:

(3 comments)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully rebased as 34033ddadccaddd087b74ef86fab992e68fe6398
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit dd125e0d0584e3ffa096e10198b3f44de5326a36
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully rebased as 51ddc05a23abc8ccc1b868d3d7ecec3b93351e8d
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit 8cdf267e11d3913964161d81c85b1df6a3b3a2c2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(4 comments)
|Patch Set 4:

(4 comments)
|Patch Set 5:

(2 comments)
|Patch Set 6: Code-Review+2
|Patch Set 1:

(3 comments)
|Patch Set 2:

(20 comments)

Well done! :)
Just few small comments.
Please note the comment in EnumTranslator, it can cause bugs.
|Patch Set 3:

(2 comments)

I think you can change Translator to be an interface in this patch. But as you wish, I don't really care if it will be in a separate patch.
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4:

(7 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 9:

(15 comments)
|Uploaded patch set 11.
|Patch Set 9:

(1 comment)
|Uploaded patch set 12.
|Patch Set 11:

(1 comment)
|Patch Set 12: Verified+1
|Patch Set 13: Patch Set 12 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review-1

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 5: Code-Review+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 6:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Change has been successfully rebased as ec0ad38f3c8477cde6b6b4c2e8bb6d85aee7ba28
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

1. There is no limit. All the radio buttons will be displayed vertically.
I&quot;m not sure if there will be a scroll bar if needed.
2. Each radio button resides in a separate panel. RadioGroup has method- getPanel(K key) which returns the panel of the radioButton.
So the user can control the layout of the panels.

It was enough for me. IMO, if anyone needs more (scroll bar, horizontal alignment) he can extract the class.
|Uploaded patch set 5.
|Patch Set 4:

(5 comments)
|Patch Set 5: Verified+1
|Patch Set 6: Commit message was updated
|Patch Set 7: Patch Set 6 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 8: Patch Set 7 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

Lior,
To show all the labels data we should have labels on both
1. Interface/bond name- to show all the labels on the interface.
2. Network name- to indicate if the network it attach to the nic via label- and show which label.

After discussing it with Livnat and Moti we decided to add the label tag just next to the interface/bond name (1). Because if we&quot;ll have 1 and 2 the subtab will be too loaded.
If the user want to see 2 he can open setup networks dialog and easily see it.
|Patch Set 3:

(6 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 6: Verified+1
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved

(1 inline comment)


|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review-1

(3 comments)
|Patch Set 8: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 10: Code-Review+2
|Patch Set 2:

(4 comments)
|Patch Set 2:

(1 comment)
|Patch Set 10: Code-Review-1

(3 comments)
|Patch Set 11: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(4 comments)
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 2:

(6 comments)
|Uploaded patch set 4.
|Patch Set 3:

(3 comments)
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 10:

(5 comments)
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12:

(2 comments)
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

Hi Greg,

The edit icons are still in the wrong place. And the whole dialog still looks really bad- there should be spacing between the panels in the dialog.
|Patch Set 1:

Sent to you the print-shots via email.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Commit message was updated
|Patch Set 6: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Hi Juan,

I've rebased and verified the patch.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2

(1 comment)

Please fix the comment before merging.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(2 comments)
|Patch Set 5: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Where is the code? :)
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully rebased as 17d4285e3ee5843cd180d12f43f498f379acf031
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5:

(2 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

Didn't find any call to this query. It doesn't even have an entry in VdcQueryType.
|Patch Set 5:

Please ignore my last comment.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 12: -Verified
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(4 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 12:

(2 comments)
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

yes, the tests are fixed in phase 2
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(2 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(4 comments)
|Uploaded patch set 8.
|Patch Set 7:

(3 comments)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 6:

(3 comments)
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 1:

(5 comments)

There is a bug- when editing a dns server name the &quot;+&quot; button should become enabled.
Currently it become enabled just when the name field loses focus.
|Patch Set 8:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 1:

(4 comments)
|Patch Set 8:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 7: Code-Review+2

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully rebased as eeb9b550e7a697376e28ea77389731779ad1674f
|Patch Set 13: Code-Review+2

Please add TODO comment to remove this ugly code when you are refactoring CustomPropertiesUtils.
|Patch Set 13: Code-Review+2

(1 comment)

Please notice the tiny comment.
|Patch Set 5:

(2 comments)
|Patch Set 7: Code-Review+1

+1 for frontend
|Patch Set 1: Code-Review+2
|Patch Set 9: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Change has been successfully rebased as 8a2bd8b3e79d39acf297b3b2bca5d14455e5eaf9
|Patch Set 2:

(10 comments)
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 4: Commit message was updated
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 2:

(11 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5:

(3 comments)
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: -Verified
|Patch Set 2: Verified+1 -Code-Review
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Abandoned

Already merged to master.
Not needed by any bug in 3.4.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2: -Verified
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 2:

(3 comments)
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 7:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(2 comments)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2

(1 comment)

Please change the commit message.
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Patch Set 5: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(7 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Patch Set 2:

Consider introducing the same fix to EnterIgnoringFocusHandler.java
Changing-
if (event.getTypeInt() == Event.ONKEYPRESS) {
 enterPressed();
}
to ONKEYDOWN.
There is similar bug in chrome and new FF versions (26.0.0) the text area catches KEYDOWN but doesn't catch KEYPRESS.
In ff older version it catches both of them, so it should be ok to change it to KEYPRESS.
|Patch Set 3: Looks good to me, but someone else must approve

remove trailing whitespaces.
|Patch Set 1: Looks good to me, but someone else must approve

for frontend
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 7: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2:

(2 comments)
|Patch Set 12: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 4: (1 inline comment)


|Patch Set 8: Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 7: Looks good to me, approved


|Patch Set 12:

(3 comments)
|Patch Set 18: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 10: Code-Review+2

(3 comments)
|Patch Set 10: Code-Review+2

(1 comment)
|Patch Set 10: Code-Review+2

(4 comments)
|Patch Set 2: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+1
|Uploaded patch set 10.
|Patch Set 10: Code-Review+2
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Abandoned

The design has changed. Decided to move the can do action to the add/updateVnic level.
|Patch Set 3: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11:

(4 comments)
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 14: Code-Review+2

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Code-Review+2
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Abandoned

Custom properties moved to vnic profiles. This patch is not relevant any more.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 3:

(5 comments)
|Patch Set 5: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 4.
|Patch Set 2:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Patch Set 2:

(8 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 17.
|Uploaded patch set 20.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Patch Set 3: Code-Review+2
|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 31.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Patch Set 32: Code-Review+1
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 28.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 28.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 28.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 28.
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 17.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 31.
|Patch Set 33: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 7.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 7.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Patch Set 32: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 7.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Patch Set 32: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 7.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 31.
|Patch Set 34: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 18.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Patch Set 28: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 6.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 21.
|Uploaded patch set 24.
|Patch Set 22:

(6 comments)
|Uploaded patch set 25.
|Uploaded patch set 26.
|Patch Set 19:

(13 comments)
|Uploaded patch set 29.
|Uploaded patch set 32.
|Patch Set 33: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 18.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 29.
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 18.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 29.
|Uploaded patch set 2.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 17.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 28.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Patch Set 26: Code-Review+1
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Patch Set 25: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 12.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Patch Set 24: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 6.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 9.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 20.
|Patch Set 21: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 9.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 17.
|Uploaded patch set 20.
|Patch Set 21: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 16.
|Uploaded patch set 19.
|Patch Set 20: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 16.
|Uploaded patch set 19.
|Patch Set 20: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 16.
|Uploaded patch set 19.
|Patch Set 20: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 8.
|Patch Set 7:

(2 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 16.
|Uploaded patch set 19.
|Patch Set 20: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 8.
|Patch Set 7:

(3 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 16.
|Uploaded patch set 19.
|Patch Set 20: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 14.
|Patch Set 14:

(1 comment)
|Patch Set 15: Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 14.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 9.
|Uploaded patch set 12.
|Patch Set 13: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 9.
|Uploaded patch set 12.
|Patch Set 12: Code-Review+2

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+1
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 17.
|Uploaded patch set 19.
|Uploaded patch set 21.
|Uploaded patch set 25.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 39.
|Patch Set 40: Code-Review+1
|Uploaded patch set 17.
|Uploaded patch set 19.
|Uploaded patch set 21.
|Uploaded patch set 25.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 39.
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 27.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Uploaded patch set 41.
|Patch Set 42: Code-Review+1
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 27.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Uploaded patch set 41.
|Patch Set 42: Code-Review+1
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 27.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Uploaded patch set 41.
|Patch Set 42: Code-Review+1
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 18.
|Uploaded patch set 23.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 31.
|Uploaded patch set 34.
|Uploaded patch set 37.
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 27.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Uploaded patch set 41.
|Patch Set 42: Code-Review+1
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 22.
|Uploaded patch set 25.
|Uploaded patch set 28.
|Patch Set 30: Code-Review+1
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 22.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 10.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 19.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Patch Set 35: Code-Review+1
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 29.
|Patch Set 31: Code-Review+1
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 24.
|Patch Set 24: Code-Review+1

+1 for frontend
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Patch Set 34: Code-Review+2
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 35.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 35.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 35.
|Patch Set 37: Code-Review+1
|Uploaded patch set 9.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 26.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 9.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 26.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 27.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Uploaded patch set 41.
|Uploaded patch set 2.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 18.
|Uploaded patch set 23.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 31.
|Uploaded patch set 34.
|Uploaded patch set 37.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 35.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 15.
|Uploaded patch set 20.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 29.
|Uploaded patch set 32.
|Uploaded patch set 35.
|Uploaded patch set 9.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 27.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 30.
|Patch Set 31:

(5 comments)
|Patch Set 23:

(12 comments)
|Uploaded patch set 33.
|Patch Set 23:

(1 comment)
|Uploaded patch set 34.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Patch Set 41: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 30.
|Uploaded patch set 33.
|Patch Set 25:

(17 comments)
|Uploaded patch set 34.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Patch Set 41: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 31.
|Uploaded patch set 17.
|Uploaded patch set 19.
|Uploaded patch set 21.
|Uploaded patch set 25.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 33.
|Uploaded patch set 36.
|Uploaded patch set 39.
|Patch Set 40: Code-Review+1
|Uploaded patch set 19.
|Uploaded patch set 21.
|Uploaded patch set 23.
|Uploaded patch set 27.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 35.
|Uploaded patch set 38.
|Uploaded patch set 41.
|Uploaded patch set 34.
|Uploaded patch set 36.
|Uploaded patch set 38.
|Uploaded patch set 42.
|Uploaded patch set 44.
|Uploaded patch set 45.
|Uploaded patch set 46.
|Uploaded patch set 50.
|Uploaded patch set 53.
|Uploaded patch set 56.
|Patch Set 57: Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 1: Code-Review+2
|Abandoned

The changes were added to the relevant patches
|Uploaded patch set 5.
|Patch Set 1: Code-Review+2
|Patch Set 2: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Abandoned

Was substituted by http://gerrit.ovirt.org/#/c/17322/
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 13: Abandoned

Moved to Lior's patches
|Patch Set 1: Rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 12: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 9: Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 6: Rebased
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: (7 inline comments)


|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 16: (3 inline comments)


|Patch Set 16: Abandoned

move to http://gerrit.ovirt.org/#/c/16933
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 18: (1 inline comment)


|Patch Set 18: Abandoned

moved to http://gerrit.ovirt.org/#/c/16934
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 13: Abandoned

Was replaced by Lior's patches.
|Patch Set 11: Abandoned

Was replaces by- http://gerrit.ovirt.org/#/c/16893
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: (3 inline comments)


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved

(6 inline comments)


|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: (2 inline comments)

The name discover is not good any more...
The model can be called ImportProviderNetworksModel.
The view can be called ImportNetworksPopupView.
|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: (2 inline comments)


|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved

(2 inline comments)


|Patch Set 9: Verified; Looks good to me, approved

(1 inline comment)

I&quot;ll merge this patch. Please fix my comment in a separate patch.
|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Patch Set 6: Rebased
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 5: (1 inline comment)


|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: (2 inline comments)


|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8: (4 inline comments)


|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8: Looks good to me, approved


|Patch Set 11: Rebased
|Patch Set 12: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8: (1 inline comment)


|Patch Set 11: Rebased
|Patch Set 12: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 8: Rebased
|Patch Set 9: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8: Looks good to me, approved

(1 inline comment)


|Patch Set 11: Rebased
|Patch Set 12: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: (1 inline comment)


|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 15: Looks good to me, approved

(2 inline comments)


|Patch Set 18: Looks good to me, approved


|Patch Set 22: Rebased
|Patch Set 23: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved


|Patch Set 7: Rebased
|Patch Set 8: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 6: Looks good to me, approved

(2 inline comments)


|Patch Set 9: Looks good to me, approved


|Patch Set 14: Rebased
|Patch Set 15: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 15: Looks good to me, approved


|Patch Set 15: Looks good to me, but someone else must approve


|Patch Set 15: Abandoned

Was squashed into http://gerrit.ovirt.org/#/c/15843/
|Patch Set 1: Looks good to me, approved


|Patch Set 7: (3 inline comments)


|Patch Set 7: (1 inline comment)

Some verification comments-
- The &quot;empty network&quot; doesn't exist in the Vm-&gt;network interface new/edit dialogs although it is on supported cluster version.
- I think that empty line in the network list is better than &quot;No Network&quot;.
|Patch Set 8: (13 inline comments)


|Patch Set 9: (1 inline comment)

I still don't see the &quot;null&quot; network in the network list of the vnic (even the cluster version supports it).

Previously the problem was just in the vm-&gt;vnic add/edit dialog. Now the vm dialog also doesn't have the &quot;null&quot; network...
|Patch Set 10: Verified; Looks good to me, approved

You are right. The NetworkLinkingSupported for 3.3 was set to false...
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 19: Looks good to me, approved

(2 inline comments)


|Patch Set 19: Looks good to me, but someone else must approve


|Patch Set 19: Abandoned

duplicate of http://gerrit.ovirt.org/#/c/15843/
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (4 inline comments)


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified


|Uploaded patch set 12.
|Patch Set 13: Rebased
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 2: (2 inline comments)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 2: (2 inline comments)


|Patch Set 3: (9 inline comments)


|Uploaded patch set 4.
|Patch Set 4: (6 inline comments)


|Uploaded patch set 5.
|Patch Set 5: (4 inline comments)


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: (3 inline comments)


|Uploaded patch set 10.
|Patch Set 10: Verified


|Uploaded patch set 11.
|Patch Set 11: Verified; Looks good to me, approved


|Patch Set 11: Rebased
|Patch Set 12: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 6: I would prefer that you didn't submit this

(1 inline comment)

I think that the initializing the dc is very different for each use of the network model. Therefore it shouldn't be part of the NetworkModel.

In this patch you missied Dc/ClusterListModel which use NetworkModel as well (and don't need backend query to init the dc).

Also there was functionality (NetworkListModel) to avoid backend query by getting the dc from the tree context.
Why did you remove this functionality?
|Patch Set 6: Looks good to me, approved

(1 inline comment)


|Patch Set 14: (1 inline comment)


|Patch Set 14: (1 inline comment)


|Patch Set 14: (1 inline comment)


|Patch Set 16: (3 inline comments)


|Patch Set 5:

For frontend
|Patch Set 5: Looks good to me, but someone else must approve

for frontend
|Patch Set 1: Looks good to me, but someone else must approve

for frontend
|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: No score


|Patch Set 1: Looks good to me, approved


|Patch Set 2: (2 inline comments)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 7.
|Patch Set 8: Verified


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: (2 inline comments)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Rebased
|Patch Set 7: (1 inline comment)


|Uploaded patch set 8.
|Patch Set 8: Rebased
|Patch Set 9: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5:

I think you don't need this exclusion.
You can use (String)AsyncDataProvider.getConfigValuePreConverted(ConfigurationValues.ManagementNetwork) in each of the places that use ENGINE_NETWORK_NAME.
|Patch Set 9: (3 inline comments)


|Patch Set 10: Looks good to me, but someone else must approve

for frontend
|Patch Set 1: (1 inline comment)


|Patch Set 1: (3 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 10: Verified


|Uploaded patch set 11.
|Patch Set 12: Verified


|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified; Looks good to me, approved


|Patch Set 15: Rebased
|Patch Set 16: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 13: Verified


|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 18: Verified


|Change has been successfully merged into the git repository.
|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: (1 inline comment)


|Uploaded patch set 10.
|Uploaded patch set 13.
|Uploaded patch set 16.
|Uploaded patch set 18.
|Patch Set 18: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 12: (7 inline comments)


|Patch Set 13: (2 inline comments)


|Uploaded patch set 14.
|Patch Set 14: Verified


|Uploaded patch set 17.
|Patch Set 15: (6 inline comments)


|Uploaded patch set 18.
|Patch Set 22: Verified


|Patch Set 22: No score


|Uploaded patch set 23.
|Uploaded patch set 25.
|Patch Set 25: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified


|Uploaded patch set 10.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 18: Verified


|Uploaded patch set 19.
|Uploaded patch set 21.
|Patch Set 21: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 15: Rebased
|Patch Set 16: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1:

1. As Yair mentioned- please update also AppErrors.java (under frontend)
2. You shouldn't updated the localized properties files (*_locale.properties). This is done by the localization group.
|Uploaded patch set 7.
|Uploaded patch set 7.
|Patch Set 1: Looks good to me, approved


|Patch Set 4:

Hi Tomas,

I don't really understand why do you need builders here.
Why can't you use the current models for the instance types.

Why are instance types so special? Why can't they be part or extension of the existing hierarchy?

I think that the use of the builders in this patch makes the code less readable.
I know the code of the models in the patch very well and it was hard for me to understand the flow with the new code:)
|Patch Set 4:

Thanks for the explanation:)
I understand the vm model cannot extend the vnic models.
In this case I suggest the VmModel will contain the VnicModel.

What do you think about it?
|Patch Set 4:

I prefer to move the common code to one helper class (maybe something like the vm behaviours classes) and not to a lot of small classes.

I think it&quot;ll make the code more maintainable and readable.
InitEditSelectedNetworkBuilder sounds more like a method name and not a class name. I think it makes more sense to put its code as a method in a bigger class.
|Patch Set 4:

I agree that util class with static methods is a very bad idea.

This is not what I suggested.
I suggested to use something like vm behaviours.
The behaviours have instances and inheritance can be used.

Just instead of having hundreds pieces of code- which is the result of the builders oriented design. All the common code (and there is not so much) will be organized in one place.

It is unreadable to have a class per method. Using builders everywhere make the code to look like a thousand pieces puzzle.

About the chaining. I don't see its advantages in this case.
I see just one big disadvantage- the code looks like a long unreadable line.
Can you please explain what are the benefits?
|Patch Set 4: I would prefer that you didn't submit this


|Patch Set 7: (4 inline comments)


|Patch Set 14: Looks good to me, approved


|Patch Set 7: Looks good to me, approved

(1 inline comment)


|Patch Set 7: Looks good to me, approved


|Patch Set 1: (1 inline comment)


|Patch Set 7: Looks good to me, approved


|Patch Set 7: Looks good to me, approved


|Patch Set 8: Looks good to me, approved


|Patch Set 6: Looks good to me, approved


|Patch Set 6: Looks good to me, approved

(1 inline comment)


|Patch Set 5: (4 inline comments)


|Patch Set 10: Looks good to me, approved

(1 inline comment)


|Patch Set 5: Looks good to me, approved

(1 inline comment)


|Patch Set 5: Looks good to me, approved

(1 inline comment)


|Uploaded patch set 3.
|Patch Set 15: Looks good to me, approved


|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 18: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 18: Looks good to me, but someone else must approve


|Patch Set 8: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 8:

for frontend side
|Patch Set 12: Looks good to me, approved


|Patch Set 1: (14 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 10: (11 inline comments)


|Patch Set 14: (7 inline comments)


|Patch Set 15: Looks good to me, approved


|Patch Set 5: Looks good to me, approved


|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 12: (3 inline comments)


|Patch Set 13: (2 inline comments)


|Patch Set 14: Looks good to me, approved


|Patch Set 8: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 3: Rebased
|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Abandoned

This bug is duplicate of 951040 and was already fixed.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Patch Set 1: Verified


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Abandoned

In the past there was a cleanup patch to remove the dual mode support- http://gerrit.ovirt.org/#/c/9491/
But this patch didn't clean the 8139_pv enum status.

If we remove the status we&quot;ll have to-
- Add complicated upgrade script (to substitute the existing dual mode with another mode, depending if the vm has an agent).
- Add ovf support for old vnics with dual mode.
- Keep an entry in the VmInterfaceType with &quot;0&quot; value.

This is to much overhead. Decided to leave the code as is.
|Patch Set 6: (9 inline comments)

Nice!
|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 1: (2 inline comments)


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: (3 inline comments)


|Patch Set 6: Rebased
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: (1 inline comment)


|Patch Set 4: Looks good to me, approved


|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 9: (3 inline comments)


|Patch Set 9: (1 inline comment)


|Patch Set 12: Looks good to me, approved


|Patch Set 13: Rebased
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Patch Set 1: Abandoned

The bugs were closed as duplicate of Bug 915950 - Resizable columns in sub-tabs.
|Uploaded patch set 2.
|Patch Set 2: Abandoned

The bugs was closed as duplicate of Bug 915950 - Resizable columns in sub-tabs.
|Uploaded patch set 2.
|Patch Set 2: Abandoned

The bug was closed as duplicate of Bug 915950 - Resizable columns in sub-tabs.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Abandoned

The bugs were closed as duplicate of Bug 915950 - Resizable columns in sub-tabs.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Abandoned

squashed into http://gerrit.ovirt.org/#/c/13989/
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Patch Set 6: (1 inline comment)


|Patch Set 13: Looks good to me, approved


|Patch Set 13: Rebased
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 6: (1 inline comment)


|Patch Set 13: Looks good to me, approved


|Patch Set 13: Rebased
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 6: Looks good to me, approved


|Patch Set 13: Looks good to me, approved


|Patch Set 13: Rebased
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: (2 inline comments)


|Patch Set 5: Looks good to me, approved

(1 inline comment)


|Patch Set 6:

Please verify this patch for 3.0 bond popup.
|Patch Set 11: Looks good to me, approved


|Patch Set 12: Verified; Looks good to me, approved


|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved

(2 inline comments)


|Patch Set 2: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 1: (2 inline comments)


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 5: (5 inline comments)


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Rebased
|Patch Set 9: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 9:

I think the problem is we have common models (like UnitVmModel) that most of their usage logic resides in the list models (e.g VmListModel, UserPortalListModel), and therefore duplicated in each list model.
In my opinion the solution should be to move that logic to the model itself (e.g. moving methods like VmListModel.Edit/OnSave to UnitVmModel).

I have done this work for NetworkModel and VmInterfaceModel.
All the list models that use these models just need to create the model and set the window.

I think that if we do this for all the duplicate code in the list models, there will be no need for builders.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Rebased
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 3: (2 inline comments)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified; Looks good to me, approved


|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: (4 inline comments)


|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified; Looks good to me, approved


|Patch Set 13: Rebased
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2: (1 inline comment)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 5: (3 inline comments)


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified; Looks good to me, approved


|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Abandoned

This patch was squashed into http://gerrit.ovirt.org/#/c/12962/
|Patch Set 3:

Why not just show the coDoAction message? Why do we need these prefixes?
The canDoAction messages are informative enough. I think these prefixes doesn't have any added value.
|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 2: (6 inline comments)


|Patch Set 4: Looks good to me, approved


|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, approved


|Patch Set 2: No score


|Patch Set 2: (2 inline comments)


|Patch Set 2: I would prefer that you didn't submit this

I think that leaving the sorting in the view side is fine and avoids making the code much more complex. Patch http://gerrit.ovirt.org/#/c/12001/ is enough to fix all the SetupNetworks sorting issues.
|Patch Set 5: (1 inline comment)


|Patch Set 5: (1 inline comment)


|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Do not submit

I think that leaving the sorting in the view side is fine and avoids making the code much more complex.
Patch http://gerrit.ovirt.org/#/c/12001/ is enough to fix all the SetupNetworks sorting issues.
|Patch Set 8: I would prefer that you didn't submit this


|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 1: (2 inline comments)


|Patch Set 2: Verified


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7: Looks good to me, but someone else must approve


|Uploaded patch set 8.
|Patch Set 8: Rebased
|Patch Set 9: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: (1 inline comment)


|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: No score


|Patch Set 1:

This code it too coupled to the way the backend sorts the query.
Also, the setup networks can use the created items map instead of building the same structure on every load.
|Patch Set 6: (2 inline comments)


|Patch Set 7: Looks good to me, approved


|Patch Set 7: Rebased
|Patch Set 8: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: (1 inline comment)


|Patch Set 6: Looks good to me, approved


|Patch Set 6: Rebased
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebsed
|Change has been successfully merged into the git repository.
|Patch Set 3: (5 inline comments)


|Patch Set 8: (6 inline comments)


|Patch Set 10: (2 inline comments)


|Patch Set 11: Looks good to me, approved


|Patch Set 12: Looks good to me, approved

rebased
|Patch Set 12: Rebased
|Patch Set 13: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Uploaded patch set 3.
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 5: Rebased
|Patch Set 6: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Abandoned

There is no agreement about what is the bug.
Whether the fix should be converting the reported statistics from MEGABYTES_PER_SECOND to BYTES_PER_SECOND or leave it as is and just fix the displayed units in the rest-api to MEGABYTES_PER_SECOND.

A new patch will be submitted after getting a decision.
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Looks good to me, approved


|Patch Set 2: Verified

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Rebased
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Abandoned

This patch was pushed by mistake to engine_3.2 branch
|Patch Set 3: Looks good to me, but someone else must approve

+1 for frontend
|Patch Set 1: Rebased
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 5: (1 inline comment)


|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved

(3 inline comments)


|Patch Set 4: No score


|Patch Set 5: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved

rebased
|Uploaded patch set 8.
|Patch Set 8: Verified; Looks good to me, approved

rebased
|Uploaded patch set 9.
|Patch Set 9: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 9: Looks good to me, but someone else must approve

+1 for frontend
|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

+1 for frontend
|Patch Set 1: (3 inline comments)


|Patch Set 2: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: (1 inline comment)


|Patch Set 1:

What about the drag and drop functionality?
When moving to GWT 2.4, the DnDPanel and the DnD Events should be removed.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Abandoned

Decided to leave the previous behaviour.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Rebased
|Patch Set 7: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified; Looks good to me, approved

rebased
|Patch Set 10: Rebased
|Patch Set 11: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified


|Uploaded patch set 12.
|Patch Set 12: Verified


|Uploaded patch set 13.
|Patch Set 13: Verified


|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 15: (4 inline comments)


|Uploaded patch set 17.
|Patch Set 17: Rebased
|Patch Set 18: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4: (1 inline comment)


|Uploaded patch set 6.
|Patch Set 6: Rebased
|Patch Set 7: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: (2 inline comments)


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Patch Set 7: Looks good to me, approved


|Patch Set 7: No score


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 2: Looks good to me, approved


|Patch Set 5: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 6: (1 inline comment)


|Patch Set 7: Looks good to me, approved


|Patch Set 6: Looks good to me, approved


|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, approved


|Patch Set 2: Verified


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Patch Set 31: (4 inline comments)


|Patch Set 35: Verified


|Patch Set 35: Rebased
|Patch Set 36: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (2 inline comments)


|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 17: (3 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (2 inline comments)


|Uploaded patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 17: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Patch Set 17: (1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 10: (1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 11: (3 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 14: (4 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 6.
|Uploaded patch set 8.
|Patch Set 1: Abandoned

squashed into http://gerrit.ovirt.org/#/c/9565/
|Patch Set 4: Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 9: Abandoned

duplicate of http://gerrit.ovirt.org/#/c/9769/
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: (1 inline comment)


|Uploaded patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Patch Set 19: Abandoned

duplicate of http://gerrit.ovirt.org/#/c/9798/
|Patch Set 2: Looks good to me, approved

(2 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 5: Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 3: (3 inline comments)


|Patch Set 6: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 3: (7 inline comments)


|Patch Set 6: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 1: Verified


|Patch Set 1: No score; Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Patch Set 1: (2 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Uploaded patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 12: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: (3 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: (3 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: (3 inline comments)


|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 3: (3 inline comments)


|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 7: (1 inline comment)


|Uploaded patch set 9.
|Patch Set 9: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 3: (3 inline comments)


|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved

rebased
|Patch Set 6:

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 4: (9 inline comments)


|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 4: (4 inline comments)


|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved

rebased
|Patch Set 7:

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 8: (1 inline comment)


|Uploaded patch set 10.
|Patch Set 10: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: (12 inline comments)


|Uploaded patch set 11.
|Patch Set 11: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 3: Looks good to me, approved


|Patch Set 4: Looks good to me, approved


|Patch Set 5: Looks good to me, approved


|Patch Set 4: Looks good to me, approved

(1 inline comment)


|Patch Set 1: (2 inline comments)


|Patch Set 2: Looks good to me, approved


|Patch Set 2: Rebased
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 5.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 2: (2 inline comments)


|Patch Set 3: Looks good to me, approved


|Patch Set 1: (1 inline comment)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 7.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 6.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (1 inline comment)


|Patch Set 1: (5 inline comments)


|Patch Set 8: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 1: (4 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve

+1 for frontend
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Abandoned

Was pushed by mistake
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Patch Set 3: Rebased
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Patch Set 1: Verified


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Abandoned

will be pushed later.
|Patch Set 1: Restored
|Patch Set 1: Verified


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified

+1 for frontend
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, but someone else must approve

+1 for frontend
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, but someone else must approve

+1 for frontend files
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: Rebased
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 2: No score


|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Change has been successfully merged into the git repository.
|Patch Set 1: (2 inline comments)


|Patch Set 2: Looks good to me, approved


|Patch Set 3: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified

rebased
|Patch Set 2:

rebased
|Patch Set 2: Looks good to me, approved

rebased
|Uploaded patch set 3.
|Patch Set 3: Verified

rebased
|Uploaded patch set 4.
|Patch Set 4:

rebased
|Patch Set 4: Verified

rebased
|Patch Set 4: Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

1. According to the first screenshot in the BZ the &quot;vlan&quot; capitalization in the SetupNetworks is also incorrect. Please fix it.
2. Fix the typo error in the comment- different
|Patch Set 2:

Ignore my previous comment, I fixed it in another patch.
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Abandoned

Pushed without the dependency
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 4.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: (2 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: (2 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Looks good to me, but someone else must approve

uicommonweb changes +1
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: No score


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 9.
|Patch Set 9: Verified


|Patch Set 9:

Vojtech- The current behaviour of the &quot;Required All&quot; is ok.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 13.
|Patch Set 13: Verified

Vojtech: Thanks for the comments. I fixed the code according to them.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 10: (2 inline comments)


|Patch Set 11: Verified; Looks good to me, but someone else must approve


|Patch Set 17: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: No score


|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: No score


|Uploaded patch set 3.
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: No score


|Patch Set 6: Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 3: Verified; Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 3:

please correct my comments in a separate patch.
|Patch Set 3: Verified; Looks good to me, but someone else must approve


|Patch Set 3: Verified; Looks good to me, but someone else must approve


|Patch Set 4: Verified; Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: No score; No score

I think you should remove the AppErrors.properties of the webadmin.
And remove the keys that equal to the default value in the user portal AppErrors.properties
|Uploaded patch set 2.
|Patch Set 1: Verified


|Patch Set 1: I would prefer that you didn't submit this

Hi, the problem was the style was used before the binder
initialized it.
The fix is to use the style after the initWidget.
The style is initialized in the AbstractLoginPopupView 
initWidget. So the is no need to override the setStyle in the sons.

I did the fix in commit http://gerrit.ovirt.org/#change,4158
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 2: Verified; Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10:

Gilad,as I wrote in http://gerrit.ovirt.org/#change,3612 - patch set 9

Regarding Eclipse/mvn plug-in
    There is a build in option in eclipse to mark (throw compile error) non-externalized strings.
    preferences=&gt;java=&gt;compiler=&gt;errors/warning=&gt;non-externalized strings (missing/unused $NON-NLS$ tag) =&gt; error
    There is also another option- you can add to the eclipse a checkstyle-plugin (help=&gt;marketplace=&gt;checkstyle) and make our checkstyle.xml file to be the default eclipse checkstyle (like explained here- http://eclipse-cs.sourceforge.net/basic_setup_project.html).
    I will cause all checksyle errors to be marked in the eclipse configuration.
|Uploaded patch set 11.
|Patch Set 11:

Gilad,
There is a build in eclipse option for this-
- Choose file=&gt;source=&gt;externalize strings.
The problem is that it works with resource bundle and properties files and not with interfaces like we do in gwt.
Maybe there is a gwt plugin for eclipse for this issue.
I didn't find one..
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1:

Another infrastructure change-
ApplicationPlaces for subTabs used models title.
I have localized the titles so it caused a problem to the places.
I changed the sub tab places to use model hashName instead of
Title.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

gilad-
1. The alert, events and roles description are coming from the backend as is. So it is more complex to localize it at
this point.
There is no problem to localize the enums. We don't want to
localize them now because we don't localize values unlil the
search will be localized.
2. Good suggestion. For now it is not possible.
3. It will be mandatory. I&quot;m trying to find a check style
plug-in for the eclipse.
|Patch Set 7:

The check of the NLS string is build in the eclipse.
You just have to change the prefernces=&gt;java=&gt;comiler=&gt;errors/warnings=&gt; Non externelize string (missing/unused  $NON-NLS$ tag)= error

But I think maybe there is a plug-in for the eclipse for all the checkstyle,
|Patch Set 7:

Hi Vojtech, thanks for the comments.

* Why was UICommonWeb.gwt.xml deleted?
-I have deleted it by mistake. I have already fixed it,
I will post it and some more little fixes later today.

* In Constants/Messages interfaces we're already using @DefaultStringValue. Do we really need to have default Constant/Messages properties files as well?
- I talked about it with Einav on Thursday. I will delete the default properties files. She wanted me to add them in order to have properties files example to send to the translators. But I will write a script to generate them automaticly and they won't be part of the build.

* Besides using Constants/Messages interfaces throughout Frontend and UiCommon, are there any other major infrastructure changes?
- No.

* In Enums.properties, there is some &quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt; webadmin&quot; stuff, I guess because of some rebase?
- Thanks, I will fix it.

* In ConstantsManager, I'd add a private constructor and make ConstantsManager final to indicate it shouldn't be used directly, but via getInstance() (just a suggestion).
- I will fix it to be a correct singleton:)

* Currently, we have 2 ways to localize View/UiBinder component: 1) have *.ui.xml declare &lt;ui:with...&gt; for constants, or 2) have localize() method in View.
- Some comment about this issue
 - The future checkstyle (next patch) and the eclipse checkstyle can find non externalized string (and mark them as an error until you add NON-NLS comment or externalize them) just in *.java files. So way 2 is preferred!
- I didn't want to change the views code, so if the non externalized string was in the ui.xml I left it there and used way 1.
- In way 2- we don't really localize everything in localize method. There is a mess there. There is no specific place to localize. I think we have to refactor localize method name to initialize or something like that. What do you think?

* I guess NLS comment stuff (&quot;//$NON-NLS-N$&quot;) doesn't apply to strings in annotations, e.g. @DefaultStringValue(&quot;...&quot;), is this right?
- Yes, you are right.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

* Regarding patch separation: how difficult is it?
- It is not difficult but it will take time. I prefer not to do it...

* Regarding Eclipse/mvn plug-in
- There is a build in option in eclipse to mark (throw compile error) non-externalized strings.
preferences=&gt;java=&gt;compiler=&gt;errors/warning=&gt;non-externalized strings (missing/unused $NON-NLS$ tag) =&gt; error
- There is also another option- you can add to the eclipse a checkstyle-plugin (help=&gt;marketplace=&gt;checkstyle) and make our checkstyle.xml file to be the default eclipse checkstyle (like explained here- http://eclipse-cs.sourceforge.net/basic_setup_project.html).
I will cause all checksyle errors to be marked in the eclipse configuration.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 2: Verified; Looks good to me, but someone else must approve


|Patch Set 8: Verified; Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve

Checked just the reports part.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: Abandoned

added to integrating reports commit
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 1: Abandoned

Don't want to merge previous commits. Will be commited from another branch.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1: Abandoned

I don't know how- but this commit was mixed with Ori's commit
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 15.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 23.
|Uploaded patch set 26.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Abandoned

This commit was merged to another commit.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Verified; Looks good to me, but someone else must approve


|Patch Set 2: Verified; Looks good to me, but someone else must approve


|Patch Set 3: Verified; Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 3: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 1:

(15 comments)

Reviewed just the first two files. Please let me know when this patch is stable and I will proceed reviewing.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 9:

(5 comments)
|Patch Set 15:

(4 comments)
|Patch Set 23:

(4 comments)
|Patch Set 15:

(2 comments)
|Patch Set 25: Code-Review+2

(3 comments)

There are some minor comments. Please fix them before merging.
|Patch Set 6: Code-Review+2
|Patch Set 40:

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 4:

(3 comments)

NetworkModel.setSupportBridgesReportByVDSM- in case the bridges report is not supported by vdsm, the network is automatically marked as vm network. IIUC, this behavior should be changed to take place only if(!isSupportBridgesReportByVDSM &amp;&amp; virtOnlyMode)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 19:

(9 comments)
|Patch Set 19:

(1 comment)
|Patch Set 19:

(1 comment)
|Patch Set 19:

(2 comments)
|Patch Set 23:

(1 comment)
|Patch Set 19:

(1 comment)
|Patch Set 19:

(1 comment)
|Patch Set 19:

(1 comment)
|Patch Set 24: Code-Review+2
|Patch Set 29: Code-Review+2
|Patch Set 21:

(2 comments)
|Patch Set 21:

(1 comment)
|Patch Set 21:

(1 comment)
|Patch Set 22: Code-Review+2
|Patch Set 23:

Please see my second comment- https://gerrit.ovirt.org/#/c/34968/15/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/validator/NetworkAttachmentsValidator.java

I think that it can be really useful if when getting the Bond from the interfaceDao, its slaves will be initialized.
|Patch Set 23:

InterfaceDaoDbFacadeImpl uses vdsNetworkInterfaceRowMapper for mapping the db resultSet to the businessEntity.
The mapper has a method called- createInterface.
This method decides which type of interface should be created (Bond, Vlan or Nic) and creates it.
I suggest that if this method creates a Bond, it should also query for its slaves and set them on the newly created entity.
Doing that, when the interfaceDoa will return a Bond the new slaves property will be initialized.
|Patch Set 29: Code-Review+2
|Patch Set 20:

(3 comments)
|Patch Set 22:

(3 comments)
|Patch Set 28: Code-Review+2
|Patch Set 19:

(2 comments)
|Patch Set 19:

(2 comments)
|Patch Set 20: Code-Review+2
|Patch Set 19:

(1 comment)
|Patch Set 24: Code-Review+2
|Patch Set 13:

(2 comments)
|Patch Set 14: Code-Review+2
|Patch Set 23:

(3 comments)
|Patch Set 24: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 9.
|Patch Set 9: Code-Review+2 Verified+1
|Patch Set 8:

(5 comments)
|Patch Set 8:

When creating bond of nics with labels, joining bonds and adding nics to a bond- the labels of the added nics are removed.
I will fix it in a new patch.
|Patch Set 10: Patch Set 9 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3:

Please update NETWORK_ILEGAL_NETWORK_NAME message in the AppErrors files.
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+1

+1 for ui
|Patch Set 1: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 3:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 21:

(3 comments)
|Patch Set 23:

(1 comment)
|Patch Set 21:

(2 comments)
|Patch Set 32:

(2 comments)
|Patch Set 33: Code-Review+2
|Patch Set 34: Code-Review+2
|Patch Set 34: Verified+1
|Patch Set 35: Patch Set 34 was rebased
|Patch Set 35: Continuous-Integration+1
|Patch Set 36: Patch Set 35 was rebased
|Patch Set 36: Continuous-Integration+1
|Patch Set 38: Patch Set 37 was rebased
|Patch Set 38: Continuous-Integration+1
|Patch Set 20: Code-Review+2
|Patch Set 34: Patch Set 33 was rebased
|Patch Set 34: Continuous-Integration+1
|Patch Set 20: Code-Review+2
|Patch Set 34: Patch Set 33 was rebased
|Patch Set 34: Continuous-Integration+1
|Patch Set 20: Code-Review+2

(1 comment)
|Patch Set 22: Code-Review+2
|Patch Set 33: Code-Review+2
|Patch Set 34: Patch Set 33 was rebased
|Patch Set 34: Continuous-Integration+1
|Patch Set 21:

(2 comments)
|Patch Set 23: Code-Review+2
|Patch Set 35: Patch Set 34 was rebased
|Patch Set 35: Continuous-Integration+1
|Patch Set 21: Code-Review+2

(1 comment)
|Patch Set 23: Code-Review+2
|Patch Set 35: Patch Set 34 was rebased
|Patch Set 35: Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 21:

Why are the tests in a much later patch? Please merge them to this patch.
|Patch Set 21:

(1 comment)
|Patch Set 21:

(2 comments)
|Patch Set 23: Code-Review+2
|Patch Set 34:

(3 comments)
|Patch Set 35:

(1 comment)
|Patch Set 36: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 37: Patch Set 36 was rebased
|Patch Set 37: Continuous-Integration+1
|Patch Set 15:

(2 comments)
|Patch Set 24:

(1 comment)
|Patch Set 28:

(1 comment)
|Patch Set 30: Code-Review+2
|Patch Set 30: Verified+1
|Patch Set 31: Patch Set 30 was rebased
|Patch Set 31: Continuous-Integration+1
|Patch Set 15:

(2 comments)
|Patch Set 24: Code-Review+2
|Patch Set 23:

(1 comment)
|Patch Set 23:

(1 comment)
|Patch Set 28:

(1 comment)
|Patch Set 30: Code-Review+2
|Patch Set 31: Patch Set 30 was rebased
|Patch Set 31: Continuous-Integration+1 Verified+1
|Patch Set 23: Code-Review+2
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Continuous-Integration+1
|Patch Set 15: Code-Review+2
|Patch Set 31: Patch Set 30 was rebased
|Patch Set 31: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 36:

(4 comments)
|Patch Set 36:

(1 comment)
|Patch Set 43:

(3 comments)
|Patch Set 26:

(11 comments)

Didn't finish reviewing the patch yet. Publishing comments up to now.
|Patch Set 26:

(15 comments)
|Patch Set 26:

(13 comments)
|Patch Set 26:

(7 comments)

General comments-
1. Some of the classes in this patch were refactored (including bug fixes) in the following patches. If it is possible and not too complicate please move the fixes to this patch. If it is hard, please move the patches with the fixes to be the next patches in the flow (currently there are &gt;10 patches between this one and the refactoring).
2. Please move the patches with the tests for HostSetupNetworksValidator, HostNetworkInterfacesPersister, HostNetworkAttachmentsPersister, HostNetworkTopologyPersisterImpl as close as possible to this patch.
|Patch Set 26:

(1 comment)
|Patch Set 35:

(33 comments)
|Patch Set 26:

(13 comments)
|Patch Set 35:

(4 comments)
|Patch Set 26:

(2 comments)
|Patch Set 38:

(3 comments)
|Patch Set 35:

(7 comments)
|Patch Set 39:

(2 comments)
|Patch Set 42: Code-Review+2

(1 comment)

Please just remove the TODO from- HostNetworkAttachmentPersister- line 102.
|Patch Set 38:

(2 comments)
|Patch Set 43: Code-Review+2 Verified+1
|Patch Set 44: Patch Set 43 was rebased
|Patch Set 44: Continuous-Integration+1
|Patch Set 21:

(9 comments)
|Patch Set 28:

(16 comments)
|Patch Set 21:

(1 comment)
|Patch Set 28:

(1 comment)
|Patch Set 33:

(5 comments)
|Patch Set 37: Code-Review+2

(3 comments)

Please just remove the unused ManagementNetworkUtil from the commands.
|Patch Set 33:

(2 comments)
|Patch Set 38: Verified+1
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Continuous-Integration+1
|Patch Set 25: Code-Review+2
|Patch Set 42: Verified+1
|Patch Set 43: Patch Set 42 was rebased
|Patch Set 44: Patch Set 43 was rebased
|Patch Set 21:

(1 comment)
|Patch Set 29: Code-Review+2
|Patch Set 33: Code-Review+2
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Continuous-Integration+1 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1 Verified+1
|Patch Set 20: Code-Review+2
|Patch Set 28: Code-Review+2
|Patch Set 37: Verified+1
|Patch Set 38: Patch Set 37 was rebased
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 40: Patch Set 39 was rebased
|Patch Set 19: Code-Review+2
|Patch Set 37: Patch Set 36 was rebased
|Patch Set 37: Verified+1
|Patch Set 38: Patch Set 37 was rebased
|Patch Set 19: Code-Review+2

(1 comment)
|Patch Set 27: Code-Review+2

(1 comment)
|Patch Set 29: Code-Review+2
|Patch Set 36: Verified+1
|Patch Set 37: Patch Set 36 was rebased
|Patch Set 37: Continuous-Integration+1
|Patch Set 19:

(2 comments)
|Patch Set 27: Code-Review-1

(2 comments)
|Patch Set 29: Code-Review+2
|Patch Set 29:

(1 comment)
|Patch Set 36: Code-Review+2
|Patch Set 36: Verified+1
|Patch Set 37: Patch Set 36 was rebased
|Patch Set 37: Continuous-Integration+1
|Patch Set 36:

(10 comments)
|Patch Set 44: Code-Review+2
|Patch Set 30:

(5 comments)
|Patch Set 30:

(1 comment)
|Patch Set 40:

(1 comment)
|Patch Set 48: Code-Review+2
|Patch Set 49: Continuous-Integration+1 Verified+1
|Patch Set 32: Code-Review+2

(7 comments)
|Patch Set 43:

(3 comments)
|Patch Set 49: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 6: Continuous-Integration+1 Verified+1
|Patch Set 35: Code-Review+2
|Patch Set 41: Code-Review+2
|Patch Set 43: Code-Review+2
|Patch Set 49: Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 39: Code-Review+2
|Patch Set 45:

(1 comment)
|Patch Set 54: Code-Review+2
|Patch Set 57: Patch Set 56 was rebased
|Patch Set 57: Code-Review+2 Verified+1
|Patch Set 57: Continuous-Integration+1
|Patch Set 58: Patch Set 57 was rebased
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+2 Continuous-Integration+1
|Patch Set 37:

(13 comments)
|Patch Set 37:

(1 comment)
|Patch Set 44:

(4 comments)
|Patch Set 37:

(3 comments)
|Patch Set 37:

(1 comment)
|Patch Set 37:

(1 comment)
|Patch Set 37:

(1 comment)
|Patch Set 53:

(2 comments)
|Patch Set 54: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 55: Patch Set 54 was rebased
|Patch Set 55: Continuous-Integration+1
|Patch Set 39:

(3 comments)
|Patch Set 46: Code-Review+2
|Patch Set 55: Code-Review+2
|Patch Set 58: Patch Set 57 was rebased
|Patch Set 58: Continuous-Integration+1 Verified+1
|Patch Set 37:

(7 comments)
|Patch Set 41:

(1 comment)
|Patch Set 41:

(1 comment)
|Patch Set 44:

(20 comments)
|Patch Set 54: Code-Review+2
|Patch Set 55: Verified+1
|Patch Set 56: Patch Set 55 was rebased
|Patch Set 56: Continuous-Integration+1
|Patch Set 40:

(6 comments)
|Patch Set 47: Code-Review+2
|Patch Set 49: Code-Review+2
|Patch Set 56: Code-Review+2
|Patch Set 59: Patch Set 58 was rebased
|Patch Set 59: Continuous-Integration+1 Verified+1
|Patch Set 39: Code-Review+2
|Patch Set 46: Code-Review+2
|Patch Set 55: Code-Review+2
|Patch Set 57: Verified+1
|Patch Set 58: Patch Set 57 was rebased
|Patch Set 58: Continuous-Integration+1
|Patch Set 40:

(26 comments)
|Patch Set 47:

(11 comments)
|Patch Set 40:

(1 comment)
|Patch Set 57: Code-Review+2
|Patch Set 59: Verified+1
|Patch Set 60: Patch Set 59 was rebased
|Patch Set 60: Continuous-Integration+1
|Patch Set 40: Code-Review-1

(1 comment)
|Patch Set 44: Code-Review+2
|Patch Set 57: Code-Review+2
|Patch Set 59: Verified+1
|Patch Set 60: Patch Set 59 was rebased
|Patch Set 60: Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 1:

(3 comments)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 63: Code-Review-1

(4 comments)
|Patch Set 10:

(13 comments)
|Patch Set 8:

(1 comment)
|Patch Set 10:

(3 comments)
|Patch Set 10:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 16:

(2 comments)
|Patch Set 19: Code-Review+2
|Patch Set 19: Verified+1
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Continuous-Integration+1
|Patch Set 66:

(4 comments)
|Patch Set 71: Code-Review+2
|Patch Set 73: Code-Review+2 Verified+1
|Patch Set 74: Patch Set 73 was rebased
|Patch Set 74: Continuous-Integration+1
|Patch Set 61: Code-Review+2
|Patch Set 68: Verified+1
|Patch Set 69: Patch Set 68 was rebased
|Patch Set 69: Continuous-Integration+1
|Patch Set 63:

(1 comment)
|Patch Set 66:

(7 comments)
|Patch Set 66:

(1 comment)
|Patch Set 66:

(1 comment)
|Patch Set 73: Code-Review+2 Verified+1
|Patch Set 74: Patch Set 73 was rebased
|Patch Set 74: Continuous-Integration+1
|Patch Set 68: Code-Review+2
|Patch Set 70: Code-Review+2 Verified+1
|Patch Set 71: Patch Set 70 was rebased
|Patch Set 71: Continuous-Integration+1
|Patch Set 68:

(3 comments)
|Patch Set 68:

(1 comment)
|Patch Set 70: Code-Review+2 Verified+1
|Patch Set 71: Patch Set 70 was rebased
|Patch Set 71: Continuous-Integration+1
|Patch Set 68:

(16 comments)
|Patch Set 68:

(1 comment)
|Patch Set 68:

(1 comment)
|Patch Set 71:

(1 comment)
|Uploaded patch set 72.
|Patch Set 72: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 73: Patch Set 72 was rebased
|Patch Set 73: Continuous-Integration+1
|Patch Set 68:

(4 comments)
|Uploaded patch set 72: Patch Set 71 was rebased.
|Patch Set 72: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 73: Patch Set 72 was rebased
|Patch Set 73: Continuous-Integration+1
|Patch Set 68:

(12 comments)
|Uploaded patch set 72: Patch Set 71 was rebased.
|Patch Set 72:

(1 comment)
|Uploaded patch set 73.
|Uploaded patch set 74.
|Patch Set 74: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 16:

(1 comment)
|Patch Set 16:

(2 comments)
|Patch Set 38:

(9 comments)
|Uploaded patch set 42: Patch Set 41 was rebased.
|Patch Set 38:

(1 comment)
|Patch Set 42: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 43: Patch Set 42 was rebased
|Patch Set 43: Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 17: Code-Review+2
|Uploaded patch set 21: Patch Set 20 was rebased.
|Patch Set 21: Verified+1
|Patch Set 22: Patch Set 21 was rebased
|Patch Set 22: Continuous-Integration+1
|Patch Set 15:

(2 comments)
|Patch Set 15:

(1 comment)
|Uploaded patch set 19: Patch Set 18 was rebased.
|Patch Set 15:

(1 comment)
|Uploaded patch set 20.
|Patch Set 20: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 6: Code-Review+2
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 44:

(1 comment)
|Uploaded patch set 48: Patch Set 47 was rebased.
|Uploaded patch set 49: Patch Set 48 was rebased.
|Patch Set 49: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Code-Review+2
|Patch Set 79: Code-Review+2
|Uploaded patch set 83: Patch Set 82 was rebased.
|Uploaded patch set 84: Patch Set 83 was rebased.
|Uploaded patch set 86: Patch Set 85 was rebased.
|Uploaded patch set 89: Patch Set 88 was rebased.
|Uploaded patch set 90: Patch Set 89 was rebased.
|Uploaded patch set 91: Patch Set 90 was rebased.
|Uploaded patch set 92: Patch Set 91 was rebased.
|Uploaded patch set 94: Patch Set 93 was rebased.
|Uploaded patch set 96: Patch Set 95 was rebased.
|Patch Set 96: Verified+1
|Patch Set 77:

(2 comments)
|Uploaded patch set 81: Patch Set 80 was rebased.
|Uploaded patch set 82: Patch Set 81 was rebased.
|Patch Set 77:

(1 comment)
|Uploaded patch set 84: Patch Set 83 was rebased.
|Uploaded patch set 87: Patch Set 86 was rebased.
|Uploaded patch set 88: Patch Set 87 was rebased.
|Uploaded patch set 89: Patch Set 88 was rebased.
|Uploaded patch set 90: Patch Set 89 was rebased.
|Uploaded patch set 92: Patch Set 91 was rebased.
|Uploaded patch set 94: Patch Set 93 was rebased.
|Uploaded patch set 95.
|Patch Set 95: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 60:

(1 comment)
|Uploaded patch set 64: Patch Set 63 was rebased.
|Uploaded patch set 65: Patch Set 64 was rebased.
|Patch Set 65: Code-Review+2
|Uploaded patch set 67: Patch Set 66 was rebased.
|Uploaded patch set 70: Patch Set 69 was rebased.
|Uploaded patch set 71: Patch Set 70 was rebased.
|Uploaded patch set 72: Patch Set 71 was rebased.
|Uploaded patch set 73: Patch Set 72 was rebased.
|Uploaded patch set 75: Patch Set 74 was rebased.
|Uploaded patch set 77: Patch Set 76 was rebased.
|Uploaded patch set 78: Patch Set 77 was rebased.
|Patch Set 78: Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 4:

(2 comments)
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 7:

(1 comment)
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Code-Review+2 Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 2:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Patch Set 13: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 2:

(5 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 13: Continuous-Integration+1
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 3:

(1 comment)
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Patch Set 12: Code-Review+2 Verified+1
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 3:

(3 comments)
|Uploaded patch set 8.
|Patch Set 8:

(5 comments)
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 4:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 3:

(6 comments)
|Uploaded patch set 8.
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14.
|Patch Set 13:

(1 comment)
|Patch Set 12:

(1 comment)
|Patch Set 14: Code-Review+2 Verified+1
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Continuous-Integration+1
|Patch Set 62:

(2 comments)
|Patch Set 62:

(1 comment)
|Patch Set 62:

(1 comment)
|Patch Set 62:

(9 comments)
|Patch Set 62:

(11 comments)
|Patch Set 62:

Reviewed everything but the tests.
|Uploaded patch set 66: Patch Set 65 was rebased.
|Uploaded patch set 67: Patch Set 66 was rebased.
|Uploaded patch set 69: Patch Set 68 was rebased.
|Uploaded patch set 72: Patch Set 71 was rebased.
|Patch Set 62:

(4 comments)
|Uploaded patch set 73: Patch Set 72 was rebased.
|Uploaded patch set 74: Patch Set 73 was rebased.
|Uploaded patch set 75: Patch Set 74 was rebased.
|Uploaded patch set 77: Patch Set 76 was rebased.
|Uploaded patch set 79: Patch Set 78 was rebased.
|Uploaded patch set 80.
|Patch Set 62:

(14 comments)
|Uploaded patch set 81: Patch Set 80 was rebased.
|Uploaded patch set 82.
|Uploaded patch set 83: Patch Set 82 was rebased.
|Uploaded patch set 84: Patch Set 83 was rebased.
|Patch Set 85: Patch Set 84 was rebased
|Patch Set 85: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 2:

(1 comment)
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14: Continuous-Integration+1 Verified+1
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 12: Verified+1
|Patch Set 12: Continuous-Integration+1
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 2:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Continuous-Integration+1 Verified+1
|Patch Set 15:

(2 comments)
|Patch Set 15:

(2 comments)
|Patch Set 11:

Why do you need it, isn't changing FOREIGN KEY (nic_id) REFERENCES vds_interface(id) ON DELETE SET NULL to ON DELETE CASCADE enough?
|Patch Set 5:

For network being removed you have &quot;on delete cascade&quot;. What is the difference?
Nics are being removed via the VdsBroker, there is no compensation there.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25: Patch Set 24 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31.
|Uploaded patch set 32.
|Uploaded patch set 33: Patch Set 32 was rebased.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Uploaded patch set 67: Patch Set 66 was rebased.
|Uploaded patch set 68: Patch Set 67 was rebased.
|Uploaded patch set 70: Patch Set 69 was rebased.
|Uploaded patch set 73: Patch Set 72 was rebased.
|Uploaded patch set 74: Patch Set 73 was rebased.
|Uploaded patch set 75: Patch Set 74 was rebased.
|Uploaded patch set 76: Patch Set 75 was rebased.
|Uploaded patch set 78: Patch Set 77 was rebased.
|Uploaded patch set 80: Patch Set 79 was rebased.
|Uploaded patch set 81: Patch Set 80 was rebased.
|Uploaded patch set 82: Patch Set 81 was rebased.
|Uploaded patch set 83: Patch Set 82 was rebased.
|Uploaded patch set 84: Patch Set 83 was rebased.
|Uploaded patch set 85: Patch Set 84 was rebased.
|Uploaded patch set 72: Patch Set 71 was rebased.
|Uploaded patch set 73: Patch Set 72 was rebased.
|Uploaded patch set 75: Patch Set 74 was rebased.
|Uploaded patch set 78: Patch Set 77 was rebased.
|Uploaded patch set 79: Patch Set 78 was rebased.
|Uploaded patch set 80: Patch Set 79 was rebased.
|Uploaded patch set 81: Patch Set 80 was rebased.
|Uploaded patch set 83: Patch Set 82 was rebased.
|Uploaded patch set 85: Patch Set 84 was rebased.
|Uploaded patch set 86: Patch Set 85 was rebased.
|Uploaded patch set 87: Patch Set 86 was rebased.
|Uploaded patch set 88: Patch Set 87 was rebased.
|Uploaded patch set 89: Patch Set 88 was rebased.
|Uploaded patch set 90: Patch Set 89 was rebased.
|Uploaded patch set 56: Patch Set 55 was rebased.
|Uploaded patch set 57: Patch Set 56 was rebased.
|Uploaded patch set 59: Patch Set 58 was rebased.
|Uploaded patch set 62: Patch Set 61 was rebased.
|Uploaded patch set 63: Patch Set 62 was rebased.
|Uploaded patch set 64: Patch Set 63 was rebased.
|Uploaded patch set 65: Patch Set 64 was rebased.
|Uploaded patch set 67.
|Uploaded patch set 69: Patch Set 68 was rebased.
|Uploaded patch set 70: Patch Set 69 was rebased.
|Uploaded patch set 71: Patch Set 70 was rebased.
|Uploaded patch set 72: Patch Set 71 was rebased.
|Uploaded patch set 73: Patch Set 72 was rebased.
|Uploaded patch set 74: Patch Set 73 was rebased.
|Patch Set 38:

(8 comments)
|Patch Set 44:

(4 comments)
|Uploaded patch set 66: Patch Set 65 was rebased.
|Uploaded patch set 67: Patch Set 66 was rebased.
|Uploaded patch set 69: Patch Set 68 was rebased.
|Uploaded patch set 71: Patch Set 70 was rebased.
|Uploaded patch set 72: Patch Set 71 was rebased.
|Uploaded patch set 73: Patch Set 72 was rebased.
|Uploaded patch set 74: Patch Set 73 was rebased.
|Uploaded patch set 76.
|Uploaded patch set 78: Patch Set 77 was rebased.
|Uploaded patch set 79: Patch Set 78 was rebased.
|Uploaded patch set 80: Patch Set 79 was rebased.
|Uploaded patch set 81: Patch Set 80 was rebased.
|Uploaded patch set 82: Patch Set 81 was rebased.
|Uploaded patch set 83: Patch Set 82 was rebased.
|Patch Set 47:

(15 comments)
|Patch Set 47:

(6 comments)

This patch enables dynamically constructing the variable replacement- {message_name}_LIST
instead of doing-
List&lt;String&gt; vialotingEntities = new ArrayList&lt;&gt;();
.. build the vialotingEntities lists
new ValidationResult(VdcBllMessages.WHATEVER_MESSAGE,
                         MessageFormat.format(&quot;${0}_LIST {1}&quot;, VdcBllMessages.WHATEVER_MESSAGE.name(), causesString);

you can build the vialotingEntities in the following way -

violations.addViolation(VdcBllMessagesWHATEVER_MESSAGE,
                        vialationEntity);

I think the code for introducing this new behavior it really complicated and breaks the way commands using validators.

Currently, commands calling validator using- 'validate(ValidationResult)'
for example- validate(validator.smallValidation()

Since your new validators have the validate method which aggregates all the small validations.
I suggest-
1. The return value of the validator.validatate() method will be- 'Set&lt;ValidationResult&gt;'.
2. The CommandBase will have a new method- validate(Set&lt;ValidationResult&gt;)- it will just call the original validate(ValidationResult) for each ValidationResult in the list.
3. The FailingValidationResults (which should be renamed to ValitationsWithViolatingEntities) will have a method (instead of the translate) that iterates over all the ValidationResults in the map and adds the
'formattedCauseString' (which should be called- 'formattedVioulatingEntitiesString') to the variableReplacments of the ValidationResult. The return value of this method will be 'Set&lt;ValidationResult&gt;'.
4. The fact that 'violations.addViolation(..)' returns the opposite of what validate returns is very confusing. I would add to FailingValidationResults class- public 'validate(..)' methods (same as the methods you removed from HostSetupNetworValidator) and make the 'addValidation(..)' methods private.

What do you think?
|Patch Set 47:

Regarding point 1 and 2 in the general comment- since the validator method doesn't processed in case of an error, at the end there should be maximum one error (or a valid result). So you don't even have to supported multi value commansBase.validate(..). And the validator.validate(..) should return just one ValidationResult.
|Patch Set 51:

(2 comments)
|Patch Set 51:

(1 comment)
|Patch Set 51:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 5:

Please also send another patch and first call setSelectedItem(null) and just then the setItems. In this way the first dc won't be selected by default and you would have one engine query less.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 3: Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 4: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Please backport to 3.6
|Patch Set 4: Continuous-Integration+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Code-Review+1

(2 comments)

Just two small comments.
|Uploaded patch set 53: Patch Set 52 was rebased.
|Uploaded patch set 54: Patch Set 53 was rebased.
|Patch Set 54:

(1 comment)

Didn't review it yet, just posting one comment.
|Uploaded patch set 56: Patch Set 55 was rebased.
|Uploaded patch set 59: Patch Set 58 was rebased.
|Uploaded patch set 60: Patch Set 59 was rebased.
|Uploaded patch set 61: Patch Set 60 was rebased.
|Uploaded patch set 62: Patch Set 61 was rebased.
|Uploaded patch set 64: Patch Set 63 was rebased.
|Uploaded patch set 66: Patch Set 65 was rebased.
|Uploaded patch set 67: Patch Set 66 was rebased.
|Patch Set 67:

(4 comments)
|Uploaded patch set 68: Patch Set 67 was rebased.
|Patch Set 67:

(4 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Code-Review+2
|Uploaded patch set 9.
|Patch Set 9: Code-Review+2
|Abandoned

Squashed into- https://gerrit.ovirt.org/#/c/44906
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Code-Review+2
|Uploaded patch set 9: Patch Set 8 was rebased.
|Abandoned

Squashed into https://gerrit.ovirt.org/#/c/44905
|Patch Set 3: Code-Review-1

(7 comments)
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 10:

(1 comment)
|Patch Set 10: Code-Review-1

(1 comment)
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 15.
|Patch Set 15: Code-Review+2
|Uploaded patch set 16.
|Patch Set 16: Code-Review+2
|Patch Set 16: Verified+1
|Patch Set 17: Patch Set 16 was rebased
|Patch Set 3:

(4 comments)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 3:

(2 comments)
|Patch Set 7: Code-Review+2
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 15: Code-Review+2

(1 comment)
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 17: Verified+1
|Patch Set 18: Patch Set 17 was rebased
|Patch Set 18: Continuous-Integration+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 8: Code-Review+2

Please add tests in a separate patch.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 10: Code-Review+2
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 8: Code-Review-2

(1 comment)
|Patch Set 8:

(2 comments)

I will fix the patch. Please add any desired change to the end of the chain.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Code-Review+2
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Verified+1
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Patch Set 3:

(2 comments)

Not finished reviewing the patch. Sending the comments up to now.
|Patch Set 6: Code-Review-1

(25 comments)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(2 comments)
|Patch Set 6:

(1 comment)
|Patch Set 9:

(24 comments)
|Patch Set 9:

(20 comments)

I didn't finish the review- publishing comments till now.
|Patch Set 9:

(3 comments)
|Patch Set 6:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 13:

(24 comments)

I didn't finish the review (finished most of the engine, didn't review the ui yet- if it is possible please move the ui code to the original ui patch, since the original ui patch has comments and it will be easier to review the changes there).
|Patch Set 13:

(8 comments)
|Patch Set 9:

(1 comment)
|Patch Set 14:

(26 comments)
|Patch Set 9:

(1 comment)
|Patch Set 14:

(1 comment)
|Patch Set 14:

(20 comments)
|Patch Set 14:

(4 comments)
|Patch Set 16:

(18 comments)

Posting the engine comments. Please fix.
There is just one critical comment. All the others are relatively small.

I'm going to split the ui code from this patch. So, once the engine comments are fixed, the code can be merged.

Since we don't have time, I will fix the ui comments and add you as a reviewer.
|Patch Set 16:

(1 comment)
|Patch Set 16:

(1 comment)
|Patch Set 16:

(1 comment)
|Uploaded patch set 17.
|Patch Set 13:

(1 comment)
|Uploaded patch set 18: Patch Set 17 was rebased.
|Patch Set 14:

(10 comments)
|Patch Set 22:

(1 comment)
|Uploaded patch set 23.
|Uploaded patch set 24.
|Patch Set 24: Code-Review+2
|Uploaded patch set 25: Patch Set 24 was rebased.
|Patch Set 25: Verified+1
|Uploaded patch set 26.
|Patch Set 26: Code-Review+2 Verified+1
|Patch Set 27: Patch Set 26 was rebased
|Patch Set 27: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8:

Martin's code, just split it to another patch.
|Patch Set 8: Code-Review+2
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Code-Review+2 Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 37: Code-Review+2
|Patch Set 37: Continuous-Integration+1
|Patch Set 39: Patch Set 38 was rebased
|Patch Set 39: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 6:

(5 comments)
|Patch Set 1:

Please abandon
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Please add the verified flag and after I'll merge it, backport to 3.6.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 5: Commit message was updated
|Patch Set 5:

Please backport to 3.6
|Patch Set 2:

(1 comment)

As mmucha mentioned- UiVdcAction can be used in the following manner-

new UiVdcAction(VdcActionType.ChangeVMCluster, parameters, model).then(new UiVdcAction(VdcActionType.UpdateVm,
                    getUpdateVmParameters(applyCpuChangesLater),
                    model));

The problem is that UiVdcAction doesn't support passing custom callback to the action (and here it is needed for the 'VdcActionType.UpdateVm').
So you can extend 'VdcActionType' to be able to receive callback as a parameter.
It can be done is a separate patch and not necessary be backported to master.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

Please backport to 3.6
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Commit message was updated
|Patch Set 4: Commit message was updated
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 16:

(7 comments)
|Patch Set 19: Code-Review+2

(1 comment)

Please rebase the patch manually.
|Patch Set 21: Code-Review+2

Please verify.
|Patch Set 22: Patch Set 21 was rebased
|Patch Set 22: Continuous-Integration+1
|Patch Set 22:

Please backport to 3.6
|Patch Set 17: Code-Review+2

(1 comment)
|Patch Set 17:

Please fix my tiny comment and I will merge.
|Patch Set 19: Code-Review+2

Please verify.
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Continuous-Integration+1
|Patch Set 20:

Please backport the patch to 3.6.
|Patch Set 31:

(2 comments)
|Patch Set 33:

(3 comments)
|Patch Set 33:

(2 comments)
|Patch Set 49: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 8:

(2 comments)
|Patch Set 10:

(2 comments)
|Patch Set 10:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 13: Code-Review+2
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Patch Set 14:

Please backport to 3.6
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Commit message was updated
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2:

Please verify so I will be able to merge it.
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2

Please verify.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 5:

Please backport to 3.6
|Patch Set 5: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 0768601b4eafee28a2e5c056745488e066cb64fa
|Patch Set 5: Code-Review+2

(3 comments)

Please fix the patches message and verify.
|Patch Set 6: Code-Review+2

Please verify.
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 8: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 6201064412cff09f0c012a6660f857ea08164bc5
|Patch Set 12:

(3 comments)
|Patch Set 15: Code-Review+2
|Patch Set 16:

Why did you remove the SyncAllNetworksCommand from the patch?
|Patch Set 19: Patch Set 18 was rebased
|Patch Set 19: Continuous-Integration+1
|Patch Set 12:

(1 comment)
|Patch Set 14:

(7 comments)
|Patch Set 17: Code-Review+2
|Patch Set 19: Patch Set 18 was rebased
|Patch Set 19: Continuous-Integration+1
|Patch Set 4: Commit message was updated
|Patch Set 4:

(2 comments)
|Patch Set 5: Code-Review+2
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 3:

(3 comments)
|Patch Set 5: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 13:

(10 comments)
|Patch Set 13:

(1 comment)
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Patch Set 18: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

(1 comment)

Please fix the comment, add the verify flag and I will merge.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 43fcca35e6755faed7f4b8e34ac5219989fb2971
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 11f406a84026bae81c8e21694343434969b11c8f
|Patch Set 2:

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 5:

Please backport to 3.6.
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1:

Marcin is already working on it. There is an open bug for all the unmanaged networks validation.
Please abandon this patch.
|Patch Set 4: Code-Review+2
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6.
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1:

Please update the script number.
|Patch Set 2:

Please update the script number.
|Patch Set 4:

You need to update the script number again. Ping me when its done and I'll immediately merge it.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2
|Patch Set 5: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2:

(3 comments)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 9:

(3 comments)
|Uploaded patch set 10.
|Patch Set 11: Code-Review+2
|Patch Set 11:

Please verify and backport to 3.6.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 4:

(11 comments)
|Patch Set 4:

(3 comments)
|Patch Set 6: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 7:

(2 comments)
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 4: Code-Review+2

(2 comments)
|Patch Set 4: -Code-Review
|Patch Set 7:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1 Verified+1
|Patch Set 4: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Continuous-Integration+1
|Patch Set 3:

(9 comments)
|Patch Set 5: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 5: Code-Review+2

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(2 comments)

Please rebase manually.
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 8:

(1 comment)
|Uploaded patch set 12.
|Patch Set 12: Code-Review+2 Verified+1
|Uploaded patch set 13.
|Patch Set 13: Code-Review+2 Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Patch Set 16: Code-Review+2 Verified+1
|Patch Set 17: Patch Set 16 was rebased
|Uploaded patch set 18.
|Patch Set 15:

(6 comments)
|Patch Set 18: Code-Review+2 Verified+1
|Uploaded patch set 19: Commit message was updated.
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Continuous-Integration+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 13: Code-Review+2 Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 12:

(2 comments)
|Uploaded patch set 13.
|Patch Set 13: Code-Review+2 Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Code-Review+2 Verified+1
|Uploaded patch set 8.
|Patch Set 8: Code-Review+2 Verified+1
|Uploaded patch set 9.
|Patch Set 9: Code-Review+2 Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 2:

(7 comments)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 2:

(5 comments)
|Uploaded patch set 7.
|Patch Set 7: Code-Review+2 Verified+1
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 8: Code-Review+2 Verified+1
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Continuous-Integration+1
|Patch Set 4:

(3 comments)
|Patch Set 6:

(3 comments)
|Patch Set 7: Code-Review+2
|Patch Set 7:

Please verify
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 8:

Please backport to 3.6
|Patch Set 6: Code-Review-1

(1 comment)
|Patch Set 7: Code-Review+1

+1 for the 2 backend files. Didn't review the rest related files.
|Patch Set 7:

(1 comment)
|Patch Set 10:

+1 for backend
|Patch Set 10: Code-Review+1
|Patch Set 10: Code-Review+2
|Patch Set 10:

Please verify
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 11:

Please backport to 3.6
|Patch Set 1:

Please remove this patch from the chain. Yevgeny will reuse and repush it, if needed.
|Patch Set 5:

(22 comments)
|Patch Set 8:

(8 comments)
|Patch Set 10:

(1 comment)
|Patch Set 12: Code-Review+2
|Patch Set 12:

Please verify and I will merge.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Commit message was updated
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit bf701283555a6a545137ad99d681c6cc8a4b387d
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Verified+1
|Patch Set 2: Continuous-Integration+1
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4:

+1
|Patch Set 3:

+1
|Patch Set 5: Code-Review+2

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 7df6beba6ac3bc27ff818a301c04ec6e39386686
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(4 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(4 comments)
|Patch Set 4:

(4 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 2:

(3 comments)
|Patch Set 2:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 3:

(15 comments)
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 3:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Continuous-Integration+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 3:

(1 comment)
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 3:

(1 comment)
|Patch Set 6: Continuous-Integration+1
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

1. Don't we have the same issue in- SetupNetworksHelper.customPropertiesChanged(..)- line 778?
2. Please backport to 3.6.
|Patch Set 2:

(1 comment)
|Patch Set 2: Reverted

This patchset was reverted in change: I43a3e4db48f8ca76c3710ff95365a0c7bdfa8b44
|Patch Set 2:

Please notice I reverted this patch.
https://gerrit.ovirt.org/#/c/47694/1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 2:

(3 comments)

I think that the change is relevant to all the flows using NetworkParametersBuilder.createVlanDevice(..), so the patch can be changed in a way the only modified class will be NetworkParametersBuilder.
|Patch Set 2:

(4 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Tal- the bug was fixed. Please merge.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 9db03aa1819bdeba92fa6986c18c0a1ab39f4d59
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit be22090459024f154c27132730ca276f999eac2d
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Continuous-Integration+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 40d47b881e6b9b5c04fb2a26d2e6e6d5142dd7ef
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 2: Code-Review-1

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 2: Code-Review-1

(12 comments)
|Patch Set 5:

(8 comments)
|Patch Set 2:

(1 comment)
|Patch Set 7: Code-Review+2

Please refer to Vojtech's comment. It can be fixed in a separate patch.
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 1: Verified+1
|Patch Set 2:

(2 comments)
|Patch Set 4:

(7 comments)
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 2: Continuous-Integration-1

(13 comments)
|Patch Set 3: Code-Review-1

(6 comments)
|Patch Set 5:

(5 comments)
|Patch Set 6:

(3 comments)
|Patch Set 8: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 62e7c2eac9a1cf5cc180e91aea7065c10c5558d5
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(3 comments)
|Patch Set 6:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 1:

(7 comments)
|Patch Set 6: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 6:

(1 comment)
|Patch Set 6:

Michael answered the need-info. There is no bug in 3.6. Please abandon the patch.
|Patch Set 6: Code-Review-2
|Patch Set 9:

Since the patch that depends on this one should be abandoned. Consider abandoning this patch as well.
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 5: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit e14596f0a0ef023e4859d515bef0a8f71c2bc24f
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit 9d186377ef6ad1f04cc6dbda98e2f35378c72ded
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 12: Patch Set 10 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Patch Set 24: Code-Review+2 Verified+1
|Patch Set 24: -Code-Review -Verified
|Patch Set 25: Patch Set 24 was rebased
|Abandoned

Was implemented by Yevgeny in another patch.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4:

(5 comments)
|Patch Set 7:

(2 comments)
|Patch Set 12: Code-Review+2
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Patch Set 13:

Please backport to 3.6
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit db6b8680ae59ad0acf1c4fb11c8e6bb213116ed4
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Abandoned

What fixed by- https://gerrit.ovirt.org/#/c/48686/
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review-1

Users that are already using 3.6 may end up with two networks that are marked as management in the same cluster (in case they have 'ovirtmgmt'/'DefaultManagementNetwork value' network in their cluster, but the management network is another one).
Before the update you should make sure there is no other management network in the cluster.
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 5:

(4 comments)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 13:

(5 comments)
|Patch Set 13:

(1 comment)
|Patch Set 18: Code-Review+2
|Patch Set 19: Patch Set 18 was rebased
|Patch Set 20: Commit message was updated
|Patch Set 20: Continuous-Integration+1
|Patch Set 4:

(2 comments)
|Patch Set 10: Code-Review+2
|Patch Set 10:

(1 comment)
|Patch Set 15: Code-Review+2
|Patch Set 17: Patch Set 16 was rebased
|Patch Set 17: Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 7:

Please backport to 3.6
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3:

Should this patch be backported to 3.6?
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 2: -Code-Review
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2:

(4 comments)
|Patch Set 2: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 6:

Please backport to 3.6
|Patch Set 6:

(4 comments)
|Patch Set 6:

(1 comment)
|Patch Set 9:

(3 comments)
|Patch Set 13:

(1 comment)
|Patch Set 14: Code-Review+2
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Continuous-Integration+1
|Patch Set 15:

Please backport to 3.6.
|Patch Set 5:

(2 comments)
|Patch Set 5:

(1 comment)
|Patch Set 13: Code-Review+2
|Patch Set 14: Code-Review+2
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Continuous-Integration+1
|Patch Set 15:

Please backport to 3.6.
|Patch Set 10:

(4 comments)
|Patch Set 15: Code-Review+2

(2 comments)
|Patch Set 16: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Continuous-Integration+1
|Patch Set 20:

Please backport to 3.6.
|Patch Set 9:

(3 comments)
|Patch Set 14:

(1 comment)
|Patch Set 18: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Continuous-Integration+1
|Patch Set 20:

Please backport to 3.6.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 5:

(3 comments)
|Patch Set 5:

(2 comments)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 7:

Please backport to 3.6.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 4: Continuous-Integration+1
|Patch Set 3:

(2 comments)

Didn't review the webadmin yet.
|Patch Set 9:

(19 comments)
|Patch Set 11:

(6 comments)
|Patch Set 11:

(1 comment)
|Patch Set 12: Code-Review+2

There is a small comment in https://gerrit.ovirt.org/#/c/45335/11/backend/manager/modules/bll/src/main/java/org/ovirt/engine/core/bll/network/host/HostSetupNetworksCommand.java- line #188.

But it is not that important so I'm giving +2. If you wish to fix it, please do it on a separate patch.
|Patch Set 12:

Please verify.
|Patch Set 11:

(1 comment)
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Patch Set 13:

Please backport to 3.6
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)

Please fix the small comment. other then that +2.
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 3: Verified-1

Please verify
|Patch Set 3: -Verified
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review-1

(4 comments)
|Patch Set 4:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+2

Please verify
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 6: Continuous-Integration+1
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

yes
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Please verify.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3:

Please backport to 3.6
|Patch Set 8:

(20 comments)
|Patch Set 10:

(1 comment)
|Patch Set 14:

(6 comments)
|Patch Set 15:

(1 comment)
|Patch Set 17: Code-Review+2
|Patch Set 18: Continuous-Integration+1
|Patch Set 19: Patch Set 18 was rebased
|Patch Set 19: Continuous-Integration+1
|Patch Set 19:

Please backport to 3.6
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 5:

Please backport to 3.6.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6.
|Patch Set 4:

Please backport to 3.6
|Patch Set 2: Code-Review+2
|Patch Set 2:

Rerun-Hooks: all
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1:

Please use the same change-id as in master - 	
I1c0722d8872a700c5d843a0a4784356794725b9b
|Patch Set 2: Code-Review+2
|Patch Set 2: -Code-Review

Is it the same patch as -https://gerrit.ovirt.org/#/c/49917 which is already merged?
|Patch Set 2: Code-Review-1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 1:

(4 comments)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(3 comments)
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Please update the script number.
|Patch Set 5: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Code-Review+2 Continuous-Integration+1
|Patch Set 1:

(3 comments)
|Patch Set 2:

(2 comments)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6.
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 3:

Please verify.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4:

Please backport to 3.6
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 8: Commit message was updated
|Patch Set 9: Commit message was updated
|Patch Set 9: Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(11 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6.2 as commit dbf4f788205a6190ae177f00584303fb82cad8a0
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Abandoned

Wrong branch
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 2: -Code-Review
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2 Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.6 as commit afbdc9ee9c55886acb5e072f469f2b16eed584d8
|Patch Set 4: Continuous-Integration+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Please verify and break the dependency with the previous patch.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3:

Please backport to 3.6 and 3.6.2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: -Code-Review Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 1:

(2 comments)

Your patch will cause some ui bugs.

1. Edit attachment that is currently static (has ip). Change the boot-proto to dhcp. The ui keeps the ip address. When you will click ok on the setup network you will be blocked by your ned cando.
2. The attachment is dhcp, the host reports the ip, the ui displays it. Move the attachment to another nic. Click ok in the setup network dialog. You will be blocked by your new cando since the attachment has an ip address.

I suggest fixing the ui by cleaning the i details for 'none/dhcp' attachments before sending them to the backend.
|Patch Set 1: Code-Review-1
|Patch Set 1:

(4 comments)
|Patch Set 1:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 4: Continuous-Integration+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 1:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 6: Continuous-Integration+1
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 3:

The blank template is now shown. Added a need-info to the reporter of the bug, since I'm not sure it is exactly the scenario he experienced. But anyway, it is a bug that should be fixed...
|Patch Set 4: Commit message was updated
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

The script number is already taken by- 03_06_1970_add_cmd_entity_parent_command_id.sql

Please update to 1980.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2

Rerun-Hooks: all
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Code-Review+2
|Patch Set 2: -Code-Review
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1:

Please abandon.
https://gerrit.ovirt.org/#/c/50653/ already does the fix.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 4:

(2 comments)
|Patch Set 5:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 7:

Please backport to 3.6
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 1:

(2 comments)
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 4: Code-Review+2
|Patch Set 5: Commit message was updated
|Patch Set 5: -Code-Review
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2:

(6 comments)
|Patch Set 4:

(1 comment)
|Patch Set 4: Code-Review-1
|Patch Set 4:

(1 comment)
|Patch Set 5:

(3 comments)
|Patch Set 6:

(1 comment)
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Code-Review+2
|Patch Set 7: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2:

Rerun-Hooks: all
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 1: Code-Review+2
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 5:

Added Arik Hadas and Martin Sivak as reviewers, since the patch affects all kinds of devices with pci address.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Uploaded patch set 1.
|Abandoned

Will be part of 3.6.3
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

Please backport to 3.6
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2

Please verify it works with 3.6 vdsm.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 1:

Please backport manually to the correct branch (the automatic cherry-pick is not working well).
Currently it is refs/tags/ovirt-engine-3.6.3 should be ovirt-engine-3.6.3
|Patch Set 3:

I don't think we should revert this patch on master. On master, please proceed with the patches that fixes the issues were introduced by the patch.

Please ask Tal Nissan or Eyal Edri to remove the gerrit-hooks -1.
|Patch Set 1: Code-Review+2
|Patch Set 9: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 4: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2:

(4 comments)
|Patch Set 2:

(3 comments)
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

The bug is targeted to 4.0. Please abandon it from 3.6 branch.
|Patch Set 4:

Please abandon the patch. It is fixing an issue in the old setup networks, which anyway should be removed in 4.0.
I pretty sure, sending no params to the new setup networks will end up with not doing anything and not sending the command to the vdsm. So the mgmt network shouldn't be removed.
Please verify it. If indeed sending empty params to the new HostSetupNetworks doesn't have any effect, please close the bug on won't fix.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

Please backport to 3.6.
|Patch Set 1:

(4 comments)
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 2:

(15 comments)

Didn't finish reviewing the patch yet.
|Patch Set 3:

(10 comments)
|Patch Set 3:

(1 comment)
|Patch Set 6:

(12 comments)
|Patch Set 7:

(5 comments)
|Patch Set 6:

(1 comment)
|Patch Set 8:

(3 comments)
|Patch Set 8: Code-Review+2
|Patch Set 8:

(1 comment)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 8:

(1 comment)
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 5:

(20 comments)
|Patch Set 5:

(1 comment)
|Patch Set 8:

(20 comments)
|Patch Set 9:

(5 comments)

The patch is good and has my +2.
Just fix the comment (there is just one real comment, the other are for your consideration) and I will post the +2.

Good work!!!
|Patch Set 12: Code-Review+2
|Patch Set 12:

Please verify.
|Patch Set 3:

(6 comments)
|Patch Set 3: Code-Review-1

(1 comment)
|Patch Set 4:

(7 comments)
|Patch Set 4: Code-Review-1
|Patch Set 3:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+2

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 3: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 5: Verified+1
|Patch Set 3: Verified+1
|Patch Set 5: Code-Review+2

(1 comment)
|Patch Set 6: Commit message was updated
|Patch Set 5:

(1 comment)
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 8: Verified+1
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 1:

Martin, you wrote that you didn't actually verify the patch.
Please verify it and Yevgeny will remove his -1.
|Patch Set 1:

The patch doesn't fix the 'mac pool not initialized' bug. So there is no urgency to merge it.
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 9:

(9 comments)
|Patch Set 9:

(1 comment)
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Code-Review+2
|Patch Set 11: Verified+1
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Patch Set 12: Code-Review+1

Waiting for rest review.
|Patch Set 12: -Verified
|Patch Set 12: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 4:

(4 comments)
|Patch Set 4:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5:

Please merge manually.
|Patch Set 6: Code-Review+2
|Patch Set 6:

Please verify.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 5:

(4 comments)
|Patch Set 5:

(4 comments)
|Patch Set 5: -Code-Review
|Patch Set 5: -Continuous-Integration
|Patch Set 4:

How this patch differ from https://gerrit.ovirt.org/#/c/48965 ?
|Patch Set 4: Code-Review+2

Please ignore the previous comment.
|Patch Set 5:

(1 comment)

Please rebase
|Patch Set 5: Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 5:

(4 comments)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review-1

Seems like this patch has to be abandoned. Since https://gerrit.ovirt.org/#/c/48060/ has all its logic and more.
|Patch Set 19:

Upgrading Moti's +1 to +2.
|Patch Set 19: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 7: Code-Review+2

Upgrading Moti's and Yevgeny's +1 to +2.
|Patch Set 7:

A manual rebase should be done.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Continuous-Integration+1
|Patch Set 16:

Upgrading Yevgeny's +1 to +2
|Patch Set 16: Code-Review+2
|Patch Set 21:

Upgrading Yevgeny's +1 from patch set 16 to +2
|Patch Set 22: Code-Review+2
|Patch Set 19: Code-Review+2

Upgrading Yevgeny's +1 to +2
|Patch Set 6:

(4 comments)
|Patch Set 12: Code-Review+2

(1 comment)
|Patch Set 14: Code-Review+2
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15: Continuous-Integration+1
|Patch Set 8:

(16 comments)
|Patch Set 15:

(43 comments)
|Patch Set 18:

(6 comments)
|Patch Set 20:

(1 comment)
|Patch Set 21: Code-Review+2
|Patch Set 22: Patch Set 21 was rebased
|Patch Set 22: Continuous-Integration+1
|Patch Set 34:

(6 comments)
|Patch Set 34:

(1 comment)
|Patch Set 34:

(1 comment)
|Patch Set 42:

(1 comment)
|Patch Set 49:

(2 comments)
|Patch Set 53: Code-Review+2

(1 comment)

Please update the script number.
|Patch Set 54: Code-Review+2
|Patch Set 55: Patch Set 54 was rebased
|Patch Set 56: Code-Review+2 Continuous-Integration+1
|Patch Set 17:

(14 comments)

Reviewed till NetworkFilterDatTest
|Patch Set 18:

(4 comments)

Dan, please review https://gerrit.ovirt.org/#/c/51184/18/packaging/dbscripts/upgrade/04_00_0140_add_netwrok_filter_table.sql to make sure the filters match the correct version.
|Patch Set 24: Code-Review+2
|Uploaded patch set 25.
|Patch Set 25: Code-Review+2 Verified+1
|Patch Set 20:

(7 comments)
|Patch Set 21: Code-Review+2

(1 comment)
|Patch Set 23: Code-Review+2
|Patch Set 24: Patch Set 23 was rebased
|Patch Set 24: Continuous-Integration+1
|Patch Set 18: Code-Review+2
|Patch Set 24: Code-Review+2
|Patch Set 25: Patch Set 24 was rebased
|Patch Set 25: Continuous-Integration+1
|Patch Set 16: Published edit on patch set 15.
|Patch Set 15:

(2 comments)
|Uploaded patch set 17.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 23.
|Patch Set 23: Verified+1
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Patch Set 26: Verified+1
|Uploaded patch set 27.
|Patch Set 27: Verified+1
|Uploaded patch set 28.
|Patch Set 28: Verified+1
|Patch Set 29: Patch Set 28 was rebased
|Uploaded patch set 30.
|Uploaded patch set 31.
|Patch Set 31: Verified+1
|Patch Set 31: Code-Review+2
|Patch Set 17: Code-Review+2

All Yevgeny's comments were answered. Upgrading to +2.
|Patch Set 18: Code-Review+2
|Patch Set 20:

(2 comments)
|Patch Set 21: Code-Review+2

I would prefer you squash all the patches to - https://gerrit.ovirt.org/#/c/56553

But if it takes a lot of time, please just mark all the patches as verified and I will merge them all.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 12:

(7 comments)

Still didn't review the last upgrade script.
|Patch Set 15:

(4 comments)
|Patch Set 18:

(5 comments)
|Patch Set 18:

(7 comments)
|Uploaded patch set 19.
|Patch Set 19:

(2 comments)
|Uploaded patch set 20.
|Patch Set 20: Verified+1
|Patch Set 20: Code-Review+2
|Patch Set 21: Patch Set 20 was rebased
|Patch Set 21: Continuous-Integration+1
|Patch Set 32: Code-Review-1

(6 comments)
|Patch Set 39:

(1 comment)
|Patch Set 39:

(4 comments)
|Patch Set 41: Code-Review+2

(1 comment)
|Patch Set 48: Code-Review+2
|Patch Set 52: Code-Review+2
|Patch Set 54: Continuous-Integration+1
|Patch Set 31: Code-Review-1

(10 comments)
|Patch Set 47:

(2 comments)
|Patch Set 53: Code-Review+2
|Patch Set 55: Code-Review+2 Continuous-Integration+1
|Patch Set 33:

(13 comments)
|Patch Set 54:

(2 comments)
|Patch Set 57: Code-Review+2
|Patch Set 57: Continuous-Integration+1
|Patch Set 37:

(23 comments)
|Patch Set 58:

(2 comments)
|Patch Set 60: Code-Review+2
|Patch Set 60: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Continuous-Integration+1 Verified+1
|Patch Set 5:

(5 comments)
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 8: Patch Set 7 was rebased
|Uploaded patch set 9.
|Patch Set 9: Code-Review+2 Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 6: Code-Review-1

(2 comments)

This patch should be abandoned.
|Patch Set 7:

(5 comments)
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Verified+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Code-Review+2
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Patch Set 5:

(8 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 17: Continuous-Integration+1
|Patch Set 2:

(5 comments)
|Patch Set 3:

(8 comments)
|Patch Set 4: Code-Review+2

(1 comment)

Please verify.

There is a small comment, you may fix it or not, as you wish:)
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 9: Code-Review+2

All the comments were answered. Upgrading to +2.
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 7: Code-Review+2

Upgrading Yevgeny's +1 from patchset 5 to +2
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 31:

(7 comments)
|Patch Set 52:

(3 comments)
|Patch Set 52:

(1 comment)
|Patch Set 54: Code-Review+2
|Patch Set 54: Continuous-Integration+1
|Patch Set 34:

(2 comments)
|Patch Set 34:

(1 comment)
|Patch Set 34:

(1 comment)
|Patch Set 53: Code-Review+2
|Patch Set 54: Continuous-Integration+1
|Patch Set 55: Patch Set 54 was rebased
|Patch Set 55: Continuous-Integration+1
|Patch Set 25:

(1 comment)
|Patch Set 30:

(1 comment)
|Patch Set 30:

(1 comment)
|Patch Set 31: Code-Review+2

(1 comment)
|Patch Set 36: Code-Review+2
|Patch Set 37: Patch Set 36 was rebased
|Patch Set 37: Continuous-Integration+1
|Patch Set 26:

(2 comments)
|Patch Set 32:

(1 comment)
|Patch Set 32: Code-Review+2
|Patch Set 37: Code-Review+2
|Patch Set 38: Patch Set 37 was rebased
|Patch Set 38: Continuous-Integration+1
|Patch Set 6:

(4 comments)
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 9:

(2 comments)
|Patch Set 11: Code-Review+2

(1 comment)
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Continuous-Integration+1
|Patch Set 9:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 12: Code-Review-1

(2 comments)
|Patch Set 13: Code-Review+2
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 16: Continuous-Integration+1
|Patch Set 30:

(5 comments)
|Patch Set 51: Code-Review+2
|Patch Set 53: Patch Set 52 was rebased
|Patch Set 53: Continuous-Integration+1
|Patch Set 17:

(1 comment)
|Patch Set 24: Code-Review+2

(1 comment)
|Patch Set 29: Code-Review+2
|Patch Set 30: Patch Set 29 was rebased
|Patch Set 30: Continuous-Integration+1
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 5: Commit message was updated.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 3:

Please backport to 4.0.1
|Patch Set 2:

(2 comments)
|Patch Set 2:

(2 comments)
|Patch Set 3: Code-Review+2
|Patch Set 5: Commit message was updated.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 6:

Please backport to 4.0.1
|Patch Set 2: Code-Review+2

Please rebase, a big part of the code is not relevant anymore.
|Patch Set 4: Code-Review+1

Will upgrade to +2 once Juan will approve the REST part of the patch.
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Commit message was updated.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 7:

Please backport to 4.0.1
|Patch Set 3:

(5 comments)
|Patch Set 3: Code-Review-1

(1 comment)
|Patch Set 9: Code-Review+2

(3 comments)
|Patch Set 9:

Gave +2 but please fix the small comments.
|Patch Set 10: Code-Review+2

Please verify.
|Patch Set 12: Patch Set 11 was rebased
|Uploaded patch set 15.
|Patch Set 15: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Uploaded patch set 2.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 17: Verified+1
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19.
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Patch Set 18:

(4 comments)
|Uploaded patch set 23.
|Patch Set 23: Verified+1
|Patch Set 24: Patch Set 23 was rebased
|Patch Set 24: Continuous-Integration+1
|Patch Set 5:

(5 comments)
|Patch Set 5:

(2 comments)
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 10: Code-Review+2 Continuous-Integration+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 6:

(5 comments)
|Patch Set 7: Code-Review+2
|Patch Set 11: Code-Review+2 Continuous-Integration+1
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 21:

(1 comment)
|Patch Set 41: Code-Review+2
|Patch Set 43: Patch Set 42 was rebased
|Patch Set 43: Continuous-Integration+1
|Patch Set 23: Code-Review+2

(1 comment)
|Patch Set 42: Code-Review+1

I will upgrade to +2 once you will get +1 from Juan
|Patch Set 42: Code-Review+2
|Patch Set 44: Code-Review+2
|Patch Set 45: Patch Set 44 was rebased
|Patch Set 45: Continuous-Integration+1
|Patch Set 5:

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Code-Review+2 Continuous-Integration+1
|Patch Set 5: Code-Review+2

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 5:

(4 comments)
|Patch Set 5:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 5:

(2 comments)
|Patch Set 7:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 5: Code-Review+2

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 11: Continuous-Integration+1
|Patch Set 22:

(9 comments)
|Patch Set 43: Code-Review+2

(2 comments)
|Patch Set 22:

(1 comment)
|Patch Set 44: Code-Review+2
|Patch Set 45: Code-Review+2
|Patch Set 46: Patch Set 45 was rebased
|Patch Set 46: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1:

(3 comments)
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 13: Code-Review+2

Upgrading mucha's +1 to +2
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Continuous-Integration+1
|Patch Set 12: Code-Review+2

Upgrading Mucha's +1 to +2.
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2 Verified+1
|Patch Set 6: -Code-Review -Verified
|Uploaded patch set 7.
|Patch Set 7: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

Piotr, doesn't it worth add a code to JsonRpcServer tranlating 'Set' to 'List' to avoid this kind of bugs?
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Continuous-Integration+1
|Patch Set 3:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1:

Please verify that having those audit_logs in the table marked as deleted actually avoids the NPE when opening the events tab. Looking at the code I didn't see any filtering that is done not to show those deleted events, but maybe I miss something...
|Patch Set 1: -Code-Review
|Patch Set 1:

Seems the the get method in 'audit_log_sp.sql' filters out the entries that marked as removed. So you patch should be ok (please verify it:)).
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+2

Please update the number of the script.
|Patch Set 5: Code-Review+2
|Patch Set 5: Continuous-Integration+1 Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 9:

(2 comments)
|Patch Set 10: Code-Review+2
|Patch Set 10:

Please verify
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Continuous-Integration+1
|Patch Set 7:

(1 comment)
|Patch Set 7: Code-Review-1
|Patch Set 8: Code-Review-1

(1 comment)
|Patch Set 9: Code-Review-1

(3 comments)
|Patch Set 10:

(1 comment)
|Patch Set 11: Published edit on patch set 10.
|Patch Set 11: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 12: Code-Review+2
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Continuous-Integration+1
|Patch Set 9: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 6:

Upgrading Eli's and Mucha's +1's to +2.
Marcin, please fix the script number so I can merge.
|Patch Set 7: Code-Review+2
|Patch Set 7: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 3: Commit message was updated.
|Patch Set 4: Commit message was updated.
|Patch Set 4: Code-Review+2
|Patch Set 4:

Please backport to 3.6.5
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(2 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Commit message was updated.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3: Code-Review+2

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 7:

Please backport to 3.6
|Patch Set 2: Code-Review+2
|Patch Set 2:

Martin, please reply to Moti's and Arik's comments.
|Patch Set 7: Code-Review+1

For network issues.
|Patch Set 6:

(4 comments)
|Patch Set 9: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 4: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2
|Patch Set 6: Continuous-Integration+1
|Patch Set 6: -Continuous-Integration
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Verified+1
|Patch Set 4:

(2 comments)
|Patch Set 5: Code-Review+2
|Patch Set 7: Code-Review+2
|Patch Set 7: Continuous-Integration+1
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 9: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 5:

(2 comments)
|Patch Set 6:

You've marked the comments in patchset 5 as 'Done', but patchset 6 looks exactly like 5. Please post the new updated code.
|Patch Set 8: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 6: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 6:

(6 comments)
|Patch Set 6:

Please post the fixes
|Patch Set 8: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 6:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 6: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 6:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 9: Continuous-Integration+1
|Patch Set 6:

(3 comments)
|Patch Set 8:

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 10: Continuous-Integration+1
|Patch Set 6:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 10: Continuous-Integration+1
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2

Please verify.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Continuous-Integration+1
|Patch Set 1:

danken: the setup network dialog is about configuring networks, it is not the best place to report the currently-problematic status of the bond. This indication can stay here, but a more important one should show up in the host interfaces subtab. Please place an exclamation mark with a tooltip next to the bond name there.
|Patch Set 3:

(3 comments)
|Patch Set 6: Commit message was updated.
|Patch Set 7: Commit message was updated.
|Patch Set 7: Code-Review+2
|Patch Set 11: Continuous-Integration+1
|Patch Set 5:

(3 comments)
|Patch Set 5:

(1 comment)
|Patch Set 7:

(3 comments)
|Patch Set 9: Code-Review+2
|Patch Set 10: Continuous-Integration+1
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2:

Upgraded to +2.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 2: Code-Review+2

Upgrading to +2.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4: Code-Review-1

(3 comments)
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 2: Code-Review+2

Please verify.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Code-Review+2

(1 comment)

Please notice there is one small comment.
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2

Please verify
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

Upgraded to +2
|Patch Set 4: Code-Review+2

Upgrading to +2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 3:

Upgrading to +2
|Patch Set 2: Code-Review+2
|Patch Set 1:

ding to +2
|Patch Set 1:

*upgrading
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 5: Code-Review+1

Will upgrade to +2 once Eli will review the db change.
|Patch Set 5: Code-Review+2

Upgrading to +2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 5:

Upgrading to +2
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 5:

(3 comments)
|Patch Set 6:

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(14 comments)
|Patch Set 2: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 2: Code-Review+2

(1 comment)
|Patch Set 3: Commit message was updated.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 2: Code-Review+2

Upgrading to +2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 2:

(2 comments)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+2

Upgrading to +2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1:

Upgrading to +2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

Please respond to mmucha's comments. Once you'll get +1 from him, I will upgrade to +2.
|Patch Set 3: Code-Review+2 Continuous-Integration+1

Upgrading to +2
|Patch Set 3: -Continuous-Integration
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2

Upgrading to +2.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1

(1 comment)
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1:

(3 comments)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 5: Code-Review+1

+1 for the backend
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 8: Continuous-Integration+1
|Patch Set 8: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 3.
|Patch Set 1:

(2 comments)
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.0 as commit af1eb85cc8716209f51e6a239c01d9615d66ea7f
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Code-Review+1

Will upgrade to +2 once you'll reply to Martin's comment on patchset 1 and Eli will review the sql.
|Patch Set 6:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 8: Published edit on patch set 7.
|Patch Set 8: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Code-Review+1

Will give +2 once Eli will approve.
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2

Upgrading to +2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review-1

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 3: Published edit on patch set 2.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.0 as commit 5c410124c6d6481c832c8dd41b7182beeb7b0286
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.0 as commit 49dcfea6216f149b796188bab8afaaf119a801fd
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Why isn't this patch merged to master?
|Patch Set 1:

Why does it have another change id?
In master- I6f0fd4c2398112c189b853c1294bf535b82dca9b
here - If1f3368bcff736fc1f28faa0ea8393cfc451e7ec ?
|Patch Set 1: Code-Review+2
|Patch Set 1: Cherry Picked from branch master.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Cherry Picked from branch master.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: -Code-Review

Removing my +1. As I understand from Moti, the 'postConstruct' is part of the construction process. So since 'MacPoolPerCluster' depends on 'Backend' it for sure won't be initialized in the 'postConstruct' stage of 'Backend' and therefore the compensation of the macpool in this stage will always fail.
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2

(1 comment)
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 8:

Please backport to 4.0.1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2

(1 comment)
|Patch Set 3:

Please verify.
|Patch Set 4: Code-Review+2

(1 comment)
|Patch Set 4:

Please verify and check what causes the jenkins to fail.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review-1

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5:

Please backport to 4.0
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Continuous-Integration+1
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1

+1 for network dialogs.
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 1:

(3 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned

The patch is already merged. Thought by mistake it was reverted.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1

Will upgrade to +2 after Eli will give +1.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review+2

Please verify.
|Patch Set 1:

I cannot merge that patch since it has to be rebased manually.
If you are already rebasing it, please replace the @Singleton with @ApplicationScoped.
|Patch Set 1:

I think its ok to merge it as is. If you want to change the @Singleton to @ApplicationScope it can be done in a separate patch.
This patch wait for review long enough:)
|Patch Set 1: Code-Review+2
|Patch Set 17: Patch Set 16 was rebased
|Patch Set 22: Code-Review+2
|Patch Set 24: Patch Set 23 was rebased
|Patch Set 25: Patch Set 24 was rebased
|Patch Set 28:

(3 comments)
|Patch Set 29: Code-Review+2
|Patch Set 32: Patch Set 31 was rebased
|Patch Set 33: Patch Set 32 was rebased
|Patch Set 32:

(7 comments)
|Patch Set 33: Code-Review+1
|Patch Set 36: Code-Review+2
|Patch Set 37: Code-Review+2
|Patch Set 39: Code-Review+2
|Patch Set 40: Patch Set 39 was rebased
|Patch Set 42: Patch Set 41 was rebased
|Patch Set 42: Code-Review+2
|Patch Set 43: Patch Set 42 was rebased
|Patch Set 36: Code-Review+2

(1 comment)
|Patch Set 40: Code-Review+2
|Patch Set 45: Code-Review+2

(1 comment)
|Patch Set 46: Patch Set 45 was rebased
|Patch Set 36:

(6 comments)
|Patch Set 39:

(2 comments)
|Patch Set 39: Code-Review+2
|Patch Set 40: Code-Review+2
|Patch Set 45: Code-Review+2
|Patch Set 46: Patch Set 45 was rebased
|Patch Set 38: Code-Review+2

(1 comment)
|Patch Set 39: Code-Review+2

Please add more informative commit message.
|Patch Set 40: Code-Review+2
|Patch Set 46: Patch Set 45 was rebased
|Patch Set 36:

(8 comments)
|Patch Set 36:

(4 comments)
|Patch Set 36:

(4 comments)
|Patch Set 38:

(1 comment)
|Patch Set 39:

I think you have some kind of rebase issue here. backend non-relevant files are now part of the commit.
|Patch Set 44: Code-Review+2

(1 comment)
|Patch Set 45: Patch Set 44 was rebased
|Patch Set 36: Code-Review+2
|Patch Set 38: Code-Review+2
|Patch Set 45: Patch Set 44 was rebased
|Patch Set 46: Patch Set 45 was rebased
|Patch Set 12:

(2 comments)
|Patch Set 13: Code-Review+2
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 24:

(23 comments)
|Patch Set 30: Code-Review+2
|Patch Set 31: Patch Set 30 was rebased
|Patch Set 34: Patch Set 33 was rebased
|Patch Set 36: Patch Set 35 was rebased
|Patch Set 8: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 20: Code-Review+2
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 7:

(1 comment)
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 2: Code-Review+1

Please fix the bug url and I will upgrade to +2.
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 2: Code-Review+1

Will upgrade to +2 once Eli will review.
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1: Code-Review-1

(3 comments)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 4:

(2 comments)
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 8: Code-Review+1
|Patch Set 1:

(2 comments)
|Patch Set 5: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 1:

(9 comments)
|Patch Set 5:

(3 comments)
|Patch Set 8: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 4: Code-Review+2

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 5:

(4 comments)
|Patch Set 6: Code-Review+2
|Patch Set 9:

(3 comments)
|Patch Set 9:

(1 comment)
|Patch Set 11:

(2 comments)
|Patch Set 11:

(3 comments)
|Patch Set 11: Code-Review+2

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit dfd748e5ca4fa77ba4740dc203475fe3887a0bfc
|Patch Set 6:

(5 comments)
|Patch Set 6:

(1 comment)
|Patch Set 9:

(4 comments)
|Patch Set 12:

(1 comment)
|Patch Set 15: Code-Review+2
|Patch Set 16: Patch Set 15 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 5: -Code-Review

(4 comments)
|Patch Set 6: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 56388b64f56390ba5890cb55082769a563d45e64
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Code-Review+2

Please verify on 4.1
|Patch Set 1:

I don't think it worth backporting it to 4.1.
Anyway, if you think it is, please open a bug:)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit a59b86a78a291e77b858e9432705350f9d9d9dba
|Patch Set 4: Code-Review+2

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 7: Code-Review+2
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2:

(2 comments)
|Patch Set 7: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 4: Code-Review+2

(1 comment)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 822c9dbe8b1d32776b0a72c87fb83a917423835f
|Patch Set 2: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 3:

(3 comments)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5:

(2 comments)
|Patch Set 8: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 8: -Code-Review
|Patch Set 9: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review+2

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: -Code-Review
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 3: Code-Review+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 3: Code-Review+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 4: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(5 comments)
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 2:

(2 comments)
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 5: Code-Review+2
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2

Upgrading to +2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 6: Code-Review+2
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Abandoned
|Patch Set 3:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+2
|Patch Set 5: Code-Review-1

(2 comments)
|Patch Set 7:

(1 comment)
|Patch Set 8:

(2 comments)
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 11: Code-Review+2
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 2: Code-Review+1

(1 comment)

Please remove the 'dear code reviewer' comment.
|Patch Set 3: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 4:

(2 comments)
|Patch Set 4:

(1 comment)
|Patch Set 7: Code-Review+2

(1 comment)
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|After testing with Yuri the affect of this change we came to the conclusion it will not cause issues.
|Done
|Yaniv, is this early enough? Do we have other things in engine setup (upgrade) that might interfere with a remote dwh?
|Should be 'Column or Table % does not exist ...'
|ENGINE_REPORTS_DASHBOARD_URL=${ENGINE_REPORTS_BASE_URL}/flow.html?_flowId=viewReportFlow
|you are missing a comma here
|Is this required?
|same question
|same question
|Done
|Done
|if 'dst' is not none then it means its not a clean install and we need to rename the file's path to its previous path and remove the file that we saved as backup(fille name concantenated with the date)
|Done
|Done
|Done
|I agree. Please verify.
|I agree with Alon's comment. This is an expected situation so I don't think handling it with exception will be right for this case.
|Done
|Fixed.
|The purpose is to remove the src files in the case of new DB if they were already deployed.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I don't understand. I made the change in the ETL for hosts and vms so this should be changed in both views.
|Done
|Done
|Done
|Done
|Done
|Done. Did not take it under consideration...
|Done
|Done
|Done
|Done
|Done
|Checked and character varying is allies to varchar. and it is also ansi.
The values of &quot;user name&quot; are varchar(255) and in the users_detailes_history its   'character varying. I dont think there is an issue here.
What do you think?
|checked and character varying in ansi for varchar.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I believe you are right. it means we want to include only vms that were not deleted or deleted after the start date.
I will change it in the other br10 reports
|Done
|Done
|Done
|Done
|Done
|Why?
|Done
|Done
|Done
|Done
|Done
|Done
|moved up the first table .so the inner join is indented correctly now
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|fixed
|looks good to me.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|not sure what you ment
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|not done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I looked at code examples and in this case I don't think we should indent. All the joins are under the same &quot;From&quot;. I think we should leave it like that.
Let me know what you think.
|I dont know why this is... It looks fine in the studio.
|same
|Done
|same
|Done
|Done
|We use the dwh views for the etl. I don't see you have made changes to the engine db so afaik this should not affect the views as well.
|I followed the same convention in the file.
There is already another param that is set to &quot;false&quot;.
|Done
|Will remove
|Done
|Done
|Done
|I'll open a bug for this.
I would like to make the change as small as possible and this is the variable current definition, I just added it so it can be configurable.
Ill add # Default = &quot;limit 1000&quot; for example
|Done
|The tables do not exist anymore.
|I removed collection of datacenters statistics (only collected status) and for backwords support for 3.6 views, I needed to create these views and fields so if a user collected this data to his system, his connection will not break
|Done
|I see that in the other queries, this condition is under the &quot;WHERE&quot; clause. Performance should be the same afaik because the optimizer should solve this. But maybe we need to change here to be the same as in the other queries.
|Eldad, Please check again only after the index patch is merged https://gerrit.ovirt.org/#/c/59449/
|You can remove this join. Not used.
|Please update to 4.1.0
|Done
|Done
|In that case I removed fc22 from distro completely.
I understood from ydary we should support 3.6 on el7 upstream.
|suffix
|Done
|Done
|Done
|This is not required for installing on every node. Only where the Elasticsearch is installed with a central fluentd.
|It might be more generic to get the start and end of the name with .. in the middle
|You are correct. But unfortunately this is a limitation for collectd at this point
|updated to &quot;virtual machine where the daemon runs&quot;
|Please add both.
|I would go with EVENT_ID
|Should the previous cpu/memory usage percent be the max or average?
|Done
|Not relevant here.
|I'll fix this in a separate patch
|No. It only updates the tag field
|The actual filter tag is updated here by the &quot;rewrite_tag_filter&quot;
|See in ovirt_engine/templates/ovirt-processing.conf
|Please update to rubygem-fluent-plugin-collectd-nest
|same
|same
|same
|should be rubygem-fluent-plugin-viaq_data_model
|Same as above
|I think it this will catch both cases then. No?
|I get a regex error for @timestamp.
I use &quot;time_key timestamp&quot; to define timestamp as the time key.
|Yes. This is until Didi adds the env name population.
|This defines the field used as time_key.
|&quot;This parameter is highly recommended. Fluentd will record the position it last read into this file.&quot;
|Not sure what you mean. Until a dynamic env name, the env name will be &quot;engine&quot;.
the tag will be &quot;project.ovirt-logs-engine&quot;
|This sets the tag to the project.ovirt-logs-engine so it can later filter correctly in the central fluentd to ovirt-logs index with &quot;engine&quot; environment name
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+2
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 7:

@Eli, please merge
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2

Reviewed with ydary and approved.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2

Reviewed with ydary and approved.
|Patch Set 3: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2:

@Sandro - Please make sure the slave uses the new JRS package.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: -Verified
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

why not? there are java files changes here ...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Abandoned

Added a different patch
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 4:

please add bug number
|Patch Set 4: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 4: Code-Review+1
|Patch Set 4: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Commit message was updated
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+1

Tested and now works for me.
|Patch Set 1:

Please make sure to add to 3.5 as well.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

verified by installing ovirt engine, dwh from 3.5 snapshots and report with the patch and it work with no errors.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-dwh-3.5 as commit f3144ce80322431c743b55f17775de8a8a7bc775
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-reports-3.5 as commit d5fb4fc9112c5c1fbb4c8ecd4e0fde0d545c54a2
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Abandoned

Not required
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-reports-3.5 as commit 7c19b3a87ae60886654dd80682e57dc4dd59ad7f
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-dwh-3.5 as commit 0efc3bff69d9ac51edf37df53dadf69c3052da22
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-reports-3.5 as commit 7b19f2befeaa7dd5f3880360a27bd09694954b14
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 6: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 6: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-reports-3.5 as commit 02d7bd9b70f50f0b6b5050e9d89ec4ab1dff783e
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

postponed
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

postponed
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: -Verified
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 14:

Please verify and I'll add +1
|Patch Set 14: Verified+1
|Patch Set 14: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(3 comments)
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Abandoned

The jar Jasper supplied is insufficient for the required patch.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Abandoned

Not required
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Abandoned

Not required
|Patch Set 2: Code-Review+1
|Patch Set 1:

Checked and SSO now works.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Abandoned

wrong branch
|Uploaded patch set 1.
|Abandoned

wrong branch
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-reports-3.4 as commit 6d77ba6dc3976557336b03a6ce0a3f98a9b2916c
|Abandoned

wrong branch
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

wrong branch
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Abandoned

wrong branch
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1:

Eldan approved the changes.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Patch Set 2: Verified+1
|Patch Set 2: -Verified Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1:

(8 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: -Verified -Code-Review
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1:

(4 comments)
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Commit message was updated
|Patch Set 6: Commit message was updated
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 9:

(2 comments)
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(2 comments)
|Patch Set 6: Verified+1
|Patch Set 7: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.4 as commit e9793fb02ad4350b32c12f1f4b2b57115eb939bf
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated
|Uploaded patch set 6.
|Patch Set 5:

(7 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 9: Commit message was updated
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 11:

(4 comments)
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: -Verified -Code-Review
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 2:

(4 comments)
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 3:

(7 comments)
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(2 comments)
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2: -Verified -Code-Review
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2: -Verified -Code-Review
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(3 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5:

(3 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3:

(18 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 4:

(2 comments)
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1 Code-Review+1
|Patch Set 9:

(2 comments)
|Uploaded patch set 10.
|Patch Set 10: Verified+1 Code-Review+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1 Code-Review+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1 Code-Review+1
|Uploaded patch set 14.
|Patch Set 13:

(1 comment)
|Patch Set 14: Verified+1 Code-Review+1
|Uploaded patch set 15.
|Patch Set 14:

(3 comments)
|Patch Set 15: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 7.
|Patch Set 6:

(2 comments)
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Uploaded patch set 9.
|Patch Set 8:

(3 comments)
|Patch Set 9: Verified+1 Code-Review+1
|Patch Set 9:

(5 comments)
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2:

(5 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 2:

(1 comment)
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 3:

(3 comments)
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 4:

(4 comments)
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5:

(4 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Patch Set 6:

(3 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Abandoned

Release note was already in.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5: -Verified -Code-Review
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1 Code-Review+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1 Code-Review+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1 Code-Review+1
|Uploaded patch set 13.
|Patch Set 12:

(2 comments)
|Patch Set 13: Verified+1 Code-Review+1
|Uploaded patch set 14.
|Patch Set 13:

(3 comments)
|Patch Set 14: Verified+1 Code-Review+1
|Uploaded patch set 15.
|Patch Set 15: Verified+1 Code-Review+1
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

did not verify. only changed message text.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

did not verify. text change.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Abandoned

Added change to another patch.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.4 as commit 97d9cf7b00809658a2f3a8a14d0c52bdb663972b
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: -Verified -Code-Review
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.4 as commit b0fddd124aa1a2b769bb4531e5618339c0cbafcb
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(4 comments)
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 5:

(2 comments)
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 2:

(12 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: -Verified -Code-Review
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 4: Commit message was updated
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Patch Set 6:

(2 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Abandoned

merged with other patch
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 3:

(3 comments)
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 4:

(2 comments)
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Patch Set 3:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Patch Set 6:

(2 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Code-Review+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Code-Review+1
|Patch Set 7:

(6 comments)
|Uploaded patch set 9.
|Patch Set 9: Verified+1 Code-Review+1
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: -Verified -Code-Review
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: -Verified -Code-Review
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Abandoned

Duplicate.
Relevant patch Change-Id: I56bd7583fd20c1ead3c760a922a37b5c1ac87da5
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

Reviewed with ydary
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 19: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

Reviewed with ydary
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: -Code-Review
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

Reviewed with ydary
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Patch Set 13:

Please merge. Reviewed with ydary.
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Commit message was updated
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1
|Patch Set 9: -Verified
|Uploaded patch set 10.
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1 Code-Review+2

Reviewed with ydary
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Commit message was updated
|Patch Set 5:

Reviewed with yday
|Patch Set 5: Code-Review+2

ydary*
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 8: Commit message was updated
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Patch Set 10: Code-Review+2

Reviewed with ydary
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Verified+1
|Patch Set 9:

Reviewed with ydary. Please merge.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1

Reviewed with ydary. Please merge.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

Reviewed with ydary. Please merge.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6: Commit message was updated.
|Patch Set 7: Commit message was updated
|Patch Set 7: Verified+1
|Patch Set 7: Code-Review+2

Reviewed with ydary
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Code-Review+2

Reviewed with ydary
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11: Code-Review+2

Reviewed by ydary
|Patch Set 12: Patch Set 11 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2

Reviewed with ydary
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 7:

still relevant. targeted for 3.6. still have open issues
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2 Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2 Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Code-Review+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1: -Verified

(1 comment)
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+1 Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Code-Review+1
|Patch Set 1:

&gt; Did you verify it does not break CMFE?

In 4.0 CFME will need to make modifications to be at least on the 3.6 view.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)

&gt; (1 comment)
 &gt; 
 &gt; Are these files copied from anywhere?
 &gt; 
 &gt; It might make sense to create somewhere a repository of functions
 &gt; or whatever that can be used by many projects. An example is a
 &gt; function to create maven settings - no need to replicate it around.

Files are copied from engine, but needed to make some changed for dwh.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+2 Verified+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Commit message was updated.
|Patch Set 3:

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Code-Review+1
|Uploaded patch set 8.
|Patch Set 7:

(2 comments)
|Patch Set 8: Verified+1
|Patch Set 8: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Code-Review+2 Verified+1
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Commit message was updated.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(1 comment)
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified-1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+1 Verified+1

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+1 Verified+1

(1 comment)
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

&gt; Please note that without changing the build artifact script in
 &gt; automation you will still have git hash and timestamp in the rpm
 &gt; name.
 &gt; I suggest to drop the suffix there.

Done
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-dwh-4.0 as commit 2f78e1deb82c24c0d682686530b3dce900cc4870
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 2:

Patch was tested by Alex Krzos that it fixes manageIQ issue.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Removed fc22 from the jenkins job.
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 7: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-dwh-4.0 as commit c0a716835ce6267c6e12f224f17576ab2717c203
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review-1

Please add memory.used in same units as memory.available.
|Patch Set 3:

(1 comment)

Please add units as a parameter and add a central location for units definitions.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1:

(3 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review-1
|Abandoned

Not required
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 10: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 4:

DWH will not be removed in the next version and users can still use it for their external reports system. Also manageiq still uses it.
|Patch Set 5: Code-Review+1
|Patch Set 5:

&gt; DWH will not be removed in the next version and users can still use
 &gt; it for their external reports system. Also manageiq still uses it.

Sorry. This is not used for DWH.
|Patch Set 6: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 4:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

This will break previos versions
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+1
|Patch Set 3: Commit message was updated.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Abandoned

This was done in another patch
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 6.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 7: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 9de59fecede69251c7d2c24da302eff2f0ef2fa4
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1
|Patch Set 4:

&gt; (1 comment)
 &gt; 
 &gt; Shirly please confirm the format

Where can I see the final format example?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 70ae1230513ba7bdd69c7732a670f1566ed5ef27
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 057357420abbd6eb2cc0a70a9e21f2e3b94d1e4a
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 585696e61f0a1baff183653aa9757bd20b4035b7
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 9bb7420558ffd9f150eab942446cb0e21870b50a
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Abandoned

Not relevant here anymore
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+1
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+1
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review-1 Verified-1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 1: Cherry Picked from branch master.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1:

&gt; Shirly, the patch looks like much bigger change than the commit
 &gt; message. Why are there so many changes?

In total its about 200 lines. Talend creates auto generated code that makes it look bigger.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Abandoned

Not required
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+1 Verified+1
|Patch Set 3: Commit message was updated.
|Patch Set 3: Code-Review+2

Reviewed with Yaniv Dary
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned

Not required
|Uploaded patch set 1.
|Abandoned

Not required
|Uploaded patch set 1.
|Abandoned

Not required
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(3 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 18: Patch Set 17 was rebased
|Uploaded patch set 19.
|Patch Set 19: Verified+1
|Patch Set 19: Code-Review+2
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 4:

(4 comments)
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 1:

(2 comments)
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

&gt; I think this patch should go to ovirt-4.1.1.conf , no?

Yes.Sorry. I fixed this last night and forgot to push.
|Uploaded patch set 3.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 3: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Uploaded patch set 5: Commit message was updated.
|Patch Set 5: Code-Review+2 Verified+1
|Patch Set 5: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Patch Set 7: Commit message was updated.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Patch Set 14: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1

Looks ok to me. Would like Didi to also review, when taking into account the planned cron job.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1:

We still need to check verify that the length of the 'ovirt_env_name' is less or equal to 49 characters.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 3: Published edit on patch set 2.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2:

I now added default value for this field.
I think this patch is not mandatory now.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review-1
|Patch Set 2: Verified-1
|Uploaded patch set 1.
|Patch Set 1:

ci please build
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|can this be combined to single method? Because in both methods you are calling the check if snapshot count is exceeded. Could be combined in an if..else
|method name should start with lowerCase
|I think you should strip the % sign only if present. What if gluster changes to return 90, instead of 90%?
|expected should be first argument
|In syncjob for snapshots, you have a code block to alert/clear soft-limit reached alerts. So why is this needed here?
|why is this check required before snapshot creation?
|same question as above.
|can you provide cluster name in the log messages as well?
It helps when showing the alerts in dashboard when multiple clusters have same volume name.
|use vdsGroupName parameter, the custom variable not required
|Please handle null server in GlusterCoreUtils
|This vdsm verb is not released yet, so do we need backward compatibility?
|These are no longer supported by gluster
|Yes, you could drop the glusterfsd service from the list of services to manage for gluster
|AFAIK, we only need to start glusterd service even prior to 3.7.
|Please reorder the arguments
|won't there be an NPE if upServer is null?
|please format
|What is upServer is null? Do you want to handle that separately? Or move this to an InternalCommand?
|Activities is more for ongoing tasks, here it's about features being enabled.
|this doesn't take care of the case where a volume could be both master and slave...cascaded..
|Yes..can do that
|Done
|Done
|How do you mean? Could you explain?

we do have 2 constructors - 
(Guid volumeId, Guid sessionId, String configKey, String configValue)
and 
(Guid volumeId, Guid sessionId, String configKey, String configValue, String userName)
|since it needs to use method with 7 parameters signature, otherwise username will be passed as configValue
|I'd left the earlier commands as is, only changed for the ones added
|will try that in a separate patch
|Done
|Done
|will keep it consistent as username
|Should nightly(3.8) and 3.7 repos be enabled together?
|Ignore..LATEST contains the last released version, in this case 3.6
|I think the detail information should come from database, no?
The sync job would monitor the status and detail, and populate the database with these entries. You would then query this in the BLL query
|change this to 
 private GlusterGeoRepSessionDetails geoRepDetails
|assign to instance variable
|return geoRepDetails the instance variable here.
|arguments required?
|arguments not required
|Typically 1 other address. Maximum use case is for 2 addresses
|Done
|it is the default behaviour, that is ON DELETE NO ACTION. Do I need to explicitly specify that?
|Done
|Can you log this case?
|Is the newly introduced flag not required in update?
|will change to match
|will change to match
|else here? wouldn't it be always false otherwise?
|same as above
|GetGlusterStorageDeviceListVDSCommand ?
|can you do this if getGlusterVolumeId is null? wouldn't the setGlusterVolumeId be called in the constructor already?
|getParameters().getUserName() ?
|getParameters().getUserName() ?
|shouldn't this be getParameters().getUserName?
|I think this change does not belong in this patch
|you need to pass remoteUserName here
|Done
|Done
|Done
|Don't you need to check if 'ports' element exists in gluster xml and only then populate and add ports to your output?
|for create session would geoRepSessionId exist in parameters? and there would be no session in db, right?
|canDoAction?
|You could change to execute this is parallel using ThreadPool
|Can you add @InternalCommandAttribute here are rename this to SetupGlusterGeoRepMountBrokerInternalCommand
|Is locking required here?
|make this also an internal command similar to previous
|Is there a need to override this?

Can you not move the setVdsGroupId(..) and setGlusterVolumeId(..) call to the constructor?
|Add check that georep is supported in cluster level
|slaveVolume != null check not required as you would have returned from function.
can you split into separate checks for readability?
|possible NPE, as you haven't checked if slaveHost is null or not in canDoAction
|why not call this succeeded? :)
|move to constructor?
|you could move these common expectations to a setup method that you can call in every test
|You can mock VDS and GlusterVolumeEntity as well
|pass userName, as you have initialised it
|Please rename command as well
|please rename command to have InternalCommand suffix
|missing FUNCTION
|Extend from GeoRepSessionCommandBase?
|What's the need for this variable? Wouldn't getParameters() suffice?
|you could introduce a getGeoRepSession(masterVolumeId, slaveHost, slaveVolumeName) ?
|Shouldn't this check be before the earlier check?
|slaveUserPassword instead?
|Once password less ssh session is setup, is it required to pass the slavePassword again?
|or sessionCreateReturnValue.getSucceeded() ?
|4096 is already used above
|already created?
|Take care of FindBugs -- should be equals(parameter.getVolumeId())
|Add an entry in the database, once session is created?
|or client.setHost(hostName)
client.connect() ?
|may want to externalise to constants..in a separate patch maybe?
call it GEOREP_ROOT_USER or similar
|private
|setSucceeded value to be set before returning?
|possible NPE.
|same here
|Should you be setting the bll return value to a VDSReturnValue? 
Or did you mean to set the return value to the created georep session id?
|Can you change to follow convention - verb first?
|already created?
|already created?
|These ports are valid for earlier glusterfs versions (glusterfs &lt; 3.4.0). If engine manages any of these nodes, then the ports need to be open.
|snapshotNamePrefix would be printed here, right? Would the user know at what time this failed?
|Is this used?
|typo?
|missed quotes here
|missed quotes here
|typo?
|here too
|Would this be available in the gluster repo?
|Ok..maybe a later patch then
|Is it possible for gluster to return it?
|Is creationtime also returned by gluster?
|update the comment?
|Changed to use emptyList and singletonList in the expectations
|Done
|Need to make sure that exactly 1 is returned.
|Done
|Done
|Failed to create gluster hosts public key file?
|Shouldn't optional parameters be at the end?
Same comment in below methods as well
|is groupName a required/optional parameter?
|Put optional parameters as the last arguments
|Failed to write gluster host public key?
|Can you move the remoteUserName as third argument.
You could call this(vdsId, geoRepPubKeys) inside this constructor
|Change to use remoteUserName as second parameter to this method
|change to remoteUserName as second paramater
|GetGlusterHostsPubKey
|WriteGlusterHostsPubKey
|can you put Boolean at end?
|The name suggests it is a generic class...but it is very specific to geoRepPubKeys..Consider renaming
|Please fix formatting
|Is this used in this patch? If not, can you remove this file from the patch?
|Can you reuse GlusterVolumeGeoRepSessionVDSParameters.java or extend from it?
|Why is masterServerId required? This will be executed on the node that contains the masterVolName, no?
|Sorry, missed this before..but the general trend seems to be create the command names with verb first.
|getUnusedBricks?
|getDbFacade()
|mountPoint starts with &quot;/bricks&quot; or the default configured mount point?
|There would be no issues in peer probing again, if known_addresses is empty. But will check this again
|Yes..will add that
|yes..changing. had to fix the stored procedure.
|You're right, will add that
|Added
|The list being passed is the list retrieved before the server is removed. so we need to reset the address only for the one that's remaining. will update comment
|no, the caller knows GlusterServerInfo that's returned from vds not the one stored in database
|This returns a List type, but the method takes an ArrayList parameter - which is why I did this
|Done
|Done
|Done
|Done
|Done
|I think GWT requires concrete type, IIRC
|Done
|How do you mean? Change it in the POJO?
|Done
|Changed to do it once for cluster.
|You could have mocked VDS as well.
|check if brick provisioning supported?
|You will need to override applyLockProperties() as well as default has Scope.None
|new HashMap&lt;&gt; would do
|move to constant?
|Done
|brickname is of the form &lt;ipaddress/hostname&gt;:&lt;mount point path&gt;
networkAddress is to be passed in case the ipaddress/hostname of the brick is not equal to the host's hostname, and if it matches the gluster network on the host. Otherwise, networkAddress will be passed as null
|Changing now to use both
|Yes, I will add this check...I think the networkAddress was passed to this function to do this, but I'd removed this check as I did a networkAddress check earlier. But this is needed.
|Done
|Yes..within a cluster it would be the same network. Will cache it.
|yes..visibility for the Junit test
|Done
|common doesn't have the apache dependency for StringUtils class
|Done
|Done
|1. yes, it can be primitive, will change that.
2. glusterNetwork could be null because there's no network or because it's not yet retrieved. This variable is to distinguish the first case. But you're right, we're calling it only once here as opposed to multiple times as initially planned, so not required.
|k. will keep that in mind
|So the check for which IP address to use is by looking at the host's networks and checking if any have the isGluster role. If not, we fallback to using hostname.
If we set the management network to have the isGluster role by default, then the management IP address would be used and not the hostname.
|I will try the conversion to checkbox in a separate patch, for now to change the gluster role, user can detach that network
|:) No, clearing is not possible in the radio button column - which would mean either unassign the network or choose management network.
|Convert column to checkboxes?
|Thanks! I'm removing the else, as we don't want the default to go to the management network.
|Done :)
|Done
|removed
|Done
|Done
|Done
|If no gluster network is specified, we want the gluster peer probe to happen with the hostname and not the ip address of the management network. This is to take care of users who may be using FQDN for hostname and may have setup split-DNS outside of oVirt
|same comment as before
|The validation in patch https://gerrit.ovirt.org/#/c/38177/1 will take care of this scenario.
But maybe, we do not want this role to go to management network by default. What do you think?
|Done
|FSTAB entry already exists for the device?
|call it glusterHostCreateBrick?
|Shouldn't the schedule.getStartDate() be converted to engine timezone and then compared?
|if getStartAt() is in the timezone selected, is this comparison correct?
|Add DISTRIBUTED_DISPERSE too
|DISTRIBUTED_DISPERSE as well
|why do you need this ?
|Can you roll this into ScheduleGlusterVolumeSnapshotCommand? or maybe extend from it? 

The only difference I see here is the assumption that there's an existing schedule.
|You may need to have a catch block to handle and log exceptions
|else setSucceded(false) ?
|How about raising an Audit log for failure? Otherwise, it may be difficult to track which snapshots failed
|Reschedule? (without capitalising S)
|How about handling exceptions?
|if newJobId is null or exception in scheduling?
|you can use getGlusterVolume() and the above checks are already done in the super class
|How about extraction all of the common logic to a GlusterVolumeSnapshotBaseCommand?

You will also need to check that Volume snapshotting is supported at this cluster level
|Can you not reschedule if previous schedule is null?
|LockingGroup GLUSTER or VOLUME_SNAPSHOT? Again, you could move this to a common base class as all snapshot commands would have the same logic
|Can Reschedule extend this? or is there a need for reschedule if you take care of updating existing schedule here?
|use String.format here and below
|generated serial version id?
|create a method getLogUtil - so that you can mock in test.
|check if volume is null and log and return.
|volume.getId()
|log.debug not required here as no further information logged
|How are you setting this Date from the UI. Are you considering the selected timezone when getting this Date instance?
|What about the start date and end date - shouldn't these be in engine time zone as well?
|return schedule;  - should suffice
|same as above
|is this the engine time zone?
|you can use getGlusterVolume() from base class as the volume id has been set in the constructor
|tZone param to be used here
|format.format(inDate)
|Shouldn't conversion be from the timezone to engine timezone, assuming the schedule start date provided in the scheduled timezone?
|required? You could use getGlusterVolume() once you set the glusterVolumeId in the constructor
|call  setGlusterVolumeId(snapshot.getVolumeId() - inside the if block
|getGlusterVolume() from super class can be used
|Why is the VDS retVal GlusterVolumeSnapshotEntity and not Guid?
|Use getGlusterVolume()
|extend GlusterCommandBase or GlusterVolumeCommandBase ?
|Why not just do snapshot.setId() with return value (which should return the Guid) and save it
|This can be set in the setActionMessageParameters itself?
|How about check that snapshot.getVolumeId is not null?
|possible NPE? You could probably setGlusterVolumeId in constructor and use getGlusterVolume here
|Please add a TODO comment here...on how this will be implemented
|volume object is not required here, as you're only using id.
And as per previous comment, if you set the volume id in constructor, you can use getGlusterVolumeId()
|What's this flag used for?
|Do we need a separate action type - wouldn't VAR__ACTION__CREATE suffice?
|Even faulty sessions may need to be paused?
|what if slaveVolumeId is null?
|up server should be checked on master volume
|to pause session, the master volume id should be passed as first parameter
|here...you can only do this if slave is managed by oVirt. You may need to return an error message to user in this case., and invoke the command with a parameter to ignore geo-rep sessions
|You may need a getter for geoRepSessions, and populate it there or in constructor - I think currently it's being set in canDoAction
|setSucceeded(false) ?
|setSucceeded(false) ?
|not required and will never get here. Would have failed in super class
|is this required? If glusterVolume check is passed, not likely that cluster does not support gluster service
|already done in GlusterVolumeCommandBase
|What if it fails in between? That is, slave volumes are restored but fails to restore master volume?
|addCustomValue(GlusterConstants.VOLUME_SNAPSHOT_NAME, getParameters().getSnapshotName());
return super.getCustomValues();
|canDoActionMessage related here?
|check if geoRepSessions has been initialised correctly
|Externalize this string?
|why in a separate transaction?
|restore or deleteall failed?
|if slave volume is not maintained by engine, are we preventing snapshot delete? What if user has already done the required slave actions?
|is separate transaction required?
|error is incorrect
|same comment as previous command
|Don't you need to acquire lock on cluster as you're stopping volume - otherwise sync job may update this too.

Same comment for other geo rep actions..lock on georepsession? The runInternalAction would not acquire a lock. So getExclusiveLocks of this command may need to be overridden?
|Make this message generic, so you can reuse in other commands like Delete snapshot in slave cluster?
|Removing the ONLY. not required, we do need to cascade if anything depends on this constraint.
|Outer check is to see If the retrieved config is same as the one in the DB. if so, no need to update/add
|Good point..I missed it with the refactoring
|Done
|Fixing
|Changing to use the function
|rename this to glusterSnapshotConfigList?
|Yes, please change the method signature in that case
|Is the parameter volumeName not used?
|Failed to configure gluster volume snapshot?
|quotes not required here
|Done
|StringUtils.isBlank?
|rename to getStorageDevice?
|GetGlusterStorageDevices ? to avoid confusion with Storage queries
|You could use a ThreadPool to execute simultaneously on multiple hosts
|VDS error retrieving storage devices '{}'
|When would the Device UUID be null? Is the nameToDevice map required?
|This should reflect the default in the ConfigValues file so 7200?
|invokeAll on an empty list returns null. So you may want to handle that
|Handle null return for storageDevicesFromVdsm
|You would need to add this check here as well to care of REST API calls
|Check if supports Disk provisioning feature
|Is this default correct?
|either if (!storageDevicesListCalls.isEmpty())
or 
storageDevices != null below
|You can just call getVdsGroup()
|call it glusterBrickProvisioning?
|Is it better to have a status on StorageDevice instead? There could be a status that indicates that brick can be created from this storage device. 
Just a suggestion in case you want to differentiate the various stat
|Use ObjectUtils helper for this
|expected as the second arg, actual third arg
|Can volumeName be optional here as well?
|Fixing :)
|Done
|Done
|Done.

I've changed for vdsGroup to use mock object, and followed the principle you pointed out.
But haven't changed the other tests that return brick/volume entities rather than mocks.
|Is there a way to query this? Don't want to hardcode this, but to read from vdc_options. so is there a method to return compat levels for which a Config is true?
|StringUtils.isBlank ?
|What about for new parameters added ? (which are not yet stored in DB)
|Would this command fail if even one of the configs failed? How about logging the optionName and change that failed as well?
|Same comment as before - please check the locking group to use
|Failure would be in the command, because you're checking for volumeId. How does that prevent from reusing the parameters class?
|I don't understand. Can you not pass null value to volumeId even if you extend from GlusterVolumeParameters?
|extend from GlusterSnapshotCommandBase?
|Check is cluster supports gluster snapshot?
|order the codes
|Can you not reuse the logic in sync method here ..maybe trigger sync?
|Need the else block? Shouldn't sync job take care of updating config?
|Validations that startAt &lt; endBy, startAt &gt; now etc?
|Yes, we should - especially if you look at JobId as indication that job has been successfully scheduled
|return null in case of exception?
|setReturnValue can be Guid? As the snapshot entity is not populated apart from Id, so is there any need in returning this?
|is volumeName optional parameter?
|&quot;Error in executing gluster snapshot command&quot;  instead?
|&quot;Failed to create snapshot for gluster volume&quot;
|same error message suggestions as previous file
|Null check?
|I think this could also extend from SnapshotCommandBase...fairly repetitive code here.
|Any other validations - should snapshot be deactive before delete?
|call getSnapshot()
|Check if cluster supports snapshot here
|How about geo-rep? Can you restore if geo-rep in progress?
|Gluster volume snapshot ...in all these? will be confused with VM snapshot otherwise
|Same comment as previous file
|You could extend from a GlusterVolumeSnapshotCommandBase and move common logic there
|Check the locking group. Should use the same as the one used in sync job
|Please order the codes
|Please order codes
|can this force be added to GlusterVolumeSnapshotActionVDSParame
ters?
|You could have overloaded constructors in GlusterVolumeSnapshotActionVDSParameters. By default, boolean would be false, so won't affect the other VDS commands. Just a suggestion
|This file required?
|Failed to delete gluster volume snapshot ?
|same suggestion as previous file
|Please order in asc. order of code
|Gluster volume snapshot is not supported?
|remove from here as well
|Should allowedValues be considered for object equality?
|Apply default formatter
|config_details or gluster_config_master?
|Shouldn't the db be updated with default value once succeeded?
|the default standard is to use curly braces
|same comment as before
|Format this please
|??
|format
|You cannot change an existing script. Please add a new script altering table column size. Btw, why does key and value require such a large length?
|Default this to false.
|Is this required if the default is set?
|Can this be java.util.TimeZone?
|why a cluster level lock?
|why not try with?
|when would throwError be true?
|Is it required to iterate through all volumes and execute this command with volumename parameter? If you skip the volumename, won't the command return information for all volumes in cluster?
|Does gluster maintain a UUID for snapshot?
|Could it be possible that fetchedSnapshots are empty as the volume is stopped? Should we then delete from the database?
|log.error(&quot;Exception occured while adding/updating snapshots from CLI - '{}'&quot;, e.getMessage());
log.debug(&quot;Exception&quot;, e)

seems to be the convention followed
|Can we avoid hard-coding the config options? Will not work when new options are introduced.
|Can vdsm verb not return it as key value pairs?
|Is this change required in this patch?
|Not key value Map of options? Similar to GlusterVolumeOptionEntity? Can you extend from GlusterVolumeOptionEntity?
|Is this required?
|Volume specific configuration options would be a property of the volume, right? - something like 
  List&lt;VolumeSnapshotOptionEntity&gt; getSnapshotOptions()
|Why is this class needed? Won't  List&lt;GlusterVolumeSnapshotEntity&gt; do?
|I agree, even to 1 min? Are we providing a UI option to trigger sync?
|log that sync did not run at this time?
|How about a check if the command succeeded? Otherwise returnValue is null, possible NPE further down.
|Ideally the constructor for GlusterVolumeSnapshotVDSParameters should be (serverId, clusterId, volumeId) , no?
|You're throwing an exception from a scheduled method - this will result in a JobExecutionException. Is that what's required?
|same as above
|new HashMap&lt;&gt; would do
|same as line 113
|Is there any reason to build a volumeWiseSnapshot map? Can you not do a getAllByClusterId to return all stored snapshots in cluster?
|Why do you need a cluster level lock here?
|typo in argument
|saveAllInBatch?
|same as above
|As Yair commented, why not use super class lock method?
|what's the key here? &lt;volumeId , &lt;configKey, configValue&gt;&gt; ?
|is this change required?
|why not null as value?
|Is this required? VDSM does not know of geo-rep sessionId, right?
|Do you want to update the database while retrieving this data here? or leave it to the sync job?
|Is &quot;description&quot; the key for value in the returned map?
|why not return failCanDoAction?
|Did you apply a different formatting style in Eclipse?
|So, after starting, the session status would still say &quot;Stopped&quot; till the next sync job run? I think, it should set this to &quot;Initialising&quot;
|Shouldn't you set the status to Initialising? What would it be by default?
|Shouldn't this key be optionValue?
|Corrected
|Darshan, if not the slave host uuid, how about the slave volume UUID? Is it possible to return that?
|sessionSlave?
|Shouldn't you iterate through all sessions as well?
A volume could have multiple sessions
|Please ignore this comment - I was thinking of the geoRepStatus verb
|Is it possible to return the slave host uuid as well, in addition to the slave host name?
|crawlStatus
|Integer.valueOf(config.getParamValue()) : 0 ?
|this file can be skipped from this patch
|Can this be not returned in the view - gluster_volumes_view? Is there a need to call a stored procedure to get this detail?
|Consider externalising string
|why is volume id required? Collection of ids - is a list of snapshot ids?
|SELECT volume_id INTO ref_volume_id syntax here?
|same comment as before
|TWS
|Not required?
|No check that the snapshot ids belong to v_volume_id. 
Instead of passing volume_id as a parameter, can you not get the volumeid and count from the list of snapshot_ids and update count?

 select volume_id, count(volume_id) from gluster_volume_snapshots	125
			WHERE snapshot_id in (select * from fnSplitterUuid(v_snapshot_ids)) group by volume_id;

You can get the result of above into REFCURSOR
|Done
|The difference is that in the Persistent scheduler, the map contains the class name and not the serialized instance of the class (as this has to be stored and retrieved from database). To get the instance, the class instance is created and returned.

In the in-memory scheduler, the instance of the class is stored in the map and is retrieved directly
|Done
|Done
|Most of this is from superclass. Removing it from here
|PersistentScheduler sounds good. changing
|Done
|I added this as more to enable testing, so it's an overloaded method of the super class which takes a Properties file. Can rename this if it helps clarity. Let me know
|Done
|Done
|I'd retained the script from the quartz packaged scripts. Is there an issue leaving these here? Otherwise will remove
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done, formatted using Eclipse formatter with settings applied from config/engine-code-format.xml.
|Done
|Done
|Yes, good point. Done.
|Done
|Done
|Done
|The use case is to set the maximum concurrent jobs that can be run by the quartz scheduler instance. I used the same value as the one given to default instance.
|While using the Quartz JobStoreCMT, the transactions are managed by the calling application..in this case ovirt engine. However Quartz also requires a datasource where the connections do not take part in global transactions - quartz can directly call commit and rollback on this connection - this is the reason for the non-JTA data source.
|I could use different configuration values here
|Ok
|Done
|Done
|Done
|Done
|Removing this. will use the super class logger instance.
|K. done
|Done
|Oops. Correcting
|Done
|I think introducing new APIs can be a separate patch. This patch is focusing on supporting existing Scheduler APIs as persistent jobs
|rename to GlusterVolumeSnapshotConfig? Param suffix seems to indicate this is a parameter class for commands, IMO
|null check for obj missing
|use ObjectUtils to compare
|same comments as previous class
|how about returning volume name in the view?
|Change to STARTED, STOPPED ?
|Unique constraint on volume_id and snapshot_name?
|cluster_id not required here. as volume table will have this detail and there's  a FK reference to gluster_volumes table
|what's the difference between created_at and create_date?
|won't entity_id be null in case of cluster-wide snapshot config?
Is entity_id == volume_id?
|I don't think you need functions anymore...see http://gerrit.ovirt.org/#/c/29947/15/packaging/dbscripts/upgrade/03_06_0370_gluster_georep_tables.sql
|How would you know if this was volumeId or ConsistenceGroupId?
|How would you build the query that joins with volume table and cg table to get details of volume/CG?
|cluster_id or volume_id?
|or is entity_id refering to volume_id in case of volume_snapshot?
|Is this required? PK would create a unique index.
|Shouldn't this have param_name as well as part of index?
|Why is this required? When would this flag be set?
|getConfigByClusterId should do?
|For cluster config, would volume_id be null?
|use fn_db_add_config_value_for_versions_up_to instead
|clusterId or volumeId as first parameter?
|You could create a view and return that.
|call super.setActionMessageParameters();
|not required to check size for pause
|addFailCanDoAction..
|GLUSTER_VOLUME_GEO_REP_PAUSE_FAILED will do
|VAR__ACTION__PAUSE ?
|Why is this change here?
|Will the volumeId not be set in the constructor from parameters?
|Format this to be more readable?
|As per http://gerrit.ovirt.org/#/c/31069/2/vdsm/gluster/exception.py, the code for this is 4597
|change to PauseGlusterVolumeGeoRepSession?
|Change error message to be more user friendly?
|super.setActionMessageParameters();
|please format
|ACTION_TYPE_FAILED_GEOREP_SESSION_ALREADY_RESUMED
|This is not part of this patch, no?
|not part of this patch
|not needed
|ACTION_TYPE_FAILED_GEOREP_SESSION_ALREADY_RESUMED
|GEOREP_SESSION_RESUME_FAILED ?
|AuditLogType___GLUSTER_VOLUME_GEO_REP_RESUMED ?
|AuditLogType___GLUSTER_VOLUME_GEO_REP_RESUMED
|Add canDoAction to verify that the session is in paused state. You can only resume if the session is paused.
|To resume a session, you would be passing a geo-rep session Id. The volumeName, slaveHostName, slaveVolumeName etc should be retrieved from the Db for that sessionId.
|Update session's state once succeeded.
|Move out of this patch to BLL command patch
|Move out of this patch to the BLL command patch
|Please add this to the end of gluster errors (in the order of code)
|Move out of this patch to BLL command patch
|ResumeGeoRepSession ?
|There's no need of a separate parameter class. Can you not reuse GlusterVolumeGeoRepSessionVDSParameters?
|Shouldn't this be glusterVolumeGeoRepResume ?
|glusterVolumeGeoRepResume?
|Resume of geo-replication session failed on gluster volume ?
|Please confirm this exception code with vdsm patch
|Should be 3.5, as geo_replication feature support is being merged for 3.6
|Can you put this along with the VAR_ACTIONs? Btw, won't VAR__ACTION__START suffice?
|isn't the order to GlusterVolumeGeoRepSessionVDSParameters different - first slaveHost and then slaveVolume?

Also, would just the session id be passed or slaveVolumeName and slaveHost as well?
|shouldn't this be failCanDoAction(..)
|Also, verb first in the action name according to convention
|Extend from GeoRepSessionCommandBase in http://gerrit.ovirt.org/33038
|You need to validate that these parameters are present in the canDoAction method.
|If succeeded, shouldn't the entry be created in the database?
|Can you rename this as GlusterVolumeGeoRepSessionParameters, so that this can be reused?
|Done
|Done
|no..super.getExclusiveLocks is not required. Will change that
|Done
|executeCommand has not much logic now. everything needs to be mocked.
|this is the base class :)
|Any suggestions?
|Yep..thanks!
|Will do..
|Not needed. Will change
|Not required. Changing
|Done
|Done
|This file should be part of the bll patch for start geo-rep
|part of bll patch
|Can you not use GlusterVolumeGeoRepSessionVDSParameters ? (part of status/status detail VDS command)
|Failed to start geo-replication session for volume?
|Move out of this patch.
|Will change once this is merged
|CanDoAction would fail.
|Keeping it centralized in discoverGeoRepDataInCluster method
|Yes, that's right
|updatedSessions are null when the geoRepSessions list passed to this method is empty. Moving the check to the start of method
|Done
|Done..refactored to remove this method and added null check earlier
|I do think we should add details of these sessions even if engine does not have details of the slave host. As part of update, this fields need to be updated, IMO
|How about processSessions or populateSessions?
|Missed that as I considered this an interim step and not released. Will add it now
|Good catch..thanks, handling this now by logging it.
|sessionsmap could be null because there are no sessions too...changing the log message to reflect this. Will leave this as debug, as exceptions will be logged in the getSessionsFromCLI method
|You mean, within geo-rep section, correct? Will do
|Done, though session list would be empty for non-supported clusters.
|Done
|Nope, remnant from refactoring. Changing method signature
|Done
|Done
|Done
|Added InSecs in the name
|Done
|No, what I wanted is this - if there are other hosts in cluster and there is no operational host, I don't want to allow addition of gluster host.

However if the other hosts in cluster are in the process of installing or initializing, then I want to allow the add.

The reason, when the host comes UP - in InitVdsOnUpCommand, we try to peer probe the host to add to trusted storage pool - using &quot;gluster peer probe&quot; command. We want to avoid the case where hosts in one cluster end up in multiple gluster pools, depending on which host was UP when the &quot;gluster peer probe&quot; was done.
|IIUC, Pending Approval is when the oVirt node registers itself to engine. So this is again a new node that's getting added to the cluster and treated like other states. Let me know if my understanding is wrong
|I want to make sure of 2nd condition too - i.e if all other hosts in cluster are installing or initializing, then allow addition of host.

So, when I return true from this method (if any host is not in installing, installingos, etc)  - I check that there's an UP host too - in line 377 and fail if not present
|why have DbFacade as a parameter here? If it's to ease Junit, wouldn't a getDBFacade() do?
|I do think there has to be a better way to do this. Map&lt;Map&lt;Map&lt;Pair&lt;List... ?
I don't think the BLL should be tightly coupled to the UI presentation logic?

Wouldn't the simpler way be to pass a master volume, and slave volume and return the List of Non_eligibility_reason?
|possible NPE here. I think you could use session.getSlaveVolumeId() instead. If the slaveVolume exists in the DB, this field would be populated.
|Why don't you get vdsGroups that supports gluster service and with compatibility version == masterVdsGroup.getcompatibility_version() here?
|!vdsGroup.getId().equals(masterVolume.getClusterId())
|you could just return upVolumesWithSuggestedCapacityAndNotInMasterCluster here
|user_id and is_filtered parameters not required
|why do you need to declare this variable? Why not use getDbFacade().getVdsGroupDao below
|You can avoid a db call for every vdsgroup, by getting the mastervolume entity outside of the loop.
|volume.getId() would never be equal to masterVolumeId as you are retrieving volumes outside of the master volume's cluster, right?
|What you need is a getVdsGroupDao() method similar to getGlusterVolumeDao(), so that it's easier to mock this for tests as well?
|Looking at this again, you are getting the masterCluster from DB repeatedly in the loop. Shubhendu is right, you should be assigning this to a variable outside of the loop too.
|Yes -- I think that's the criteria that geo-rep currently has. That capacity of slave is &gt;= master, to ensure that when the data in master volume grows, the slave volume has the capacity to store it.
|volume.getAdvancedDetails().getCapacityInfo().getFreeSize()
&gt;= masterVolume.getAdvancedDetails().getCapacityInfo().getUsedSize() ==&gt; should be
volume.getAdvancedDetails().getCapacityInfo().getTotalSize()
&gt;= masterVolume.getAdvancedDetails().getCapacityInfo().getTotalSize()

right?
|you could refactor getMasterVDS to take parameters to avoid repeating code here
|Do you need to add a test where volumeAdvancedDetails is null for a volume?
|I think the earlier query was more generic - getClustersByServiceAndCompatibilityVersion. The filtering of the cluster could be done in the loop?
|you can just use new HashMap&lt;&gt;()
|why not just &quot;return slaveVolume.getStatus() == GlusterStatus.UP&quot;
|why pass the prepareSessionMap here? why not get sessions in the processVolume.. method?
|prepareSessionMap returns a list? consider renaming
|why not just use glusterVolumeDao.getAllWithQuery? in which case you can pass a query volumeId != masterVolumeId
|You could move the processVolumes method into a GlusterGeoRepUtils and call that, instead of instantiating the query class here.
|can you not filter out cluster where the master volume belongs too?
|if you follow above comment, this is not required.
|Do you need an enum for this? true or false would do?
|Does this need to be a static enum?
|CheckEligibility or GetEligibilityofVolumeForGeoRepSession ?
|GlusterVolumeGeoRepEligibilityParameters ?
|Please format correctly
|FixturesTool.GLUSTER_CLUSTER_ID
|Change the order to variable at right side of operator
  virt_service = v_virt_service
|Lock on volume or cluster?
|You may want to pass custom variable to audit log type for reason of update
|Lock the volume or the cluster?
|Shouldn't the log message also log the reason for update?
|I think we should probably have a reason field as well that could be used in the audit log
|We also need a reason for update - this could be populated in status.detail and needs to be validated, The reason for update needs to be logged in Audit log
|same as for brick resource
|sure :)
|No need for?
|Not required anymore?
|Yes, can be removed
|If you think configObject could be null, you should change this function...
 if (configObject != null) {
pnp4NagiosUrl = configObject.pnp4nagiosUrl
}
|What happens if configObject is null?
|Yes, other tests could extend from this class, as it would have helper methods to setup mocks and return values
|Done
|Good point. I'll be adding the logic to delete sessions from DB in a separate patch.
|Done
|I thought it's simpler this way. let me check again.
|Done
|Done
|Yes, this is required as the polling for discovery and to refresh status is different. Will be used in subsequent patches
|Done
|Done
|Done
|subVolumeStatusMap sounds better :). Will refactor
|not different..my initial logic was looking at the count..will change to the simpler usage.
|Yes, if there are no active nodes in the group and one of the group is faulty..then the sub-volume is faulty
|Done
|I'm not sure I follow..I'm getting the existing status from the list, making sure all in the list is same status and updating the session object.
|If status is other than Active and Faulty, the status would be uniform across all nodes. Will add code to log it for now
|Can do.
|Thanks!
|aah..that's my eclipse auto-save setting :(
|No..it's not after the refactoring of query. will refactor this method as well.
|changing this.
|Done
|Done
|Done
|Please change the commit message to indicate that this is a bll query to retrieve the list of geo-rep sessions for a volume.
|Can you use IdQueryParameters instead of GlusterVolumeQueriesParameters?
|Should this be GetGlusterVolumeGeoRepStatus or GetGlusterVolumeGeoRepSessions ?
|log.debug(&quot;Exception&quot;,e) ?
|Should be private. Will change. thanks!
|:) Dao code is used in other vdsbroker classes too - like VdsBrokerObjectsBuilder which takes the struct data and returns the business entity.

In case of the gluster classes, the difference seems to be that business entities are populated in the *StatusForXmlRpc class itself rather than using helper classes from VDSCommand.
|Will change the message text to a more user friendly format
|Done :)
|Done
|Done
|it's filesSyncd
|Changed pairs to protected in super class
|Done
|Done
|Done
|Not sure I understand. These are the only 2 exceptions thrown by vdsm verbs . see http://gerrit.ovirt.org/#/c/17644 and http://gerrit.ovirt.org/#/c/17766
|Done
|Done
|Done
|You're right. Done
|Done
|Done
|Do we need to specify each sub-directory separately? Any other alternative?
|Yep! changing
|Pass the geoRepDetails and geoRepSessions to populatePairDetails so that this can be appended to in the method
|This should be initialized in populatePairDetails instead of a class level variable.
|if masternodeid is done, does it make sense to return the pair details?
Shouldn't this be logged?
|Wouldn't every session have multiple pair details? In this loop it looks like a one to one mapping
|No setters required here for geoRepDetails and geoRepSession
|naming it slaveHost and slaveVolumeName would make more sense?
|This error code should match the one in VDSM
|there would only be a single session returned from georepStatusDetail, no?
|This is incorrect. the session should be retrieved from the database, or if not available, the slave host and volume should be populated based on the info present in the sessionKey
The session object should be populated in the parent method and each detail associated with it.
|Why is the session object being initialized for every pair? A session is associated with multiple session details. In this case, it looks like each detail object is associated with a new session?
|no setters required here
|glusterVolumeGeoRepStatusDetail?
|This is the slave host fqdn or ip address used by gluster to communicate to the remote volume. It's not necessary that the slave cluster is managed by oVirt, so we need to leave the option open for that.
|Done
|Yes..since this is distributed geo-replication, the master brick could be connected to any of the slave nodes of the slave volume
|Each node in the master could connect to any node in the slave for replicating the data.
|Done
|Done
|Done
|Done
|Done
|K.
|Unique indexes created below.
|Moved constraints below as per comments in patchset 4. I believe this is the practice in oVirt.
|Skipping further processing in the calling method (in GlusterTasksSyncJob) if null is returned
|Thanks for the tip. Will change as this class is used by the frontend
|No, not required. Geo rep Session object's equality is determined by the fields used here.
|Done
|True - only one at present. But since this is a public static method, we would need to ensure this logic is added wherever this method is called in future...Just my 2 cents.
|Wouldn't this mean these check (status and virt host) needs to be repeated in every calling method? Isn't it better to centralise it here?
|Shouldn't this be &gt;= ?
|Couldn't all of the above be part of getOptionsForOptimiseForVirtStore
|Change this to Guid sessionId
|Should extend IVdcQueryable and implement BusinessEntityWithStatus
|Create an enum for GeoRepStatus
|Can you create an enum for status?
|You should be looking at the geo-rep session status to get this information. I don't think we should store this here.
|Why is this required? Will this be stored in the database?
|Please add a PARTIAL_FAULTY too
|Change naming to filesSynced..applicable to below too
|Will add test cases for get with invalid id..Not much logic in dao for negative tests
|Done
|Done
|Done
|assertEquals(GlusterServiceStatus.RUNNING, service.getStatus()) ?
|swap expected and actual above?
|You're right :). Sorry about that. The lines were skipped in my browser view
|This should be an element of Host type.
|you may want to take off the tabs
|It would be good to add the gluster_service_type here
|Need to validate that action has GlusterServiceType parameter
|same as above
|same as above
|glusterservices should not list in virt only mode
|Could you explain why lockProperties are in the parameter class? Do we envision a scenario where locking is based on parameter?
|remove the above line
|You can remove the &quot;already&quot; from message? Same goes for all messages
|Done
|Done
|Done
|Done
|rename this? profilestatsaspdf, maybe?
|Could you rename this as get..AsPdf?
|Shouldn't there be a parameter to get nfs statistics?
|Ideally, we should have had an option to return as pdf in addition to xml, json return types on getProfileStatistics.

If that's not possible, can you refactor the code to avoid repetition?
|You could use the try-with-resources syntax here.
|Since this is a generic class, the logged error could avoid reference to profile data
|You could avoid repetition of this by defining an xsl:template match=&quot;block-statistic&quot;
|you should define this version in properties section of pom.xml at project root
|same comment here as backend/../pom.xml
|Is this scope required?
|Too generic. Also can you rename the class so that it's not like a method?
|code is repeated. please refactor
|same for above code..exactly same as populateDataIntoTable
|does this need to be public?
|possible NPEs and IndexOutofBoundExceptions
|what about the blockStats?
|Don't you need to separate each fopStats?
|use external version property
|change the object to pdfCreator as well?
|return or continue with next profile?
|refactor and move the profileSummary to a different method?
|you're not using the return value

shouldn't it be...
 if (!super.equals(obj)) {
      return false
 }
|Done
|Done
|Done
|Done
|Done
|No..as it's a ref.
|Done
|I'll make this a private method,,it's not consumed anywhere else
|Yep. Thanks, done
|Will add a configuration value for this. 
Since we are executing a distributed command to get the details of the tasks created, depending on which server in the cluster we ask for this info, the task may not be returned...this is because glusterd takes some time to sync details across servers in the cluster.

Do you have any alternated suggestions for this problem?
|What about setDuration?
|Since these are more for formatting the output, the model could also have the avgLatency in the minimum unit - to be consumed by REST API
|Does this have to be a frontend utils?
|Can we not use java.util.concurrent.TimeUnit?

There's also a convert function available..Wouldn't that do?
|How about asserting the expected TimeUnit as well?
|Reorder expected and actual as per this patch - http://gerrit.ovirt.org/#/c/27775/
|runningHostinSourceCluster is the UP server on which the gluster peer detach command is executed.
Use getVds() to get the host that's being removed
|GlusterHostId could be null for older clusters - 3.2/3.1. In this case we should not be throwing an error, but server remove should happen with hostname instead of gluster host uuid
|Same comment as in ChangeVDSGroup command
|Should this be in properties file?
|why is getVdsDao.get(glusterServer.getId()) required?
|Is the SERVER_ID_4 used for verification?
|More readable this way?

 GlusterVolumeProfileInfo profileInfo = (GlusterVolumeProfileInfo) returnValue.getReturnValue();
if ((GlusterVolumeProfileParameters)getParameters()).isNfs()) {
   populateBrickNames(profileInfo);
}
getQueryReturnValue().setReturnValue(profileInfo);
|Do we really want to represent size this way, rather than 1.18256 GB (in your example of 1269760000 bytes)?
|Why is this called nfsReturnValue ? 
getParameters()).isNfs() could be false, and then would just be profile info from bricks, correct?
|Is this used?
|Some docText about what this function does?
|Could we make this false by default
|Updated comment to be more meaningful
|To get the job entity, we would need another query to database for the step's job, which I wanted to avoid - because if the step endTime is not null, we're sure that this step has ended and therefore there is no need to update this step.
|Yes, i can see why this would be confusing. I'll move the comment to above the if block.
|Done
|This should be added to IPTablesConfigForGluster
|I think you need to add both in Update, and Add section?
|Is this required?
Are we planning to store capacity details in database?
|wrong comparison
|Take care of find bug warnings for this and below
|How about a reference to the volume?
|Did you miss correcting this and below?
|((vol != null &amp;&amp; vol.getStatus() != GlusterStatus.UP) &#124;&#124;  !runningTasksInClusterMap.keySet().contains((vol.getClusterId()) ?
|Please change the description, as there is no selection of volumes with a column
|Is this required?
|Is this required?
|Remove the Lock attribute.
|Remove TWS
|Do you need a wait lock here? I think it's not required as locking is done in the sync class which you use.
|Ok
|Can you not use SizeConverter.convert instead?
|Ok.
|SizeConverter.convert?
|Is this used any more? If not, please remove.
|Remove the above test lines
|When returning Unit as Bytes, should you multiply by Mb?
|Do you really need to override lookupEntity?
Can you not just use

new QueryIdResolver&lt;Guid&gt;(VdcQueryType.GetGlusterVolumeWithSizeInfoById, IdQueryParameters.class);

In GetGlusterVolumeWithSizeInfoById (or similar) you can populate the GlusterVolumeSizeInfo in the GlusterVolumeEntity and return.
|Remove WIP from comment
|Not required - as this is going to be displayed as statistics
|Not required
|Not required
|Can you use ObjectUtils.objectsEqual instead?
|Initialize advancedDetails too?
|move this to VolumeAdvancedDetails?
|Done
|Done
|Can this be added only if hostUuid is found in the xml?
|suggestion - GetServiceConfigById -seems like it's returning by service config id. maybe can be renamed to GetServiceConfigByServiceId
|change to CREATE UNIQUE INDEX or use fn_db_create_constraint
|Service_id and section cannot be unique as for a service_id &amp; section, you can have multiple options
|Service entity will have a list of config values. actually each service can have multiple sections with each section having multiple config keys &amp; values
|Shouldn't this be a server id?
|Minor - typo in serviceConfig
|Should this return a set of parent services only?
|May need a sequence column to decide the priority sequence when executing multiple services
|Unique index should be on (server_id,service_master_id)
|Should this extend IVdcQueryable? Service configuration options could be searchable as well.
|A validation on serviceId not null too?
|Maybe a reference to the parentService as ServiceMasterEntity could be useful?
|Is NOTAVAILABLE - as a ServiceStatus required to indicate this service is not installed on a node?
|Is Service Id (service master id) also required as part of this
|Minor - can rename to fetchServiceConfigEntities
|Should also test if service config list is returned correctly in the service
|Will do.
|No, the sp returns the list with an order by clause
|Will do
|Since there was no ordering earlier, adding this should not cause any issues
|Will introduce number of retries and a delay between these.
Regarding status check, since our hostExists logic does not have this now, will not introduce it as part of this patch
|Yes, I did verify it by running mvn findbugs:findbugs on bll module

I'm not sure why findbug has called it a redundant null check - it was indeed a redundant check.

glusterServerDao.getByGlusterServerUuid(addedServerUuid) can return null and we need to handle that case.
|this should be outside the loop? Otherwise it will only check for the first brick in the list
|Are we sure that bricksForTask will never be empty? otherwise builder.length -2 would cause error
|What if the paramBrick has brickId set and not brickDirectory and serverId?
|But when you find one brick, the flag is set to true, so in effect all other loops are skipped - as the flag is already true
|Shouldn't the found variable be reinitialised for the next loop?
|I think it would be useful to return the list of valid bricks to end user.
|if paramBrickFromVolume == null or  paramBrickFromVolume.getId() == null again, you could return false
|if (asyncTask == null &#124;&#124; asyncTask.getType != GlusterTaskType.REMOVE_BRICK)  {
 return new ValidationResult( ...
}

can avoid the nesting of if statements this way
|What if only the brick id is set in the paramBricks?

Would it be better to introduce a isBrickInList(final List&lt;GlusterBrickEntity&gt; bricks, final GlusterBrickEntity searchBrick)
|It will never reach here, as you break after found=true.

Add the found = false after

 for (GlusterBrickEntity paramBrick : bricks) {
|Shubendu - ok, my bad! At first glance, the task ids seemed the same.

@Yair, when a remove-brick task is started, all the participating bricks have the same task id. So it's ok for row1 and row2 to have the same task id.
|If you have the same taskId across volumes, this would be incorrect data. May cause issues when other tests are added
|Done
|Also, mention that force option will clear any xattr.
|If the user passes force = true, and the feature is not supported in the cluster version, is there a way for user to know that force option was ignored?
|This is supported from 3.4.
|Can you move this to after 4409?
|I think the error check should be in the glusterHostRemove method
|Aah..sorry. Right, the custom values for audit log are required only for the remove brick message. The rebalance message only expects the volume name and cluster name - so no additional custom values required.
|I thought map is an overkill here considering there are only 2 task types. Can refactor to use map if the need arises.
|Can you change this to
 GlusterVolumeEntity volume = getVolumeDao().getVolumeByGlusterTask(task.getTaskId();
 if (volume == null) ...
|Check that task.getTaskParameters != null
|Done
|You don't need to change this file, I think
|How about keeping a static map of weights to SizeUnit, and returning from the map?
|Why aren't you using long?
|Shouldn't you be using CONVERT_FACTOR?
Also, is the condition correct? Wouldn't it always return in Bytes?
|Can this map be part of enum? Do we need this outside?
|concat(&quot; &quot;) ?
|Possible NPE on volume.getClusterId. Why don't you use cluster.getId instead?
|What about if task is completed with return status other than finished?
Can you move the logging to within hasTaskCompleted block?
|volume could be null. Need to check.
Volume can also be retrieved from task parameters.
|Does this need to be public?
|The above line is not required
|Please combine the 2 into a single sql file. You could probably name it gluster_tasks_finished_event_map ?
|I din't realise you were not using this to pass to the gluster command. So this is ok
|Would there be a case where replica count is being reduced from 1 to 0?
|Please elaborate in commit message why you need to explicitly set the status to UNKNOWN.
|Done
|Done
|Changed to reuse VolumeActivityCompositeCell
|Done
|job_id is already part of view from steps table. so will cause conflict in column names
|Right..not required. remnants from before the refactoring
|Ok. Will do.
|This is planned for 3.4, patches are currently under review (http://gerrit.ovirt.org/#/q/project:ovirt-engine+branch:master+topic:gluster-async-tasks,n,z)

How do you suggest changing the API, if a feature changes? Is there a way to maybe deprecate the API?
|Rebalance volume and replace brick need to be reimplemented as gluster asynchronous tasks that return a task id which can be monitored. Once the commands are done, the API has to be re-implemented. Currently, there's an exception on invoking these from API
|Done
|The reason seems incorrect.
Shouldn't the reason indicate that brick cannot be activated unless migration is complete?
|typo here - getDistributedReplicatedVolume
|Done
|Remove TWS
|When succeeded =false, host will not be moved
|right, EngineLock implements AutoCloseable
|Shouldn't you pass the task object obtained from VDSM, rather than the one obtained from db?
|Shouldn't the check be that if task status is same as step status, then return?
|If the above comment is true, then this check needs to be changed. Please reuse isTaskCompleted from GlusterTasksSyncJob
|volumeLock should be released only if task has completed and job is ended
|can you not pass the step retrieved here to updateTaskStepDetails method? Can avoid a call to dao.
|The createJobToMonitor - calls three BLL commands internally. And these should be executed within the scope of a transaction so that if an exception occurs, the transaction can be rolled back
|I don't know of a way to verify this as the runInternalAction is called in a separate thread and there's no notification that the thread has indeed completed.
|Done
|No, the locking group is GLUSTER - because the same group is used in a periodic job which sync's engine database with gluster CLI
|Aah..I see your question now. 
&quot;gluster peer status&quot; and &quot;gluster peer probe&quot; if run concurrently caused issues.
|&quot;gluster peer probe&quot; is done at Add Host
|The job that syncs with gluster CLI locks the cluster only if cluster supports only gluster service.
This job executes a &quot;gluster peer status&quot; on Gluster CLI that returns list of hosts in the cluster. This list is compared with the list of hosts in the database to check if hosts have been added or removed via CLI.
We use locking group named &quot;GLUSTER&quot; in the job to get a lock, and Add host using UI, needs to wait for this lock.

I did not understand the bit about using isGlusterSupportEnabled - where do you mean?
|No. missed this. will remove
|Done
|Thinking about this further, this check cannot really be moved to the post installation when vdsm is UP - as this would lead to a catch-22 like situation. If there's another Non-operational server, then no server can move to UP state.

And since, there really is no point of a cluster, if the other servers are Non-operational, isn't it better to fail here?
|Yes, I had in fact, introduced a similar check in InitVdsOnUpCommand, to make sure that host does not get added if none of the servers are Up.

Would prefer having the check in both places, as we would rather fail the installation in the beginning if the condition is not met than wait for vdsm to come up.

I will move the check to a common place to reuse.
|The only reason is that we can give feedback to the user quicker. Also, there's no point in having a cluster of non-operational servers.
|Yes. If we're trying to add a server to a cluster which has other servers, but none are Operational, this means that we cannot do a &quot;gluster peer probe&quot;, and that would make this server Non-Operational as well.
It's better to fail before installation step itself in such cases.
|The common logic can be moved out. I would suggest to extend both RemoveBrickStatus and RebalanceStatus from a common class
|Why don't you move this logic to the method getAddedGlusterServers instead? You can add to map only when fingerprint is valid.
|Was there a reason to reduce the expected server list to 1?
|What about the case where this is the last host being removed?
In this case, clusterHasMultipleHosts returns false, and &quot;gluster peer detach&quot; is not executed. Will getSucceeded() return true in this case?
|Done
|Done
|Good point. Changing the getTaskListForCluster to throw a VdcBllException in this case as well
|Done
|Done
|If glusterd has crashed on one of the nodes in the cluster, gluster would still return status from other nodes. Only in case where all bricks of volume are on the node where glusterd crashed, would the task information not be returned. In that case, the volume would be down, no?

Also changed code to not clean orphan tasks, in case VDSM call has not succeeded, to ensure engine does not remove tasks that actually exist.
|Also fill brick id here, in case the brick qualified name was passed as parameter
|If removal, need to consider that bricks other than the ones being removed are online in the subvolume.
|How about DISTRIBUTED_STRIPED_REPLICATE ?
|Done
|Done
|Happened due to the eclipse setting which formats and removes imports.
|Michael, I would like to call the GlusterTaskStatisticalQuery based on Step external type = GLUSTER. How do I do that here? Any suggestions?
|The statistics on Step would vary for each external task type.
If external task type is GLUSTER, then the GlusterTaskStatisticalQuery needs to be called.
However, if external task type is VDSM, the statistics details will be different.

So need a way to identify the task type before calling inject(new BackendStatisticsResource ..)

If I try to call getEntity for Step, before the call to inject, I get a &quot;session not valid&quot; error, as the LoginValidator of resteasy is not yet called. Is there a way to get the step entity in getStatisticsResource() method?
|Step step = get() 
has the same issue with Resteasy interceptor
|Done
|Done
|Done
|This is remnants from test case, where I was testing step returning details when All-Content is true. Will remove.
|Done
|Done
|changed to volumestep_detail
|Done
|move this to base class
|private ?
|Does it need to be public? Would be used only by updateStep method, rt?
|You can remove this line to reduce noise on patch
|remove above line
|remove this.
|remove this
|Just to add to Shubhendu's comment - commit cannot be passed as an option to migrate, as the user could make the decision to commit the removal after data migration. User could choose to retain the brick once the data is migrated.
|Ori - migration of a brick has a beginning and an end. And yes, user can stop migration before it's done. Though auto-commit can be an option, we need to provide a way for user to review state of the gluster volume after migrate, and choose whether to retain or commit removal of the brick - which is what we're trying to model with the commit action
|Ori, to clarify

- Once user has started migrate on a brick,   user has to either stop migration or commit, otherwise the  brick remains in unusable state. Do nothing is not an option as far as the underlying gluster operation is concerned.

To model it as DELETE rather than commit- 
we could first check if migrate has happened when user calls the DELETE verb and call appropriate underlying VDS command.

Would that work?
|On second thoughts, I'm not sure why we cannot have commit as an action.
Removal of a brick is a two-step operation in gluster  First data is migrated, and the user decides whether to commit removal of the brick or not depending on the result of data migration.
How else do we model this operation?
|add in hashCode as well
|add in hashCode method as well
|I agree with Shubhendu. Method name should be remove
|What about RpmVersion?
|Shouldn't this be RpmVersion?
|use StringHelper
|Move this next to the other version fields, and the string value should be &quot;GlusterFS Version&quot;
|Should be glusterSupported - not virtSupported
|I think this is ok as the we need the gluster version to appear after other version info
|Should be a separate script - as we are modifying existing table
|A brick status changes when the process associated with the brick goes down. This should not happen often, as gluster relies on the process being up for its operations and a brick going down is therefore a significant event.
|Again, release the lock after volume is updated
|release lock after bricks are removed
|pass replicaCount variable here
|Done
|Done
|You're right, changing
|Done as part of earlier change
|Please describe in the commit message what you're doing - that is not syncing hosts that are in Maintenance state
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|It was flooding the logs during test and was not really an error. But you are right, I think info is better
|Shouldn't we add this only in case of async actions? Maybe check if action.isAsync() == true, in addition to jobId != null check.
|Can you not call mapper here to populate model?
|You will need to change the action name in getActionSubResource and in rsdl_metadata.yaml file as well.
How about deprecating the existing rebalance and creating a new method startRebalance for backward compatibility?
|I think you will need to change this to a glustertask type, to reflect the gluster volume entity change
|fixLayout and force are not supported for startRebalance
|Task Is or Task entity? Rebalance should return task entity so that it can be monitored via Step id. Please update commit message to reflect this
|do we really need this?
|Michael, 

Rebalance returns task entity that contains the step id.
And this will link to existing step API for monitoring
|You can remove the asyncTask variable as well
|fetchRelatedEntities checks for null, so no NPE
|Done
|Will rename to indicate it is batch
|Done
|Done
|I added this to fix the FindBug possible NPE error below at .for (Step step: steps)
|should setSucceeded(false) before return
|Done
|Void is the return object that TransactionMethod takes. note that this is not the java void.
|Yes, thanks. Will add
|Correcting this, will post patch
|Yes, even if one transaction in the loop fails, we want the rest to succeed.
For instance, if gluster CLI returns 2 tasks in the runningTasks that engine is not aware of, we loop through each of these tasks and create job. If one of the job creation fails, the other task's job should be created
|Done
|Fixing :)
|actionType is a parameter of AddInternalJobParameters - used to create a job with the assigned actionType. Note that this is different from commandType and parentCommand of the base class VdcActionParametersBase.

The actionType could be null be if the application calling the command does not set the parameter
|Done
|Not sure I understand, but external step can be created only if job is external. This is not true for InternalStep.
|I'm changing this to check that user has permissions on the actionType passed. Updated patchset to follow
|Please use failCanDoAction
|While committing the bricks, the Step message should be different from the remove. You may need to update the step message here.
|Can we have tooltips next to Migrate data check box explaining what it does?
|can you make it &quot;Incorrect bricks selected for removal ..&quot; ? (without the)
|same in all messages
|s/if choose/if you choose
|use failCanDoAction in this method
|Need to take care of DistributedStripedReplicate as well. Why not user getVolumeType().isReplicate() ?
|same as above. Use GlusterVolumeType's isReplicate method
|Is this validation same as in GlusterVolumeRemoveBricksCommand? If so, consider reusing.
|Ramesh, Good job with junit test! :)
|Could you keep formatting in line with rest of file?
|Please make sure this task type = vdsm task type. I think it is (REMOVE_BRICK)
|type here. should be BRICK
|brick -&gt; bricks ?
|Please change the commit message to indicate that you are introducing batch removal
|Can we call paramValue as paramValues as this is a collection?
|is the updatebrick change part of this patch?
|Shouldn't the bricks be from the parameters class?
|replicaCount - it cannot be the volume's replica count. But again, replica count should not be required for Stop.
|Can we call these *VolumeBricks, since the parameters could be multiple bricks.
|s/Brick/Bricks
|Should be calling glusterVolumeRemoveBrickCommit herer
|Should be calling glusterVolumeRemoveBrickStop here
|Please check why replica count is needed for commit.
|Is replicaCount required for Stop and commit. why does vdsm verb require this?
|The status VDS command should not be called from within Stop command, IMO.
If UI needs to show the status on stop, UI layer should call status bll command after stop command.
|Why don't you directly build String[] here? Btw, there's a findbug violation on casting to String[] below
|Is replicaCount required for status? AFAIK, we don't persist the replicaCount change after remove brick was issued.
|Do you need a util class for these methods? Shouldn't these methods belong in GlusterVolumeEntity class?
|Why not StringUtils.isBlank(value.getTimeZone()) - this is null safe
|What if clusterId is null? (Could be called from API as well)
|Can we use a VdcBllMessages?
|Shouldn't you also set the stopped at time, if the task status is Aborted?
|Where would the formatting of values be handled? That is size in KB/MB etc, run time is sec/hours/days etc?
Maybe the entity can provide a method to get this? For instance, getFormattedFileSize() that returns a String?
|I meant the runTime that's present in the TaskStatusDetail
|Is the command the same for all tasks? that's rebalance, replace-brick?
In that case, wouldn't replace-brick require additional parameters?
|getAggregateStatus and getStatusForNode are very similar. Consider reusing
|Will change equals.
But the methods are not same, one checks for success and the other for completion.
A task can be completed with failed state as well.
|Done
|Done
|I do not need the task details and related entities of volume, only the volume entity is required
|Done
|Done
|Done
|Wiil do
|Maybe you could rename this to GlusterVolumeTaskStatusDetails - so that it can be reused for remove-brick status as well?
|I don't think you need the task reference here.
|Please add skippedCount and runningTime too
|Could you move this to org.ovirt.engine.core.common.asynctasks.gluster?
|sorry to nitpick on the name again - But GlusterVolumeTaskStatusEntity and GlusterVolumeTaskStatus seem very similar. Could we call GlusterVolumeTaskStatus as GlusterVolumeTaskStatusDetail or similar as this seems to be the detailed information abt the status
|Minor - typo here. should be &quot;stopped&quot;
|Please also verify succeeded message
|Step type would be StepEnum.REBALANCING_VOLUME;
|Please also update step description
|Move this to super class to reuse.
|Move this to super class to reuse

Call freeLock of Command class.
|You do not need this, as new step is not created for Stop
|Please remove
|You can move this check to superclass
|use runVdsCommand method of superclass
|Also add entries in event_map table
|Typo here..Consider changing to &quot;Could not stop rebalance of gluster volume ..&quot;
|Remove TWS
|Please also add default constructor, equals and hashcode
|ok :)
|Yes. Will change this.
|True.
|Yes. will change
|Yes, and that happens in the else block.
|Can do.
|Sure,this class is dummy for now. I will refactor when implementing the VDS command
|While polling the task for status, I get the task type of the running task from gluster. I need some way to identify the step and action(maybe to call endAction) for the task type. I'm not sure I understand the bit about adding it at the command.
|Sure.
|Yes. not implemented - probably don't need it too. Will update
|I wanted a standard object while performing task related commands - status query, start, and later maybe pause, resume etc. GlusterAsyncTask will also store status and task type in addition to id.
Btw, I looked at CopyImageVDSCommand and it returns AsncTaskCreationInfo object.
|Yep!
|Will revisit this.
|Was reusing the ExecutionHandler endTaskJob when task is ended. Also provides an option for callback to command's endAction if needed.
|Gluster returns a list of running tasks for each cluster. The idea was to use this task list and update the corresponding step for each task. In this way, when the Task manager initializes, we get the list from gluster instead of db.
|Task list can be obtained from any one of the UP servers in a cluster. However, if all hosts are down in the cluster, one option we have is to leave status of task unchanged and periodically poll status of task till the host responds. Can think of a max time till task is considered outdated.
|yes. Will do
|Similar, yes. ditto for TaskStatus and TaskType enums
|when updating step external id, pass the external type also
ExecutionHandler.updateStepExternalId call in GlusterAsyncCommandBase
|I think it's better to have a separate procedure to updateTaskId
|Can we call this updateVolumeTask so as not to confuse with vdsm async task?
|Can we call these columns step_type and step_status?
|Do you mean instead of GlusterBrickEntity?
|Yes. Only Volume and Brick will an asynchronous task associated with it. But we could implement a GlusterTaskSupport
|Done. We will submit this patch along with StopRebalanceCommand which will release lock.
|Yair, the lock should not be released at end of execute of this command- it will be released when either StopRebalanceCommand is called or when the sync job that monitors gluster tasks determines that the task has ended.
How do you suggest this is handled, if not with &quot;isReleaseAtEndOfExecute&quot; ?
|Right - will add the InMemoryLocking mechanism

And no, it's not possible to destroy/stop a volume while rebalance is in progress
|Done
|The method names in this class is in sync with the vdsm verb, so will leave as is.
|Wouldn't private do?
|use runVdsCommand method here
|I think we refer to Vdsm hooks as hooks, so I called this glusterhooks to differentiate.
Glusterhooks will be present on gluster servers and is a mechanism to extend gluster functionality through volume life cycle events, for instance, exporting volume via SMB
|Background - Gluster hooks need to be in sync across servers in a cluster. There is a job that checks for the status and updates this is in the engine database.

1. add&#124;update&#124;remove - we are not really adding a new hook resource into the database. I should probably call these differently

Add -&gt; If a hook is missing in any of the servers in the cluster, add action is to add hook (from engine) to all servers where hook is missing.

Update -&gt; If hook content is different in some servers, update action is meant to update hook content to be same as engine content in all servers where content is different. If a server id is passed as parameter, then the content from that server is used to update all servers and engine copy.

Remove -&gt; If hook is missing in some of the servers, we can remove this from all servers and engine. Here I should use the HTTP method, I agree.

2. enable/disable - used to enable and disable hooks in all servers in cluster. If I use update, I need to make sure only status value is used. Because the user should not be able to update any other value of the hook directly.
|Will remove WS
|Yes, will change to HookStage
|Yes, I looked at that. The Status type has State and Detail. All we really want here is an enumerated status string. So went with the string type.
|Gluster hooks are only added at installation of gluster rpms. There's no provision to add a hook that does not yet exist from engine.
|Since delete was also removing the resource from engine database (not just from servers in the cluster), thought it would be candidate for DELETE verb.
|Done
|Done
|Done. Removed hook_status element.
|Right. Changed to content_type and removed ref.
|Removed reference to hook_status element.
|The name gluster_command indicates the gluster command (for instance &quot;gluster volume create&quot;) on which this hook would be invoked. &quot;gluster&quot; was prefixed to indicate that it is a gluster command. 

Removed from stage, as this is not gluster specific.

In cases like Gluster Hook - where the hook is different from VDSM hooks, I feel the prefix brings clarity as to purpose of entity. That's just my opinion.
|Done
|GetGlusterHookById query does not return the content as the content is not needed in most cases in Web UI.
|Done. Thanks!
|Done
|Done
|Done
|Done. Also, renamed testUpdate to testResolveCopy - this tests the other resolution method.
|We're not creating a hook resource from API, so model to entity not required
|We're not creating a hook resource from API, so model to entity not required
|Done
|Done
|Done
|Does this belong here? I thought u have separate patch for this?
|Is this change part of this patch? You may want to remove this file from the patch
|Please remove this file from your patch
|Do we want a separate message to indicate that new host was detected during sync?
|I think the brackets are placed wrong. The auto_cleared check will not be applied to the OR block here. Should be
 WHERE is_auto_cleared	
	      AND (end_time &lt; v_succeeded_end_time	
	      AND    status = 'FINISHED')
            OR    (end_time &lt; v_failed_end_time	  
            AND    status IN ('FAILED', 'ABORTED', 'UNKNOWN'));
|Probably can avoid one level of nesting with (subjects != null &amp; !subjects.isEmpty())
|You can just use &quot;actual&quot; here.
|Should ssh username length be compared to hostname length?
|Shouldn't _dialog.setUser be called here, and the method setUser removed as we're going to get username from _vds always?
|Also add in line 243 where fn_db_add_config_value('IPTablesConfigForGluster') is called
|Done
|Added automatically by eclipse code formatter. Removed now
|The Gluster volume type name encapsulates this information. I think adding fields for this is an overkill. Can revisit if needed.
|Done
|Done
|Done
|Done
|Done
|Done
|Yes, I think it should be possible. Will change
|Done
|Thanks, Shubhendu. Instead, I think I will create methods in GlusterVolumeType to determine if Striped or Replicate.
|Will change to use the enum methods to check if replicated/striped
|Will change.
|As per http://gerrit.ovirt.org/#/c/13785/, gluster host UUID should never be null.
|Can you use the GlusterServiceStatus itself to get display name for status?
|When would clusterId be null? I think logServerMessage should be changed to pass clusterId
|logServerMessage internally calls logAuditMessage. So in effect, you would be calling this twice. 
I think the fix should be in GlusterAuditLogUtil - in logAuditMessage, if server is passed, server.getVdsGroupId can be used to setVdsGroupId in AuditLogableBase
|This is for custom properties. getVdsGroupName is already available in AuditLogableBase
|Based on comments in GlusterSyncJob, this will not be required.
|Minor nit picking- can remove extra line :)
|You may want to move this update call down, as you want to show old value in the log message
|minor - consider refactoring to getGlusterHookEntity()
|Will create separate method for validation.
|I think the message GLUSTER_COMMAND_FAILED can be changed to use vdsName instead of Server. This way you will not need to add custom value for server in other places - like InitVdsOnUpCommand, SetNonOperationalVdsCommand etc.
|Similar to another patch, if you change the message to use vdsName and vdsGroupName, these custom values can be avoided.
|You can change messages to use vdsName for server and vdsGroupName for cluster.
|Minor- you could reuse entity here.
|Yes, will change to failCanDoAction here. 

Regarding reordering upServer checks, I did not think it simplifies logic. If user specifies force remove that takes precedence over other checks. Maybe I'm missing something, so I've added comments to clarify what is intended.
|Minor - could rename to cmdList
|Minor - can use getAuditLogTypeValue() here.
|I think this code would need to be written to handle start/stop on one or more servers. So serverService id will not be the parameter to look for. I would suggest a list of service names as parameter. 

This can support start/stop of one or more services on a server or cluster depending on what is set in the passed parameters
|Maybe you could initialize the ManageActionDetail class in the constructor, instead of looking it up in the map each time?
|Shouldn't this be an array of serviceNames, since the command accepts an array?
|Please remove trailing whitespace
|status or list?
|also call setVdsGroupId based on parameters here for up server check in Gluster command base
|getServiceList can return a List&lt;String&gt; which returns the service names alone. You could then reuse it in performActionForServicesOfServer as well
|You don't need this as you're setting succeeded below in the code based on errors.size
|You could move this to inside the inner method call() - so you do not need to iterate over pairResults again
|Consider refactoring updateService to take serverId, and List&lt;GlusterServerService&gt;. Do not create a VDS here.
|Also check if there are UP servers in cluster to perform action
|I think the serviceList should not come from each server, but from gluster_services table based on service type. Because the design is generic and may have different services for a server, we do not want to start/stop all of these services.

The serviceList building can be moved outside of this method as it will be used both for cluster/server - use GlusterServiceDao
|statusMsg not used, can be removed?
|The VDS command type is always the same for this BLL command, you could remove from here.
|You can move these to separate tests. You can also verify the error message returned from canDoAction
|Again, split to different tests
|You could remove this as we use GlusterServiceManageFailed
|Since you're no longer using GlusterServiceQueryParameters, you could refactor this.
May want to consider calling variable clusterId instead of groupId
|Maybe a constructor that accepts id and serviceType as arguments?
|Typo here. should be service_type
|Typo here. should be service_type
|You could move this to be along with other VALIDATION messages
|Typo here - should be ServiceDao
|Can add not null validation here - see GlusterHookContentQueryParameters for example
|K. will add
|Cool, thanks! will do.
|Thanks, didn't realize that. I will change this.
|Right, good catch. Patch http://gerrit.ovirt.org/15243 fixes this. I'll rebase this patch on top of that.
|If hook is not present, vdsm layer does not throw exception on remove operation.
|Yes, it is. Added testcase to DAO to make sure of this.
|Yes. will do.
|Ok. Done
|Done.
|Yes..will do.
|You're right. Adding it.
|Done
|Done
|Yes, I got a find bug error on this one. Fixing it.
|Thanks! Done
|Was just avoiding an else block. But will move it down to make it more readable
|Done
|Noted. Only in this case, the feature's not yet completed and do not have any existing users.
|The stored procedure was already present
|I need this for the Junit. Since gluster classes are in a different package the protected method is not visible to mock
|Looked at this again. I don't need it here as this is in GlusterHookCommandBase.
|Done
|Kanagaraj, thanks!. That's a very good point. Will update to compare checksum too.
|Done
|No..we are checking for status != MISSING, as this is an update command.
The comments are misleading, so will be updated in the following patchset.
|Done
|WIill add, though there's already a check for getMissingServerHooks() being empty.
|Right.
|foundService or existingClusterService?
|Not obvious from the method name mapServiceTypeToCluster that there's a database insert happening as well. You could consider refactoring.
|or fetchedServiceTypeStatusMap?
|Won't else if (foundStatus != status) do?
|Suggestion - could rename this to mergedServiceStatusMap and the pairResult in the loop below to serviceStatusMap to follow this code better.
|Shouldn't clusterId be passed here, the method acquireLock seems to take clusterId as parameter?

On another note, is cluster level locking required as we are only retrieving services for a cluster and updating status. There's no gluster CLI command invoked here.
|Could existingServicesMap be null? 
Isn't it possible that the services are not installed?
In this case, should status be UNKNOWN or NOTAVAILABLE ?
|Is this list required? You could directly use existingServices list
|Could rename to getExistingServicesMap to be more readable
|You could add a test for when the VDS command fails to execute - check if status is updated in this case.
|Shouldn't service status be mixed in case of GLUSTER service type - as it it RUNNING on server1 and STOPPED on server3?
|It's been removed from master.
|Right! Was an issue with rebase of the dependent patch
|Thanks for pointing this out. Added this in vdsm verb.
|Done
|Changed.
|Done
|How about host id as a parameter? How do we retrieve the hook script for a specific host in cluster?
|Will there be a check for binary content type? Will null be returned in this case?
|Done
|Done
|The db stores decoded content. So no need to decode again.
|Is id required? vds_id would be unique id for this table. there is one to one mapping between vds_id and gluster_host_uuid
|rename to gluster_host_uuid - may confuse with vds host uuid otherwise
|Yes, good point - will add compat check for glusterHookFeature and supports gluster check
|Right, will add a getSucceeded check
|Done
|refactoring name did not change comment :)
|All conflicts are ORed. so the resultant hook entity conflict value, will be superset of conflicts
|I would prefer to leave it as it is. The admin can intervene and check what needs to be done in these cases
|the newhook map gets updated from each server's return value..so needs to be here, I think
|Done
|Done.
|Sure - will change
|Yes. my bad!
|Done
|Done
|Done
|Done
|When I initially started I had envisaged using HookKey class differently - thought I would need to retrieve command/stage from it too. But now what you are saying makes things much simpler. Thanks!
|Done
|Adding ServerHook in DB for each server makes it easier to manage if we have to show list of server hooks. But as per discussion, we will only show conflicting hooks. So changing this
|Done
|I will keep this for now. If needed will refactor later.
|Done
|Done
|Yes, removing this method to use the dao call. Initially added this to avoid multiple db calls, but not sure if there's significant gain with only conflict hooks being stored.
|Done
|Yes. will add
|Done
|Done
|Removing this method as not required any more
|Default value is true in java config file. So will be true for version value not in database
|Done
|Done
|Done
|Done
|Yes, you're right. Have tested that I need to specify bricks.replica_count
|the ssh client disconnect will not be called if returned here
|I agree. Will change
|Done
|This was added by default due to eclipse settings. Will remove.
|Done
|Done
|Done
|Added expectation that addServerHook method is called
|Done
|Done
|Up server check is already done in superclass. Can remove from here.
|Is this public method required here? Can getAllUpServers be used instead?
|Shouldn't status be set to enabled in DB only if hook enable succeeded on all servers in the cluster?
|GlusterHookFailed - when would this be returned?
|Gluster_hook messages should also log the hook names
|Gluster hookname should be a parameter in the message.
|Done
|Yes. for unit test. The getBackend method in superclass is not visible to the test as it's in a different package.
|Yes. good suggestion, will add that
|Yes, if already enabled - will add check to see if hook exists or not.
For other errors - you're right, the sync job will add the hook.
|Will check that.
|Done
|Will it do if I add it in GlusterHookStatusChangeCommand that extends from AuditLogableBase?
|Ok
|Done
|Could be run in separate threads, no reason to call enable hook sequentially in each server.
|Can add the host or cluster on which enabled
|Also add which host/cluster on which enabling
|Will change the command success criteria
|Yes :) will add
|Done
|Done
|Done
|Hook already enabled - I think we should still send a request to enable. 
Because the sync interval of hooks would be set to a high interval and if the hook status is not correctly reflected in db, we cannot rely on that.
What I will add is handling of &quot;hook already enabled&quot; vdsm errors.
|We have an entry in server_hooks for all servers in the cluster - so updating if enabled.
|Yes, sync job will add entries to server_hooks table.
Good point regarding the new server - In this case, I will have to add entry to server hooks if not existing.
|Like I said above, there are already entries for all server hooks. So if server is down, will leave status as is.
|Yes - but will add this as part of another patch - disabling gluster hook.
|Just a thought - would it be better to create an instance of AuditLogableBase and call setters on them, instead of overriding getters?
|Can these private variables be initialized in the constructor from params. otherwise there's a chance that they may not be set when using?
|Ok. Hadn't noticed that.
|volumeName could be read inside the method from volumeId instead of passing as a parameter.
|NPE possible here - as brick could be null. I think if brick is null, null should be passed to the method, so that advanceddetails of all bricks are fetched?
|How about a test for when brickId is null in parameters. Also volumeId null - the getServiceInfo is not getting tested
|Config file has GLUSTERFS storage enabled in 3.3, should this be changed here too?
|Entries are ordered by key as per header of the file. Can you place in correct location?
|Totally missed that! Thanks.
Will resubmit this refactoring as separate patch
|I tried, but since BackendGlusterBricksResource is not parent (superclass) of this class, will need to instantiate it and call populate method. Not sure if that was the way to do it
|Will do.
|Ok.
|I'm not sure I understand. Do you mean I have to provide a ref to memory_info here instead of type=&quot;GlusterBrickMemoryInfo&quot;
|True. Will remove
|Done for all similar
|Ok.
|Ok. sounds good.
|Done
|ok.
|Done
|Kept this for sake of completeness -to &amp; fro  and to emphasize that this mapping does not do anything intentionally. Also, so that unit test of roundtrip passes
|unset is happening in LinkHelper.addLinks, so would the parameter subCollectionMembersToExclude matter?
Do you have a use case where there are 4 levels - like in clusters/{id}/glustervolumes/{id}/bricks/{id}/statistics
|I would rather fix the issue with LinkHelper in a separate patch.
|QueryIdResolver needs to be accessed outside of package in org.ovirt.engine.api.restapi.resource.gluster.BackendGlusterBrickResource
|Need to access outside of package in sub package in org.ovirt.engine.api.restapi.resource.gluster - BackendGlusterBricksResource
|Minor - Version's compareTo does a null check, so you may not need the vdsGroup.getcompatibility_version() != null
|This was existing order by condition which has not been changed.
From the comment in IrsBrokerCommand::getPrioritizedVdsInPool where this is been used:
 secondly ordered by RANDOM(), to deal with the case that there are several hosts with the same priority.
|True. removed
|Right. will change
|Done. And added another method updateGlusterHookStatus
|Changed to test both methods - updateGlusterHookStatus and updateGlusterServerHookStatus
|Cluster Id and name combination are not unique, rt? Won't this return a list?
|Should clusterid be an updateable field?
|remove tabs
|Minor: Seems very similar in name to GetGlusterServerHooks
|Isn't checksum required in the gluster_hooks table? This should be used to compare if each node has the same copy of the hook script or not.
Also, remove tabs
|remove tabs
|When is host_id null - is it to indicate this is the default value stored in engine for cluster?
|Can this not be an enum - Binary/Non-binary?
|Table has no unique constraint on clusterid &amp; name alone - so this combination could return multiple rows. Is clusterid &amp; hook name combination unique?
|Is there a need for this stored proc? Shouldn't this be done in DeleteGlusterHookByName as first step before deleting from gluster_hooks?
|I think cluster_id parameter is not required as Gluster hook can be uniquely identified by id
|Minor: the name of the method is inconsistent with it's parameters. Same for removeByName
|Do we really need a view to sub-select columns from a table? I also want to avoid  creating 2 separate row mapper classes for the same entity.
Unless there's something really wrong with this approach, I would prefer it this way.
|Thanks, Allon. That's indeed the better way to do this. I will resubmit.
|v_returnAll is to indicate if all columns should be returned since content column is heavy and not needed always. Would it help if the name of the parameter is renamed?
|Same as above. rename v_returnAll to v_returnContent ?
|This deletes a single hook, so would rather call it DeleteGlusterHook
|Can do.
|Good point, will add content as a parameter.
|Yes. this is a good suggestion. Will add this.
|No, if null is passed as clusterId, an empty list is returned.
|There would be multiple combination of conflicts, specifically 6 with the 3 conflict bits. 

The enum is not a representation of the conflict value, but an indicator of which bit is set to represent a conflict.

I feel with helper methods (in GlusterHookEntity) to read and set the conflict flags, it is easier to work with integer than 7 text values.
|Done
|Will add a default constructor.
|Don't understand. 'this' is needed here to avoid ambiguity.
|Will do.
|Ok.
|This method sets the conflicStatus - does not consider existing value.
Will add other methods addStatusConflict, addContentConflict etc that changes the existing values.
|Done
|Will set the contentType to null - This would happen only in case of missing hooks.
|True. changing
|Yes. will change
|Ok. Will add this
|Sounds good. will change.
|Done
|Could move hooks related procs to a separate file gluster_hooks_sp.sql
|Shouldn't this be a unique index?
|Also check if result is empty?
|Done
|Done
|Yes- will do, yet to implement this
|Issue with rebasing as this change is part of the other patch
|Done
|This may still be useful when updating the status in gluster_server_hooks. 
I think it's cleaner to use this to decide if hook is missing instead of relying on whether checksum is null or not.
|How about if there are duplicated in the newBricks list? Is that possible?
|also assert that returned brick's server id and directory matches the parameters passed?
|Yes,changing.
|sortExpr may already have the defaultSort when sortExpr =&quot;&quot;. So may end up in &quot;order by name asc, name asc&quot;. Are we ok with this?
|{0} here as Allon mentioned
|{0} here
|getParameters().getvds() or getVdsId() ?
|Maybe out of scope for this patch, but - Is this function required now as hostname is unique? Would this scenario arise?
|Wouldn't this check fail if name is not updated? I think check against db should only be if name's been changed from existing. There's such a check further down in the code so this may not be required. Pls check.
|Duplicate servers with same host name are not allowed, rt? So this would return a single server always.
|Is this check really needed? As you're getting Interfaces for the cluster id, the server would be from the same cluster?
|As this is a generic method, maybe the message could also be generic with no reference to bricks?
|Test name can be changed to testGetByHostName
|How about IsAnyHostUpInCluster?
Also, there is a method in this file - GetUpHostListByCluster which is similar except the num of results returned. Can it be reused?
|Maybe you should make this private?
|Maybe can write a test when dao returns no VDS servers in UP state. What will query return - null?
|Should the server log messages be changed too? Also, maybe a good idea to log what the previous value was for change in option
|typo - &quot;removed it&quot; instead of &quot;removed in&quot;
|could add to custom values if string array length &gt;= 2. To make sure such ambiguity does not arise, would it be better that logAuditMessage took an optional Map&lt;String,String&gt; as parameter?
|This block of code will never get executed
|Please add a comment in this file...so that this is captured for others as well.
|will clischeduling flag be set to false only if force = true?
If so, could you add a comment with the reason in the source for posterity?
|Rather than a text match, please do entry.contains(VdcBllMessages.ACTION_TYPE_FAILED_GLUSTER_CLI_SCHEDULING_ENABLED.toString())

Text is prone to change and the person changing text may not be aware of this dependency, and it will break your functionality
|Possible to match with VdcBllMessages.ACTION_TYPE_FAILED_GLUSTER_CLI_SCHEDULING_ENABLED here, or is this not available in frontend?
|why not just use vdsGroupName in the message, then the custom value is not required
|shouldn't the warning be shown only if replica count becomes &lt; 3?
|Gluster CLI based snapshot scheduling is enabled. Do you want to disable it?
|don't you have to override the gluster cli scheduling only if there's an engine schedule?
|shouldn't there be a check if cluster supports the snapshot feature?
|You could move this to an internal command, as it is called from 2 places.
|can avoid nesting by
 if (metaVolume!=null &amp;&amp; getVdsGroup().getGlusterCliBasedScheduling())
|rename to isGlusterCliBasedSchedulingOn ?
|shouldn't this be configured in vdc_options?
|when will this be called?
|no, you could keep this here. was just checking if there was a flow that consumes this
|Shouldn't we disable only if engine has scheduled snapshots on volume?
|this is not required, as the internal command would update it, right?
|get prefix not required
|Are we assuming that if oVirt is installed and managing the cluster, scheduling will be done from oVirt?

I think we should disable the CLI scheduler only if there's an existing schedule setup from oVirt. How would we handle the case of multiple schedules on a volume, if a customer wants it. Currently that can be done through CLI.

Meta-volume could exist because of geo-rep use case too.
|Yes, but till the time the feature is enhanced, we will not be able to support it once oVirt is installed. and this seems wrong to me.
Why not have a check if there's existing volume schedule too, and then disable the cli?
|do this only if force ?
|why not just use GlusterVolumeActionParameters?
|similar - GlusterVolumeActionVDSParameters
|append cluster to these messages?
|will this warning be shown only if replica count is decreased ?
|If you make restartGlusterd as an internal action, then you could call it here, and call propogateFailure without the convert.
|where does it log to?
|/var/log/blivet.log or /var/log/vdsm/blivet.log? Would ovirt-log-collector collect if under /var/log ?
|Will this work in 3.5?
|What if SchedulerUtil validation fails and null id is returned - shouldn't this be handled too?
|same comment as previous class
|typo
|Better to define a RuntimeException type and throw this rather than a generic exception
|Please format class
|where is the remoteServerSet populated?
|typo - remoteServerSet ?
|currentRemoteHostId ?
|not so important, but for readability, you could define
 AuditLogType logType = checkHardLimit ? AuditLogType.GLUSTER_VOLUME_SNAPSHOT_HARD_LIMIT_REACHED : AuditLogType.GLUSTER_VOLUME_SNAPSHOT_SOFT_LIMIT_REACHED

and use this logType in the 2 instances here.
|You could refactor to combine these similar methods - alertVolumeSnapshotHardLimitReached and alertVolumeSnapshotSoftLimitReached as 
 private boolean alertVolumeLimitReached(final GlusterVolumeEntity volume, boolean checkHardLimit)
|comment to be removed?
|would this be 1, or would need to be changed whenever a new master config is added?
|could u change the title -maybe to, geo-rep config entries?
|It's possible to just set volumeId on AuditLogable, just like clusterId - and the entity lookup is done internally.
So, if it's important to have the volume name, you can consider that.
|Doesn't the volume snapshot entity have the volume id?
|Maybe a dumb question - but where does hosts get populated?
|Is this Master brick host name? If so, rename it?
|correct formatting.
you can compare if (fetchedStatus == GlusterStatus.DOWN)
|brickQualifiedName returns &lt;hostname or ipaddress&gt;:&lt;brick path&gt;. Was this the intention here?
|Also, can you use the brick id stored in DB to identify the log message for the brick?
|change to customValues as last parameter
|rename to removeAllofTypeForBrick ?
|also, can you change to add brick id rather than path?
|can this be merged to a single statement?
|please format correctly -- indentation missing
|are these custom values required since you have set the brick path?
|vdsGroupName also in the message
|unnecessary change?
|Done
|Done
|This validation is done only when a brick is using the network, and the brick would only use the network when an ip address is available. So I think we are ok with that use case.
|Done
|Only 1 network will have gluster role associated in a cluster, so though variable named ..LIST (which is convention followed here), only 1 is returned
|Done
|Done
|Done
|Done
|No, it's visible in gluster only mode also. 
Because there's a role column, which has the VM icon for default ovirtmgmt networks, thought it would be clearer to user to show this.
|Done
|Done
|Done
|Done
|${vdsGroupName} no?
|profiling - mebbe you can change this too while yo're at it :)
|profiling
|indentation error
|@Vijay, as per https://bugzilla.redhat.com/show_bug.cgi?id=1018383, the fix for this is to allow the base-port to be customized in glusterd vol file
|Yes, only as many ports as number of bricks on the node.
|StringUtils.removeEnd would do?
|check not required
|ObjectUtils is a wrapper to handle null object, and no longer needed as Objects.equals is null-safe
|lastSyncedAt - is when georep process synced and updatedAt is when engine was updated w.r.t gluster cli

updatedAt will not be shown currently in the UI.
|not required. the super's field should be used, will correct it.
|it is possible, however will keep it to simplify querying.
|Done
|Done
|Done
|Anmol's patch changed the same file :). Checking to see what the best place would be.
|As we need to check the value and need to cast to String, checking for null
|Used by sub class
|Provide comments for what this method is doing for future reference.
|of ${vdsGroupName}
|add vdsGroupName to message
|checkClusterAdditionalFeaturesSupported ?
|Should this class be split into 2 entities?
|Is this required here?
|getAdditionalFeatures?
|supportedAdditionalFeatures - these are features in addition to the cluster level features. maybe the comment should reflect that
|Are these 2 procs used from engine - Insert/UpdateClusterFeature ?
|rename to AdditionalFeature? ...not important, but may be easier to distinguish from the cluster's required feature object
|The background for this change is to support releases made in between major compat releases. So, for instance 3.5 level supports feature A, B and C. When we introduce a feature D in a 3.5.x release, there's no way currently to distinguish a vdsm host that supports this D feature and enforce the check from engine. Hence the supported feature matrix. When we move to the higher cluster level - feature D would be available (say in 3.6)

The intention was not to enumerate all features of a release/cluster level, but to check for additional features supported.
|why is this check required? This method will be called only when newServerIds is not empty
|same as above comment
|Is the parameter volumeBeforeBrickAdd needed?
|why don't you return from this method here if newServerIds.isEmpty() - there's no need to prep the servers and recreate geo-rep session if bricks are from existing servers, right?
|rename to geoRepSessionForVolumeAsSlave
|you can use &quot;volume&quot; here
|volume.getName() ?
|you could initialise mastervolume within the if block - can avoid a call, in case current volume is master.
|can you not append the vdsName in the message before calling this method?
calling vdsReturnValue.getVdsError().getVdsId() - there's an assumption here that vdsId is set for all VdsErrors. is that a valid assumption?
|findNewServers can be done outside of the perSessionCallables - not required to repeat for every session.
You can skip the entire perSessionCallables building, if findNewServers returns an empty list.
in fact, this should be the first check in this method.
|I think you need to rename this variable to make the code more readable
|in case the brick is being added to slave volume, newserverids= list of new nodes in volume,

in case the brick is being added to master volume,
newserverids= list of all slave nodes

So SetupPasswordLessSSHInternal will work in both cases with these parameters?

Maybe renaming newServerIds to serverIdsForKeyRefresh or something more intuitive will avoid confusion?
|you're assuming that getVdsDao.get() will return a non-null object. Could lead to NPE.
|required? If you're calling runInternalAction, lock is not acquired.
|Keys need to be redistributed to slave nodes, only if the bricks added are on servers not already setup with passwordless ssh?
|comment not clear, do you mean newServerIds is the serverIds of the newly added bricks?

If so, can this be done outside of the loop - determine if there are new servers added to volume. If not, you could skip this entire loop?
|If the brick is being added to a slave volume newServerIds = list of newly added nodes on master.
If the brick is being added to a master volume, newServerIds = list of server ids from slave.

Can SetUpPasswordLessSSHInternal be called with these differing set? It doesn't look right to me, maybe I'm missing something.
|Do you need to call create geo-rep session, even when adding a brick to the slave volume?
|Does session need to be stopped prior to key distribution?
|can you use currentBrick.getServerId to compare instead of serverName
|isn't there already such a method in super class?
|Please format class.
|rename this function to setUpMountBrokerPartial
|related to patch?
|what lock are we freeing here?
|Please format lines
|there will only be one session for which volume is slave. You can change the signature of the dao method to reflect that.
|return or continue?
|It's better to convert these into internalCommands and call these rather than calling methods of command class directly, IMO
|seems to be repeated code
|There will only be 1 session where volume is slave.
|why not pause, if ACTIVE or INITIALIZING
|Doesn't Gluster SD feature require glusterfs-api as well?
|Yes, one brick = &lt;server&gt;:&lt;mount point&gt;. So for replica 1, it would contain 1 server,
|servers would be empty for a replica 1 volume. Also, for a distributed replica, the servers list would have duplicates?
|this will only remove the existing configs where the values are same. what if the config value has been changed from cli..here it will set that value to null.
|please format the line
|Update bug urls in commit message
|use getVdsGroup() - to get the cluster
|Can you check what's returned for HYBRID_CRAWL from gluster CLI?
|is it simpler to read if you do :

 boolean isOldConfigNull = oldConfigs.get(newConfig.getKey()) == null;

--
 if (isOldConfigNull &#124;&#124; !newConfig.getValue().equals(...
|scrollable text column not available?
|Isn't this a cluster level option? If the volume name is passed in this case, wouldn't this throw an error?
|i missed the &quot;all&quot; as there were nested classes.
|+1
|Another way to do this - would be to set the isGlusterCliBasedSchedulingOn flag to true whenever metavolume deletion is detected.
This way you can avoid calling this every 5 minutes.
The current way, it is getting called for every online volume!
|Could you add a comment here why you're bypassing host validation for future reference
|You could potentially collide with gluster sync as a different lock is acquired there
|Do you want to log if serverId is null - this would be a case where the brick's ip address is not correctly resolved to a server, correct?
|For hook scripts that are found missing on servers - we add a missing conflict, and enable the administrator to take appropriate action - i.e, either delete the hook or copy it again to all servers.
We can remove the deletedServerHooks as it is not used
|Should this param also be used in executeCommand to check if georep sessions need to be stopped etc..
|Yes..for 3.6 clusters - only rhgs-sequential-io,rhgs-random-io will be added. As per https://bugzilla.redhat.com/show_bug.cgi?id=1251360 - these 2 profiles are now present in EL6 and EL7 (and obsoletes the older profiles)
|Is there a similar verb to start gluster processes?
|Will this be the standard location in all deployments?
Is this provided as part of gluster rpm?
|Shouldn't this be done only if cluster supports gluster service?
|if service start fails, should activation of host be marked as failed?
|Doesn't stop gluster processes stop glusterd as well?
Is there a need for stopGlusterDaemonService?
|only for gluster enabled hosts?
|Can you confirm if restarting glusterd starts brick processes and other glusterfs processes?
|If we are stopping all gluster processes (brick, shd) when moving to maintenance, shouldn't activate restart them too?
|Typo
|User could have a distributed replica volume (2 X 3) with 6 bricks. These 6 bricks could be spread over 4 servers. So, if we are just joining the list of servers from bricks - there could be duplicates in this list.
|Yes, there could be any number of backup-volfile-servers - and each will be tried in turn.

The volfile-servers provided is for the gluster client to fetch the volfile from and is only used at the time of mounting volume. Once the volfile is retrieved from any of these servers, gluster client knows of all the servers in the cluster and will intelligently connect to them.

To answer the second question - no, failure to connect to any of the servers while mounting volume does not result in bricks being marked down. Brick process is monitored separately by the glusterd services running on the servers.
|It is possible to end up with duplicate servers with a distribute replica. User could have a gluster vol configuration where multiple bricks are on same server.

Do we want to address that in this patch?
|Yes, it will work as long as server IP/FQDN configured in bricks is reachable by hypervisor host mounting it.
|Is this going to be removed?
|Ok. got that. acking the patch
|Shouldn't the glusterfs-cli and glusterfs-fuse be required even when with_gluster_mgmt is not enabled?
|why is this required?
|enabled or enabledd ?
|status repeated twice. I guess it was there in the original code too.
|Done
|to get the previously selected item, we need to retrieve it before the items are reset.
|Thanks! will fix
|Yes..that would be better. When I checked, I thought it was just looping through Checker classes - wasn't sure how VM checks were being differentiated
|I ran into this while verifying. While editing Default cluster - cpuname field was null. a bug in UI?
|isn't it to automatically detect backup servers to pass as mount options.
In case the user has provided this in the mount options manually, this would still work without glusterfs-cli IMO. Maybe the warning and commit message needs to reflect that?
|!volumeEntity.getVolumeType().isSupported() ?
|Is it better to add just the volume types that are supported here? - easier to maintain that way I feel.
|Would there be a problem if we add the unknown task to the list? for tier migration, will the volume type of the original volume change after migration task completes?
|Should this be an enum?
|typo?
|TWS
|Shouldn't this be a unique index, or a constraint on cfg_name
|UpdateVdsDeployConfig?
|vdssInCluster ?
|do we follow this convention for private variables?
|Do we need to provide a different alias for cluster in the inner query here, or remove alias ?
|(list.size() == 1), (list.get(0).getStatus() == GlusterStatus.UP) - these brackets are redundant too, can be removed
|another redundant one around volumeEntity.getOptionValue(&quot;diagnostics.latency-measurement&quot;) == null
|same as before
|(rebalanceStatusEntity == null) - redundant
|Shouldn't this done only if meta-volume exists?
|But you would need to mount only when a new volume is detected if you add this in the createvolume flow...no need to check for existence of meta volume and mount every 5 minutes
|shouldn't this be done when a new volume is detected - i.e in the createVolume() flow?
|Then what's the point of having the meta volume name configurable at the engine side?

Shouldn't the vdsm verb be changed to take this as a parameter?
|Shouldn't the name of the meta-volume be a parameter to vdsm?
|By default, the &quot;Stop gluster process&quot; will be false, I think.
I'm ok with this behaviour of 1 flag controlling multiple hosts if multiple hosts are being put into maintenance at the same time.
|Comment is about adding this as an OptionalArgument vs a urlParam. 
It should be added similar to action.reason, like
action.shouldStopGluster: xs:boolean
|shouldn't this be an optional argument?
|fix comment
|call this(vdsIdList, isInternal, reason, false) instead of above 3 lines?
|GlusterStopServicesSupported ?
|I think u're referring to https://bugzilla.redhat.com/1247521. Prasanna from gluster team is working on this - the patch submitted is handling multiple hosts passed
|Ok, now it makes sense. Thanks!
|I tried applying this patch on master but drive.get('diskType') is None for gluster volume.
|@Darshan, is the volumeName an optional parameter here?
|can RHSversion be stored in glusterVersion? Would both glusterVersion and RHSversion be populated in vdsCaps?
|remove tabs
|is the column added in vds_dynamic?
|please update bug url - https://bugzilla.redhat.com/show_bug.cgi?id=1192465
|is this related to cluster compatibility level?
|this method can be removed
|this method can be removed
|can remove this
|this method can be removed
|can be removed
|can be removed
|can be removed
|can be removed
|Done
|Yes, can be reused. Changing
|Done
|Done
|Done
|Done
|Done
|Done
|to be removed
|Only replace-brick commit force is supported by gluster
|I meant non-replica types...will correct.
|Done
|Changing the parameter class
|Done
|Done
|Sorry, missed this. Will fix
|replace brick start was not supported earlier as well, hence removing this from engine.
|Done
|Done
|if the list is empty or non-empty?
|Could you add comments to this file?

While deleting a snapshot for a volume - are the slave snapshots deleted as well? (The messages seem to indicate that slave snapshots are being restored?)

When is slaveSnapshots parameter passed to the BLL?
|add Bug-Url: https://bugzilla.redhat.com/1196433
|java 8 map and filter here?
|Gluster quorum will be lost for the following volumes ?
|typo
|same as previous file
|Should this be a config option?
|should this block be moved inside the if (result) block where lock is acquired?
|Instead of checking for server-quorum-type, you could probably just check if cluster has virt+gluster service enabled - since we want to do this in HC clusters.
|I think just &quot;&gt;&quot; - since we want quorum to be maintained.
|you could combine the if statements
 if (volume.getVolumeType().isReplicatedType() &amp;&amp; !isQuorumMet(volume, bricksGoingToMaintenance))
|space here
|We want the DC to be in uninitialized state if there are no clusters - so this check is required.
|Done
|No I haven't verified that flow. thanks for input, can you point me to code that moves from Uninitialized for first data domain. Will it be AttachStorageDomainToPoolCommand?
|Hmm..I need to think about this.
|We do need the else here, otherwise the if loop is executed and status of DC keeps toggling.
|oops. yes! Will remove
|Done
|serverPublicKeyMap?
|Why is the includeHost required?
|TWS
|set arbiter_count here?
|should this be reordered so that force is the last parameter?
|is isArbiter == '1' in the returned xml from gluster?
|Will change this in a separate patch as I think the way GlusterUtil is passed has to be changed across project
|Done
|At the node level, no - that's not possible. 
vdsm at node currently reports feature capability for gluster geo-rep, gluster snapshot and disk provisioning -- this was introduced as these patched were backported to 3.5 as well.

However, since no new verb was introduced for gluster network, we missed adding this feature in reported features - but we don't want this feature on old glusterfs versions

At engine, when cluster is created, user can select the features that needs to be enabled. Once this is done, nodes are checked against features supported to set Host to operational/non-operational state.
So this patch is about adding the &quot;Gluster Network&quot; as a feature that can be selected, and modifying the vdsAdditionalFeatures with this new feature if node supports any of geo-rep, snapshot, disk provisioning.
I just happened to choose georep - but i can modify it to be any of.
|Gluster network as a feature is supported from 3.6 cluster, as well as on nodes reporting 3.5 compat level with new gluster features. The current released nodes report geo-rep, snapshot etc as new features, but not gluster network role. So using the geo-rep as a proxy to indicate gluster network role is supported, if users want to only use gluster network role feature in 3.5 cluster level.
|Done
|Should user manually fix in such cases?
|We don't have hosted-engine integrated yet with gdeploy (due to couple of bugs - 1324520,, 1329166)- plan was to call rest-api to change it once integrated
currently only the gluster volume provisioning is done via gdeploy
|As per code, the numberOfEntries element is not added if status is not connected?
|numberOfEntries
|How about test with one of the bricks Not Connected? I think the numberOfEntries in this case is N/A - we can check if this case is handled.
|can we change this to indicate what return output will have like this:
{'name': 'Fully qualified Brick path',
 'status' : 'Connected/Not Connected',
 'numberOfEntries' : int,
 'hostUuid' : uuid}
|else will numberOfEntries be not populated?
|if gluster libgfapi is supported - so that it is clear to others looking at code
|Please provide link to original patch - https://gerrit.ovirt.org/#/c/44061/, if we can restore that, we could continue changes there
|please add Bug-Url:https://bugzilla.redhat.com/1022961
|index + 1 ?
|entriesRemaining - entries ?
|the update_date is also updated when other fields like status are updated as part of volume status sync - if we want to know when unsynced entries was last updated, do we want a separate column?
|typo
|unSyncedEntriesTrend
|correct typo in getters/setters as well
|if you need to map time with entries - you may want to add if there's no data for a time. maybe as null - so that you know data is not present for the time frame checked
|Either that or change the column type?
|unsynced_entries_history
|unsynced_entries_history
|if one of the entries fail do we want to skip the entire list?
|return or continue?
|wouldn't you want the entire object as return value - i.e status/unsyncedentries per brick?
|what are the possible values for status? Is unsyncedEntries null an indication that brick is not connected?
|is Cluster lock required?
|I think you need to add null value as well to the trends - especially if you want to do a rate analysis later
|what about UsageHistoryLimit?
|UsageHistoryLimit?
|Can you update BZ link - 1205641
|Done
|will do.
|I don't understand the change, can you provide some context?
|should mnt_options be added only for file based storage or applicable for other storage types as well?
|Done
|Done
|Done
|vdsm-gluster already has this dependency..but there was a thought to remove the dependency to enable building vdsm-gluster downstream as well. see referenced bug
|Engine decides which host-deploy plugins to call, and the specific packages and actual installation is done in the plugin. So in this case, when a host is added to a gluster cluster, the gluster plugin is called
|I will remove the hard dep of vdsm.rpm on glusterfs-server in a separate patch. This patch was a step in that direction.
However, glusterfs-cli and glusterfs-fuse are required for non-gluster hosts too, i.e hosts added to a virt cluster but consuming gluster storage domain
|As per what I understand, to bring in vdsm-gluster as part of RHEV build we need to remove the glusterfs-server dependencies from spec. Host deploy would then take care of ensuring glusterfs-server packages are installed - see https://bugzilla.redhat.com/show_bug.cgi?id=1225728#c14
|yes! thanks!
|Done
|Done
|Done
|oops - yes, I missed the format change. sorry about that
|Done - formatting.
want to base the peer status updation based on return value of initGlusterPeerStatus, hence added the code here
|Done
|Sure - will post a follow-up patch to do this
|Done
|Done
|Done
|Yes, RHEV builds should use this flag as false.

We DO need vdsm-gluster shipped in RHEV channel, otherwise I do not see how we deliver hyperconverge to customers.
|Ok - agreed, will drop the with_gluster_mgmt flag, but will keep the conditional dependency for gluster rpms in order not to break upstream
|@Dan, if we remove the gluster dependencies, what's the issue with building/shipping vdsm-gluster?
|If we drop this, this breaks upstream users who will need to manually install these packages when using gluster storage domain
|Yep. thanks! will fix comment
|Yes, vdsm-gluster will be built, but will only be required to be installed on HC setups
|In converged mode, where gluster storage and hypervisor are on the same node, we need vdsm-gluster to be provided by the vdsm build in RHEV.
|Since there's no separate downstream build for converged mode, the RHEV build will have --enable-gluster-mgmt by default same as upstream.
|I can add the gluster-mgmt flag back to provide flexibility. but the current build system will need to change to build vdsm-gluster also, IMO
|I have not changed the current behaviour of vdsm (downstream or upstream). Only made the dependency on gluster management packages controlled via a flag to continue with current behaviour when vdsm-gluster is built downstream
|I removed this as there seemed to be no usecase where it is disabled (see above comment), but if we need the flexibility I can add the gluster-mgmt flag back.
|remove this, and disable-gluster-deps for downstream build, as we do not want hard dependency on glusterfs rpms in rhev d/s
|Thanks! Yes, will do.
|Doesn't the yml file belong in the api package - not sure about this. I have an updated patchset where I have left this as is. Could u review that?
|with_gluster_mgmt flag was added to filter out vdsm-gluster and related files in RHEV builds, IIUC. If we're going to build vdsm-gluster in RHEV, the flag is not required.
|--with-gluster-deps is always true in upstream. Will post an updated patchset with clear error message when gluster packages are not available.
|The glusterfs-server packages are installed as part of host deploy for any host added to &quot;gluster service&quot; enabled cluster. 
The gluster client packages are needed on hypervisors when gluster storage domain is used, and AFAIK these packages are not installed on hypervisor hosts via host deploy. Currently it's a documented process for RHEV downstream when using gluster storage domain.

The reason for removing gluster package dependency from spec file was that gluster packages are not available in RHEV channels downstream and we want the vdsm-gluster to be provided in RHEV channel
|if &quot;null&quot; is the value returned, you could just use Objects.toString(switchType)
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Sure, will address in the subsequent patch
|Done
|Done
|*without
|CANNOT_FORCE_SELECT_SPM_CLUSTER_DOES_NOT_SUPPORT_VIRT_SERVICES --&gt; CANNOT_FORCE_SELECT_SPM_HOST_DOES_NOT_SUPPORT_VIRT_SERVICES - Host does not support virtualization service?
|sorry! yes..return here
|no-  handled by failValidation method
|Yes, good point - will fix
|The replica volume check will be done inside the method
|check will be done inside method
|Done
|is glustercli available only when vdsm-gluster is present?
|executed only if the host has gluster service enabled as well?
|typo -&gt; skipFencingIfGlusterBricksUp
|subVolumes = volumeInfo.get('brickCount') / replicaCount ?
|get_brick ?
|bricks
|Add https://bugzilla.redhat.com/show_bug.cgi?id=1361115 to Bug url
|typo - skipFencingIfGlusterBricksUp
|for brick online check should we restrict to replicate types - that could be restricted for quorum check

Also, replicate check using replicaCount &gt; 1 ?
|I meant that instead of checking if &quot;REPLICATE&quot; in volume type, you can check replicaCount to determine if it is a replicate volume
|Ok..sounds good.
|is volStatus executed on the host being fenced or another host?
|subVolumes -1 ?
|index*replicaCount:index*replicaCount + replicaCount ?
|typo
|any way to avoid calling this for every sync?
|I think I'd rather not tie the return value of init hosts to this operation's success. If there's an error in initializing hosts, the host will move to non operational or indicate error.
|No, no reason. I reused existing code and moved here, hence inherited this. Can remove it in a follow-up patch
|will do.
|Done
|thanks for catching that. Done
|ok! done
|should brick creation fail on failure to set selinux context?
|Done
|Yes, can use the old one.
|I misunderstood! Fixing
|Done
|Removing it as a parameter
|Need the entire list in case of edit
|No, since storage could be in any cluster
|This can be a validation while creating storage domain, as filtering it out would cause issues for editing of a connection
|Yes, will fix that
|Good point - I think better to set virt profile or add validation while creating storage domain
|Done
|Done
|Hmm..I don't really see a &quot;:/&quot; separator being reused. Anyway, isn't the point that if the gluster volfile separator changes, we just edit this constant? Calling the separator as COLON_SLASH defeats that purpose, IMO.
|Done
|Oops yes! thanks
|It does validate the gluster volume id in connection, Updating method name to reflect that
|Done
|Done
|Done
|Done
|No, volume does not exist without bricks. Having said that, there's a possibility that bricks are not synced to engine and hence brick list is empty - so will add validation for that.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I think it was the IDE being intelligent. will remove from patch set
|Done
|Done
|Done
|Done
|Done
|Done
|It should look at the overall status of checkpoint. Will fix
|Done
|Thanks, will check that!
|This is a DR use case..snapshots are created for VMs before geo-replication is called - stored in the createdSnapshotIds..geo-replication is long running and the callback checks the status periodically. Once the geo-rep status changes to completed, the callback needs to call delete snapshots and pass the list of snapshot Ids that were created in the first step (createdSnapshotIds)..so need this variable to be available in the callback.
|Thanks, Moti!
|@Moti, if I want the createdSnapshotVMMap in subsequent commands, what's the best way to do this?
|Yes, good point.
|No delete cascade, better to add validation in geo-rep delete.
|the childCommands are empty - removing this block
|The current schedule allows only a run once per day - giving 24 hours to complete. 
It's a good point, I think we should exit if there's a job running with an error to keep it simple. I will add this logic
|No, that's not possible. The session's status is calculated based on the line item status
|Done
|Done
|Done
|@Maor, can you confirm if this is the right parameters to pass to remove snapshots
|The @Inject annotation does not work when the GlusterStorageDomainDRSyncJob is instantiated as part of Quartz trigger - even when the class passed to quartz is instantiated using Injector.injectMembers.
I'll add this in comment, so that the reasons for using this approach is clear when looking at code in future
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|This method is called once the callback marks the command as failed. This is different from the command completion which is logged when the executeCommand ends.
|If using SerialChildExecutingCommand, how do I keep polling the status of geo-replication which was started as part of this command?
|Same as above
|@Maor, Could you check if the parameters are correct?
|Done
|The snapshots are removed while the VM is running
|Done
|Done
|Done
|Yes
|Done
|Done
|I tried this flow of simulating an error during one of the snapshot creation. The temporary snapshots that succeeded were deleted successfully, I did not see any issues. 
Any particular flow that I need to check?
|oops yes.
|Done
|Thanks! fixing
|Done
|Will add a lock.
|I will keep the method and remove check.
|Yes, will validate the Schedule parameters
|Done
|No. For existing records in DB, if the schedule is being edited, the previous job is deleted as per line 73 and a new job is created here.
|Done
|that's protected. Should I change to public in CustomPropertiesUtils
|Done
|Done
|Done
|No violation here. expression is empty which is validated
|Done
|Yes, since I added additional data to the fixtures.xml ( a volume with replica count 3) , this change is no longer needed for test validation
|Yes, since I added additional data to the fixtures.xml ( a volume with replica count 3) , this change is no longer needed for test validation
|Done
|Done
|Done
|Done
|Yes, if the frequency is set to None, the previous scheduled job will be deleted.
|No, as the jobId will be null if user chooses frequency as None, we still need to update the object.
|Done
|Done
|Yes, added with the entity patch
|Done
|since there's no break, this does get appended. However will change to avoid confusion.
|Changing StorageSyncSchedule::getCronExpression to return null if not valid.
|Done
|Done
|Injected class does not work with quartz instantiation. So removing the Injector.get
|Done
|Done
|Done
|separating out
|separating this out
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Validation would fail in that case and not get here
|remove the cloudinit constants from this file - will leave it to users to decide
|Yes
|Yes, Juan is spot on.
|Done
|Done
|removing
|Done
|Done
|Yes, delete is on a collection
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Represents content type of hook script.
|yes..as the title was &quot;Data Synchronization Setup For Disaster Recovery&quot;
|Done
|These lines are if volumeID is null. So if the storagedomain has no associated gluster volume id, we need to figure out if it's using a gluster volume managed by engine from connection path which is &quot;host1:/volumename&quot;
|Yes, you're right..this is a mistake, fixing
|Done
|Ok
|Is the CDN repo hidden when Node is used?
|isRhev or showCDN ?
|missing SSH.
Ensure that passwordless SSH..

Can this be run as non-root?
|master should use 3.8
|The cell has images and tooltip has the text, that's the only value add I see. No harm in keeping it IMO
|add ignore_error=false here
|add ignore_error=false here
|add ignore_error=false here
|add ignore_error=false here
|minor nit: change to &lt;username&gt;
|compound-fops does not work for arbiter, I think
|remove this?
|shouldn't we return data.getDescription ?
|space between methods?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Not sure how to reuse Drive.getXML() here..call getSourceXML or move this code there?
Sorry, but I'm unfamiliar with storage code.
|Ok. Splitting into multiple
|Done
|Done
|Done
|Done
|Changing this to return None when value is not found
|Done
|For network disks, path is the path to file on network storage..in case of gluster, path to file on gluster volume. os.path.realpath comparison works for file storage as it prefixes separator, but not for network disks.
|No, I haven't tested with Ceph. Is there any other criteria that can be used to filter out Ceph disks?
|I don't think I understand this code enough to refactor. Could someone from the storage team help here?
|I'm not sure I understand. Does this mean the newDriveDict is not used as argument for method? Can you point me to an example on getting additional infor from storage domain?
|You mean move all the merge code to a merge module?
|1. It needs to be on one of the nodes alone
2. The dir location is not a repo
|I kept this file as before, wasn't sure what it was intended for..this is still wip
|OK. will check out the newer style
|The host's key? Do you mean there's no no need for passwordless ssh between the lago VMs?
|Right - this is from earlier when we did not have a repo for gdeploy. We do have one now, and can be part of reposync
|Not relevant if we have ntp sync in place with engine. Updating
|not needed as per previous comment
|This was relevant with 4.0 and thinp+lvmcache - not needed for master.
Updating the conf file
|Ok. I just used the file from initial patch. Will resync this one
|not needed.
|Stage of volume event at which hook executes. For instance pre - start of volume, post start of volume
|Repositories ?
|Strings not localized?
|Data Disk Count?
|Ok.
|ignore_errors=no here?
|I think we can remove the NFS service ports from here
|Gluster volume will be setup using gdeploy and Hosted Engine will be deployed on gluster ?
|Gdeploy utility is not installed?
|I don't think this lvm conf editing and service stop is needed any more.
|Indicates the purpose for which the network is used in the cluster.

@Megan, it is better to get someone from network team to review this - I have added what I know :)
|Used for spice/vnc traffic.
|Used for communication between engine and the nodes - this is the network where ovirtmgmt bridge will be created
|Used for VM migration
|Not sure
|@Martin, in hyperconverged, iptable rules for virt as well as gluster gets applied in addition to common. So having this in virt section is fine.

If we have this in common - this gets applied even for clusters that only manage gluster hosts, and iiuc, this is not needed for gluster hosts.
|sabose
|Yes it is sabose. Thanks, Sandro!
|Yes. as gdeploy tries to login to the host on which it's running too
|I did create a repo for the copr repo (see reposynconfig) - but the yum install did not work
|I based this on the he suite, and we do need the entries for HE FQDN and hostnames to resolve correctly
|You're right. It's 4MB. changing this
|So clearing it in case of unselect - leads to not displaying mount options for normal gluster domain i.e non-linked.
I'm not sure how to handle that - this seemed the safer approach
|Done
|Yes - I think the performance recommendation for RAID 5 and RAID 6 are similar.
|I think we need to add RAID5 too
|Ok..can you add a comment?
|what's the logic for 60 upper limit?
|Are you validating size of HE volume?
|Can we add this as well - minimum size &gt; 60GB
|Does this variable isDeploymentStarted indicate that gdeploy configuration is complete and gdeploy is running?
Can this be changed to isConfigCompleted?
|can this path be a constant so that it can be changed based on distribution?
|maybe a constant for path?
|the files needs to be copied to first host alone.
|waiting for the engine to be online is done in the bootstrap script
|Why do we need to increase the thinpool size if not arbiter?
|You mean setting parentParameters is sufficient to ensure that callback is completed before calling performNextOperation?
|The bricks are returned based on brick_order from BLL. Is the order changed post that?
|&quot;The order of the returned list is based on the brick order provided at gluster volume creation&quot;
|Thanks!
|Yes, volume.getClusterName will be populated.
|Done
|I had issues with reposync and the gdeploy repo. I'll check that again and fix this in a follow-up patch
|ntp was earlier pulled in as dependency of vdsm whereas, now from oVirt 4.1.2 it drops ntp in ..
|please change reference to oVirt. RHV is downstream product
|# Gluster
[filter &quot;file:gluster&quot;]
  reviewer = sabose@redhat.com
|Change comment to read &quot;Blacklist devices in multipath conf&quot;
|Patch Set 2:

(4 comments)

Junit tests required
|Patch Set 4:

(2 comments)
|Patch Set 4:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 2: Code-Review+1

(1 comment)

Minor comments
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 5:

Rebase and followup?
|Patch Set 1: Code-Review+1
|Patch Set 2:

(2 comments)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review-1

Rename the script please
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1

Rebased and verified
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1

Rebased and verified
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+1
|Patch Set 2:

(2 comments)
|Patch Set 5:

(2 comments)
|Patch Set 5:

&gt; Can we still go ahead and create geo-rep session(forcefully?) when
 &gt; there are no slave hosts in up state or the slave volume is down?

No, that would fail. when trying to execute the mount broker setup and georep session
|Patch Set 7: Code-Review+1

I think since we are dependent on destination volume's server being up, to determine some of the eligibility criteria, I'm ok with this approach.
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(3 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 10: Patch Set 9 was rebased
|Uploaded patch set 1.
|Patch Set 1:

(4 comments)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review-1

Change the script numbering
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4:

(1 comment)
|Patch Set 6:

(3 comments)
|Patch Set 7:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

Eli, I'm merging this one as it's a backport. If required will post a separate patch to master to change the column type.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 6: Code-Review+1
|Patch Set 12:

Where are you setting the possible tuned profile values in the UI? Maybe I missed that
|Patch Set 12: Code-Review+1

Ok! Sorry, missed that.
|Patch Set 14: Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)

Minor comment
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 4:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 6: Code-Review+2
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+2
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+1

Could you elaborate in the comment why this change is required
|Patch Set 6: Code-Review+2
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2
|Patch Set 2: Code-Review-1

Needs a dependent patch to ensure db upgrades - engine: Modified fk_validator to handle composite foreign keys
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Verified-1

Script to be renumbered
|Uploaded patch set 3.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Removed the following votes:

* Verified+1 by Sahina Bose &lt;sabose@redhat.com&gt;

|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1:

Please cherry-pick this change to ovirt-engine-3.5 branch as well
|Patch Set 1:

Does this patch need to depend on https://gerrit.ovirt.org/#/c/23502 ?
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

Abandoning as retargeting to 3.5.3
|Patch Set 6:

(4 comments)
|Patch Set 8:

(1 comment)

Please address Piotr's comments. This patch should be about introducing the username optional parameter.
|Patch Set 8:

(1 comment)
|Patch Set 10: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 14:

(9 comments)
|Patch Set 16:

(3 comments)
|Patch Set 18:

(8 comments)
|Patch Set 23:

(3 comments)
|Patch Set 27:

(9 comments)
|Patch Set 31: Code-Review+1

(1 comment)
|Patch Set 34:

(3 comments)

Sorry for missing these before
|Patch Set 36:

(2 comments)
|Patch Set 37: Code-Review+1
|Patch Set 39:

Error in SP - build failed.
Also please add a junit to test this sp
|Patch Set 39: Code-Review-1

(1 comment)
|Patch Set 40: Code-Review+1
|Patch Set 41: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3:

Tal, I've update the bug url
|Patch Set 5:

Tal, will do.
|Patch Set 32: Code-Review+1
|Patch Set 2: Code-Review+1

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 2: Code-Review+1

(2 comments)

Minor comments
|Patch Set 3: Code-Review+2
|Patch Set 2:

(5 comments)
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review-1

(3 comments)
|Patch Set 4:

Patchset 3 comments not addressed
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

(2 comments)
|Uploaded patch set 10.
|Patch Set 10:

(2 comments)
|Uploaded patch set 11.
|Patch Set 11: Verified+1

Addressed comments
|Patch Set 11:

(1 comment)
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 12: Code-Review+2
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Please write Junit test too.
|Patch Set 1: Code-Review+2
|Patch Set 14:

(3 comments)
|Patch Set 16: Code-Review+1

(1 comment)
|Patch Set 20:

(5 comments)
|Patch Set 21:

(5 comments)
|Patch Set 23:

(3 comments)
|Patch Set 24: Code-Review+2
|Patch Set 28: Patch Set 27 was rebased
|Patch Set 10:

(3 comments)
|Patch Set 11: Code-Review+1
|Patch Set 15: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)

Since the sync job runs every 5 second, did not add this in InitVdsOnUp. Will revisit again
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

(3 comments)
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11:

(8 comments)
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 11:

(2 comments)

Add command test?
|Patch Set 12: Code-Review+1

(1 comment)
|Patch Set 16: Code-Review+1

(2 comments)

Minor comments
|Patch Set 17: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

(2 comments)

Patchset to follow
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(3 comments)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

(4 comments)

patchset to follow
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

(2 comments)

Patchset to follow
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 13: Patch Set 12 was rebased
|Uploaded patch set 14.
|Patch Set 14: Code-Review+2 Verified+1

+2 based on previous acks and ack to rebase change
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: -Verified

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(3 comments)
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Uploaded patch set 9.
|Patch Set 6:

(1 comment)
|Patch Set 9: Verified+1

Rebased and verified
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(2 comments)
|Patch Set 4:

(1 comment)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 4:

(1 comment)
|Patch Set 6:

(1 comment)

Will post REST API in a separate patchset
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Code-Review+2 Verified+1

Rebased and verified. Adding +2 based on previous acks
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 11:

(1 comment)

no vdsm exceptions to be handled?
|Patch Set 12: Code-Review+1

(1 comment)

Minor comment
|Patch Set 16: Code-Review+2
|Patch Set 18: Patch Set 17 was rebased
|Patch Set 3:

(2 comments)
|Patch Set 7:

Please fix find bug error, probably introduced in an earlier patch.
|Patch Set 9: Code-Review+2
|Patch Set 27:

Build errors to be fixed
|Patch Set 32: Code-Review+1

Backend query changes look good to me
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+2

Please rebase and verify
|Patch Set 1:

(4 comments)
|Patch Set 1:

@Oved, an example that uses the persistent scheduler
|Patch Set 3:

(10 comments)
|Patch Set 9:

(9 comments)

Junit test?
|Patch Set 9:

(1 comment)
|Patch Set 11:

(4 comments)

Tests are failing. Please take a look
|Patch Set 12: Code-Review+1

Please send Junit tests in separate patch
|Patch Set 15: Code-Review+2
|Patch Set 9:

(9 comments)
|Patch Set 11:

(5 comments)
|Patch Set 13:

(3 comments)
|Patch Set 16:

(5 comments)
|Patch Set 22:

(3 comments)
|Patch Set 23:

Do you need locks on the slave volume when you're pausing and snapshotting slave volumes, or because we do not allow this on slave volumes, lock on master volume will suffice?

But may need lock on while pausing geo-rep session. 
Otherwise looks ok.
|Patch Set 26: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 4:

(4 comments)

Junit in a separate patch
|Patch Set 6:

(8 comments)
|Patch Set 7: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(2 comments)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 11:

(1 comment)

How about handling of vdsm errors? No exceptions thrown by this verb?
|Patch Set 12: Code-Review+1

(1 comment)

Minor comment
|Patch Set 18: Patch Set 17 was rebased
|Patch Set 18: Code-Review+2
|Patch Set 13:

(1 comment)
|Patch Set 14: Code-Review+1
|Patch Set 6:

(4 comments)
|Patch Set 7:

(4 comments)
|Patch Set 7:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 11: Code-Review+1

(2 comments)

Minor comments
|Patch Set 4:

(2 comments)

Please add Dao test
|Patch Set 5: Code-Review+1

(1 comment)

Minor comments
|Patch Set 6: Code-Review+1
|Patch Set 8: Code-Review+1

Script will require renumbering before merge
|Patch Set 10: Patch Set 9 was rebased
|Uploaded patch set 1.
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)

Patchset to follow with tests fixed
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Rebased and verified
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

Moti, could you merge?
|Patch Set 8:

(5 comments)

I think the Auditlog messages are missing
|Patch Set 8:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 10:

(1 comment)

Junits missing for command class. Maybe you could add in separate patch?
|Patch Set 11: Code-Review+1
|Patch Set 7: Code-Review+1

(1 comment)

Minor comment
|Patch Set 8: Code-Review+1
|Patch Set 3:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 11: Code-Review+1
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 14:

(4 comments)
|Patch Set 15:

(1 comment)
|Patch Set 17: Code-Review+1
|Patch Set 1:

(2 comments)
|Patch Set 2:

(7 comments)
|Patch Set 4: Code-Review+1

(1 comment)

Minor comment
|Patch Set 1: Code-Review+1

(1 comment)

Minor comment
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1

(2 comments)

Minor comments
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1

(3 comments)

Minor comments
|Patch Set 6: Code-Review+1

(1 comment)

Minor comment
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)

Minor comment
|Patch Set 7: Code-Review-1

(4 comments)
|Patch Set 8:

(3 comments)
|Patch Set 11:

(3 comments)
|Patch Set 12: Code-Review+1

(1 comment)

Please address the comment
|Patch Set 13: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 6:

(2 comments)
|Patch Set 8: Code-Review+1
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+1
|Patch Set 5:

(11 comments)
|Patch Set 5:

(2 comments)
|Patch Set 12:

(16 comments)
|Patch Set 16: Code-Review+1

(2 comments)

Minor comments
|Patch Set 17: Code-Review+1
|Patch Set 5:

(2 comments)
|Patch Set 6:

(1 comment)

Minor comment
|Patch Set 7: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 10: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 5:

(3 comments)
|Patch Set 5:

(1 comment)
|Patch Set 7:

Please address comment in patchset 5 and check test failures
|Patch Set 8: Code-Review+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 3:

&gt; Is there any reason to only update method names in VdsServerConnector interface which is only used xmlrpc proxy object?

No reason. I missed changing this as I was testing with xml-rpc. Thanks for pointing out - will post updated patchset.

&gt; How this change will affect backward compatibility?

It will not affect, as the vdsm verb was not used/merged earlier.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Yair, could you ack please?
|Uploaded patch set 2.
|Patch Set 6:

(2 comments)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 6:

(1 comment)

Darshan, could you address these comments?
Is it possible to make this patch independent of geo-rep create patch?
|Patch Set 7:

(1 comment)
|Patch Set 8: Code-Review+1
|Patch Set 12:

(8 comments)
|Patch Set 17:

(2 comments)
|Patch Set 19: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(6 comments)

@Moti,

Regarding your comments -
&gt; How would you manage the jobs ? By plain insert/update/delete sql statements ?

&gt; How would you support configuration variable (i.e. as rate/delay) for these jobs ?

Jobs will be managed by SchedulerUtil. when a job is scheduled if the PERSISTENT_SCHEDULER bean is used, the job will be stored in the DB rather than in memory. Configuration variables for rate/delay will continue to be in VDC_OPTIONS

Patchset to follow
|Uploaded patch set 4.
|Patch Set 4:

&gt; What's the need that this patch addresses? Putting -1 until clarifying questions and until reviewed by Yair and Liran as well.

The current scheduler instance stores the jobs in memory. Every restart of the server, we need to reschedule the jobs. This works so far as we only have system wide sync/monitoring jobs.

To extend the quartz functionality to say, allow scheduling of gluster volume snapshots, where each volume can have a different schedule, the jobs and triggers need to be persisted in the database to survive server restarts. This patch addresses that.

Is there an alternative to using persistent jobs?
|Patch Set 4:

(2 comments)

The use case is described in http://www.ovirt.org/Features/GlusterVolumeSnapshots#User_Experience_and_control_flows - under &quot;Taking a Snapshot&quot; with schedule options.

So, we want the engine to create a snapshot of the gluster volume at pre-defined intervals. The engine would create a quartz job to be fired at these intervals which would call the method to create snapshot with the context parameters passed.
|Patch Set 4:

(2 comments)

@ Liran - Why do we need to have both memory and DB? If we have DB - why not just move everything to the DB?

The existing job scheduling require re-architecting to move to the DB persistence. These jobs assume that they will be scheduled when the engine starts up and the in-memory job store works well for this purpose. 

The DB job store would be useful for jobs that are scheduled by the user and not the engine.

@Moti -
1. How would the management of jobs will be executed ? Would a job-name be preserved per each entity ? or any other logic to associate the job which is scheduled for a certain entity ?

Yes, the class that schedules these jobs would need to uniquely identify these job names so that these can be rescheduled/deleted etc.

2. What would be the jobs lifecycle ? will you have to introduce a logic to remove those jobs once aren't required any more ? Or to digest the current schedule jobs into a presentable view entities for the user ?

Again, this would be the responsibility of the consumer class. For instance, when GlusterSnapshot uses this infra, it will maintain a list of all the snapshot scheduling jobs.

We could maybe provide a view to see a master list, if required?

3. How would we verify that the quartz tables are properly managed and upgrade of quartz version will be backward compatible ? IMO since the quartz tables are exposed as DAOs and aren't managed by ovirt, we should have some system test, kind of e2e (install / upgrade / and actual usage of the those tables).

Good point, I will add a test for this
|Uploaded patch set 5.
|Patch Set 5:

@Oved, will give you the patch link using this scheduler once it's posted.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Patch Set 7:

(1 comment)

@Yair, AFAIK, JDBC JobStore works with a pre-defined schema and is not customizable. We may need to write and maintain our own JobStore to be able to customize and control the db schema, and is not trivial.
|Uploaded patch set 8.
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Patch Set 9:

@Oved, this is an infra level support for persistent quartz jobs - not virt or gluster specific. Gluster happens to be consuming this now, so I'm not sure if we need to separate it out on setup.
Having said that, I'm not sure how to separate this out if needed. It would mean that the SchedulerDBQuartzImpl which requires these resources also be packaged separately?
|Patch Set 9:

@Liran - that only changes the table name prefixes. the tables and columns are defined by quartz and cannot be customized unless we implement another JobStore
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Tested with creating and persisting jobs and verifying that they get triggered as expected
|Patch Set 10:

(13 comments)

Patchset to follow
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12:

(6 comments)

Patchset to follow
|Uploaded patch set 13.
|Patch Set 13:

(1 comment)
|Uploaded patch set 14.
|Patch Set 14:

Rebased and verified
|Patch Set 14: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 6:

(5 comments)
|Patch Set 8:

(2 comments)
|Patch Set 8:

(1 comment)
|Patch Set 12:

(3 comments)
|Patch Set 14:

(5 comments)
|Patch Set 15:

(2 comments)
|Patch Set 16: Code-Review+1
|Patch Set 8:

(2 comments)
|Patch Set 10: Code-Review+1
|Patch Set 5:

(1 comment)
|Patch Set 6:

What about related ConfigValues?
|Patch Set 8: Code-Review+1
|Patch Set 7:

(2 comments)
|Patch Set 9: Code-Review+1
|Patch Set 10: Code-Review+1
|Patch Set 6: Code-Review-1

(5 comments)
|Patch Set 7:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 13: Code-Review+1
|Patch Set 4:

(3 comments)
|Patch Set 5: Code-Review+1

(1 comment)

Minor comments
|Patch Set 4:

(3 comments)

Unit test and messages are missing (see http://www.ovirt.org/Engine_Adding_Messages)
|Patch Set 8:

(8 comments)
|Patch Set 11:

(2 comments)
|Patch Set 12: Code-Review+1
|Patch Set 3:

(9 comments)
|Patch Set 4: Code-Review+1

(1 comment)

Minor comment
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 2:

Need a unit test. Missing files for LocalizedEnume and error messages
|Patch Set 2:

(1 comment)
|Patch Set 2:

(3 comments)
|Patch Set 5:

(3 comments)
|Patch Set 11: Code-Review+1

(1 comment)

Minor comment
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Yes..this is an action button..not an image
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Rebased and verified
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Patch Set 2:

(4 comments)
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3:

Yes. Will do so
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

(5 comments)

Patchset to follow
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1

Rebased and verified
|Patch Set 2:

(4 comments)
|Patch Set 3: Code-Review+1

(1 comment)

One change - otherwise looks good
|Patch Set 8: Code-Review+1
|Patch Set 9: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

Rebased and verified
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(7 comments)

Patchset to follow
|Uploaded patch set 5.
|Patch Set 5:

(3 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6:

(5 comments)

Patchset to follow
|Uploaded patch set 7.
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Rebased and verified
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Addressed all comments and verified
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

Rebased and verified
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 5:

(3 comments)

Will need to add other criteria -
1)  that the volume is not used already as a destination volume. 
2) the volume's capacity is greater than equal to master volume's capacity
3) the volume's usage is 0
|Patch Set 6:

(1 comment)
|Patch Set 6:

(2 comments)
|Patch Set 6:

(2 comments)
|Patch Set 6:

(1 comment)
|Patch Set 7:

(5 comments)
|Patch Set 8:

(2 comments)
|Patch Set 9: Code-Review+1
|Patch Set 13:

(1 comment)
|Patch Set 14:

(11 comments)
|Patch Set 17:

(1 comment)
|Patch Set 18: Code-Review+1
|Patch Set 21: Code-Review+1

(2 comments)

Minor comments
|Patch Set 25: Code-Review+1
|Patch Set 2:

In case anyone else runs into this - according to https://code.google.com/p/powermock/issues/detail?id=504 - upgrading openjdk version to 1.7.0_71 fixed this for me.
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2:

(5 comments)
|Patch Set 4:

(2 comments)
|Patch Set 4:

Also update rsdl?
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Rebased and verified
|Patch Set 2: Code-Review+1
|Patch Set 3:

(2 comments)
|Uploaded patch set 1.
|Abandoned

Abandoning this as there's no real need to keep track of time since status change.
Also, geo-rep status detail will introduce a lasy sync time which is more useful
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Rebased and verified
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(2 comments)
|Patch Set 6:

(7 comments)
|Uploaded patch set 7.
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 10:

(1 comment)
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12:

(3 comments)
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1

Rebased and verified
|Uploaded patch set 28.
|Patch Set 28: Verified+1
|Patch Set 28:

(5 comments)
|Uploaded patch set 29.
|Patch Set 29: Verified+1
|Patch Set 29:

(1 comment)
|Patch Set 29:

(1 comment)
|Uploaded patch set 30.
|Patch Set 30: Verified+1
|Uploaded patch set 33.
|Patch Set 7:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 9: Code-Review+1

Minor comment- regarding patch description
|Patch Set 8:

(1 comment)
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 2: Code-Review+1

(1 comment)

Minor comment inline
|Patch Set 3: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1:

Can this be merged? Yair, could you ack this?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(8 comments)

Patchset to follow
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10:

(3 comments)
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(4 comments)
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Rebased and incorporated minor comment
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit 2f3baee1d4c8cc4f90548273d8fc105a8232b7b3
|Patch Set 6:

(6 comments)
|Patch Set 7:

Is there a query that returns list of all sessions with status?
|Patch Set 7:

(3 comments)

No, I meant a VDS command for the same
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Patch Set 8:

Can you abandon this - as this is now part of http://gerrit.ovirt.org/31799
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(2 comments)
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4:

@Yair , yes, dao added in http://gerrit.ovirt.org/#/c/30823/
|Patch Set 4:

(4 comments)
|Uploaded patch set 5.
|Patch Set 5:

Squashed the dao patch here
|Uploaded patch set 6.
|Patch Set 6:

Rebased and updated script number
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11:

(2 comments)
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-3.5 as commit a0abebc6ca0926d42e05cd849a5a469c00c9d04f
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Tested that the message mentioned in bug is not seen anymore with this fix.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

@Liron, is this patch ok to merge?
|Patch Set 4:

(2 comments)
|Patch Set 7:

Is it possible to show a recommendation that replica count should be 3 when optimize for virt store is clicked or selected?
|Patch Set 3:

Can you split to separate patches - 1 for entities and 1 for the command?
|Patch Set 4:

(4 comments)

Please implement equals and hashcode method for entities
|Patch Set 4:

(1 comment)
|Patch Set 6:

(2 comments)

Implement hashCode and equals for the objects
|Patch Set 13:

(1 comment)
|Patch Set 14: Code-Review+1
|Uploaded patch set 15.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Abandoned

This change has been squashed into http://gerrit.ovirt.org/#/c/29947/4
|Patch Set 6:

(2 comments)

Minor comments inline. Thanks!
|Patch Set 2: Code-Review+1
|Patch Set 2: (7 inline comments)

My comments inline. 
You'll also need to add rsdl_metadata.yaml and tests to BackendHostResourceTest for the glusterservice{action} methods
|Patch Set 2: (1 inline comment)


|Patch Set 8: Code-Review+1

(1 comment)

Gluster commands look good. Have a question about the LockProperties in ParametersBase class, though.
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+1
|Patch Set 12: Code-Review+1
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)

Query is used in StorageHandlingCommandBase.
In ActivateStorageDomainCommand::refreshAllVdssInPool - all vds attached to the storage pool are moved to non-operational. this should happen only for vds that supports virt service.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 5:

(3 comments)
|Patch Set 16:

(1 comment)
|Patch Set 17: Code-Review+1
|Patch Set 35:

(3 comments)
|Patch Set 36: Code-Review+1
|Patch Set 17:

(11 comments)
|Patch Set 19:

(3 comments)

minor comments
|Patch Set 22: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: -Code-Review

We need to take care of cases where bricks are offline or the brick nodes are reachable - in these cases, the bricks are not returned in &quot;gluster volume status&quot; . So compare with gluster volume info to get the correct replica pairs
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)

Will upload patchset with the changes
|Patch Set 2:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Abandoned

Wrongly submitted to 3.4
|Uploaded patch set 1.
|Abandoned

Wrongly submitted to 3.4
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Rebased and verified
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 7:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 11: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 14:

(1 comment)
|Patch Set 16:

(1 comment)
|Patch Set 17: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(3 comments)
|Patch Set 5:

(3 comments)
|Patch Set 3:

(2 comments)
|Patch Set 4: Code-Review+1
|Uploaded patch set 5.
|Patch Set 6: Code-Review+1
|Patch Set 7:

(4 comments)

Please split into separate patches..The TimeUnitconverter can be a separate patch, so could the bll and vds command related code.

thanks!
|Patch Set 12: Code-Review+1
|Uploaded patch set 14.
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5:

Rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+1

Did you check that unit tests for Rebalance status and remove brick status pass?
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

Just curious, under what scenario did you get a null brick?
|Patch Set 1:

@Gustavo, Ok..but fixing a possible NPE is nevertheless good, as it will make sure the rest of the sync job will go throuh.
Could you enhance the log message to indicate the added check as well?
|Patch Set 2: Code-Review+1

Thanks!

There's unit test failure, but I don't think it's related to this patch
|Patch Set 1:

Juan, thanks! No, we didnot think of this issue.
How do you suggest we handle it? 
Leave the api datatype as int and convert to int, rounding value?
Or is there a way to be backward compatible by introducing a new property which gives the long value?
|Patch Set 1:

Juan,

Some of the memory information for brick are already modelled under statistics. However, we found it difficult to model array of GlusterClientInfo as loosely typed statistics .

Regarding your question about users using this feature - I'm not aware of the usage. The feature was introduced as the information is available and displayed in UI.
|Patch Set 1:

Hi Juan,

For each gluster brick, client pool information is available in this way:

#

Hostname          Bytes Read   BytesWritten
--------          ---------    ------------
127.0.0.1:1013    776          676
127.0.0.1:1012    50440        51200


From what I understand, statistics are modelled as key - value pairs.
For each brick, I have multiple clients, and need to model bytes read and bytes written per client - ran into difficulties here.
(Please note, we don't treat connected clients as an entity in oVirt)

Your inputs are welcome.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Rebased and verified
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Rebased and verified
|Patch Set 1: Code-Review+1
|Uploaded patch set 3.
|Patch Set 1: Code-Review+1

Please maintain same change-id when posting to 3.4 branch
|Patch Set 1: Code-Review+1

Please confirm with Eli that scripts do not need to be re-entrant.
|Patch Set 1: Code-Review+1
|Patch Set 1:

@Shubhendu - That's handled in the method cleanUpOrphanTasks - where for tasks that gluster is not aware of, we mark the job as unknown and release any locks held on volume
|Patch Set 1: Code-Review+1
|Patch Set 13:

Shouldn't the query class get the details from database now that these values are stored in DB as part of sync job?
|Patch Set 5:

(1 comment)
|Patch Set 15:

(3 comments)
|Patch Set 17:

(1 comment)
|Patch Set 1:

(1 comment)

Please take care of unit test too
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 16:

(3 comments)
|Patch Set 3: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 5:

(2 comments)
|Patch Set 8: Code-Review+1
|Patch Set 2:

Should GlusterVolumeSizeInfo be part of GlusterVolumeAdvancedDetails? I think it would be better to separate the frequently updated data from GlusterVolumeEntity. What do you think?
|Patch Set 11: Code-Review+1
|Patch Set 12: Code-Review+1
|Patch Set 15:

(2 comments)
|Patch Set 15: Code-Review+1

(2 comments)
|Patch Set 17: Code-Review+1
|Patch Set 6: Code-Review+1

(1 comment)

Minor comment
|Patch Set 9: Code-Review+1
|Patch Set 12: Code-Review+1
|Patch Set 2:

(3 comments)
|Patch Set 4:

(4 comments)
|Patch Set 7: Code-Review+1
|Patch Set 2:

(3 comments)
|Patch Set 6: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 9: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Change to if condition added while verifying with VDSM
|Patch Set 4:

(1 comment)
|Patch Set 7: Code-Review+1
|Patch Set 2: Code-Review-1

Can be abandoned
|Patch Set 1: Code-Review-1

Can be abandoned
|Patch Set 2: (6 inline comments)

Change in entity model may be required.
|Patch Set 3: (10 inline comments)

Minor comments inline
|Patch Set 3: I would prefer that you didn't submit this

On further thought, we have ServiceType and ServiceInfo which could be used instead of ServiceMasterEntity and ServiceEntity. Can you check if there are conflicts if we use these existing entities?
|Patch Set 3:

No, can be abandoned
|Patch Set 2: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 4:

(2 comments)
|Patch Set 5:

(2 comments)
|Patch Set 5:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 9:

(2 comments)
|Patch Set 11:

(2 comments)
|Patch Set 12: Code-Review+1
|Patch Set 2: Code-Review+1

(1 comment)

A comment regarding test data- otherwise looks good.
There's some error in VdcUserTest which has caused jenkins job to fail.
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

@Yair, thanks. Missed assigning the severities - have added it now.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Code-Review+1
|Patch Set 10:

(2 comments)
|Patch Set 12: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Rebased and verified
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1

(1 comment)

Minor comment
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Patch Set 1:

Ori, the doPopulate is called only when All-Content is set to true. Since we do not have a way to return partial result and notify user of failure, this call will fail if a volume is offline
|Patch Set 1: Code-Review+1
|Patch Set 2:

How about entries in the event_map table?
|Patch Set 3: Code-Review+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 2.
|Patch Set 1:

Kanagaraj, good point. Changing status to UNKNOWN only for bricks that are in UP state.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(2 comments)
|Patch Set 3: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Rebased and verified
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1

Rebased again
|Patch Set 3: Code-Review+1

Yes, these are no longer used - updateVolume is used instead as changing replica count could also change the volume type.
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1

What about for migrate action?
|Patch Set 2:

@Ramesh, sounds good.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 13:

(3 comments)
|Patch Set 24:

(2 comments)
|Patch Set 27: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1:

It replaces the existing VdsManager
|Uploaded patch set 2.
|Patch Set 1:

Changing call to initialiseVds, so that remove and add are called on the ResourceManager
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4:

(5 comments)
|Patch Set 12:

(1 comment)
|Patch Set 13: Code-Review+1

Please rename your sql file when you rebase.
|Patch Set 1: Verified+1
|Patch Set 1:

@Sandro, As part of refactoring of URI, the timeout change is already in master.
|Patch Set 2: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1:

Good point regarding adding test cases for command. There's some refactoring needed to do that however, so would prefer to submit that as a separate patch.
|Uploaded patch set 2.
|Patch Set 1:

http://gerrit.ovirt.org/21754 - posted for testing the command
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1:

(1 comment)

Patchset to follow
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(3 comments)

@Kanagaraj, there's no change to bricks sub-tab. The waiting icon can only be displayed at the volumes tab.

Updated patchset to follow.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 1: (1 inline comment)


|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3:

Would be good to add a test case for this validation
|Patch Set 4: Code-Review+1

(1 comment)

Excellent!
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review+1

(1 comment)

Minor comment
|Patch Set 2: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

Rebased and verified
|Uploaded patch set 8.
|Patch Set 8: Verified+1

Rebased again
|Patch Set 1:

(2 comments)

Similar logic should be added to RebalanceStatus query as well.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Rebased and verified
|Patch Set 1:

Lock is obtained periodically via the sync job as well (every 5 seconds). So without a  wait, the UI would fail often which we wanted to avoid
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Omer, your concern is addressed in a separate patch - http://gerrit.ovirt.org/#/c/20647/
|Patch Set 2:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

The existing lock message is deprecated in favour of this new one. Have used this message in the dependent patches.
|Patch Set 3:

(1 comment)

Will move messages out of this patch
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Rebased and verified
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 4: Code-Review+1

You may want to test the code path for 3.2 cluster as well
|Patch Set 5: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Rebased
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(2 comments)

Updated patchset to follow
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)

Patchset to follow
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1

Rebased and verified
|Patch Set 2:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 12:

(2 comments)
|Uploaded patch set 14.
|Patch Set 14:

(1 comment)
|Patch Set 14:

(1 comment)
|Patch Set 14:

(7 comments)
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 18: Verified+1

Rebased
|Uploaded patch set 19.
|Patch Set 19: Verified+1

Rebased again
|Patch Set 1:

(3 comments)
|Patch Set 4: Code-Review+1

Yep, all comments answered!
|Patch Set 2: Code-Review+1
|Patch Set 3:

(4 comments)
|Patch Set 2:

Does migrate also delete the brick. If not, please correct the commit message
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review-1

(1 comment)

Is this patch really required? The existing remove works, AFAIK
|Patch Set 1: Verified+1
|Abandoned

Abandoned as http://gerrit.ovirt.org/#/c/20629 is merged
|Patch Set 2:

(6 comments)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 3:

What about clusters actions groups like CREATE_CLUSTER, EDIT_CLUSTER - should these be added to GlusterAdmin as well?
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Renamed script file
|Patch Set 1: Code-Review+1
|Patch Set 1:

Alon,
&gt; For dummies, can you please explain why this is needed? Why application cannot just ignore the cluster version in this case?

In gluster only mode, we only hide the data center. But all validations while creating cluster remain the same (and we do need to support multiple cluster creation with different cluster levels if user wants).
So when creating a cluster, the engine checks that cluster level &gt;= default DC level. So if default DC level is 3.3, user is unable to create a 3.2 cluster.
|Patch Set 1:

@Alon,

For upgrade, i don't think the insert data would be run again for storage_pool.
And we want to change the default DC to lowest level, so this should not be an issue
|Patch Set 2:

Yes, you are right about the upgrade from 3.2. With this approach, we will only be able to create 3.2 and 3.3 clusters, not 3.1.
We could update the default data center to 3.1 version in the script if it's an upgrade. What do you think?
|Patch Set 2:

Alon,
I personally think setting the Default DC to the lowest level is the simpler and cleaner solution.
Changing the validation for gluster only mode - requires changes in multiple flows - AddVdsGroup, UpdateVDSGroup, MoveVdsGroup, GWT layer for listing cluster levels etc and seems to be maintenance error prone.
|Patch Set 2:

Thanks, Einav for the inputs.

I will look into how we can have &quot;orphan&quot; clusters , or clusters that are the root parent in hierarchy in oVirt.

Without this, even disabling validation for DC on create cluster is a hack, IMO.
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2:

Populated hostId in remove brick status query as well
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(2 comments)
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 1: Code-Review+1

(1 comment)

Please modify commit message - otherwise looks good.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Rebased and verified with DAO tests
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4:

(2 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2:

(1 comment)

Will update patchset
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(3 comments)
|Patch Set 5:

@Ori,

&gt; 1) I don't understand the motivation for the rename  rebalance--&gt;startrebalance. I think rebalance is a better name. Is it for consistency with GUI? From API point of view this is not an acceptable argument; we want the clearest, friendliest API, regardless of how things are in the GUI.

The underlying rebalance operation in gluster is an asynchronous operation and returns a gluster task id. The rebalance operation once started can be stopped, as well as queried for status. See http://www.ovirt.org/Features/Detailed_Gluster_Volume_Asynchronous_Tasks_Management#REST_API. If we continue calling the action rebalance, need suggestions on how we can model the stop and status 


&gt; 3) Could you please elaborate about task-id? IIUC it's meant for task-monitoring, and we recently had infrastructure added for task-monitoring of 3rd parties by Eli Mesika, and that infrastructure should be used, if there's no good reason not to.

Task id in this case is a gluster task id. Eli's change allows for external task monitoring, whereas here the gluster task will be treated as internal task similar to vdsm task albeit managed by gluster.
|Patch Set 5:

Ori, 

&gt; 1) About rebalance--&gt;startrebalance:

That's a fair point. Will call it rebalance to be consistent. We would however require a stoprebalance and rebalancestatus actions.

&gt; 2) You did not reply about my comment that this change would break existing API: 

Since the existing rebalance was not working as intended, I'm assuming there are no customer scripts using this. 


&gt; 3) Ideally, we (meaning Engine) would supply infrastructure ..
In future, we could then deprecate this?
|Patch Set 6:

(2 comments)
|Patch Set 8:

(1 comment)
|Patch Set 9: Code-Review+1

(1 comment)
|Patch Set 9:

Ori, regarding your comment, can we not directly use the jobid in VdcReturnValueBase to build the job id link?
The StartRebalanceGlusterVolumeCommand is only associated with 1 job, so a list wouldn't really be required, IMO.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 4.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Verified with mvn findbugs:findbugs that NPE error is not reported on steps
|Patch Set 1:

BLL command does not support force and fixlayout options
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 1:

(3 comments)

Updated patchset to follow
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

Rebased and verified
|Patch Set 1:

(2 comments)

Updated patchset to follow
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 4:

Eli, I have checked that all unit tests pass.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

Rebased and verified
|Patch Set 2: Code-Review+1
|Patch Set 4:

(2 comments)
|Patch Set 3:

(4 comments)

Minor comments
|Patch Set 6:

(9 comments)
|Patch Set 1:

(3 comments)

Is updateBrick methods part of this patch. I think you should keep this patch limited to introducing remove all in batch
|Patch Set 2:

(2 comments)

Missing AppErrors.properties, LocalizedEnums.java, LocalizedEnums.properties, AuditLogMessages.properties (I may have missed some)
|Patch Set 1:

(4 comments)
|Patch Set 4:

(2 comments)
|Patch Set 1: Code-Review+1
|Patch Set 4:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Rebased and verified
|Patch Set 2: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

Updated commit message. Hope this clarifies the intention of patch
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Rebased and verified
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 17:

(3 comments)
|Patch Set 10:

(2 comments)

Are we having a generic command for taskStatus, instead of RebalanceStatus , RemoveBrickStatus?
|Patch Set 23: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(5 comments)

Patchset to follow
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)

Updated patchset to follow
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)

Patchset to follow post rebase
|Uploaded patch set 6.
|Patch Set 2:

(3 comments)
|Patch Set 12:

(1 comment)
|Patch Set 19: Code-Review+1

(1 comment)

One package change suggested. Otherwise looks good
|Patch Set 21: Code-Review+1
|Uploaded patch set 22.
|Patch Set 1: Code-Review+1
|Patch Set 2:

(6 comments)
|Patch Set 7:

(5 comments)
|Patch Set 9: Code-Review+1

(1 comment)

Other than a minor typo, looks good to me.
|Patch Set 16:

(1 comment)
|Patch Set 17: Code-Review+1
|Uploaded patch set 2.
|Patch Set 11:

(1 comment)
|Patch Set 12: Code-Review+1
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Uploaded patch set 19.
|Uploaded patch set 2.
|Patch Set 2: (12 inline comments)

Response inline.
Patchset to follow.
|Patch Set 3: (4 inline comments)

For zombie tasks -i.e tasks in engine but not in gluster, was planning to end job with status as unknown. Ideally, this situation should not arise if gluster can remember tasks for a configurable period of time.
|Patch Set 3: (2 inline comments)


|Patch Set 3: (1 inline comment)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 13: Code-Review+1
|Patch Set 14: Code-Review+1
|Patch Set 16: Code-Review+1
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Uploaded patch set 22.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 14.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 21.
|Patch Set 1:

Kanagaraj,
Thay cannot run in parallel as of now. But remove-brick can affect multiple bricks. Having task id stored at the brick table, can help identify which bricks are being removed as part of a task. If not, each time, will have to query vdsm task details to know this
|Patch Set 7:

(1 comment)
|Patch Set 9:

(2 comments)

You may also want to rename the script file to start with 03_04_
|Patch Set 11: Code-Review+1
|Patch Set 11:

(2 comments)

Yair, thanks for the suggestion regarding view. That got us thinking, so we will revert the view change as it is not required in every flow. Will add a separate method to populate task of volume entity
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17.
|Patch Set 18: Code-Review+1
|Uploaded patch set 25.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 10:

You can remove the VolumesListModel from this patch
|Patch Set 14: Code-Review+1
|Patch Set 15: Code-Review+1
|Patch Set 15:

(3 comments)

Patchset to follow with changes
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 18:

(1 comment)
|Patch Set 18:

(1 comment)
|Patch Set 25:

(2 comments)
|Patch Set 27: Code-Review+1
|Uploaded patch set 28.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1

+1 for gluster related sps
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: (3 inline comments)

My comments inline
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (20 inline comments)

Uploading patchset incorporating Michael's comments
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)

Thanks, Ori.
Will incorporate your change, rebase and submit a patchset.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Ori, have changed to reference status in api.xsd.
|Uploaded patch set 11.
|Patch Set 11: Verified+1

Rebased and verified
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+1

(1 comment)

Minor comment inline
|Patch Set 4:

(1 comment)

Please remove ovirt-engine-setup from your patch
|Patch Set 1: Code-Review+1

Looks good
|Patch Set 5:

Alon, we do need ApplicationMode both to be supported. What we need to change is the Default cluster created should have only virt service selected (even in application mode Both). Currently it has both virt and gluster selected.
See https://bugzilla.redhat.com/show_bug.cgi?id=988453
|Patch Set 5:

Alon, the config 'ApplicationMode' in database is getting updated to virtonly for application mode 'Both' which is not what we want.
What's required is the Default cluster that gets created during setup, should only have virt service enabled
|Patch Set 7: Code-Review+1
|Patch Set 1:

@Alon, where's engine-setup-2?
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, but someone else must approve

Thanks. This works!
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 8: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 9: (1 inline comment)

Can GlusterUtil be created under a gluster sub package - say org.ovirt.engine.core.bll.utils.gluster ?
|Patch Set 12: (2 inline comments)


|Patch Set 5:

You will need to change the rsdl_metadata.yaml file too.
|Patch Set 6:

Yair, the parameter names to add host are being changed. IIUC, for the CLI to pick these, the rsdl file has to be changed.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: (3 inline comments)

Will update patchset based on Shubhendu's comments
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: (7 inline comments)

Uploading patchset with additional validations for the new volume types
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 6: (3 inline comments)

Uploaded patchset with Kanagaraj's comments
|Patch Set 7: (1 inline comment)


|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified


|Uploaded patch set 12.
|Patch Set 12: Verified

Rebased and verified
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified

Rebased and verified
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 4: (1 inline comment)


|Patch Set 1: (3 inline comments)


|Patch Set 3: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: (1 inline comment)


|Uploaded patch set 8.
|Patch Set 8: Looks good to me, but someone else must approve


|Patch Set 1: Abandoned

Abandoning this as there's similar work being done on async tasks in 3.3
|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 2: (2 inline comments)


|Patch Set 4: Looks good to me, but someone else must approve

(1 inline comment)

Minor comment inline
|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

Alon, checked this for gluster. Looks good.
|Patch Set 1: Verified

Verified gluster bits - Import cluster flow.
|Patch Set 3: Looks good to me, but someone else must approve

Should you add these properties to clone method of VDS as well?
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

Rebased and renamed file
|Uploaded patch set 2.
|Patch Set 2: Verified

Incorporated Omer's comment and rebased
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1:

@Eli,

1. The issue is only when there's data in event_subscriber table as in bug 973712.
If there's existing data with event_up_name = GLUSTER_HOST_REMOVE_FAILED or GLUSTER_HOST_ADD_FAILED,
while trying to rename the event_up_name in event_map table, there's a FK violation. 

2. In my patch, I'm trying to address the above case. That is, there's data in the event_subscriber table for event_up_name GLUSTER_HOST_REMOVE_FAILED or GLUSTER_HOST_ADD_FAILED. I cannot update either of these tables without causing a FK violation.
Since PostgresSQL does not provide a way to disable a single FK constraint, I drop and recreate the constraints.

Regarding deleting data from event_subscriber table and recreating it, is it possible to do that without using a temp table or stored procedure variables to store the data? If so, please advise.
|Uploaded patch set 2.
|Patch Set 2: Verified

Changed the patch to avoid dropping and recreating constraint.
|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified

Rebased and verified
|Patch Set 1: (1 inline comment)

Will update patchset based on Yair's comments
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: (5 inline comments)

Shubhendu, my comments inline
|Patch Set 3: (6 inline comments)


|Patch Set 4: (5 inline comments)


|Patch Set 10: Looks good to me, but someone else must approve

(2 inline comments)

Minor comments inline
|Patch Set 2:

VdcBllError, AbstractGlusterBrokerCommand, frontend/VdsmErrors.properties, GlusterServicesReturnForXmlRpc should be part of this patch
|Patch Set 5: Looks good to me, but someone else must approve

(1 inline comment)

Minor comment inline
|Patch Set 9: Looks good to me, but someone else must approve


|Patch Set 3:

Will this refactoring also address supporting different kinds of tasks in addition to SPMAsyncTask?
|Patch Set 3:

Yaniv, Yair - thanks for clarifying. Will watch out for updates.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (2 inline comments)

Minor comments inline
|Patch Set 5: Looks good to me, but someone else must approve

(1 inline comment)

Minor suggestion inline
|Patch Set 9: (3 inline comments)

Also, please add unit tests for the 2 new dao methods
|Patch Set 19: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified

Rebased and verified
|Patch Set 1: Rebased
|Patch Set 2: Verified


|Patch Set 1: (3 inline comments)

Thanks, Omer, for your comments. Will update patchset
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Rebased
|Uploaded patch set 4.
|Patch Set 4: Verified

Rebased and verified
|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

Incorporated Kanagaraj's comments
|Patch Set 1: Verified


|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

Rebased and verified
|Patch Set 3: (2 inline comments)

Updated patchset to follow
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 1: (1 inline comment)

Reply to comment inline. Updated patchset to follow.
|Patch Set 1: (3 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified

Rebased and verified
|Patch Set 5: (7 inline comments)

Thanks, Omer. Patchset to follow
|Uploaded patch set 6.
|Patch Set 6: Verified


|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified

Incorporated Shubhendu's comment and changed ActionType to ADD.
|Uploaded patch set 9.
|Patch Set 9: Verified

Had missed a file in the previous commit. Resubmitted and verified
|Patch Set 1: Verified


|Patch Set 1: (4 inline comments)

Kanagaraj, the commit message is inline with the implementation. Some of the comments in the file are misleading and I will correct those.
|Uploaded patch set 2.
|Patch Set 2: (2 inline comments)


|Uploaded patch set 3.
|Patch Set 3: (1 inline comment)


|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 4: (1 inline comment)

Uploaded patchset
|Patch Set 5: Verified


|Patch Set 2:

@Oved, Reviewed gluster file. Looks good to me.

thanks!
sahina
|Patch Set 4: (11 inline comments)

Shireesh, you seem to have covered most cases! Some comments regarding readability of code.
|Patch Set 5: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified

Rebased and verified.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2:

Rebased and uploaded patchset to fix earlier rebasing issues
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3:

Thanks Kanagaraj
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Rebased
|Patch Set 6: Verified


|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 1:

Thanks, Kanagaraj &amp; Shubhendu. Will update patchset.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Rebased
|Patch Set 8: Verified


|Patch Set 1: Verified


|Patch Set 1: No score

@Yair, there's already a test case for getGlusterHookContent
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: (2 inline comments)


|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5: (4 inline comments)


|Uploaded patch set 7.
|Patch Set 7: (1 inline comment)


|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 9: (2 inline comments)

Patchset to follow
|Uploaded patch set 11.
|Patch Set 11: Verified


|Uploaded patch set 12.
|Patch Set 12: Verified


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Rebased
|Patch Set 3: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 3: (2 inline comments)


|Patch Set 5:

Verified following cmd works after this patch was applied.
add brick --cluster-identifier &quot;GlusterC&quot; --glustervolume-identifier &quot;test&quot; --brick &quot;brick.server_id=c46e99c3-f83a-4031-9f18-f8ef459aae92,brick.brick_dir=/tmp/br2&quot; --brick &quot;brick.server_id=c46e99c3-f83a-4031-9f18-f8ef459aae92,brick.brick_dir=/tmp/br4&quot;
|Patch Set 5: Verified


|Uploaded patch set 2.
|Patch Set 2: (7 inline comments)

Patchset to follow
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: (21 inline comments)

Thanks Shireesh for the detailed review and comments. Have modified and tested code, patchset to follow
|Uploaded patch set 5.
|Patch Set 5: Rebased
|Patch Set 6: Verified


|Patch Set 6: (3 inline comments)


|Uploaded patch set 7.
|Patch Set 7: (1 inline comment)


|Patch Set 1: Verified

Verified that following command works after applying patch http://gerrit.ovirt.org/#/c/13756/ to cli

add brick --cluster-identifier &quot;GlusterC&quot; --glustervolume-identifier &quot;test&quot; --brick &quot;brick.server_id=c46e99c3-f83a-4031-9f18-f8ef459aae92,brick.brick_dir=/tmp/br2&quot; --brick &quot;brick.server_id=c46e99c3-f83a-4031-9f18-f8ef459aae92,brick.brick_dir=/tmp/br4&quot;
|Uploaded patch set 2.
|Patch Set 1: (2 inline comments)

Uploading new patchset
|Uploaded patch set 3.
|Patch Set 3: Verified

verified -
add brick --cluster-identifier &quot;GlusterC&quot; --glustervolume-identifier &quot;Repl&quot; --brick &quot;brick.server_id=c46e99c3-f83a-4031-9f18-f8ef459aae92,brick.brick_dir=/tmp/rpl11&quot; --brick &quot;brick.server_id=c46e99c3-f83a-4031-9f18-f8ef459aae92,brick.brick_dir=/tmp/rpl12&quot; --replica_count 2
|Uploaded patch set 4.
|Patch Set 4: Verified

@Michael, removed the redundant bricks qualifier for replica_count and stripe_count
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve

Please ignore previous comment.
Looks good to me.
|Patch Set 1: Rebased
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2:

could you use OneUuidReturnForXmlRpc?
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

@Shireesh - The entries are present in org/ovirt/engine/ui/frontend/VdsmErrors.java. The VdsmErrors.properties entries are not required if VdsmErrors.java has been updated.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Patch Set 8: Verified


|Uploaded patch set 2.
|Patch Set 2: (2 inline comments)


|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 3: Rebased
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2:

@Alon, as discussed - no, this will not affect the REST API
|Patch Set 2: (3 inline comments)


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Rebased
|Patch Set 5: Verified


|Patch Set 1: Verified

Verified that bootstrapping host with this change starts glusterd service
|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Patch Set 8: Verified


|Uploaded patch set 9.
|Patch Set 9: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 1: Verified

Verified that it fixes the problems with tests taking forever.
|Patch Set 3: (6 inline comments)


|Patch Set 4: (3 inline comments)


|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: (4 inline comments)

Kanagaraj, thanks for catching those issues!
Will upload another patchset
|Patch Set 10: (1 inline comment)

@Yair - Will try and split this into different patches. I'm yet to figure out git's possibilities still!
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: (2 inline comments)

Patchset to follow
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: (2 inline comments)

Thanks again! Will resubmit and hoping to cover all scenarios this time.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17: Verified


|Uploaded patch set 18.
|Uploaded patch set 19.
|Patch Set 19: (9 inline comments)

Thanks, Shireesh! Patchset to follow.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Patch Set 20: (4 inline comments)

Missed these comments. Uploading another patchset
|Uploaded patch set 22.
|Patch Set 22: Verified


|Uploaded patch set 23.
|Patch Set 23: Verified


|Uploaded patch set 2.
|Patch Set 2: Rebased
|Patch Set 3: Verified


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 1: (1 inline comment)

The AuditLogMessages entry is part of http://gerrit.ovirt.org/#/c/10906/ - when I split into multiple patches, added it where it was used.

Regarding messages for DISABLE, will add these as part of patch where disable hook vds command is invoked.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 6.
|Patch Set 6: Verified


|Patch Set 1:

You could add a test with duplicate bricks in CreateGlusterVolumeCommandTest.java
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3:

In AuditLogableBase class, getter methods seem to be modifying the member variables - see getUserId(), getVmTemplateRefId() etc
I think the setter methods should be changed to do this, and getter should then just return the variable.
So like Shireesh suggested - change setVds() to also set mVdsId = value.getId() and getVdsId() would then just return mVdsId.
|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: (3 inline comments)

Some suggestions inline.
|Patch Set 1: (1 inline comment)


|Patch Set 3: (1 inline comment)

A unit test suggestion otherwise looks good to me.
|Patch Set 4: Looks good to me, but someone else must approve

AsynDataProvider and VolumeListModel changes - would these be part of this patch too?
|Patch Set 5: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 12: (1 inline comment)


|Patch Set 9: (1 inline comment)

Minor suggestion inline
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (7 inline comments)

Patch Set to follow with feedback changes
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Uploaded patch set 3.
|Patch Set 3: (3 inline comments)

Thanks, Michael. Shall add statistics for usage details of brick.
|Uploaded patch set 4.
|Patch Set 4: (3 inline comments)

Thanks for the feedback, Michael. My responses inline.

Will update the rsdl definition and re-submit patch.
|Uploaded patch set 5.
|Patch Set 4: (1 inline comment)


|Uploaded patch set 6.
|Patch Set 6: Verified

Verified with 3 and 4 level deep urls - /api/vms/{id}/disks/{id}/permissions
and /api/clusters/{id}/glustervolumes/{id}/bricks/{id}/statistics
|Uploaded patch set 7.
|Patch Set 7: Verified

Added retrieving Brick advanced details in bricks collection if All-Content header is true, update rsdl_metadata and unit tests.

Rebased and verified
|Patch Set 7: (1 inline comment)


|Patch Set 7: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Abandoned

Wrong commit
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Uploaded patch set 3.
|Patch Set 3:

removed redundant ()
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: (3 inline comments)


|Patch Set 9: (9 inline comments)

See inline comments related to db tables
|Patch Set 11: (3 inline comments)


|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 16: (6 inline comments)


|Uploaded patch set 18.
|Uploaded patch set 19.
|Patch Set 19: (4 inline comments)

Thanks, Kanagaraj. 
Updated patchset to follow
|Uploaded patch set 20.
|Patch Set 20: (21 inline comments)

Updated patchset to follow.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Patch Set 22: Verified

Removed TWS and renamed parameter v_returnAll to v_includeContent in get*Hook stored procedures
|Patch Set 22: (1 inline comment)


|Patch Set 22: (1 inline comment)


|Uploaded patch set 23.
|Patch Set 23: Verified


|Uploaded patch set 24.
|Patch Set 24: Verified

Rebased and verified
|Patch Set 1: (2 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified

Verified with CmdExecFailed error from vdsm while creating volume
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3:

Uploaded to wrong topic by mistake. submitting again
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 1: (1 inline comment)

In case no sort is used, entity default sort is used twice - like  &quot;order by name asc, name asc&quot;. Are we ok with this?
|Patch Set 5: (2 inline comments)

Also, there are similar methods in VDSHandler - isVdsWithSameNameExistStatic, isisVdsWithSameHostExistStatic
Can these be used instead of VdsDao calls?
|Patch Set 8: (3 inline comments)

Minor : equals comparison parameter may be incorrect. Please check UpdateVdsCommand
|Patch Set 10: Looks good to me, but someone else must approve


|Patch Set 12: Looks good to me, but someone else must approve


|Patch Set 1: (3 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve

General question- should we work with VdsStatic or Vds objects?
|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

Minor renaming test method comment
|Patch Set 2: (1 inline comment)

Can GetUpHostListByCluster be reused?
|Patch Set 3: (1 inline comment)

Looks good. Minor comment inline
|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

Minor suggestion inline
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (2 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)

Name of class seems to imply it extends AuditLogDirector which is not the case. It's more like a util/wrapper class. Maybe name could be changed.
Also, can the methods be static. We don't really need an instance of the class to log messages.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

Minor comment - constant could be on the left side of equals comparison
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 8: (1 inline comment)


|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 7:

(7 comments)
|Patch Set 7:

(1 comment)
|Patch Set 8:

(3 comments)
|Patch Set 11:

(6 comments)
|Patch Set 11:

(1 comment)
|Patch Set 12:

(3 comments)

Minor comments
|Patch Set 16: Code-Review+1

(2 comments)

Minor comments
|Patch Set 16:

(2 comments)
|Patch Set 20: Code-Review+1
|Patch Set 25: Code-Review+2
|Patch Set 3:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 3:

(1 comment)
|Patch Set 4: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 5: Code-Review+2
|Patch Set 2:

(4 comments)
|Patch Set 3: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 6:

(4 comments)
|Patch Set 7: Code-Review+1
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+1

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 4:

(1 comment)

Please add a geo-rep dao test
|Patch Set 6:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4:

(1 comment)
|Patch Set 16: Code-Review+1

(1 comment)

Minor comment
|Patch Set 18: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 1:

(5 comments)
|Patch Set 1:

&gt; please do not put any specific Gluster fields in audit_log , do
 &gt; that by adding another table with the audit_log_id as a key and add
 &gt; you additional columns there
 &gt; If you want to gather the full information, you can do that using a
 &gt; view

Eli, we already have gluster reference in audit_log. Is a separate table required for brick too, as this is another building block entity for gluster?
|Patch Set 1:

(2 comments)
|Patch Set 2:

(2 comments)
|Patch Set 3: Code-Review+1

(1 comment)

Minor comment
|Patch Set 4: Code-Review+1
|Patch Set 4:

Oved, Eli - any comments?
|Patch Set 5: Code-Review+1
|Patch Set 7: Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)

minor comment
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 5: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(5 comments)
|Uploaded patch set 4.
|Patch Set 4:

(4 comments)

&gt; (3 comments)
 &gt; 
 &gt; NetworkModel.setSupportBridgesReportByVDSM- in case the bridges
 &gt; report is not supported by vdsm, the network is automatically
 &gt; marked as vm network. IIUC, this behavior should be changed to take
 &gt; place only if(!isSupportBridgesReportByVDSM &amp;&amp; virtOnlyMode)

I think we should leave this as it is, since if VDSM reports it cannot support bridgeless network, then we cannot create a non-VM network.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 6:

Can you update the enum as well?
|Patch Set 7: Code-Review+1

(1 comment)

minor
|Patch Set 8: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 3: Code-Review+2 Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+1

Does it make sense to move the Supported check to a method in GlusterUtils for these features?

Otherwise looks good
|Patch Set 5: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(6 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(4 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 7: Verified+1

findbugs job error seems like an infra issue
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Code-Review+2
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9: Code-Review+2
|Patch Set 2: Code-Review+1

(3 comments)

minor comments
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 6:

(1 comment)
|Patch Set 8:

(6 comments)
|Patch Set 19: Code-Review+1

(1 comment)
|Patch Set 20: Code-Review+1
|Patch Set 21: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 1: Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1
|Patch Set 3: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 10:

(7 comments)
|Patch Set 12:

(12 comments)
|Patch Set 16:

(4 comments)
|Patch Set 18:

(6 comments)

Please add a dao test for new method
|Patch Set 19: Code-Review+1

(2 comments)

Minor comments
|Patch Set 20: Code-Review+1
|Patch Set 20: Code-Review+2
|Patch Set 21: Patch Set 20 was rebased
|Patch Set 21: Continuous-Integration+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Continuous-Integration+1
|Patch Set 11:

(1 comment)
|Patch Set 16:

(1 comment)
|Patch Set 16:

(1 comment)
|Patch Set 8:

(5 comments)
|Patch Set 10:

(2 comments)
|Patch Set 13: Code-Review+1
|Patch Set 3: Code-Review+2 Continuous-Integration+1
|Patch Set 3: Code-Review+2 Continuous-Integration+1
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 5: Code-Review+1

Yair, can this be merged please?
|Patch Set 7:

(1 comment)
|Patch Set 7: Code-Review+1

(1 comment)
|Patch Set 9: Code-Review+2
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 7: Code-Review+2
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 4: Code-Review+1

Please format code
|Patch Set 8: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+2
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1:

While the lazy initializing of GlusterSyncJob is fine, I have not been able to reproduce the unit test failures this patch is addressing (ran dao tests locally) Could you point me to any failed jobs that this patch addresses?
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+1

(1 comment)

Minor comment
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Continuous-Integration+1
|Patch Set 2:

(2 comments)
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 9: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 10:

Tim, can you rebase this patch?
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Continuous-Integration+1
|Patch Set 3:

(2 comments)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1:

(1 comment)

If gluster processes are stopped when a host is moved to maintenance, shouldn't these be started when host is activated?
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4:

(4 comments)
|Patch Set 5: Code-Review+1
|Patch Set 10: Code-Review+1
|Patch Set 11: Code-Review+2
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 9:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 9: Code-Review+1

Ack from me - can fix possible duplicates in server list as separate patch
|Patch Set 9:

(1 comment)
|Patch Set 3:

(3 comments)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+1

(1 comment)

Minor comment
|Patch Set 3: Code-Review+2
|Patch Set 9: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

@Martin - any ideas on differentiating Virt only checkers in GetClusterEditWarningsQuery?
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Patch Set 4:

&gt; &gt; Arik: can a valid cluster have cpuName == null?
 &gt; 
 &gt; not with virt-service, but it seems that without virt-service it
 &gt; can be with cpuName=null

Then looks like a bug with ui validation? With current master, and virt service enabled, cpuname is allowed to be passed as null.
|Patch Set 4: Verified+1

There does seem to be a UI issue in edit cluster, which does not enforce CPU name in certain flows (enabling virt service on existing cluster). Leaving this null check here to be safe.
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

It's only a wrapper around Dao method. Is test required in this case too?
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Abandoned

Wrongly submitted patch
|Uploaded patch set 1.
|Abandoned

Wrongly submitted patch
|Uploaded patch set 1.
|Abandoned

Not relevant.
|Patch Set 6:

(1 comment)

Sorry - i'd thought i had commented on this - but it was stuck in drafts!
|Patch Set 14: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3:

Dan, can this be merged?
|Patch Set 3:

&gt; (1 comment)
 &gt; 
 &gt; Seems too big and not clear if all the changes are related to what
 &gt; described in the commit message.
 &gt; 
 &gt; Also the description is not very clear, what was the previous
 &gt; behavior, what was wrong with it, and what is the new behavior.
 &gt; 
 &gt; Who is going to maintain this code?

Will post a patch with updated commit message to make it clearer.
The gluster team will continue to maintain this code.
|Patch Set 5: Code-Review+1
|Patch Set 7: Code-Review+1

Nir, could you merge?
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Abandoned

Abandoning these as renaming APIs post 3.6 release will lead to compat issues
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2 Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Verified in &quot;Gluster&quot; and &quot;Both&quot; app modes
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)

Can you add audit log messages in GlusterSyncJob when a volume with UNKNOWN type is added?
|Patch Set 3:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+1
|Patch Set 7: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(5 comments)
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 11:

(3 comments)

Minor comments
|Patch Set 13: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1

gluster code change ack
|Patch Set 1: Code-Review+1

&gt; Sahina is anybody still using this?

No, can be removed.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Allon, could you ack?
Missed posting to 3.6 branch earlier
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2

Tal, can you merge this?
|Uploaded patch set 1.
|Patch Set 1:

&gt; Do u need to back port the patch https://gerrit.ovirt.org/#/c/50724/2
 &gt; also.

Yes..will backport this as well
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 2:

(4 comments)
|Patch Set 1:

(3 comments)
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+1
|Patch Set 6:

What are we achieving with this patch?

1. We're trying to mount whenever the host comes online. If volume has already been mounted too, it will try to mount again and that would log a failure too?

2. If mount fails, there's no way to recover/remount

Due to these 2, snapshotting feature cannot reliably assume that all nodes will have meta-volume mounted from engine. Given this, is it better to assume that meta-volume would be mounted as a prerequisite?
|Patch Set 1:

(2 comments)

Minor comments
|Patch Set 2:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 5: Code-Review+1

(1 comment)

Minor suggestion
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 7:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 7:

(1 comment)
|Patch Set 7:

&gt; Why? we need this, and we are *not* blocked on libvirt. We can use
 &gt; DNS name returning multiple addresses instead of providing backup
 &gt; servers.

Or even &quot;localhost&quot;, if running on hyperconverged setup
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review-1

I think this breaks backword compatibility
|Patch Set 1:

(1 comment)
|Patch Set 3:

(3 comments)
|Patch Set 1: Code-Review+1
|Patch Set 12: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 10: Code-Review+1

(9 comments)

Very thorough patch!

Minor comments inline
|Patch Set 11: Code-Review+1
|Patch Set 1: Code-Review-1

This patch can be abandoned. Renaming APIs post 3.6 release will lead to compat issues
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9:

(5 comments)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1

Added a dropdown to choose bricks similar to add-bricks dialog
|Uploaded patch set 14.
|Patch Set 13:

(3 comments)
|Uploaded patch set 15.
|Patch Set 15: Verified+1

Rebased , fixed a UI issue and verified
|Patch Set 15:

(1 comment)
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Patch Set 17: Patch Set 16 was rebased
|Patch Set 17: Code-Review+2
|Patch Set 18: Patch Set 17 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 2:

(3 comments)
|Patch Set 6: Code-Review+1

(1 comment)

A suggestion inline
|Patch Set 7:

(1 comment)
|Patch Set 10:

(2 comments)

Junit test for GlusterHostValidator?

Should heal check be triggered before validating the unsynced entry count? - is there a way for user to trigger this check?
|Patch Set 10:

(1 comment)
|Patch Set 11: Code-Review+1

(3 comments)

Minor comments
|Patch Set 11:

Also add a AppErrors.properties for userportal
|Patch Set 17: Code-Review+1
|Patch Set 18: Patch Set 17 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 1:

While verifying this, realized that this code path is not called in case of gluster hosts. Resending patch fixing this
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(3 comments)
|Patch Set 3: -Verified
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4:

While working on this patch, it seems like the fix for bug could end up causing functional issues while the bug itself seems a harmless cosmetic one. I'm not sure if it's worth the effort on this bug. Liron, Allon, what do you guys think?
|Abandoned

Abandoning as per comments in referenced bug
|Patch Set 19:

(2 comments)
|Patch Set 19:

Ramesh, could you verify the gluster host flows
|Patch Set 23: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 5:

(1 comment)
|Patch Set 7: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 6:

(1 comment)
|Patch Set 8: Code-Review+2
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 13: Patch Set 12 was rebased
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 2:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 10: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Code-Review+1
|Patch Set 2: -Code-Review Verified+1
|Patch Set 2:

(4 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 2:

(1 comment)

&gt; (1 comment)
 &gt; 
 &gt; This patch is targeted to master branch, whereas master code isn't
 &gt; supposed to support 3.5 version. So I'm not sure that we need this
 &gt; change in the master branch at all.

Do we support merging patches in branch if not merged in master?
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+2 Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

Abandoning this as refering to a downstream product
|Patch Set 6:

(1 comment)
|Patch Set 8: Code-Review+1
|Patch Set 2:

This feature was introduced to solve issue of granularity of feature supported check. Current granularity is at cluster version level - and does not allow introduction of features in between.
If this is still a valid requirement, we would need this code.
|Patch Set 1:

(1 comment)
|Patch Set 7:

(4 comments)
|Patch Set 9:

(1 comment)
|Patch Set 10: Code-Review+1
|Patch Set 11: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 3.
|Patch Set 3:

&gt; We may have to change the logic for getRandomUpServer(). We should
 &gt; not be running gluster commands on a host which is not part of the
 &gt; gluster cluster.

I can either use the ExternalStatus or introduce a peerstatus in GlusterServer to do this - what do you think?
|Patch Set 3:

&gt; I am not sure about what do you meant by ExternalStatus. We may
 &gt; have to introduce peerStatus in DB as well and use that for getting
 &gt; randomUpServer.
 &gt; 
 &gt; We already have PeerStatus in GlusterServerInfo. We have to update
 &gt; the ClusterUtils.getRandomUpServer() with the peer status.

VDS has an ExternalStatus - i think maintained in case external apps that send events need to notify VDS/UI of issues. Sending another patch with PeerStatus introduced
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 2: Code-Review+1

(1 comment)
|Patch Set 2:

Ramesh, can you abandon this since we already have https://gerrit.ovirt.org/#/c/41899/
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

Allon, can u review again - had to add entries in frontend classes. Verified that it works now
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1: Code-Review+1
|Patch Set 3:

(6 comments)
|Patch Set 3:

(1 comment)
|Patch Set 7:

(3 comments)
|Patch Set 8: Code-Review+1
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 3:

(2 comments)
|Patch Set 7:

(2 comments)
|Patch Set 8: Code-Review+1
|Patch Set 9: Code-Review+2
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 10: Continuous-Integration+1
|Patch Set 10:

Adding CI ack as a minor rebase
|Patch Set 3:

(4 comments)
|Patch Set 4:

(1 comment)
|Patch Set 8: Code-Review+1
|Patch Set 10: Code-Review+2
|Patch Set 11: Patch Set 10 was rebased
|Patch Set 7: Code-Review+2
|Patch Set 8: Code-Review+1
|Patch Set 10: Patch Set 9 was rebased
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)

&gt; We are changing the defaults (Volume Type and Replica Count) for
 &gt; non hc mode as well. I hope that is the intended change.

yes, that is the intended change!
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

(3 comments)
|Uploaded patch set 3.
|Patch Set 3:

&gt; still I see dependency on glusterfs-server from vdsm-gluster. Are
 &gt; we planning to remove that after merging this patch in engine?
 &gt; 
 &gt; https://github.com/oVirt/vdsm/blob/master/vdsm.spec.in

Yes - see https://bugzilla.redhat.com/show_bug.cgi?id=1225728#c14
|Patch Set 3:

(1 comment)
|Patch Set 3:

(2 comments)
|Abandoned

Abandoning this. We're not removing glusterfs-server dependencies from vdsm-gluster and hence this patch is no longer required.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4:

(6 comments)
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Corrected issues found while verifying in this patchset
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9: Code-Review+2
|Patch Set 9:

Restoring previous acks - as minor changes as part of rebase
|Patch Set 10: Patch Set 9 was rebased
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(3 comments)
|Patch Set 2:

(2 comments)
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4: Commit message was updated.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

verified on el7, x86
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+1
|Patch Set 4:

Tal, can you merge?
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2

Tal, can you merge?
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Code-Review+1

(1 comment)

Minor comment
|Uploaded patch set 1.
|Patch Set 1:

(8 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Continuous-Integration+1
|Patch Set 6: Code-Review+1
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

&gt; Is that happens also on master branch or only with this patch?
 &gt; https://gerrit.ovirt.org/#/c/50108/

This is on master. I haven't applied the https://gerrit.ovirt.org/#/c/50108/ patch
|Patch Set 1:

&gt; Thanks, so i'm a bit confused - when there isn't master domain this
 &gt; method shouldn't be even called because the dc should be
 &gt; uninitialized.
 &gt; Can you share what's your dc status and how did we get to this
 &gt; situation?
 &gt; 
 &gt; thanks!

DC status is marked as UP - when I debugged it seemed to be changing it to UP status based on poolStatusDeterminedByHostsStatus in IrsProxyData::updatingTimerElapsed. That was another problem that I had, where the DC status seems to be in some kind of race with host status - but wasn't able to spend time on that. I was testing this on master with a 3.6 cluster compat version.
|Patch Set 1:

&gt; poolStatusDeterminedByHostsStatus is true only if the config value
 &gt; is edited manually (its true only for data center without spm), so
 &gt; unless it was changed manually it shouldn't be true.

You're right. I recreated by DB and do not face this issue. I don't recollect having tweaked values in DB but probably did. Will abandon this patch.
|Abandoned

Abandoning as per comments
|Patch Set 1: Code-Review+1

+1 for gluster
|Patch Set 2: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 3: Code-Review+1
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1:

(4 comments)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7: Code-Review+2
|Patch Set 8: Patch Set 7 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Moti, Tal - can u ack this for 4.0 branch?
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Corrected script numbering post rebase
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 2:

(6 comments)
|Patch Set 10:

(5 comments)
|Patch Set 10:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 10:

(2 comments)
|Patch Set 11: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1 -Verified
|Patch Set 3: Code-Review+1

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review-1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

@Moti, @Ramesh - can you guys review again. I had to change the code while verifying
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 4: Code-Review+2

Increasing score based on acks
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 5:

&gt; (1 comment)

Adding to what Ramesh said - /rhgs is a recommended mount point and not mandatory that all users mount the bricks here.The mount point can be changed at any time via engine configuration option
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

Thanks, Piotr!
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Tal, can you merge?
|Patch Set 1:

Moti, can you ack?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 4:

&gt; Sahina, this is merged now, and will be available with the next
 &gt; release of the model, which I will do next week. Does it need to be
 &gt; backported to the 4.0 branch? That is needed if you intend to use
 &gt; this new value in version 4.0.z of the engine.

Yes, it is needed in 4.0 branch.
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch model_4.0 as commit 8ecddff9ad5897ac48ab4c2a1f9e3b567875342d
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review+1
|Patch Set 8: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 6: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

(1 comment)

&gt; We should also update the fixtures.xml with the new field

I will add it.
|Uploaded patch set 9.
|Patch Set 9:

(1 comment)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11:

Rebased and renumbered script only
|Patch Set 11: Code-Review+2 Verified+1

Acking based on previous ack from Maor
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(3 comments)
|Patch Set 5:

(1 comment)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Patch Set 8:

(1 comment)
|Patch Set 8:

(2 comments)
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(3 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8:

(7 comments)
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 9:

(4 comments)
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 12: Verified+1
|Patch Set 12:

(1 comment)
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Patch Set 14: Patch Set 13 was rebased
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified-1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(3 comments)
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Patch Set 8:

(2 comments)
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 12: Verified+1
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(3 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 15:

(7 comments)
|Patch Set 15:

(18 comments)
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17:

(2 comments)

Also changed to use SerialChildExecutingCommand
|Patch Set 17: Verified+1
|Patch Set 17:

(2 comments)
|Uploaded patch set 18.
|Patch Set 18: Verified+1
|Uploaded patch set 19.
|Patch Set 19:

(3 comments)
|Uploaded patch set 20.
|Patch Set 20: Verified+1
|Patch Set 19:

(2 comments)
|Uploaded patch set 21.
|Patch Set 21: Verified+1
|Uploaded patch set 22: Patch Set 21 was rebased.
|Patch Set 23: Patch Set 22 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(10 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 15: Verified+1
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19.
|Patch Set 19: Verified+1
|Patch Set 19:

(1 comment)
|Uploaded patch set 20.
|Patch Set 20: Verified+1
|Uploaded patch set 21: Patch Set 20 was rebased.
|Patch Set 21:

(7 comments)
|Uploaded patch set 22.
|Patch Set 22:

(6 comments)
|Uploaded patch set 23.
|Patch Set 23: Verified+1
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25.
|Patch Set 25: Verified+1
|Uploaded patch set 26.
|Patch Set 26:

(6 comments)
|Uploaded patch set 27.
|Patch Set 27:

(2 comments)
|Uploaded patch set 28.
|Patch Set 28: Verified+1
|Patch Set 28:

(2 comments)
|Patch Set 28: Code-Review+2
|Patch Set 29: Patch Set 28 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

&gt; @Sahina - who reviewed, UI-wise, the sub-tab? Eldan?

No reviews yet - feature page too did not get feedback
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18.
|Patch Set 18: Verified+1

(2 comments)
|Uploaded patch set 19.
|Patch Set 19: Verified+1
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 21.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Patch Set 22: Verified+1
|Uploaded patch set 23: Patch Set 22 was rebased.
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 25.
|Uploaded patch set 26: Patch Set 25 was rebased.
|Uploaded patch set 27: Patch Set 26 was rebased.
|Patch Set 27: Verified+1
|Patch Set 27:

(20 comments)
|Uploaded patch set 28.
|Patch Set 28: Verified+1
|Uploaded patch set 29.
|Patch Set 29: Code-Review+2 Verified+1

Rebase only..adding back the acks
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

(8 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(27 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Patch Set 13:

(1 comment)
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19: Patch Set 18 was rebased.
|Patch Set 19:

&gt; Question, what does DR stand for, maybe we should spell it out for
 &gt; people not familiar with the acronym?

DR = Disaster Recovery, In the messages and title shown to users have tried to avoid DR, we call this as Remote Data Synchronization.
|Uploaded patch set 20.
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Patch Set 22:

(1 comment)
|Patch Set 22: Verified+1
|Uploaded patch set 23.
|Patch Set 23: Verified+1
|Uploaded patch set 24: Patch Set 23 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14: Code-Review+2
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Patch Set 18: Patch Set 17 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Rebased and renumbered script
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Code-Review+2
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

@Tal, can you merge?
|Patch Set 1: Code-Review+2
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 1:

(1 comment)

&gt; @Sahina - what version of Gluster should we use in 4.0 and above?
 &gt; 3.8, right?

4.0 was tested with glusterfs 3.7, 4.1 and above uses 3.8
|Patch Set 8: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+1
|Patch Set 1:

(4 comments)
|Patch Set 2:

(3 comments)
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 8:

&gt; Also, to run it in CI, we'll need to add some files under
 &gt; 'automation' dir.
 &gt; 
 &gt; We can help with that, let us know when you are ready to add it.

While verifying with master, I ran into what I think is a regression where HE setup fails to deploy. Once that is fixed, I'll verify and we can add to CI
|Patch Set 8:

&gt; to keep it standard like other suites, I suggest to rename to
 &gt; hc-basic-suite-master if we're testing master here.

Done
|Uploaded patch set 8.
|Patch Set 7:

(1 comment)
|Uploaded patch set 7.
|Patch Set 6:

(7 comments)
|Patch Set 6:

I've verified that the HE is deployed and the tests work. I do run into issue however that HE VM is down with Detail: &quot;Unknown&quot; - but on restarting via hosted-engine cli command, everything is back to normal. Not sure why the hosted-engine deployment results in &quot;Bad&quot; vm status.
|Uploaded patch set 6.
|Uploaded patch set 5.
|Patch Set 2:

(2 comments)

&gt; (2 comments)
 &gt; 
 &gt; - I think the storage VM can use far less memory. 1GB is certainly
 &gt; enough.
Yep, will update
 &gt; - If possible, I'd try to use as many test from other suites
 &gt; (master or 4.0 for example). 004 should be exactly the same, most
 &gt; likely?

How are tests reused now?. link to test in another suite or create a copy here?
|Patch Set 2:

&gt; (1 comment)
 &gt; 
 &gt; Doesn't look like the Gluster team is interested. Will delete by
 &gt; next week.

No, we're interested :). Just took a while to get to it.
|Uploaded patch set 2.
|Patch Set 13:

&gt; Are you sure this patch does not depend on qemu fix for supporting
 &gt; relative paths when using libgfapi? I don't see here the spec
 &gt; change requiring the qemu version fixing this issue, and we cannot
 &gt; merge a patch that does not work on released packages.

qemu does support relative paths in the current released packages though there's a bug in certain flows. I will update the package dependency in related patch https://gerrit.ovirt.org/73585
|Uploaded patch set 13.
|Patch Set 12:

(12 comments)

Addressed some of the comments. The refactoring of patch is beyond my understanding of vdsm storage code, would appreciate some help here.
|Patch Set 12: Verified+1
|Uploaded patch set 12.
|Patch Set 11:

&gt; Build Failed
 &gt; 
 &gt; http://jenkins.ovirt.org/job/vdsm_master_check-patch-el7-x86_64/7822/
 &gt; : FAILURE
 &gt; 
 &gt; http://jenkins.ovirt.org/job/vdsm_master_check-patch-fc25-x86_64/1957/
 &gt; : SUCCESS

FAIL: test_send_receive (storage_mailbox_test.TestMailbox) does not seem related to this patch
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 9.
|Patch Set 8:

(6 comments)
|Patch Set 8:

Ping - reviews please
|Patch Set 8: Verified+1
|Uploaded patch set 8.
|Uploaded patch set 7.
|Uploaded patch set 6.
|Patch Set 5:

&gt; &gt; &gt; &gt; For network disks, how do we pass the protocol and host
 &gt; &gt; &gt; parameters
 &gt; &gt; &gt; &gt; along with name? Should we change instead to an index based
 &gt; &gt; &gt; &gt; approach - devicename[1] ?
 &gt; &gt; &gt;
 &gt; &gt; &gt; Sahina, is the libvirt team involved in this?
 &gt; &gt;
 &gt; &gt; No - I've been checking with only the vdsm team
 &gt; 
 &gt; Have now posted query to libvirt-users ml too

As per https://bugzilla.redhat.com/show_bug.cgi?id=1397870#c1 - &quot;You should use the disk target name &quot;vda&quot; or the index into the backing chain using &quot;vda[1]&quot; (according to the 'index' field in the backing store) to address the individual parts of the backing chain.&quot;
How does changing this affect other disk types? Allon, Nir, Ala?
|Patch Set 5:

&gt; &gt; &gt; For network disks, how do we pass the protocol and host
 &gt; &gt; parameters
 &gt; &gt; &gt; along with name? Should we change instead to an index based
 &gt; &gt; &gt; approach - devicename[1] ?
 &gt; &gt;
 &gt; &gt; Sahina, is the libvirt team involved in this?
 &gt; 
 &gt; No - I've been checking with only the vdsm team

Have now posted query to libvirt-users ml too
|Patch Set 5:

&gt; &gt; For network disks, how do we pass the protocol and host
 &gt; parameters
 &gt; &gt; along with name? Should we change instead to an index based
 &gt; &gt; approach - devicename[1] ?
 &gt; 
 &gt; Sahina, is the libvirt team involved in this?

No - I've been checking with only the vdsm team
|Patch Set 5:

For network disks, how do we pass the protocol and host parameters along with name? Should we change instead to an index based approach - devicename[1] ?
|Patch Set 5:

With this patch, the backing volume chain from domain xml is as below, however live merge(blockcommit) with path &quot;vmstore/912d9062-3881-479b-a6e5-7b074a252cb6/images/27b0cbcb-4dfd-4eeb-8ab0-
8fda54a6d8a4/027a3b37-77d4-4fa9-8173-b1fedba1176c&quot; gives an error &quot;libvirtError: invalid argument: No device found for specified path&quot;

    
    &lt;disk type='network' device='disk' snapshot='no'&gt;
        &lt;driver name='qemu' type='qcow2' cache='none' error_policy='stop' io='threads'/&gt;
        &lt;source protocol='gluster' name='vmstore/912d9062-3881-479b-a6e5-7b074a252cb6/images/27b0cbcb-4dfd-4eeb-8ab0-8fda54a6d8a4/027a3b37-77d4-4fa9-8173-b1fedba1176c'&gt;
          &lt;host name='10.70.37.28' port='0'/&gt;
        &lt;/source&gt;
        &lt;backingStore type='network' index='1'&gt;
          &lt;format type='qcow2'/&gt;
          &lt;source protocol='gluster' name='vmstore/912d9062-3881-479b-a6e5-7b074a252cb6/images/27b0cbcb-4dfd-4eeb-8ab0-8fda54a6d8a4/d4c23ec6-20ce-4a2f-9b32-ca91e65a114a'&gt;
            &lt;host name='10.70.37.28' port='0'/&gt;
          &lt;/source&gt;
          &lt;backingStore type='network' index='2'&gt;
            &lt;format type='raw'/&gt;
            &lt;source protocol='gluster' name='vmstore/912d9062-3881-479b-a6e5-7b074a252cb6/images/27b0cbcb-4dfd-4eeb-8ab0-8fda54a6d8a4/f5098809-e719-404b-8d80-3f824f4333a2'&gt;
              &lt;host name='10.70.37.28' port='0'/&gt;
            &lt;/source&gt;
            &lt;backingStore/&gt;
          &lt;/backingStore&gt;
        &lt;/backingStore&gt;
        &lt;target dev='vda' bus='virtio'/&gt;
        &lt;serial&gt;27b0cbcb-4dfd-4eeb-8ab0-8fda54a6d8a4&lt;/serial&gt;
        &lt;boot order='2'/&gt;
        &lt;alias name='virtio-disk0'/&gt;
        &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/&gt;
    &lt;/disk&gt;
|Uploaded patch set 5.
|Uploaded patch set 4.
|Uploaded patch set 3.
|Patch Set 1:

(3 comments)
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+2 Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 5:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+1

(1 comment)
|Patch Set 4: Code-Review+1

(1 comment)
|Patch Set 3:

(2 comments)
|Patch Set 4: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1

Please confirm that HC setup with NetworkManager enabled works.
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1:

(5 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 3:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified-1

The 4.1 appliance has 4.2 cluster level as default - hence the Add Host fails.
|Uploaded patch set 5.
|Patch Set 5:

(4 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 1:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5: Code-Review+2
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 4:

(3 comments)
|Patch Set 4:

(3 comments)
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 5: Code-Review+1

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1:

Build error seem to be a timeout error
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 16:

(2 comments)
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

&gt; Does this means we have to update this file whenever we upgrade the
 &gt; gdeploy in the copr repo.

Ideally the repo containing gdeploy rpm should be configured in the reposync-config.repo. I tried adding the copr repo there, but for some reason the repo was not synced locally
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

&gt; Do we need to back port this for 4.1 as well?

Yes - I have added bz to patch so that this gets tracked
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+1
|Patch Set 3:

Can you verify this?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Tal, can you merge
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

This bug has all the acks. Can you merge this?
|Patch Set 1:

Devyani, can you abandon this as https://gerrit.ovirt.org/#/c/75343/ seems to be the relevant patch?
|Patch Set 1: Code-Review+1
|Patch Set 1:

Ryan, can this be merged to master?
|Patch Set 4: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1:

ci please build
|Patch Set 1: Verified+1
|Patch Set 1:

How do I get gerrit-hooks to run again?
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Code-Review+2
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 2: Code-Review+2
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+2

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(2 comments)
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+1

(1 comment)

Minor nit in comment. Otherwise looks good
|Patch Set 9:

(1 comment)

sorry, I missed this earlier.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Verified that this fixes the appliance image size check issue. The CI is failing with firewalld issue not related to this patch
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3:

ci please build
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Can we merge this?
|Patch Set 1:

Is this patch needed? Seems to be a dupe of https://gerrit.ovirt.org/#/c/77082?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

&gt; Build Failed
 &gt; 
 &gt; http://jenkins.ovirt.org/job/ovirt-system-tests_master_check-patch-el7-x86_64/933/
 &gt; : FAILURE

This error seems related to the fluentd rpms
|Patch Set 1: Code-Review+1
|What is the behavior if user puts value in let's say timeo field, and then again puts timeo as part of the mount options which in my understanding is a freetext field with no validation?
Taking it further - what will happen if in both places the value of timeo will be different? Which will be applied? Will the mount fail? will the user be notified with a clear error?
I suggest verifying that the 3 separate options we expose do not appear in the mount options field again, or at least if they appear in both places - that their values are the same (and then there's no need to append them again)
|I don't mind that such a parser will be added in a separate patch, however since in NFS case we already explicitly provide to users a possibility to fill 3 very specific mount options (and as I noted in another comment - this is confusing with the new mount options field), it will be non generic handling anyway to handle validation of those separate fields against the generic mount options new field (new = for NFS).
|Yes, that makes sense, it's just that there are no backend changes in the current patch, hence I commented on the file closest one with backend objects.
|IMHO it's misleading to the user to see in UI (and REST) in NFS the 3 separate mount options as we display today (retrans, timeo, etc.), and then next to them them put a field named &quot;mount options&quot; - the other 3 are mount options as well. In POSIX the problem doesn't exist as there's only one field there named &quot;mount options&quot;.
I would at least name it &quot;additional mount options&quot;, or &quot;extra mount options&quot;.
|The findbugs plugin is already defined in this pom, why it needs to be redefined again? Please explain.
|The other declaration of findbugs plugin in this pom uses a variable &quot;${findbugs.version}&quot;, please reuse it here too if indeed additional declaration of the plugin is needed. (see my other comment above)
|Where is the &quot;session.executionRootDirectory&quot; parameter defined? Sorry, didn't find it, never saw it used in other ovirt pom files...
|Does defining here an exclude file that points to security exclude configuration file will override other existing find bugs exclude filters? (non security ones) 
Please explain.
Thanks!
|Why is there a need to add it here if it wasn't previously declared?
|did you miss this one?
or if it's GWT related, why change the above class EmptyColumn?
|enigne --&gt; engine
|whatever you decide is OK with me.
|just a suggestion to align terminology - below in the next 
modified comment you wrote database scheme (maybe schema? not sure)
here you just wrote database.
So I would suggest to use same terminology all through the document.
|for below - database schema structure/content upgrade? 
for above - same database schema.
|Done
|ok, but will be done in another patch.
|Done
|ok good :)
|if parseInt method will throw NumberFormatException, is it treated properly?
|When adding stateless vm --&gt; When adding a stateless vm
|if using latest version --&gt; if using the latest version of a template
|Can the latest template be null? Even if there are no different template versions (only one version exists), the base version be returned in this case, no?
|Why is this line needed? Isn't the exact same id extracted from the same place when the templateIdToUse is populated for the first time? (the line where it is declared)
It looks as if the same value is overriden with same value - why?
(perhaps I'm missing something here...)
|is it testing enough the versions feature if always the version is set to 1 for all test cases?
|I'd probably name it something like &quot;getLatestTemplateVersion&quot;.
|is &quot;inchain&quot; necessary? what does it represent? (why &quot;latest&quot; is not enough - isn't it clear?)
|fieldd --&gt; fields

maybe call templateVersion --&gt; templateVersionNumber?
|why not use primitive int?
|I see this is the only change in the test.
Is the DB change (addition and population of new fields) tested somewhere in the DAO tests?
|isn't it better to put integer default 1? null for number is not so good IMHO...

and maybe better to name the field template_version_number?
|this is a confusing expression... the same object named baseTemplate is taken here, extract from it both baseTemplateId and id (that sound the same since the object is itself named baseTemplate)
so it's not very clear what this code is trying to do.
|maybe rename the baseTemplate variable to baseTemplateSelectedByUser? (or proposed by user) this way it will show that this is not the absolute base template that exists in the system, but only validation of the input from the user.
what do you think?
|why it can't be? it's not clear logic wise. please explain.
|I'd change the message as follows:

1. Template version cannot be used ---&gt; This template version cannot be used....

2. for other template version --&gt; for another template's version.

3. It 's not clear from the message why it cannot be used as base, perhaps an explanation will ease on user not to make this mistake again.
|Wouldn't go with nested.
The &quot;Version of template cannot be used to create template version&quot; sounds a bit puzzling...
Perhaps &quot;only the first template version can be selected as the base template&quot; ? This way it will be clear which template should the user always select
|Is this relevant for userportal at all?
|I agree, but this is not the purpose and not the scope of this patch :)
|Done
|Usually we also add the exact bug code/pattern name to exclude, in order not to miss other warnings that might come up in the same class.
However since this class is not part of ovirt code, IMHO it's not necessary in this case.
|Did you verify that the findbugs warning is indeed resolved?
Because IMHO this code change does not solve it.
The warning is about redundant check against null, and here it still exists.
Please see the description:
http://jenkins.ovirt.org/job/ovirt_engine_master_find_bugs/5967/findbugsResult/new/source.11791/#442
|No problem, if you verified that it's resolved, then it's OK :)
|Done
|cool :)
link to next patch?
|dada --&gt; data
BTW, while you are at it, there's a findbug related to the fact that this member starts with a capital letter, consider fixing it as well?
|missing &quot;m&quot; in GlusterVolueDao... :)
|I think that if a method is removed, the explanation about it not starting with lowercase letter is not very relevant, it just makes a long commit message. IMHO just state that removing an unused method, and that &quot;on the way&quot; it cleans a findbug warning of type XYZ
|As I wrote in other removing patch, since the method is removed, it is less relevant to write so many details about the naming conventions...
|please fix it here as well (though generally speaking mentioning method name in log is redundant since log4j prints it anyway, but that is not relevant to your change)
|this is a mistake - this patch fixes runQuery method as the rest of the commit message states below, please fix.
|I would add (here and in all other similar patches) that this is findbugs error code, not everyone knows where this constant is coming from.
|good catch, thanks
|title is misleading, the changed class is DateUtils and not DateTime
|XmlNamspace--&gt;XmlNamespace
|it might, but it's not the purpose of the patch and I prefer not to touch it.
|it's findbugs, not bugzilla :)
|maybe just remove it all together? it's dead code, no?
|private constructor that is protected? interesting :)
|that condition will be always true, because the connections were extracted based on that field, so you won't get here something that has a different value in that field...
and I think that the previous condition was ok because it served both create new connection and update connection.
the condition that checks if 1 connection returned - in case of update, we have connection id for the input, so the condition evaluation is ok. in case of new connection creation, if something already exists in db, and we don't have id, then it also will return false because empty id doesn't equal the id from db.
|worth to mention perhaps in javadoc that this method not work well for iscsi... because multiple domains can use the same connection (connection=target)
|not correct results for iscsi... better to rename it
|rename to something like newlocalConn
|connection id is empty at this point because clients are not supposed to send conn id, it is supposed to be generated by the server, and since duplication check is done as part of canDo, the id hasn't been generated yet, so probably this check as it's written right now will not do the work.
|I think a more simple flow can be done here for local connection:
1. get connections by connection path (like for file domains) supplied to this command.
2. if there is any conn with same path (or more than one ) - get their ids, and with them do the dc validation via the storage pool api similar to what you did.
because if vds is not specified (and it can be not specified starting 3.3 - see Allon's changes on this issue), then this validation will be useless in most cases.
|this method is unused, so it's better to remove it rather than rename.
|Done
|Done
|I think it's because the file was previously edited in dos.
Looks like dos2unix should be run on this file and recommit it  - like in this patch:
http://gerrit.ovirt.org/#/c/16020/
After this current patch of checkstyle is merged, I will try to re-edit this particular file with dos2unix and commit, ok?
|this item is not very clear - what exact issue? what's the symptom and is it a bug? and how temporary is the solution introduced in this patch?
|is there an error message set somewhere so user can understand what's wrong?
|is it possible this property is empty? what is the default value? (especially for entities that exist in db since previous versions).
|same comment as above - won't this fail from older entities?
|why is the snapshot id next to the snapshot? I mean - why isn't it hierarchically contained in the snapshot object?
What happens in the currently proposed structure if you have a snapshot element, but not snapshot_id?
|in which command is this error used? I didn't see it in any of the commands in this patch (perhaps missed it?)
|no need to write the name of the view twice. it's meaningless.
|Why is this considered an internal error? And what information does user get about it/what user can do about this?
|It's not clear who is &quot;we&quot;, and not sure it's important in the context of the commit message :)
I suggest to just start the sentence with &quot;refactor ImportVmCommand...&quot;
Also, there are more commands that are influenced in this patch. Please mention them as well in commit message/explain why it is ok to change their logic too.
|double space between &quot;domains&quot; and &quot;from&quot;
|we are really need--&gt;we really need
|shouldn't this catch part also make the cando method fail by calling failCanDoAction with appropriate error message?
|Why proceed to executeCommand if this part fails, and count on the fact that it will probably fail?
|I recommend to add more information to the message - name/id of the target storage domain, template disk id/name. Otherwise it's just a general message in the log there's nothing much to do about it.
|stDomainId is a very unclear name. You probably meant storageDomainId ? - it will be more clear to name it like that.
|it seems here that you are going over all images in the for loop when it's not really needed - it's enough to have even one to set it to false , and it doesn't enter the if statement anymore. why not just exit after the first one sets the result to false?
|no need here to iterate when the res is set to true the first time - it's time to exit the for loop and stop all the iterations.
|the variable name is not clear - this is the return value of the vds command, its type is VDSReturn value - why not call it something like vdsCommandReturnValue?
|1. Why not extract the error message returned from vdsm and return it instead of a general RuntimeException?

2. Anyway, please add logging of the exception to allow a more clear troubleshooting.
You cannot count on the fact nor control that every caller of this method in every command will log it, it's best to log it at the moment the exception occurs.
|1. seems that your code formatter is not tuned. statics usually come before regular imports...

2. This is a test for addVmCommand, however the command itself was not changed in this patch. Is that on purpose?
|no, it was my own question not related to findbugs :)
|is this casting to Disk object safe? isn't it better to first check &quot;instance of&quot; , and if not, return false?
|don't know if you did it in another patch or not, but would you remove the _ before matrix? it's so not java style...
|class name is printed by log4j configuration anyway. why print it twice?
|see my comment in AddDiskToVmCommandTest.java related to this dao
|this method is not used. it causes a findbug warning because it starts with uppercase. instead of renaming it and then removing it in separate patch - why waste time? I don't see any reason to separate it.
|It is definitely related to the patch. Patch cleans findbugs warnings. This particular change cleans a findbug warning about ambiguous 2 methods - getStorageDomainStaticDAO and getStorageDomainStaticDao. Since one of them is not used, I removed the leftovers from tests too - and it will both remove unused method and solve the ambiguous 2 methods findbug.
|it becomes too long and cuts it
|because it has several usecases where it needs to go over all the connections.
|IFF --&gt; if?
|if I understand the code correctly, it is syncing luns info regardless of the isSuccess value.
Perhaps it's not clear from the code, however what it does here is this:
isSuccess = returnValue.getSucceeded(); --&gt; checks if the call to vdsm succeeded. it does NOT indicate whether the connection to storage succeeded.
the second assignment to isSuccess (inside the if statement) is the actual check whether the connection succeeded to storage.
So you'd probably need to wrap the luns syncing in an if statement to save the syncing if connect to storage failed.
|please add details regarding which storage connection/conn id is this, and perhaps some info regarding the mismatch (optional) - otherwise it's not a very helpful log message...
|there's no need because of @Before of junit4. actually I would go further and call it init, but I don't think it's worth to touch the patch just for that.
|the method is self explanatory. the value was supposed to be true, but it wasn't. I don't see the need in further explanations.
|Here you are using VAR_ACTION_DETACH,  but in the attach command you are using VAR_ACTION_ATTACH_TO.
I checked the file, and for some reason there are 2 attach (VAR_ACTION_ATTACH, VAR__ACTION__ATTACH_ACTION_TO) and 2 detach (VAR_ACTION_DETACH, VAR__ACTION__DETACH_ACTION_TO) actions with same value ($action attach, $action detach) in VdcBllMessages - any idea why?
I know this duplicity is not related to this patch, but at least I suggest using symmetrical VAR_ACTION_XYZ here and in the attach command.
|I don't think that adding this validator as part of this specific patch is a good idea.
I would do it as a separate patch and move all relevant commands of storage connection management to use it.
Otherwise - it's not really required by the current patch functionality, and there's code duplication among the rest of the commands.
What do you think?
|iscsi should be all in upperCase (except for the first i).

And the name of the method is misleading. I suggest naming it isConnAndDomainOfSameType.
I would pass here as parameters storage domain, connection and the required storage type and check if both connection and domain are of the same type.
This way it can be reused by all storage types.
|this won't work. unattached is the domain shared status, the status will return unknown.
|this is valid only for block domains. what about file domains?
|Currently we don't have permissions in other connections management actions.
Is it good to introduce it only here?
|maybe the type ErrorType.CONFLICT is more appropriate?
|as I mentioned in other file, the add/delete are imho misleading - we are not creating nor deleting any entity, just relation between 2 entities. User might think we add/delete a new storage connection while we are just reusing an existing one.
|as I mentioned, I don't really like calling it an &quot;add&quot; - it's not adding any new entity to the system. But let's hear other opinions as well...
|I would mention that is relevant only for block domains
|just an idea - how about adding $domainName and specifying the domain name?
|probably better change it to : core,restapi.
also, there's a typo in GetVmOvfConfigurationQuery - it's written Conifugration
|this code seems very similar to the one in GetVmConfigurationBySnapshotQuery (isn't the same dao method called?).
why is there a need in a new query - what is different? 
or at least some code reuse will be suitable here...
|where is this class member defined?
|what happens if there is no ovf configuration - what does the user get? 200 OK? error?
|I don't like the &quot;for&quot; name, it doesn't sound correct. But I changed it per your request.
|Done
|Yes it is. fixtures.xml has the previous id (ending with f) as nfs connection.
Clearly, it shouldn't (and cannot) have a lun.  And this is a lunDaoTest :)
Thus, I fixed the id here to use a correct iscsi connection (ending with e) from fixtures.xml.
|Done
|Done
|Done
|yep, you're right
|Done
|Done
|Done
|Done
|Done
|Done
|the constants are of a specific connection that are used by several existing tests.
Here it's a different usecase involving a storage domain id.
Don't see any need to add new constant just for that. 
Currently it just checks for more usecases, that's all.
|Done
|Done
|yes, don't know how it got here :)
|Done
|Done
|Done
|Done
|it's easier to troubleshoot/debug when it's separated instead of being inline.
|Done
|Done
|because the method you mentioned returns just boolean succeeded/not, so the fault/exception message cannot be extracted like I do here.
|the name of the dump file can be changed. the definition of the property is path or filename.

Also please see here:

http://hg.openjdk.java.net/jdk6/jdk6/hotspot/rev/17c778814856
|@Alon, the default file name for the dump if I remember correctly is (unless specified differently) java_pid&lt;pid&gt;.hprof
And in any case when going over logs it's helpful to know from logs that oom happened, so user will know to look for the dumps.
|1.@Ofer -out of memory should not happen weekly. if it happens weekly, compression is the least of the engine's problems, but I guess that weekly compression doesn't do harm... :)

2.@Alon -since the dump files are going to stay there -are the existing ones going to be recompressed every week/month or only the newly added ones?
 
3.@Ofer -dumps can be pretty big -(hundreds of MB, 1.5 GB), etc - depends on how much mem is configured for java process, and at which point it crashed. (it could crash on perm size and not reach its maximum heap size)

4.@Liran -which log in engine will indicate the occurence of out of memory exception and the name of the dump created? worth to document where to search for it for troubleshooting, especially since the exception also indicates the symptom - whether oom was in heap,perm, etc...
|I assume it can be done by changing the HeapDumpPath property to contain the naming convention of the file (right now it is set to contain just the destination folder), and supplying it some variable containing the date. Liran?
|the dump files are of type .hprof, not .log, so why is rotation of this kind done on the folder? it will never contain .log files.
|No, it does not represent collection. it's the name of the bll object representing a single connection. (I agree that the class name is not good, but it's there for several versions by now)
If I had to guess why it was named like this, I would assume it was taken from the exact same name of the db table that stores those connections.
|agreed, will add validation that storage object ( storageConnectionFromUser) is not null, it should solve the comments below.
|no, but I will add the feature page.
|ok will change
|ok will change
|what happens here if storageDomain returned one row above as null? (when getting it from db from getStorageDomainDAO())
|this method checks among other checks if domain is active, which is not exactly an image validation.
Please consider renaming the method.
|The casting to DiskImage is done here twice .
Since this is a downcasting operation, it is an overhead in runtime.
- please do it only once.
|I suggest to add validation that disconnect method is never called, but it's up to you.
|I suggest to add validation that disconnect method is never called, but it's up to you.
|I agree - to be done in separate patch.
you commented on add and update, need to consider delete as well, no?
|done for both items you mentioned
|this is a part in REST infrastructure where I have no control - it loads constructor in reflection and searches for ctor with Guid.
|since the backend patch was merged today - adding this handling to this patch as well.
|I added addLinks as you noticed was missing, what other comment do you mean?
|will handle it in next patchset.
|moved it a bit in hierarchy of abstract classes so it can be reused here.
|which annotation to remove? pathparam? override? and why remove it?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|you mean vfsType... Seems like there is, based on Sharad's patch .please see 
44622b8b98128a776ecf2c1238acd1eca19fc193
|I cannot undo formatting for only part of the file now.
yes, it's cleaner without it, but it's better to leave it.
|Done
|Done
|I am adding a new relation - just doing it first at the creation of the map, and then adding the existing one to keep backwards compatibility. (the order is per Allon's suggestion)
|Done
|BaseResource contains fields that are irrelevant for storage connection - name, description, comment - there are no such fields there.
Thus the separation, so restructuring as per your suggestion is not the best solution.
The usage of BaseResource and Storage objects remained because of the need in backwards compatibility using that structure as part of storage domains resource, especially in iscsi case.
|StorageServerConnectoin id is of format Guid, however for some historical reason is represented in backend by String - that is the reason for it.
|In order to update something in storage connection, currently ( in the future it will change) user is required to enter the vdsm host details with which the validations of the connection to storage will be performed  -because update of storage connection not just updates it in db, but it requires some work on vdsm side as well.
Also, there is no description field in connection. Users mostly want to update things related to the connection itself - address/port etc.
I can remove validation of address and type, however host is currently required.
|1. see my comment above regarding required host.

2. the connections resource it not inheriting from actionableResource.
Also there are other resources that also not reusing it - see domainsresource, vmsresource.  I agree it would be nicer, however this is a cross change to change hierarchy/make that method available for all inheritance, and not something to be done in this patch.
|Done
|I understand your comment regarding addLinks missing, added it.
However what populate method are you referring to?
I checked BackendStorageDomainsResource - mapCollection method, it has addlinks, but no populate method. 
Please explain.
|1. agree.

2. yes, address field is relevant for all storage types.
|will solve it with validation of host id/name
|Yes, I know WHY it is called twice, however in the current test infrastructure mocking behavior it must be taken care of  &quot;manually&quot; as I did below.
|Done
|Done
|added body (will be updated a second sig in another patch) - not urgent for this one.
added corelation id
|Done
|Done
|it's mandatory for some types, not all.
|Done
|Done
|let's leave it, it's already here :)
|connect/disconnect actions done on vdsm side.
in the remove case, the disconnect is relevant of course.
Check BuildStructFromConnectionListObject method in ConnectStorageServerVDSCommand
|Done
|I really don't like inlining. debugging nightmare...
|Not exactly.
For file domains, the connection field &quot;formula&quot; in bll is converting from REST like this:
connection.getAddress()+&quot;:&quot;+connection.getPath()
|Done
|Done
|yes you're right, but it's already here, so let's leave it. will try better in future code.
|what is the change here? just formatting?
I don't mind leaving it as it is now here and in other places in this patch, but you always request to remove formatting noise from patches, so...
|commit message doesn't mention the storagePoolId change, it's important to state it there as well.
|missing handling of extracting the correct status here
|no need to set it twice. it can be just set in the last line of the method.
|I would add a test when vdsid is null, and not Guid.empty - just to be on the same side the command works fine
|why is this change in this patch - is it ok to move this logic? 
how is it related to extracting some logic to external method?
|Adding a new lun/removing an old lun - this should be done based on user input, not automatically in the background, right?
|But the user doesn't know what VG is. From user's point of view, in the current UI - he selected the luns, and he should be the one to control/manage them. Otherwise you are taking that capability away, it can lead to lack of confidence using the system if the system is adding/removing the luns on its own without user's ability to influence it.. 
I think that the UI should be changed in the case you want the system to manage the luns.
|It is incorrect to define this member here for several reasons:
1. The command itself loads the relevant domain/domains from db - why it should be passed in parameters? 
2. There can be several domains using a connection (in block domains when it represents a target), thus a single storage domain id is incorrect for block domains.
2. The user is going to be able to update a connection regardless of storage domains existence, so asking for this parameter in the parameters is not relevant for some use cases.
|Why not use existing enum VolumeFormat?
|Why is there a need in enum for a single value?
|Where/how the user can perform this action? (UI? REST?)

And will those glance domains displayed in webadmin along with all the rest of storage domains?
|What the storage string represents? the glance provider? From which db table/entity it's taken?

As Allon also mentioned, a similar method exists in StorageDomainDao - public Any reason not to use it instead of adding new procedure/dao methods?
|if both OpenstackNetworkProviderProperties and OpenstackImageProviderProperties have the same property tenantName - perhaps it's better to create a base class that contains this property.
It will be also more clean to set it once in the mapAdditionalProperties method below.
|it's  creation--&gt; its creation.

It seems from the patch that this is only backend support with no UI - correct me if I misunderstood.
If this is the case, this patch contains new code that can't be used. Please add either UI or REST relevant code so the new functionality can be used.

Does this patch contain code that assumes that there is a new api that doesn't exist in all vdsm versions? It can create a problem for existing users with older vdsm.

if this patch is related to bug or RFE (enhancement request), please state the relevant bugzilla id in commit message.

Also, the patch is completely missing unitests - please add.
|You also need to override the method setActionMessageParameters and set there the correct VAR__ACTION and VAR_TYPE so in case of failure a correct message will be displayed. (It fills the &quot;Cannot ${action} ${type}.&quot; message  that is added in AppErrors.properties)
|Why are class properties of parameters class set here? If this is something that is never filled by the calling side to the command ,why not define them and use just inside the command class itself?  It can be confusing to the caller to see this object and wrongly conclude he needs to fill those parameters. If there is actually a need to fill those parameters from outside, then there are wrongly overriden here, and it's better to have a validation + appropriate error should be thrown if they are missing.
|if the command ended with failure, why is the setSucceeded true?
Also, what are the implications of a failed extend size - is the disk in &quot;healthy&quot; condition after this operation?
|instead of using addCanDoActionMessage and return false, you can use failCanDoAction method that does both.
|I would rename the method to imply that it does comparison of new/old sizes. Something like validateNewSize or is new size legal.
|instead of using addCanDoActionMessage and return false, you can use failCanDoAction method that does both.
|Why is there a need for new class just to keep the size?
|Why is the permission group set to false? Doesn't it need permissions to change image size?
|why are there storagePoolId , imageGroupId and storageDomainId members in class, but they are not set in this constructor?
|I'd rename the parameter to explain more clear id of what entity is this.

Also, please add unitests to the new dao function.
|There are 2 more AppErrors.properties files where the same message should be written as well.
Also, there is AppErrors.java file where it should be added too.

And what about the resize vm failure messages that are added in audit log? Shouldn't it be here too? Please explain.
|I think it's better to say &quot;Failed to extend size of disk &lt;diskId&gt;&quot; , otherwise it sounds like the diskId is the size. And why here username is mentioned in the message, but not in the vm failure message (the other new message) ?
|This patch adds functionality to UI as well from what I see in the patch code. Please mention that in the commit message in the title (add webadmin or userportal) and also please explain where in UI there was a change/addition.
|why isn't there a need in image id?
|perhaps isImageStatusValid would be a better name. Because if the method returns false, with current name it implies it didn't perform the validation...
|consider moving all setters of diskToUpdate to a separate method for more readable code.
Perhaps it's also better to prepare the object diskToUpdate before the transaction is opened and not when it's already alive.
|it looks very similar to ExtendImageSizeVDSCommandParameters. Is there really a need in both of them? How about some code reuse - is it possible here?
|why is this change of logic, and how it's related to size extend?
|Sorry, something I don't understand here, maybe because there was no detailed explanation about the UI change in the commit message.
Why there is both size and sizeExtend entities here?
|Why user can select a not supported format? Meaning - why he has this option available in the first place?
|What is illegal disk state - what kind of state is this?
|resigning --&gt;resign
previous--&gt;previously
|Why isn't the ResetIrs command called here directly? SpmStopOnIrs just calls to resetIrs command, so why is this delegation needed?
|does it always succeed?
|why is this changed to public? was it problematic as protected?
|consider changing preferredHost to preferredHostId
|why the preffered host needs &quot;zeroing&quot; (setting to null) ?
|Host should start with lowercase since it is in the middle of a sentence. same applies to other messages below.
|It's not very clear what that means to user or which action should be taken. maybe something should be added like &quot;please wait till they complete, or cancel the tasks ${taskNames}&quot; ?
|convertToSpm
|maybe it's better to rename the UICommand, because the getter method now looks strange &quot;getSet....&quot; - it's confusing whether it's a getter or a setter.
|same here as above - &quot;setSet&quot; is strange...
|Yes but for a public project it's not a very well known myth :)
|That sounds strange &quot;removing a vitaly&quot; :)
You probably meant to say removing a comment?
|well, I wrote &quot;perhaps consider&quot;, I'm not insisting it should be done now. :)
|Also, I don't understand why this class is needed at all.
It only holds storage type which can be extracted from the StorageServerConnections object anyway. Perhaps consider removing it at all.
|sounds like a good option
|1. Please specify here the full name of the class because there is actually another class named StorageServerConnections - so it's confusing to the readers.

2. I think that renaming is a good idea in this case, however I am not sure that the new name is the right one, because the parameters class actually holds a list of connections and not a single connection ( it also extends GetStorageConnectionsListVDSCommandParameters that implies it can have several connections). So I think another name reflecting what it contains will be better.
|I don't understand why both the enum and this boolean are needed.
Isn't &quot;never&quot; in enum is actually shouldAttemptToRevert = false?
|why the member name is in plural ? actually its name is a bit more clear than the enum name itself - please consider improving enum's name...
|the name of the variable is not correct: it has operations in plural, and Db should be DB. 
Also, is the EXECUTION value just default ? is it OK that someone can override it with the &quot;setXXX&quot; method?
|It's not very clear why this enum is needed - please elaborate (and its name and names of the values are not very clear too)
Also, which code is checking the value of the enum and deciding based on it when to run it? (maybe it's there but I just missed it)
|yep you're right. moved to use only the &quot;domains&quot; member for all cases.
|Done
|Unfortunately, this method was added in commons 3.2, while we are using 3.1
http://upstream-tracker.org/java/compat_reports/commons-collections/3.1_to_3.2/src_compat_report.html
|Done
|nice idea, not in this patch IMO.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|will do. next patchset locks domains and connection. will add lun disks and VMs in the patchset after that one.
|Done
|sure
|re equalsIgnoreCase - since this is a string comparison, I don't want to take chances with lowercase/uppercase - they supposed to be same id regardless of the characters case. 
re - boolean statement - sure, I will change it.
|you probably mean java.util.UUID , as there is no java.lang.UUID ... :)
Also, please pay attention that in ovirt-engine project there's a copy of java.util.UUID (not clear from which jdk version)
so please check which exact UUID is used by the class loader if you count on some specific behavior...
The class is here (as you can see, in wrong package location)
ovirt-engine/frontend/webadmin/modules/gwt-extension/src/main/java/org/ovirt/engine/ui/uioverrides/java/util
|getOtbject--&gt;getObject
|pls pay attention that script name is 3.2 , while here you insert values 3.3
|why the second nested &quot;if&quot; is not just part of the upper &quot;if&quot; (the one that checks type) with a &amp;&amp; condition between them?
And is it safe to cast it here to DiskImage? What if the casting fails?
|isn't  an error message missing here? what will be displayed to user in this case?
|why isn't the disk type check taken care of in canDoAction? so executeCommand should not be concerned about this check?
and while at it - is this exception logged somewhere? Also, perhaps consider adding to the exception the disk id? otherwise it's too generic and not explaining where is the problem.
|not very recommended to have static init blocks. Here the logic is not very complicated, but in general keep in mind that having a potential exception in such block is very hard to detect, and can harm the classloading process.
|not a very standard name, and not clear what this method does. (what is forValue?)
it better be getXYZ
|It doesn't mean it's a good example that it exists in the engine :)
And I don't see any need to follow a non standard practice which is also unclear.
|Isn't there somewhere constants for the properties names such as disk_id, disk_alias, etc? (I don't know )
If yes - it's better to move using them
|the name itself of the constant should reflect what it does - is it a key? a category?
otherwise it looks a bit strange &quot;alignment=alignment&quot;
|IMHO there is no need to stick with something that is not good.
|the first &quot;m&quot; - if it represents &quot;member&quot; , it's not standard in java.
The member's name is not very clear , it should reflect what it contains.
|The name of the member is not very clear.
Also, if the first letter &quot;m&quot; stands for &quot;member&quot; - this is not per java standard, so it's redundant.
|I agree, it should be a good cleanup. consider adding it to hackaton list?
|why here is getParent.getParent twice? Isn't it just one level of hierarchy?
|if the message is printed in loop for each problematic member (and not exiting the loop after the first one), won't it just print the same general message several times?
I'd rather either print it only once, or at least inject the member name to the message if applicable.
|Why the new Guid here has become Guid.empty? In some other places in code it became Guid.newGuid().
|becuase --&gt; because
|does it work with private constructor in runtime? is webadmin working correctly in web mode (not while debug)?
|isn't it a bit strange to get a byte array, convert it to string and then convert it to uuid? Why the conversion is not straight from byte arr to guid? Historical reasons or technical restriction?
|prefered should be with one 'f'. and probably with 2 'r' :)
|Members of class should come first thing before constructors or method in Java proper style.
|if it's possible, I'd add here the new SPM host name.
|it's clearer to call it &quot;StopSPM&quot; and not &quot;SPMStop&quot;
|member should be at top of the class, and prefered is with one 'f'.
|Suggesting &quot;Set as SPM&quot; instead &quot;Make SPM&quot;
|this is not a very clear English  : &quot;The host ... SPM priority is never&quot;. I would suggest something like &quot;This host's SPM priority is set to 'never'&quot; , or &quot;The host abc has SPM priority set to 'never'.&quot;
|why not? this is the connection received from parameters.
|Sorry, I don't understand the question :(. What is enough? The name of the method is too long? There is another method you suggest to use? Please explain.
|This is a bit of extreme use case that actually should not happen.
Since this is a creation flow, the id of a connection should be allocated only by the backend.
In case UI (internal implementation - user cannot set id anyway) or REST (where user perhaps can somehow pass it) will pass an id, this error will occur.
Is it more clear now?
In any case, id of a connection is something internal (and immutable) and should not be of an interest to a user.  UI does not present it, and the only way user can see or use an id is via REST.
I hope it's more clear now.
|Exactly as you said - 2 messages will not look good to the user.
|What do you mean about &quot;more than one&quot;? If there's even one - it's already forbidden.
|This error message is used in the following 2 use cases:
1. when updating an existing connection, and the new updated details already exist (meaning they are already used by at least 1 other storage domain, so there can't be additional one to use it as well)
2. when removing an existing connection - if even one storage domain uses it,  the connection cannot be removed.
So the &quot;already in use&quot; perhaps fits use case # 1, however it doesn't fit #2.
Do you have any other suggestion for rephase, or should I leave it as is?
|You mean same as in AppErrors? I didn't see any comment in VdcBllMessages
|Annotating that will not be good because:
1. minor reason : currently it's only used in this command, so it's not very interesting to annotate just for this.
2. major reason: the same connection object is used also by AddStorageServerConnectionCommand, which actually checks the opposite - it requires the id to be empty, and fails if it's not empty. So the annotation will be wrong in this case.
|Currently, the backend cannot trust the GUI to fill all needed fields (needed by the command), thus it's brought from db. In the long term, I agree that it's better to get just id from the client in the case of deletion , because it's really all we need from the client in this case. However, I wouldn't do it in scope of this patch.
|why linked?
|Done
|Done
|sorry, didn't understand your comment - what do you mean by unwrap this?
|Done
|Done
|Done
|reformatted again.
|because then it has to be passed as Short, otherwise putting inline  primitive numbers makes the compiler not match it to the method signature,
|yes, already saw it myself, but good catch, thanks
|Done
|Done
|Done
|not related to the patch subject itself, however the error message was missing, so I added it &quot;on the way&quot;.
|rephrased the entire sentence....
|OK - any suggestions for a new error? Keep in mind that there is no field in UI named iqn, so the error needs to describe it in a way that corresponds to UI fields.
|Done
|If most of the classes receive IdQueryParameters, and only 2 kinds of param classes extend it in 2 very specific places, why is there still a need in the P extends IdQueryParameters?
|why ignore this test? noone will fix it that way...
|Is there still a need for both &quot;isSnapshotExists&quot; methods?
If there is such a need, it looks like the latter snapshotExists that checks that the snapshot object is not empty - should be the first check among all checks - it's the most lightweight check.
|sounds about right. in next patchset.
|suggestion - to move all members to be in the beginning of the class. it's so hard to read the class like this when members just are everywhere...
|Why those members should be package protected? What's the benefit and the purpose of it in this specific class? Any other class using it right now? It's so fragile to rely on package protected access.
|Why changing it to final and moving the initialization from constructor here? What is gained by this? What if the call to AsyncDataProvider during class initialization will fail - very hard to investigate.
Also, this is not related to the patch title which says something about package protected warnings...
|huge commented out section - maybe better to remove it?
|Why do we need this method? can't it be done inline above in the code that uses it?
it's standard iterator methods... and what is the reason for making this method static?
|MainAddress--&gt;MailAddress
|ok now I get it, good catch, thanks.
|sorry, I don't understand your comment - same what?
|sure
|there is no storage tab in user portal
|do you mean adding this to log?
|yes, for floating disks.
|sure
|the method name is canDoAction, not CanDoAction :)
|Done
|there's a need to add assignment of storage pool id since the command now also calls to super.canDoAction, and there's a validation there related to storage pool id.
|I recommend you to check the file named multi_level_administration_sp.sql, there's still an orphan comment mentioning the user_action_map  table..
|Not sure if this is a blank line or gerrit that makes it look like this?
|see Liron's comment - isn't yours the same? if yes, please see my answer to him...
|the &quot;storage&quot; variable isn't used before, however it is assigned to getStorageDomain.getStorage() before it's overriden by &quot;&quot; in line 40. I have to say the entire assignment to &quot;&quot;, saving to db and then overriding it with something else doesn't make much sense to me, but I prefer not to touch it too much without proper understanding.
|defualt c'tor--&gt;default c'tor
|I'd guess the automatic refactoring did it, because I didn't touch nor format it.
|storoage-&gt;storage
|how about naming the member storagePoolId? much more clear to the reader than spId. I know there's a comment here, but it shouldn't affect the code being clear by itself.
|Perhaps a matter of taste, but filling a map with null values is not my cup of tea.
I'd put a member with set of all storage domain ids, and then as the code is called to get a storage domain validator, add an entry to the map.
|this code doesn't seem very safe. If the call to db fails, the class construction might fail, and then it's hard to troubleshoot it, no proper logging, etc.
Isn't it better to first get the domain from db, and if it returned OK, pass it to constructor?
|maybe I'm not familiar with the subject, but from this test it's not clear what is the threshold.
|Isn't it better to use a Set here? Or the disks can repeat themselves?
|there's no need here to do returnValue&amp;&amp; ... If statement was entered, thus it means returnValue is true. (if you are going to touch this code again consider changing it, I know it was not part of your change)
|I see that filtering is done here twice - here and couple of rows above. Is it correct? Isn't it better to do the filtering once?
|sure, why not.
|nope, no backend validation in creation of new connection for vfs type. just in UI. don't know about  REST)
|because they are  both initialized in @Before because of the command initialization that must receive parameters in ctor. I will try to refactor the test.
|I think they are allowed, but I agree it's better to remove them.
|Done
|Done
|ok, changed it in new patchset
|ok, I added considering size of values in hitcount.
As for your other comment regarding duplicate value population in a command - its specific use case indeed needs to be investigated separately. 
In any case, custom values are part of a general infrastructure and this patch fixes the problem that they were overriden for all use cases.
|great, it looks much better in the new patchset.
|This method became synchronized. That means that from now on expensive locking (performance decrease) is involved every time entering it, even when just getting dbFacade after its initialization.
Better to do double locking inside method to improve this situation. (with using volatile)
|I think that evaluating 2 long vars, even twice is not that bad in this situation. I think it's better and more readable than an endless loop. But perhaps it's a matter of style. Maybe other reviewers can contribute here their opinions too.
|How about instead of endless loop use &quot; do while&quot; or &quot;while&quot; on a clear condition - like the timewaited&lt;=connectionTimeOut?
|wating-&gt;waiting
|Well, the general recommended best practice is actually to call :
Thread.currentThread().interrupt();
But of course it is specific in each case...
Just check this to consider it again for example:
http://www.ibm.com/developerworks/java/library/j-jtp05236/index.html
|what happens when it's interrupted? there is no handling except for logging.
|Is this exception logged somewhere? In which log and by which component?
Same question about all exceptions thrown in the methods below...
|Juan, adding to my and Yair's previous comments, I recommend to read about modules and their dependency management in JBoss 7.
Currently from what I saw, there is already a module for datasource postgres defined in the product.
so first make sure that the datasource is defined correctly
https://community.jboss.org/wiki/DataSourceConfigurationInAS7
And here are some links about the dependencies:
https://docs.jboss.org/author/display/AS7/Implicit+module+dependencies+for+deployments
https://docs.jboss.org/author/display/AS71/Class+Loading+in+AS7
https://community.jboss.org/thread/176211
|Juan, indeed the static block was here before this patch - but adding an endless loop and a sleep to it makes it worse.
The patch (and code in general) is judged on several parameters among which are stability , how easy the code is maintainable and whether it can be troubleshooted in timely manner and whenever is possible without debugging (imagine customer environments to which you are not allowed to connect in order to debug). 
And static block with vast logic doesn't do good to any of the measurements I mentioned.
And you indeed raise a very important point - as long as everything works as expected - it's all good. But when it doesn't work as expected - troubleshooting what caused NoClassDefFoundError is really not trivial,  troubleshooting endless loop is no picnic as well, and when we write code, we should write it the way that it also be possible and easy to troubleshoot when things go wrong.
If the datasource should be initialized before the application is started (which makes good sense :)) , then it should be configured as a dependency on application server level.
If I remember correctly, at least in previous versions of JBoss there was such option.
|Roy, I agree with you.
Datasource is a configuration that application server  initializes , and if it fails to init, the application should not load.
There should be a dependency on app server level to enforce correct order of initialization and deployment.
Checking for that in static block inside some internal class of the web application is not the right place.
|Doing logic inside a static block is very problematic in general.
If the static block fails, it usually leads to NoClassDefFoundError which are very hard to investigate and solve.
If the static block takes a lot of time - then it will be problematic to use the class because it won't be initialized in timely manner.
Using an infinite loop and a Thread.sleep inside this static block is even more dangerous  - what if the infinite loop never exits? Will this class be never properly initialized? (and using an infinite loop generally speaking is not a good idea even not in static initialization block) .
Waiting for ejb to init in static block and condition class startup on it - very shaky solution. Imagine some cases when application fails to deploy or fails to startup due to this static block - how will someone troubleshoot it and realize that DNS and this static block are the problematic issue?
|I understand that it is not a small change that will require more changes, however I think making those changes presents a better (clearer, safer, etc) design that is worth the extra effort.
IMHO - it's better invest in a better design then spend the same time afterwards on troubleshooting and resolving endless loops issues, potential stuck class loader and other problems that can arise which I mentioned in my previous comments.
|Juan, I think what you propose here (@DependsOn) can be a nice solution and is more clear and safe in the code than the current patch.
|Done
|I will reformat the entire class.
|I'll remove it here, but so you know - there's a problem - if someone sets it to null (for example from REST), it fails with NPE in StorageComandBase. but that can be fixed in a different patch.
|StringUtils is in frontend module, it's not right to use it here. Anyway, I prefer keeping it as is.
|This is the whole point of the feature - to have 2 domains copied on the background with same uuid, and then repointing from one to another.
Which alternative do you suggest? This code is here for several patchsets already.
|This is not a new code. It has been here for several patchsets. You could have commented on it earlier. Adding new comments on existing code that has already been reviewed many times, especially when they are matter of style and not critical issues causes too much iterations and context switches for a patch. It's important to keep the review efficient for us all. Please consider that next time when performing a review.
|I don't understand your comment. Are you suggesting to do here something differently? Please explain.
|1. This is already extracted to method named getStorageDomainsByConnId which is reused.
2. The parameters here are of a connection type. No domain is passed to them because it's not the same entity (unfortunate , but this is the current system design). And getExclusiveLocks is called before canDoAction and cannot return an error to user - also unfortunate, but current design. Thus,  this is a compromise - try to lock if there is what to lock, and if not - canDoAction is returning a proper error to user if something's wrong with configuration.
|Why do we need it here? (perhaps we do, just want to hear your opinion why)
|I'll see what I can do , good idea.
|it is a good idea, I will add.
|yes, I will rename them to &quot;new&quot; for more readability
|it is a good idea, I will add.
|I will add failure regarding NFS or non NFS.
|If I remember correctly, there was supposed to be a db constraint on that, but either way rethinking it - I'll add another check in code to be on the safe side. good thinking...
|Collections.singletonList creates an immutable list. I don't think it's relevant here.
|What's the motivation?
|OK
|Collections.singletonList creates an immutable list. I don't think it's relevant here.
|What's the motivation?
|What is the common behavior? Are we always &quot;broadcasting&quot; additions/changes to all VDSMs?
|What in your opinion it should be related to?
|I don't see how it should be reused here. There is no adding an existing domain here, it's repointing an existing one. 
The idea here is that there is a storage domain that is always syncronized in the background on the storage server (think of high availability or disaster recovery). It is synced from original location A to a backup location B. So the contents and the metadata are identical. At the point when A becomes down for some reason, user just repoints it to location B. Since they are identical and synced, I don't see (and correct me if I'm wrong) what to edit on domain level here.
|On the one hand, it is related to storage domain from user's perspective. On the other - actually it is a completely different entity that is named &quot;storage server connection&quot;. And it is not touching the tables in db related to storage domain, only the connections table. So I am not sure that locking it by storage domain id is the right way here.
|In fact it should, however it you look at other action related to storage server connection -  &quot;disconnect&quot;, it also has the &quot;Create&quot; action group (which looks like a bug).
I discussed it with Allon in the past, and we agreed to keep it consistent to prevent permissions problems, and then have some thinking about it and make another patch taking care of fixing it for all problematic actions.
|yes I know - it's the default and it can be omitted, just thought it would be more clear to explicitly write it.
|What do you mean by lazy getter?
|Yes I saw Ayal's comment on #7 - I didn't find any option in REST to create just a connection without domain.
The connection addition is done in private method called from flow that adds a storage domain  (or checks if domain already exists) . So it is always bounded to domain. (unless there are some bugs there related to domain creation...)
If you are familiar with an additional flow - please let me know.
|Sorry, not following. Is your comment misplaced?
|Lets agree to disagree :)
I think this is more clear.
|1. What do you mean? CDA fails for various different reasons, some of them are not related to locks. If the configuration is not proper, then CDA will fail.
2. When there will be expansion of functionality to other storage types, this will be investigated for each storage type and revisited if needed. Currently it should work correctly for NFS and that's what it does.
|Because domain-connection for NFS is a 1:1 relationship. If there are several domains using same connection it's corrupted configuration IMHO and it will fail on that in canDoAction anyway.
|They are not called mount options in the UI.
It's called &quot;Advanced parameters - Override Default Options&quot;.
|do we want build scripts to catch even if it doesn't entirely fix the bug?
|the idea to lock here is to prevent other people to also try delete it, or for example someone tries updating a storage domain that someone else is deleting, so I think the lock is necessary.
I can lock the connection instead of storage domain.
|I am going to add something similar based on your suggestion without checking the storage pool - compare the type of old connection details and new one. If the type is the same, and since when the domain was added to the pool its type was checked (I checked the code that does that) - then we're good.
|after discussing with Allon - it's not used right now correctly anywhere. so will prepare a separate patch that handles it for all relevant places.
|discussed it, will make changes in next patchset, the code of jdbchandler is misleading...
|discussed it, will make changes in next patchset
|discussed, will change
|yes, still not implemented yet.
|yes you're right
|Done , in next patchset
|Done, in next patchset
|you are right, good catch.
|What for? it's a helper method of a setup method in unitest.
|Because then the casting will be in the method signature, otherwise it won't compile.
|Why?
This is a local temp id for use by a specific test. I don't see any reason to move it to a different class.
|Why? and what should we lock?
|Done
|ok
|Done
|ok
|check SimpleJdbcCallsHandler.executeReadList - its last statement - it can return null.
|yes , we can reach this situation because of a bug, see bug 815083.
|No, this is the use case when you have domain A pointing to path A, and domain B pointing to path B, and now you try to update domain B also to point to path A.
So this check is to avoid situation when 2 storage domains point to same path by blocking the update. Notice the check that the id of the connection is different than the id of the current connection. There is no problem to update current connection to its own same path. It doesn't make much sense, but it's harmless thus allowed.
|see comment above
|we shouldn't, but some bugs can lead us to that (because db wasn't properly cleaned up when some failures happened, and entities not properly deleted)
|Well, in a proper environment, you should have only one domain per connection details. In some cases, because of bugs, you might have leftovers from bad configurations that weren't cleaned up, and have more than one storage domain pointing to same connection. In that case, you don't want to add additional storage domains pointing to same problematic connections (by updating their path) to severe the problem even more.
|it's more complicated, thus out of scope for this patch. the support for that will be added later on.
|boolean here is not *that* necessary, but it does help debugging.
it's a matter of style...
|one the one hand - it's a good idea. 
on the other - locking/unlocking in db also has its price so it will actually prolong the whole operation.
I would like to hear some more opinions on this.
|CommandBase already does that for commands not having internal command annotation.
Check CommandBase.logCommand method
|Done
|sure
|getName is actually called forName
|I recommend doing the &quot;forName&quot; once, and put the result as class member that can be reused. No need to perform the lookup again in every member.
|I think each dev has his/her own boundaries on code reuse. Matter of style in some cases. So it's up to you whether to change this code or not, we invested a lot of time  (perhaps too much) discussing this very small corner as it is :)
Regarding duplicate strings, don't know about bytecode, but strings literals (which are actually interned strings) are cached in internal pool that is stored in permgen memory  (till java 7, in 7 - moved to heap according to their docs) if I remember correctly. I would not worry about performance here anyway, my idea was avoid &quot;copy pasting&quot;, but as I said - a really small corner, up to you...
|OK, then at least consider solving the hardcoded &quot;UTF-8&quot; string repeated here several times. Code reuse... :)
|Consider using CharEncoding.UTF_8 constant instead of hardcoded string (from org.apache.commons.lang)

Or use Charset.forName(&quot;UTF-8&quot;) from jdk
|In order to avoid UnsupportedEncodingException (to redundant its declaration at all), you can use Charset.forName(&quot;UTF-8&quot;), and then pass to getBytes below the Charset object instead of string with charset name.
|Same comment regarding usage of Charset object like in other class.
|I don't see a big benefit in this change. (I'm not gonna block it from entering either)
For a better readability, I'd extract the expression and assign it to a separate local variable, and then return the variable.
|Why making it final?
|Please add { } brackets that are relevant for the &quot;if&quot; condition.
|Why this is done outside the appendVersionComponent method? the logic looks same as other appended version parts.
|Is there a reason to make it static? And why isn't it declared as private method?
|GetResrouce--&gt;GetResource :)
|Just a question - isRunningOrPaused method is calling isRunning method which checks as one of conditions for &quot;PoweredDown&quot; status - is this OK to consider powered down as a valid running status in general, and for live migration in particular?
|this item is not clear - replace FQCN with import? you meant move from explicit import inline in the code to import in class heading , right?
|it's -&gt; its
|yes it is a tough one, I don't have a good one too. so could you please just put a short comment next to it explaining what is mapped to what? it will ease the understanding
|it will be nice to add a brief comment (or rename the member itself to a more clear name) what this map's key represents. it's probably clear from reading the logic below, but nice to understand from definition as well.
|If I understand the change correctly, now this code goes to db in loop as number of VMs, while previously it did it only once for current VM.
Won't it affect performance while user's waiting for response in UI?
What is the expected number of VMs (the size of the for loop iterations) ?
Is there a possibility to extract all of the disks from db at once and do the sorting in memory?
|Can you rename (I know it was here before) the strange disk &quot;o&quot; to a better name?
|What about this one - why not changing it to protected as well if the getQuotaId was changed?
|Before the change, here it was not an early exit, just assigning to retValue. And now it returns here, without a clear error message - it is OK?
|I have some doubts regarding placing it here. Because it is not related to what canDoAction is doing - the info brought by this method just populates, it's not used for the canDoAction validation. Perhaps it's better to place its call inside executeCommand.
|the name here in javadoc is prefix_DiskSuffix , and it doesn't match the variable names below - they are diskPrefix and suffix. For better clarity I suggest to change them to match javadoc to variables. 
Also, why prefix is called diskPrefix and suffix is just called suffix without diskSuffix?
|yes, I also think using _ is more readable between sections. but no biggie...
|IMHO it's a big confusing to have this method here , because there are already methods in ImagesHandler that generate default aliases, so why isn't this one also placed there?
|The extraction of the hostname is better to be done couple of lines below - next to the if statement that checks validHostName - it's  relevant there. and not near checking vds name..
|same comment regarding placing this variable couple of lines below like in the &quot;AddVDS&quot; command.
|It is safer to extract the VDS first and check it's not empty, before sending straight  getParameters.getVDS to the method - it could end up here with NullPointerException - easier to catch it beforehand.
|Since the method is just checking the validity of the name, it is enough to send just the name to it (same as done with host name in ValidationUtils.validHostname(hostName))
And since this method returns a boolean, it's better to call it isVdsNameValid.
|vds.getName can be potential NPE due to vds=null... this method is public so I'd make this check. Especially when the 2 other commands calling this code are passing it as is without checking that it's not null.
|I'm ok with any of the names as long as it doesn't have the word &quot;only&quot; twice in it like in original patch.
|is snappable even a word? :)
what about allowOnlySnapshotDisks?
|&quot;allowOnlyAllow&quot; of the second boolean parameter doesn't sound good. Please consider renaming.
|how much did you raise now tests coverage :) ?
|Again, yes we have runVdsCommand, but the above is not a new code, it was just moved from executeCommand to another method without changing the signature nor functionality, and I agree that moving to use runVdsCommand might be a more proper way, however that method might behave differently, has different error handling and different signature, and it is NOT the focus of this patch.
|Allon, do you mean sending separate patch which removes @Internal from DisconnectStorageServerConnectionCommand and then in this patch remove it from RemoveStorageServerConnectionCommand?
|As we discussed, this is not a security issue, this is just regarding audit log.
So, this command will be without the @internal CommandAttribute to write it in command.
|Done
|Explained face 2 face to Liron, issue resolved.
|How would you suggest to indicate that the remove query execution in db failed?
The remove api doesn't throw an SQLException from what I saw, or return a boolean result = false if it failed.
|This is exactly what it should do - if the db removal fails, this is the indication that command should fail.
Otherwise why do we need the &quot;setSucceeded&quot; in the first place if it's always &quot;true&quot;?
|There are some cases when execution of an sql query fails.
For example - engine loses connection to db, the schema name is incorrectly defined in the engine, something is corrupted in the schema (table was deleted , for example)
In that case, I would expect that the api that is supposed to execute the query will indicate about such a failure.
|Done
|It's called from StorageHelperBase.
And this attribute has been here before the patch, hence not part of the discussed change.
|Generally speaking, you are probably right and UI should not call internal commands.
However, the current state of things - before the patch as well, is that UI is indeed calling internal commands.
The patch is not here to solve this issue, it is solving another bug.
Please note , that DisconnectStorageServerConnectionCommand that its calls are replaced in several places by this patch and is called from the UI, is also an internal command.
|ok will fix, thanks
|I don't understand the purpose of this comment.
|I simply extracted here a code from executeCommand to a separate method so it can be reused by inheriting command which is the focus of this patch, without changing any functionality.
If you think a general refactoring is in place in this class to change it to use runVdsCommand method, it might be a good idea, however it should be done separately in a a different patch as it might change the way this command behaves and it is out of scope here. (it might have a different error handling, has different signature, etc.)
|Good idea - for a separate patch.
|Because in some cases there is a need to just disconnect the vdsm from storage, and in other cases (such as failure), you need to disconnect the storage AND remove the connection from db for a clean up.
See bug mentioned in commit message that this patch fixes.
|It inherits from another command which is also internal, thus keeping the convention.
|Removing T extends is not working because of the inheritance of the command (actually, the way that parent class is designed). As much as all those T extends are not very clear and I also don't think we need them in some places, cleaning that up will cause a much bigger refactoring also in other commands inheriting from StorageServerConnectionCommandBase, which is again, not the focus of this patch.
|Please use punctuation, so your comments can be understood properly.
The code that is reused here is inherited from another class, and that code snippet returns a boolean, thus here it is also used in the same way.
|Disconnect on vdsm level succeeds regardless of the id because they disconnect the path. Id is just a guid in db and you might receive a blank one.
|if you touch the patch again, please fix fale to false.
but don't waste time on that on purpose.
|this is the same import as you added, could you please remove this commented out?
|I'd also change the variable name - it was pc because of PropertyCompat, now it looks weird because of new class name.  I'd go with propertyInfo but that's just a suggestion.
|I assume you comment on the order of imports?
if yes, static imports come before regular imports.
|Do you know if this entire commented out section relevant at all? If yes, then it's good to fix the package names in it, if not - maybe better to remove it from the file? (not necessarily in this patch, of course)
|I am definitely in favour of unifying all the multiple validates as a general concept.
However this specific piece of code , is , in my opinion still hard to read. Still too many &quot;&amp;&amp;&quot;, passing method calls inside the validate method call ( hard to debug), need to count here all the parameters passed, it's not clear when the method call definition ends with all the brackets . For me , it's too complicated to read and maintain such code.
Also there are 2 validate calls here made together - not clear why.
|personally (and I guess it's a matter of style preference) I don't like the syntax of the &quot;three dots&quot; because it's not clear enough what and how much do you expect to receive in the function - I prefer in such cases getting one parameter which can be a collection/set/map/list.
|I would add a test with a long description to test the max length validation
|please align column size cross all sql scripts
|It's better to add to log statement which host's   (id/name/ip etc.) monitoring will be skipped, otherwise the logging message is too general and not helpful to whoever reads the log.
|I don't think it should be a matter of like or dislike. It's not a proper English sentence. It makes the product look less professional.
|There is no need to write in capital letters &quot;storage domain&quot; in the middle of the sentence (in any of the messages, I am just commenting one of them not to repeat the comment)
|I have to say that having 2 classes with same name, even in different packages - is very confusing. The usage above like this is not clear - takes time to figure out who is who.
|string concatenation
|There are a lot of @Override additions in this patch that are not related to the strings/format that the patch deals with.
I would either adress them in different patch, or at least mention them in the commit message.
|Why didn't you replace here as well?
|Why didn't you replace here as well?
|isn't this the same?
http://gerrit.ovirt.org/#/c/11638/2/backend/manager/modules/common/src/main/java/org/ovirt/engine/core/common/businessentities/vm_pools.java
|this is already addressed in Allon's patch &quot;Change Iafac9ca6: core: Don't check equality in BE setters&quot;
|Did you not change this one on purpose?
|I would extract here the variable and not return the expression straight away because it can throw an exception and then it's hard to find/debug it.
|Allon, &quot;for loop&quot; on images when images=null with cause NPE... Since you made this method as public - anyone can call it from outside thus I'd add a check that images!=null...
|Same as my comment regarding order of operands in StorageServerConnections
|Not related to your change, but isn't there anywhere some enum instead of using hardcoded &quot;done&quot;?
|Side comment - I'd do the opposite operands check : !getid().equals(&quot;&quot;) - because what we're interested to check is if id is an empty string, not if empty string is id.
But as I said - matter of style, they both work.
|Did you change version id on purpose because you removed a member? Is it required to change even though the member was not in use?
Will it work ok with upgrade?
|I tried now to structure the code differently based on your comments - I think it looks better and clearer now. Too bad I didn't &quot;boo hoo&quot; in the log :)
|Tried to follow Allon's comment, made the whole logic a bit different structure.. thanks for the advice.
|You have a point. But according to what you say,  we should log as problematic only  domains in status &quot;active&quot; that could not be refreshed?
If that's how it goes - isn't the second &quot;if&quot; redundant at all? (the one starting line 305) can't it be merged with the first if that checks refresh for active domans?
|it's a good idea - sounds like you are volunteering for a patch ;-)
|I believe it's easier to read if and else one under another with same identisation, rather than having else more internally.
|it was done by eclipse formatter actually... but I can try rerun it.
|it's much more clear separated. and in any case, the code formatter is configured to not keep it on same line.
|I don't know, I was wondering the same thing but it's not in scope of fixing this bug.
|the bug itself fixes a regression that was caused by the refresh... I will rediscuss its logic.
|see Allon's comment on previous version of the patch - this is what I understood he wrote and showed in example pseudocode that it should be checked only regarding active domains.
|you probably meant &quot;simplify&quot; :)
|the &quot;checkMessages&quot; method expects to get the expected messages as second parameter. Here nothing is passed to checkMessages in order to &quot;translate&quot; the zero evaluated in assertEquals. 
Does &quot;checkMessages&quot; method cope well when only one parameter is passed to it? Inside it checks for expected.length, while expected object can be null...
|It's a misleading title - I understood from it that the class StringHelper is removed in this patch. I'd consider changing it to replace usage of StringHelper/remove usages of StringHelper
|Done
|Because my thought was that it would be easier to find it in case this file is renamed..
Ideally I was hoping to use a constant from the source code, however I didn't find such.
|Done
|Done
|Done
|Done
|Done
|Done
|This is indeed just for tests, but it's a helper class, not a test by itself, so I prefer keeping it as is.
|I'll add it to commit message
|basically no, but it's just a huge comment so a cleanup really seems like in place &quot;while I am here&quot;. since it's a dead code anyway I think the risk is minimal...
|Done
|connect does a connect and adding it to db, disconnect only disconnects so they are not symmetrical.
|the &quot;vmNotInPreview&quot; method already has the error message VM_IN_PREVIEW, and the &quot;validate&quot; method used here already adds the error message from validation to the error messages of the command, so no need to add it here as well by using &quot;failCanDoAction&quot;.
Basically, instead of &quot;failCanDoAction&quot; it's better just to &quot;return false&quot;.
|the logging was here before my change as well, I just fixed its mispelling and replaced it to be not in the middle of ctor.
|Done
|Done
|Done
|Done
|Done
|The logic in this method is a bit unclear to me... (before your change as well).
Because it says &quot;if there is no lun in db then add it there , but if the volume group is not empty - update the volume group id in lun&quot;. the second part doesn't check if lun exists in db, it just goes and tries to update the vg there.
In this proposed change, adding the volume group id to the new lun which didn't exist before means inserting volume group id to db even if it's null or empty string in the first if... what benefit does it add? 
Perhaps it's better to check first if vg is null or empty before the insert (but then again, this is what the &quot;else if&quot; part does - but only for existing luns)
There is also a call to this method couple of rows above, where the volume group is &quot;&quot; :
proceedLUNInDb(lun,storageType,&quot;&quot;);
|yes, adding of course!!!
|Laszlo, it will be very helpful if you give a more clear motivation in the patch description why is it safe to remove the pidFile logic... thanks in advance.
|ok sure
|If you are already here (while it's not part of the change you're making), why not change the warn to error? Because it seems very strange to have warning and error logged one near each other in different loglevels for same situation when taking care of exception...
|yes this is what I meant... very strange, because on some files it shows correctly, and on this one it doesn't
|it should be on same line with the rest of logging statement
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|change to what?
|this.getClass.getSimpleName gets you exactly the IsoDomainListSyncronizer word.
Or you were meaning something else?
|this.getClass.getSimpleName gets you to log the word &quot;TagsDirector&quot;
|Done
|you're right regarding class name itself. However in many places there are several different things initialized in same class (like for example in class Backend itself which I also modified in this patch), thus I do think it's nice to mention WHAT exactly is initialized. So I wrote it in a more human readable way instead of just class name.
I hope you're OK with it :)
|Using cacheNewValues for being a return value is IMHO incorrect.
The method iself is about caching values. It should not return boolean - it doesn't evaluate anything. Thus it should just be called when it's relevant, not be used as return value for other method.
|before the change, some of the checks could be not done because of the early return. now all the validations are together in the same if - so now all of them are performed together - isn't it a bit less efficient? (depending on the checks content of course)
|I know it's not part of your change, but result here is always true - why doing here result&amp;&amp;... ? if you agree, pls remove it from the condition.
Also, perhaps worth to put the &quot;vmDown&quot; check as first check in condition because it seems the most fast and efficient check - if it's down, then it's not during snapshot which is currently the first check .
|missing here &quot;=&quot; between mStatus and its value (comparing to similar change you did in StatusReturnForXmlRpc)
Also, why not use generic way to get class' name instead of hardcoding it?
It will require extra work if the class gets renamed some day.
|Actually IObjectDescriptorContainer does exist in the code.
|what about getClass().getSimpleName here like in other places?
|yes.
rethinking the whole thing - isDebugEnabled best to come in calling code, not in the wrapper (see my mail regarding my other patch related to the subject)
|Done
|not a pretty sight, I completely agree...
|I was thinking about exact same thing! when I saw this :)
I have 2 assumptions about it -just purely in theory
1. either checkstyle doesn't run on this specific maven module
2. or checkstyle is configured to detect NEW violations (for example you can do something like this with findbugs to alert only on new things)
|I'll do separate patch for that
|I'll do separate patch for that
|Done
|Done
|Done
|Done
|sounds reasonable.
I think we should get rid of the trace logging anyway from the engine.
Debug loglevel is enough fine grained.
And some things are even written in info while they clearly belong to debug (such as &quot;user logged in&quot; , &quot;checking if user is admin&quot; - every minute for a refresh etc.
|What happens to the code itself (not the test, but the Tar code that is tested here) when it's ran on non linux/unix environment?
Shouldn't it also be taken care of?
|The class itself is final, so what is the purpose to make this variable protected if the class itself can't be extended?
|eqauls = equals
|I'd recommend to rename the parameter itself as well as part of the rename  - currently it's called action_version_map, it'll look better according to java convention actionVersionMap.
|Did you push a new version of the patch? I don't see it in gerrit...
|same as my other comment - it's better to rename the parameter based on java convention to align with all the renaming
|Hi,
what is the purpose of creating a method that always returns true regardless of its input param vds that is never evaluated nor used?
|You might get here null pointer exception for vds.getId() by not making sure first that vds is not null...
also perhaps it will be good to name this method differently - this method doesn't actually perform the connect operations, but rather just checks if it's necessary to perform it, so maybe something like isConnectOperationRequired.
|Done
|Liron, in the future it is better to accumulate all your comments in one review -especially for the same piece of code.
You current comment might be true, however should be solved in a different patch/bug, it is not in scope for this one.
|ok
|ok
|The dao call is always performed , it's based on id passed from external call - this is what was happening in the original method as well, I just extracted it to a separate method.
|the agenda is an easier debugging. when you have isValid, you can evaluate it pretty easily when debugging.
|not that it matters - but you don't need to start the method with 'test' anymore since junit 4...
|If vm is null, and vmName remains &quot;&quot; - will the disk alias be correct?
And is there  a point setting a disk alias if the vm is null?
|agree with Maor on the parameter name - very unclear.
|We are in opposite camps then with the strategy of return values :)
|Shortening the code in 1 line doesn't make the code better/faster/more efficient.
But it does make it harder to debug and evaluate the return value, thus less maintainable and less supportable.
This is just 2 different programming approaches...
|I am not in favour of inline return statements. It is a bit more readable, but much harder to debug later on...
|Why did you put a member in the end of the class? Isn't it more readable to put it in the beginning with the rest of the members?
|Why is there a need in this additional method? Why not use directly getImages() and check them where the logic is needed if they are returned empty (something like  getImages().isEmpty() )?
and while I'm already here I'd like to ask, though it's not part of the change - is there a particular reason for getImages method to return an ArrayList rather than the List interface?
|The title is misleading, the connection is not created (added to system) here. And the changed command is connectStorage, not AddStorageServerConnection.
|+1 on Allon's comment. missing usecase for Posix.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

compile/tests OK
|Patch Set 1:

can someone merge it?
|Patch Set 3: Code-Review+1

LGTM. thanks!
|Uploaded patch set 1.
|Abandoned
|Patch Set 1:

It needs to specify the dbuser, otherwise it doesn't run with postgres user.
|Patch Set 2:

looks great, my only suggestion would be to add this as late as possible in the build (around dep profile), to avoid situation when build fails, but db already upgraded.
|Patch Set 3: Looks good to me, but someone else must approve

you are missing verification score...
|Patch Set 7:

Gilad, please rebase, there are some renamed methods that are already merged.
|Patch Set 6: Code-Review+1
|Patch Set 6:

please wait with merge and with similar patches because of the branch stabilization effort.
|Patch Set 6: -Code-Review

Gilad, I don't have +2 nor merge rights.
Regardless of that, have you rebased this patch lately?
A lot of fixing of findbugs have been done lately, this might be not relevant anymore.
After rebasing, if still relevant, please ask maintainers to +2 and merge it.
|Patch Set 1:

(2 comments)

I'd add some mount options in the REST tests. (BackendStorageConnectionsResourceTest for example)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

looks like a similar change was added to docker code itself:
https://github.com/dotcloud/docker/commit/b8e338144e90a6bb76110ab04cc216966640a3f4
|Patch Set 4:

it's best to keep this for now (And not abandon) because it will take a while till the docker's change that handles it will be available.
|Patch Set 1:

(4 comments)

Please see my questions in the patch.
Also, did a findbugs job run on this patch? I didn't see in gerrit comments.
|Patch Set 2: Code-Review+1

I am still wondering how there is a new configuration named security added to findbugs without specifying it anywhere...
|Patch Set 2: (1 inline comment)

How about changing the blank id in BindingXMLRPC to point to the main constant ?
Currently there are many references there to other places that mention blank id (such as Volume.BLANK_UUID, Image.BLANK_UUID) - isn't it better to directly work with the one in constants?
|Patch Set 3:

It's always great to see more code compliant to java conventions :)
You can see if it resolves findbugs warnings.
Please run findbugs:findbugs in your maven (locally) and check its report.
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Why a checkstyle separate definition needed for Intellij?
AFAIK the checkstyle plugin receives as input our checkstyle xml and works with it - easier maintenance.
Also, commiting a jar is not very recommended as well - hard to maintain.
|Patch Set 1:

(in any case, it's impossible to review a jar file via gerrit)
|Patch Set 1:

Mooly, I still don't understand: what is this configuration exactly? What does it contain? checkstyle? code formatting? What kind of validation that isn't already built in in Intellij? some other configuration?
Who is going to maintain this jar and how?
|Patch Set 2:

Why not bring just this file:
/codestyles/ovirt_engine.xml

And instruct the user to put it here:
&lt;youtIntelliJsettings&gt;/config/codestyles

and then user is able to select it via UI in settings-&gt;Code style-&gt;Scheme?

If I get it right, what you suggest will override Intellij global settings and this is very intrusive. What if a user works on several project with different settings?
let's not override them all.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3:

Additional thing to check: the REST code is supposed to do a validation of parameters, and port is validated for iscsi (look at BackendStorageServerConnectionsResource add method, port is part of validated parameters) - I recommend to check why REST doesn't raise a proper error.
Another point - I remember there used to be some code in either REST or UI (sorry, don't remember the details) that used to set the port to 3260 if user didn't pass it.
So perhaps if it still exists, it's better to align the behavior (meaning - not pass 3260)
|Patch Set 3:

Nori - OK, thanks for the clarification.
BTW, what about update connection scenario? Won't it have the same problem?
|Patch Set 3:

I recommend to put this validation logic once in a common place and reuse it in Add/Update commands. Something like StorageServerConnectionCommandBase can be a good place.

I don't understand your question:
&quot;Is it preferred to send default port for add/update command if the value is 0?&quot;
You mean if to send it at all?
I assume we'd like to prevent a case where the server will try to connect to port 0 if it was mistakenly added to the system.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

created via REST a template version, then performed GET on all templates, saw it exists and has a VERSION section that refers to a correct base template.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5:

patchset5: fixed vmmapper to use the property even when template id is not set (when template name was used)

tested add VM with both passing true/false for &quot;use latest temlate version&quot; property in POST request body, both reach AddVmCommand in the backend properly.

Example that was used:
&lt;name&gt;vm1&lt;/name&gt;
  &lt;cluster&gt;
    &lt;name&gt;c1&lt;/name&gt;
  &lt;/cluster&gt;
 &lt;stateless&gt;true&lt;/stateless&gt;
 &lt;use_latest_template_version&gt;true&lt;/use_latest_template_version&gt;
  &lt;template&gt;
    &lt;name&gt;Blank&lt;/name&gt;
  &lt;/template&gt;
  &lt;memory&gt;536870912&lt;/memory&gt; 
&lt;/vm&gt;
|Patch Set 5:

tested also it's propagated correctly for update VM use case.
|Patch Set 5: Verified+1
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Patch Set 6:

formatting fixes. no code changes
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Patch Set 8: Verified+1

patchset 8 : fix lack of new mocking method that showed up after rebase.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 8:

the unitests failure is due to env. issue on jenkins
|Patch Set 8:

Omer, going over the patch again I realized that forgot to add one more needed change - updating rsdl_metadata.yaml.
It can be delivered in the same patch or in a different one on top of it.
The lack of it doesn't interfere with REST proper work, it's more for users understanding of what options are available.
|Uploaded patch set 9.
|Patch Set 9:

added yaml additions in patchset 9
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Patch Set 13:

(1 comment)
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Patch Set 15: Verified+1

Omer can you please verify too it's working for you?
I remember it wasn't working for you at some point.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 1:

(6 comments)
|Patch Set 1:

(1 comment)
|Patch Set 4:

(4 comments)
|Patch Set 3:

(4 comments)
|Patch Set 3:

one more thing - didn't see that AddVmTemplateCommandTest was updated in this patch, I assume that additions to the command require changes/additions to unitest, please include in this patch those changes too to keep it properly tested.
|Patch Set 3:

(2 comments)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

+1 on the code itself.
Also verified on my local env. that the fix solves the issue.
thanks Juan!
|Patch Set 1: Code-Review+1

after clarifying with Gilad - it indeed looks better now at least design wise (not both inheritance and container like it was before this patch).
Gilad, please make sure that indeed it cleans the findbugs warnings. thanks
|Patch Set 1: Verified+1

Verified on webadmin built with latest code.
|Uploaded patch set 2.
|Patch Set 2:

formatted comments, rebased.
|Patch Set 1: Verified+1

compiled
|Patch Set 1:

shouldn't jenkins run verification jobs on it?
weird...
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

the failed findbugs is an env. issue:
[ERROR] Failed to execute goal org.codehaus.mojo:findbugs-maven-plugin:2.5.2:findbugs (default-cli) on project compat: Execution default-cli of goal org.codehaus.mojo:findbugs-maven-plugin:2.5.2:findbugs failed: Timeout: killed the sub-process
|Patch Set 2:

a bit late to the party since it's merged, but definitely +1
|Patch Set 1: Verified+1

compiled
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

verified with compilation.
|Abandoned
|Patch Set 1: Verified+1

compiled incl. GWT.
Saw findbugs marks it as resolved.
|Patch Set 1:

Tal, Derez, what do you think about Oved's proposal?
Make sense to me...
|Patch Set 1:

yes I will resubmit
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

it was compiled with GWT
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

ran findbugs locally
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Abandoned
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled with GWT.
|Patch Set 1: Verified+1

compiled with GWT
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled with GWT
|Patch Set 1: Verified+1

compiled with GWT, ran findbugs locally
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled with GWT.
|Patch Set 1: Verified+1

compiled with GWT
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

compiled incl GWT compilation
|Patch Set 1: Verified+1

compile incl. GWT compilation, login to engine, open new storage domain dialog for ISCSI
|Patch Set 1: Verified+1

compiled with GWT
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Code-Review-1

(1 comment)

-1 so it won't be mistakenly merged.
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Verified+1

compiled incl. GWT.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

Can this be merged?
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1

ran findbugs locally
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

compilation + unitests
|Patch Set 1: Verified+1

ran findbugs locally
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1

compiled incl. GWT compilation
|Patch Set 2: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1
|Patch Set 1: -Verified Code-Review+1
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT compilation
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Verified+1

incl GWT compilation
|Patch Set 1: Verified+1

KerberosManager class also got fixes in import order, that's why difference in lines of code
|Patch Set 1:

Please pay attention during rebase/merge that permissions class was renamed to Permissions yesterday...
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Verified+1

ran findbugs locally.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Patch Set 3:

yes I certainly ran findbugs locally.
GlusterUtil displays 0 findbugs in its report.
I will recheck it afterwards in jenkins as well.
|Patch Set 1: Verified+1

ran findbugs locally
|Patch Set 1: Verified+1

ran findbugs locally
|Uploaded patch set 2.
|Patch Set 1: Verified+1

compiled incl. GWT
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

compiled incl GWT
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1

compilation incl. GWT
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

ran findbugs locally
|Patch Set 1:

@Itamar, I suggest to exclude it, what do you think?
|Patch Set 1: Verified+1

I verified it by running findbugs locally, don't think the developer job is relevant here. If you think otherwise, please explain. :)
|Patch Set 1:

Allon, how this patch disables a threshold? It simply adds an additional exclude rule to an already existing excludes filter for a module that has been in findbugs before this patch.
|Patch Set 1:

@Allon, I cannot run findbugs on it, I asked eedri and he also said he doesn't know how.
Retriggering jobs on it via jenkins doesn't trigger fb.
|Patch Set 1:

Yes, it is ignoring it from findbugs.
Allon's concern is that once this is ignored, fb will try to proceed and analyze a big class and *might* fail on OOM - depending on memory allocated in Jenkins slaves.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 3: Verified+1

compiled incl GWT
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1

Did you run findbugs and verified it solves the 2 warnings?
you can run it locally by invoking maven with: findbugs:findbugs
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

compilation + unitests
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

compilation + unitests
|Patch Set 1: Verified+1

compiled + unitests
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1

ran findbugs locally, seems that the warnings were cleaned.
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1

no code changes, just fixed a typo in commit message
|Patch Set 1: Verified+1

compiled including GWT webadmin, uncluding unitests.
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1

compilation + unitests
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1:

you mean FB warning :)
It is not complaining on the &quot;plain&quot; values there (15, 64), but rather on the unboxing of the maxVmNameLengthWindows/maxVmNameLengthNonWindows variable in the return expression when evaluated along the &quot;plain&quot; numbers.
So by not evaluating them together in the same expression, there is no unboxing.
I ran findbugs locally, it makes those warnings go away.
|Patch Set 1:

@Allon - Why Integer.valueOf(15) is better?
|Patch Set 1:

@Allon, I don't mind changing it, I asked because was just wondering if I missed some caching/other optimization that is achieved with valueOf usage.
|Patch Set 1:

@Allon, after changing to use valueOf, IDE validations complain that this is redundant boxing :)
So I will keep it without valueOf, and just fix formatting as Daniel noticed.
|Uploaded patch set 2.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

Einav - I don't have permissions to merge.
|Patch Set 1: Code-Review+1
|Patch Set 1:

please see patch http://gerrit.ovirt.org/#/c/20830/
|Patch Set 1: Code-Review-1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

Tal, I did compile webadmin GWT, it's all clean (and I compiled it again today to be on the safe side)
|Patch Set 1:

the entire class is a bit strange. its package name also doesn't match its location. as far as I see now, no one uses it but I will verify it with someone who is familiar with the compat area.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated
|Patch Set 4: Verified+1

compiled gwt of webadmin, rebased.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 2: Code-Review+1

you know you can edit the commit message directly in gerrit, right? it's more convenient...
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1

(1 comment)
|Patch Set 2: Commit message was updated
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 3: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 3:

Joining Allon's opinion.
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1

(2 comments)
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+1

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

addressed comments, instead of renaming, just removed the methods.
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1

Arik, kudos for the effort to solve findbugs!!!
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Abandoned
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Verified+1

findbugs issue...
|Patch Set 1:

I am not familiar with the logic here, so it's hard for me to say.
|Abandoned
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified-1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

Why is it not good in production?
|Patch Set 1:

BTW, it can also help us in production investigating things - searching more conveniently the logs and the code - it's just making the product more supportable. (but that's anyway not in this patch scope according to Oved)

Why is it several reflection cycles? Could you please point me to an explanation/documentation regarding it? thanks...

AFAIK, reflection's impact in such situations (considering the frequency, the deployment and the modern hardware) is nearly invisible. There were some issues around it, but it was in sun jdk pre version 5.

And if there is a general concern around performance drawbacks caused by logs, then I suggest to stop printing the entire class name including its package  -short class name is enough,  switch printing things in debug  instead of info , or set log to warn/error in production which is a common practice in enterprise software - it will lead to a better performance - (though the impact will also show only at a very large number of loggings per sec - and I am not sure the engine is printing that much)
|Patch Set 1:

Please see this:

http://logging.apache.org/log4j/1.2/manual.html

&quot;The typical cost of actually logging is about 100 to 300 microseconds.&quot;
|Abandoned
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1

compilation and tests pass, rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 6:

(7 comments)

partial review..
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 2: (12 inline comments)


|Patch Set 3:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

tried to reformat some class after the version change, the formatter still works :)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

it's still time consuming.
I prefer to see all the errors fixed first, and then I return the logging, and also fail the mapper tests if there are some exceptions.
|Abandoned

not relevant after Ori Liel patches that improve performance and handle errors.
|Patch Set 1:

Nice fix :)
One question - where is the deletion of the relevant entry in LUN_storage_connections_map table is done?
I didn't find it not in this patch nor in the older code - maybe I missed it.
I saw the relevant db function exists named DeleteLUN_storage_server_connection_map, but didn't find anyone who uses it.
|Patch Set 1:

Did you see that findbugs warning is indeed resolved by this change?
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Abandoned

already handled in another patch by Allon.
|Patch Set 1:

hint taken :)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

verified on live env. please note the difference in FeaturesHelper class due to other (non related) features that weren't probably backported.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

Allon, I assume you meant this syntax?
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

compilation and unitests
|Uploaded patch set 2.
|Patch Set 2:

rebased, fixed conflict.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 2: Code-Review+1

like :)
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

verified on live env.
|Patch Set 1: Verified+1

compilation and unitests.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

changed per Allon's comment.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

compilation and unitests
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1

just changed commit message in this patchset
|Patch Set 4:

Allon - good catch! will change it to ovirt logger
|Uploaded patch set 5.
|Patch Set 5: Verified+1

fixed logger type per Allon's comment.
|Patch Set 1: Verified+1

compilation and unitests
|Uploaded patch set 2.
|Patch Set 2: Verified+1

compilation and unitests
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1

compilation, unitests
|Patch Set 1: Verified+1

compilation, unitests, GWT compilation, open dialog - new iscsi domain in webadmin and press on discover targets. all work.
|Patch Set 1:

jenkins seems to have resources issues, not related to the patch.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

(3 comments)
|Patch Set 2: Verified+1

smooth rebase, jenkins build successful
|Uploaded patch set 5.
|Patch Set 5: Verified+1

compilation and unitests
|Patch Set 1: Verified+1

compilation + unitests.
cleans about 130+- findbugs warnings...
|Patch Set 1:

small correction - looks like it fixes around 17 warnings
|Patch Set 1:

(1 comment)
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1

changed commit message per Daniel's request
|Patch Set 3:

failed on env issue, not related to patch:
Caused by: java.io.IOException: Cannot run program &quot;/usr/lib/jvm/jre-1.6.0-openjdk.x86_64/&quot;: error=13, Permission denied
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 1: Verified+1

verified by creating 2 domains via REST - one without specifying format - it was created as V3, and another by specifying format V1 which was created with correct format V1.
|Patch Set 1:

Itamar,Michael,Allon, please see Sean's comment on the bug:
https://bugzilla.redhat.com/show_bug.cgi?id=994569#c2
|Abandoned
|Patch Set 1: Verified+1
|Patch Set 1:

Currently the backend of storage domain management doesn't differentiate between 2 situations : 

1. a connection that was created as part of the same REST call - in which case it should be deleted to keep the operation atomic

2. reusing an already existing connection which was created in the past (new option in 3.3) - in which case it should not be deleted.

Right now only the REST layer &quot;knows&quot; this difference - which option the user chose.
Moreover, the webadmin UI design has the same solution - multiple commands are invoked sequentially separately (create connection, create domain) , and there's a failure callback that deletes the connection in case storage domain creation failed.
|Abandoned
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

renamed method per Allon's suggestion
|Patch Set 3: Patch Set 2 was rebased
|Abandoned
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1

compilation and unitests
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1

adding Allon, as this is storage related...
|Patch Set 2:

(2 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7:

(2 comments)
|Patch Set 4:

(11 comments)

of course, unitests need to be added to backend/dao/rest...
just a reminder, I know it is still wip. :)

Also, perhaps I missed it but which code prevents attach/detach for file domains?
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

the REST changes (commented out lines) are relevant - they contain invoking the methods for which I changed the name (Config.GetValue/SetValue) - so it was either renaming it inside the comments as well, or removing the comments since they are not used anyway.
|Patch Set 2: Verified+1

smooth rebase, jenkins build successful
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 1: Verified+1

compilation and unitests
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

compilation and unitests
|Abandoned

already fixed by Doron in another patch
|Uploaded patch set 2.
|Patch Set 2: Verified+1

compilation and unitests
|Patch Set 1:

I'm missing more details here - commit message is very short.
Why is this change needed - for which usecase?
Why is it OK to rename BaseDevice to BaseResource?
Please elaborate. Thanks!
|Patch Set 1: Verified+1

compilation and unitests
|Uploaded patch set 2.
|Patch Set 2: Verified+1

rebased
|Patch Set 1: Verified+1

compilation + unitests
|Patch Set 1: Verified+1

compilation and unitests.
|Patch Set 1: Verified+1

compiled +unitests.
|Patch Set 1:

I think the patch should be separated to 2 patches. 
One with the (very helpful for reading) extraction of methods.
The other with the actual logic change.
Otherwise it's very hard to understand what was changed in the flow.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: (4 inline comments)

I recommend adding unitests where possible.
|Patch Set 1: Verified-1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Verified-1

I think I missed one place to check unattached status for block domains. please do not merge yet, I need to verify it...
|Uploaded patch set 3.
|Patch Set 3: Verified+1

added unitests to check unattached domains, added checking unattached status for block domains (used by luns) too.
|Patch Set 1: Fails

missing unitests
|Uploaded patch set 2.
|Patch Set 2: Fails

needs more tests
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: (15 inline comments)


|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified

adressed Allon's comments, reformatted some files.

Michael, should this subresource be documented in rsdl? featurehelper?
|Uploaded patch set 7.
|Patch Set 6:

(6 comments)
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 7:

(3 comments)
|Patch Set 8: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 8:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 9:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Verified

compilation, unitests, on live env:
1. create nfs connection
2. create domain with this connection id.
3. login to webadmin, add this domain to dc and activate it.
|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Verified

adressed review comments
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Verified


|Patch Set 1:

(3 comments)
|Patch Set 1: Verified

compiled, ran unitests
|Patch Set 1: Verified+1

compilation and tests
|Patch Set 4: (3 inline comments)


|Patch Set 1: Verified

compilation,tests, live env - get/add/update/delete.
|Patch Set 1: Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 1: Fails

in progress, not ready for review
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Fails


|Uploaded patch set 4.
|Patch Set 4: Fails

added the DELETE functionality. still no tests, not ready for review.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Fails

unitest fails
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Patch Set 21: Verified

compiled, unitests, checked on live env.
|Uploaded patch set 22.
|Patch Set 22: Verified

removed unused SearchType of storageconnection mistakenly added in previous commits.
|Patch Set 22: (8 inline comments)


|Uploaded patch set 23.
|Patch Set 23: Verified

adressed comments, minor changes - mostly formatting
|Patch Set 23: (8 inline comments)


|Uploaded patch set 24.
|Patch Set 24: Verified

minor changes, mostly formatting and javadoc, recompiled and ran tests.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Patch Set 25: (13 inline comments)


|Patch Set 26: Fails

needs few more tests from my side before ready for review round
|Patch Set 26: (1 inline comment)


|Uploaded patch set 27.
|Uploaded patch set 28.
|Patch Set 28: Verified

In this patch set added saving the password for iscsi usecase.
Also, verification of update connection is pending patch 
http://gerrit.ovirt.org/#/c/17288/
so the domain status will be retrieved correctly during canDoAction.
|Patch Set 28: (9 inline comments)


|Uploaded patch set 29.
|Patch Set 29: Verified

compilation,unitests,check on live env,rebased.
adressed Michael's comments - rsdl,featurehelper, not need the host details as mandatory, add more unitests for mapper.
|Uploaded patch set 30.
|Patch Set 30: Verified

fixed - address field should not be required for local storage, and is only optional for posix.
Added unitest for adding local storage via REST.
Fixed rsdl add/update for address field.
|Uploaded patch set 31.
|Patch Set 30: (8 inline comments)


|Patch Set 31: Verified

adressed Michael's comments
|Patch Set 2:

Can you explain at which point it fails? object creation?
Which kind of error/exception it produces and what is propagated to user - is it clear on user side (REST/UI) which value is problematic and why?
|Patch Set 1: (2 inline comments)

1. are storagepool/host id passed properly in delete/update usecase in StorageListModel?
2. what about REST? currently we do require host to be passed (and validate it) in both storagedomains resource, and in the future (not merged yet) connections resource. 
So the restriction/requirement should be removed, AND documented in REST documentation - since it affects the actual behavior of the action (with/without connect/disconnect attempts)
|Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)

commit message doesn't mention the storagePoolId change, it's important to state it there as well.
|Patch Set 3: Looks good to me, but someone else must approve

(1 inline comment)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified

unitests pass, checked on live env via REST.
|Patch Set 4: Abandoned

the problem solved in this patch will be solved as part of Allon's patch http://gerrit.ovirt.org/#/c/17288/
Thus no need to solve it twice.
|Patch Set 1: Verified


|Patch Set 1: Abandoned

not solving it well enough in Chrome
|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified

compiled, ran unitests.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (2 inline comments)


|Patch Set 2:

1. Please open a bugzilla for documentation so they will document the new REST option.
2. It's not clear from the commit message what is the new url option - usage example will be nice.
3. What are the possible errors - what does the user get if the action failed?
4. Unitest for REST will be nice :)
|Patch Set 4: (5 inline comments)


|Patch Set 2: (13 inline comments)


|Patch Set 8: (9 inline comments)

Sorry, didn't review everything, but here are some comments...
|Patch Set 1: (10 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified

compiled, ran unitests
|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (2 inline comments)


|Patch Set 2: (4 inline comments)


|Patch Set 2:

The enum just doesn't seem right here to me.
Who (which module/component) is deciding when and if the revert should be done - meaning which component decides on the stage/enum value? And the revert boolean - who is deciding on that?
I would recommend a completely different approach (which I explain below)
Create an interface that the relevant commands need to implement, the interface will contain 2 methods for each execution stage  - execution and tasks ended stage (the one for &quot;never&quot; is meaningless), and they can receive the &quot;revert&quot; boolean. The command is the one to know in which stage is the best to perform the operation, thus the relevant method will be implemented and the other one can have an empty implementation.
The methods will be always called by the command in the appropriate stage, so when the impl is empty it won't perform anything - which is the same as checking &quot;if&quot; on the enum value, while when the impl isn't empty it will perform whatever is needed based on revert boolean.
|Patch Set 1: Fails

not ready for review
|Uploaded patch set 2.
|Patch Set 2: Fails

missing more unitests. not for review.
|Uploaded patch set 3.
|Patch Set 3: Fails

not for review
|Uploaded patch set 4.
|Patch Set 4: Fails


|Uploaded patch set 5.
|Patch Set 4: (14 inline comments)


|Patch Set 5: Verified

still need to add locking of lun disks and VMs. all the rest of review comments were adressed.
|Uploaded patch set 6.
|Patch Set 6: Verified; I would prefer that you didn't submit this


|Patch Set 6: No score


|Uploaded patch set 8.
|Patch Set 8: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified

added one more unitest to add storage connection case, and fixed a bit the commit message.
|Patch Set 3: (2 inline comments)


|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4:

certainly
|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 1: (2 inline comments)


|Patch Set 5: (10 inline comments)


|Patch Set 5: (3 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: (2 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified

compilation and tests pass.
|Patch Set 1:

yes it can be merged. thanks!
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: (3 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

BTW (not related to this patch), some places create explicitly new empty guid:
For example:
 BlankVmTemplateId = new Guid(&quot;00000000-0000-0000-0000-000000000000&quot;);
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

isn't it better to keep it protected so it will be more testable?
|Patch Set 2: (7 inline comments)

my comments here are only cosmetics, because it's hard to understand the design /new logic from going over the patch. so whenever you can explain f2f the logic changes here - we can review it together.
|Patch Set 1: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Fails

Allon, something very strange is going on with this file. It is not formatted via IDE formatter. I even tried to checkout it and then manually edit it with text editor, same result.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 1: Fails

not tested yet on real environment
|Uploaded patch set 2.
|Patch Set 2: Verified

no code changes, just update to commit message.
Verified on latest engine from webadmin by updating an NFS storage domain.
|Uploaded patch set 3.
|Patch Set 3: Verified

no code changes, just reformatted code
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Fails

works but needs more unitests
|Uploaded patch set 3.
|Patch Set 3: Verified

addressed Allon's comments, added more validations to canDoAction, more unitests.
|Patch Set 3: (2 inline comments)


|Patch Set 3: (1 inline comment)


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified

just changed commit message
|Uploaded patch set 5.
|Patch Set 4: (14 inline comments)


|Patch Set 5: Verified


|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7: (3 inline comments)


|Patch Set 7: (1 inline comment)


|Patch Set 1: Rebased
|Patch Set 2: Verified

The validation code is duplicated in add and update commands since they inherit from different base classes, thus the common code cannot be placed in the parent class in order to benefit code reuse.
If you have any idea how to nicely reuse it (or maybe if the class hierarchy can be changed for AddStorageServerConnection - it seems to be the odd one) - please speak.
|Patch Set 2:

Sergey - thanks for your comment.

If someone changes the error message content (its text) - the test won't fail. If someone changes the type of error message (use a completely different error from VdcBllMessages) then probably the test will fail and will need fixing. I think it's good, because changing the type of error means a potential change in flow and perhaps in functionality. Having tests failed will be a good indication that it needs either fixing due to new functionality, or that a regression was introduced.  
I see nothing wrong in correcting unitests when needed. 
And though validator is good in some cases (and IMO the validator itself will also need unitests to see it works, so I don't see how it matters), some cases in CanDoAction check very different things (like checking connection validity, host validity, if something exists in db, etc) - it will require several validators anyway.
|Uploaded patch set 3.
|Patch Set 3: Verified

per Allon's suggestion, moved the validation code to base class so it can be reused by the 2 commands and not duplicated.
|Patch Set 3: (1 inline comment)


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

(1 inline comment)


|Uploaded patch set 4.
|Patch Set 4: Verified

changed the validation to check only the iqn, since the connection field is actually a mandatory field for file storage domains and iscsi (though it holds different information for each type). the validation of the connection field will be added in a separate patch for all relevant storage types.
|Uploaded patch set 5.
|Patch Set 4: (2 inline comments)


|Patch Set 5: Verified


|Patch Set 5:

Liron - I checked the code, thanks for the reference.
Regarding the port - you are probably right, I will add it in another patch, it doesn't have to be in this one.
Regarding code similarity - the method in AddDisk checks validity of connections of a specific lun. Indeed it checks for iqn/connection/port of a connection, however the method loops on lun's connections and the error message also refers lun. In the current patch there are no luns, just a single standalone connection.
There is similarity just in an if statement (if connection.getiqn is empty, etc) - I don't see much point to extract the code because of that single if, especially given the fact that the error message there mentions luns, and here the connection is standalone and is yet not related to any lun, so it will be incorrect to reuse same error message here and there.
|Patch Set 5:

Liron - design wise I'm not in favor of helper classes, especially for validation such as this. Usually extracting code to helper classes implicates that some things were not solved properly in the original object that uses the helper. (object oriented wise)
Per the the validation issue - the problem exists not just in iscsi, but in other storage types as well.
StorageServerConnections object is currently a big container having all fields of all storage types together. I think there are other better ways to model those connections per storage type in a more clear way.
The correct solution IMO is to have validation of required fields on the connection object (or in validator) based on each storage type (for example iqn is mandatory for iscsi but irrelevant for NFS, vfs_type is mandatory for Posix but irrelevant for other types, etc.)
Making a helper  for iscsi solves a very regional small problem and I prefer seeing this issue solved right for all storage types with a bigger refactoring, because such validation is good to have for all storage types. 
However - definitely not in the scope of this patch.
|Uploaded patch set 6.
|Patch Set 6: Rebased
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified


|Uploaded patch set 11.
|Patch Set 11: Verified

changed tests method names
|Uploaded patch set 12.
|Patch Set 11: (1 inline comment)


|Patch Set 12: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 2: Looks good to me, but someone else must approve

(2 inline comments)

good change, a patch a bit too big - hard to review :)
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve

I think that the message is warning and not an error, and should be in yellow and not red, but other than that it's fine.
|Patch Set 2: (1 inline comment)


|Patch Set 1: Verified


|Patch Set 1: Fails

following Daniel's comment, it's problematic to hide the format field for the following reasons:
1. for uninitialized data center, the format is not shown next to dc name.
2. though 1 can be taken care of by displaying the format field in that case,there is another problem - if the data center name will be too long, the format in the data center names dropdown list will be cut and not be shown, thus the user will miss that info.
so a better representation solution should be considered.
|Patch Set 1: Abandoned
|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: Rebased
|Patch Set 1: Verified


|Patch Set 1:

@Allon, no dependency at all. Can be merged separately.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: (2 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1:

I think that Dispatcher class is not needed at all and can be deleted after proper modification of Task and TaskContext classes.
Please have a look at classes Task and TaskContext.
Task initializes TaskContext with Dispatcher, however in TaskContext code , dispatcher field and usage are commented out.
|Patch Set 1:

what about unitests?
|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Rebased
|Patch Set 2: Verified


|Patch Set 2: (1 inline comment)


|Uploaded patch set 3.
|Patch Set 2: (1 inline comment)


|Patch Set 3: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: (5 inline comments)


|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified

Fixed Allon's comments
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Verified

(1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: (2 inline comments)


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 1: Verified


|Patch Set 1:

verified both firefox and chrome, both aligned.
|Patch Set 1: Verified

compiles, didn't find any leftover db column/script
|Patch Set 1:

this field was added by the following patch:
http://gerrit.ovirt.org/#/c/3435/
|Patch Set 1:

Can you point me on where it was used?
|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Rebased
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

minor typo in commit message
|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2:

yes you are right :)
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Verified

compilation, tests, jboss deployment.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: (1 inline comment)


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified

just removed a whitespace
|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1:

Please look at org.ovirt.engine.ui.uicompat.Enums --&gt; ImageStatus___INVALID, looks like need to remove it too.
|Patch Set 1: Verified

the compatibility version error message is displayed correctly in webadmin when trying to edit a storage connected to dc with version &lt; than 3.3
|Patch Set 1: Verified

compilation, gwt, deployment passes
|Patch Set 1: Verified

compilation passes
|Patch Set 6: (5 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 6: (3 inline comments)


|Patch Set 1: Verified


|Patch Set 1: Fails

fails on vdsm side due to known issue with posix connect.
|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified

adressed Liron's and Allon's comments.
Except for refactoring the test.
|Patch Set 2: (6 inline comments)


|Uploaded patch set 4.
|Patch Set 4:

@Allon, wait , I am refactoring the unitest as you suggested... one more patchset coming soon :)
|Uploaded patch set 5.
|Patch Set 5: Verified

refactored unitests
|Uploaded patch set 6.
|Patch Set 6: Verified

added an optimization in UI as suggested by Daniel (offline)
|Uploaded patch set 7.
|Patch Set 7: Verified

minor reformatting
|Patch Set 7: Rebased
|Patch Set 8: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified

verified now the problematic placeholder is populated
|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 2: (1 inline comment)


|Patch Set 3: Verified


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified

compilation + unitests pass
|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 1: (2 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 5: (4 inline comments)


|Patch Set 5: (4 inline comments)


|Patch Set 8: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve

thanks for catching and fixing it quickly, for some strange reason it never reproduced on my environment  - I tried it today again and it still worked well. (I mean without your fix too)
However it seems that in any case it is a bug worth fixing. Please follow Daniel's comment, the location he suggests is indeed a more proper one than the one I originally added.
Thanks again!
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified

rebased and fixed commit message.
|Uploaded patch set 2.
|Patch Set 2: Verified

rebased.
Verified:
1.Compilation with running dao tests
2.In webadmin UI modifying an active domain to see previous functionality was preserved (edit name and description), 
3.Copy NFS storage domain on the storage server to additional folder, then put domain in maintenance in webadmin UI , then edit path and override 3 additional options and save. Activate the storage domain with the new path with new overriden, it should become active. (also verified in engine log that all new configuration was sent to vdsm)
|Patch Set 2: (13 inline comments)

@Liron, yes,  there will be REST capability too for that feature, however since here the UI has full functionality, REST can be supplied in a separate patch.
|Patch Set 2:

@Itamar, this indeed fixes the second item Ayal mentions in comment # 7 in this bug 835543.
|Patch Set 2: (4 inline comments)


|Uploaded patch set 3.
|Patch Set 3: Fails

wip
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified

Added locks (also to add/delete commands), more validations to canDoAction, dao test and unitests.
Rebased.
|Patch Set 4: (14 inline comments)


|Uploaded patch set 6.
|Patch Set 4: (3 inline comments)


|Patch Set 6:

small refactorings based on Liron's comments.
|Patch Set 6: (16 inline comments)


|Uploaded patch set 7.
|Patch Set 7: Verified

Added lock on old path to protect race between remove storage server connection command and update storage server connection command, added moving storage domain to locked status during update operation, few more validations to canDoAction, more unitests.
|Uploaded patch set 8.
|Patch Set 8: Verified

more unitests, rewrote locking and some more verifications in canDo actions following reviewers comments on previous patchset.
|Uploaded patch set 9.
|Patch Set 9: Verified

added locking annotation to add and remove commands as well.
|Patch Set 9: (5 inline comments)


|Patch Set 9: Fails

need to add additional validation to backend and UI that will prevent edit when there are no hosts available.
|Uploaded patch set 10.
|Patch Set 10: Verified

Added backend verification for empty host and data center ids.
|Patch Set 10:

and unitests for those use cases...
|Uploaded patch set 11.
|Patch Set 11: Verified

added more unitests and validations for empty host and empty data center
|Patch Set 9: (2 inline comments)


|Patch Set 11: (1 inline comment)


|Uploaded patch set 12.
|Patch Set 11: (6 inline comments)


|Patch Set 12: Verified

Reformatted update command and its test class, removed validation of emptiness for storage pool id, added frontend validation that host cannot be empty (verified when there is host, and when there are no hosts).
|Uploaded patch set 13.
|Patch Set 13: Verified

rebased
|Uploaded patch set 14.
|Patch Set 14: Verified

Added disconnect from storage in update command, added in webadmin UI the ability to select any host to perform the update operation, not just the SPM.
|Uploaded patch set 15.
|Patch Set 15: Verified

just rebased...
|Patch Set 1: (2 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (3 inline comments)


|Patch Set 1: Verified; Looks good to me, but someone else must approve

had the same NPE problem in failing tests, this patch seems to resolve it.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1: (4 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

just a really small comment on commit message
|Patch Set 1: (4 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 1:

There's an additional file where it also exists.
|Patch Set 1:

Here are the relevant files where the comment was overriden with typo:

backend/manager/modules/dal/src/main/resources/bundles/AppErrors.properties

frontend/webadmin/modules/webadmin/src/main/resources/org/ovirt/engine/ui/frontend/AppErrors.properties
|Patch Set 2: I would prefer that you didn't submit this

The translated properties files (such as AppErrors_zh_CN.properties) should not be touched. Only the main AppErros.properties should be fixed.
|Patch Set 3: Looks good to me, but someone else must approve

now it looks great :)
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified

compiled with tests and with gwt
|Patch Set 1: Verified

compiled with tests and gwt
|Patch Set 1:

@Allon, no problem, will remove them in separate patch
|Patch Set 1: (1 inline comment)

A general concern about the patch - having more than one disk with empty alias, will lead to generate them the same alias, and then in UI it will be impossible to distinguish them. Perhaps I missed it , but is it treated here?
If not, perhaps it's better to add as suffix a timestamp instead of empty string?
|Patch Set 2: (2 inline comments)


|Patch Set 1: Verified


|Patch Set 1: Verified

compiled + tests
|Patch Set 1: (4 inline comments)


|Patch Set 2: (1 inline comment)


|Patch Set 3:

Laszlo, is this code safe to remove considering past versions/upgraded environments? Was there a point when database did allow it and the product might need to work with this old data?
|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1:

what's the purpose of running fixtures.xml?
other than that, I removed fixtures.out locally and compiled mvn and it's works ok.
|Patch Set 1:

I understand that the fixtures.out is useless. 
I was asking regarding fixtures.xml...
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2: (2 inline comments)


|Uploaded patch set 4.
|Patch Set 3: (5 inline comments)


|Patch Set 4: Verified


|Patch Set 3: (3 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 4: (2 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 4: (2 inline comments)


|Patch Set 5: Verified


|Uploaded patch set 6.
|Patch Set 6: Verified

just rebased...
|Patch Set 6:

@Maor, the bug fixed in this patch is about UI flow, not REST.
If the REST needs to be fixed too, it should be done separately.
Currently, the REST is not calling the &quot;disconnect storage server connection&quot; command at all.
|Uploaded patch set 7.
|Patch Set 7: Verified

rebased,  changed logic per reviewers comments, recompiled again with dao tests.
|Patch Set 2: (1 inline comment)


|Patch Set 3: Verified; Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

not very &quot;natural&quot; to make an inner class static if it should not be accessed outside, but it's not a big deal anyway. :)
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

one minor comment
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 1:

Could you please elaborate what problem are you seeing and what this patch fixes?
This patch was merged a while ago, and same dependency (utils tests) that is introduced there was introduced some time before that in other modules too, so it's not new.
|Patch Set 1: Looks good to me, but someone else must approve

It will be a good idea, following Liron's comment, to add in commit message which warning it eliminates..
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified

verified - creation db script on postgres 8.x
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2:

I haven't looked at the content of the patch yet, but the commit message is misleading.
I wouldn't say &quot;removed the ui event related classes&quot;, because no classes were deleted. It's either moved from package to other package, or renamed.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (2 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified


|Patch Set 1:

Allon got ahead of me in 1 sec :) same comment - it looks like there is some reference to it in DateUtils, and there's additional class named DateFormatCompat - please make sure the removal is safe. (maybe the reference in DateUtils is to the &quot;twin&quot; class...)
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified

compiled with enable-dao-tests
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: I would prefer that you didn't submit this

looks like you missed removing reference to deleted class in a configuration file: /frontend/webadmin/modules/gwt-common/src/main/resources/org/ovirt/engine/core/Compat.gwt.xml

Other than that, the patch is 100% good.
|Patch Set 1: (6 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: I would prefer that you didn't submit this

Marking -1 just to be on safe side (the code in the patch is completely fine) - I think you missed removing reference to NumberStyles in a configuration file:
/frontend/webadmin/modules/gwt-common/src/main/resources/org/ovirt/engine/core/Compat.gwt.xml
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Verified


|Patch Set 1:

Actually, even without fixing AppErrors.java the webadmin shows the correct message - I marked it as verified after checking the use case in the webadmin UI.
But I will fix the AppErrors.java as well to align it just in case...
|Uploaded patch set 2.
|Patch Set 2: Verified

added the fixed message to AppErrors.java as well
|Patch Set 3: (1 inline comment)


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 2:

I have produced a list of misspellings in the project.
Will submit several patches.
Specific one with Posix that you mentioned here requires IMHO a review from rest team to make sure that no one from outside relies on the broken name, so it will be a separate patch on purpose.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: (3 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: No score

(1 inline comment)


|Uploaded patch set 3.
|Patch Set 2: (2 inline comments)


|Patch Set 3: Verified

Verified on iso domain when it's active, and then when it's in maintenance.
|Patch Set 3: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 3: (3 inline comments)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Patch Set 6: (1 inline comment)


|Uploaded patch set 7.
|Patch Set 7: Verified

Rebased. 
Verified with iso domain in maintenance, active and also mixed statuses.
|Patch Set 6: (1 inline comment)


|Patch Set 1: (2 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

just see my comment regarding patch title
|Patch Set 1: Fails

currently should not be merged because there are duplicate keys in AppErrors. Should wait till they be removed and then add the tests for future validation
|Uploaded patch set 2.
|Patch Set 2: Fails

Fails - currently should not be merged because there are duplicate keys in AppErrors. Should wait till they be removed and then add the tests for future validation
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified

verified with and without duplicate key
|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 1: Verified

verified the following:
1. compilation and deployment on jboss
2. create a non existing nfs storage
3. create an existing nfs storage
in both 2,3 the engine log shows the renamed command was properly invoked as before the rename.
|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Verified

just fixed commit message
|Patch Set 2:

there are several reasons to keep the entire (and long) name - to be consistent:
1. storageserverconnection is an entity known by this name
2. this is how its related db table is called
3. this is how its symmetrical command addStorageServerConnection is called as well.
|Patch Set 2: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Uploaded patch set 3.
|Patch Set 3: Verified

just updated the commit message per Maor's request.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 4: Rebased
|Patch Set 5: Rebased
|Patch Set 6: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3:

I would like to add that currently the log is full with warning messages &quot; calling GetConfigurationValueQuery (ApplicationMode) with null version, using default general for version&quot; and same one for VDCVersion. It makes the log very hard to read thus making it very unhelpful.
The messages repeat themselves every 1 minute for a user login.
One way or another, this must be solved so the log will not be full with those warnings.
I was going to submit a patch myself for this issue, however seen this patch thus I won't do a duplicate...
|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: (6 inline comments)


|Patch Set 2: Verified


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1: Abandoned

mistake push...
|Patch Set 3: (3 inline comments)


|Patch Set 3: (1 inline comment)


|Patch Set 3: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 2: (1 inline comment)


|Patch Set 3: (5 inline comments)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified

(7 inline comments)


|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Patch Set 8: Verified


|Patch Set 1: Verified


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 4: Looks good to me, but someone else must approve

Roy,
please have a look at file common.gwt.xml
It mentions ObjectDescriptor (though with a bit different package, but there are no other same named classes...)
&lt;include name=&quot;common/utils/ObjectDescriptor.java&quot; /&gt;
Just to be on a safe side...
|Patch Set 5: (1 inline comment)


|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Patch Set 1: Verified


|Patch Set 1: (2 inline comments)


|Patch Set 1: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 1: (2 inline comments)


|Patch Set 2: Verified


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Abandoned

not saving us much (just very very little) as it's inside the wrapper and not the calling code - string concat will happen anyway.
need better ways to improve logs efficiency
|Patch Set 2: Restored
|Uploaded patch set 3.
|Patch Set 2: (2 inline comments)


|Patch Set 1:

Usually what happens in many production environments is either they are configured at ERROR loglevel at everyday activity, or if there is a problem they are switched to DEBUG.
The debug messages are the most frequent ones, and if they contain string concatination/expensive calculation/loading resources/etc- they can decrease performance.
Info messages by nature are less frequent and their impact on performance is minor so they are less important to have a guard statement.
You can also see in the same Log class that the method debugFormat has a guard statement (&quot;if...Enabled&quot;), however infoFormat doesn't.
|Patch Set 1: Verified


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

I would also add to the message the word &quot;host&quot; when you extract its name. (&quot;host name : ...&quot; )
Otherwise it looks as id and name of a generic entity...
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: (2 inline comments)


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, but someone else must approve

I checkout the change, compiles for me...
|Patch Set 1: (2 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: (1 inline comment)

pls see my question regarding hardcoded returning true one line method..thanks
|Patch Set 2: (1 inline comment)

pls see my comment in code
|Patch Set 1: Verified

verified compilation
|Patch Set 3: Verified; Looks good to me, but someone else must approve

compiled it, it compiles :)
|Patch Set 4: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 1:

Roy - ok, I removed the class you mentioned as well
|Patch Set 2: Verified


|Uploaded patch set 2.
|Patch Set 1: (1 inline comment)


|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified

Yair - please do merge :)
|Uploaded patch set 4.
|Patch Set 4:

yes Alon, wrong push, thanks!
|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 1: Abandoned

based on wrong branch
|Patch Set 1: Verified

compiled to make sure the code is not damaged.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

changed the order of the different checks per Liron's comment to make it more efficient
|Uploaded patch set 4.
|Patch Set 4: Verified

changed to use failCanDoAction per Liron's comment
|Patch Set 4: (2 inline comments)


|Uploaded patch set 5.
|Patch Set 5: Verified

expand .* imports to full class names
|Patch Set 5: (1 inline comment)


|Patch Set 5:

Maor, the ACTION_TYPE_FAILED_GIVEN_VERSION_NOT_SUPPORTED is not clear, it's too generic and not mentioning the entity that has an older version. I advised several people and we got to conclusion it is better to add a new clear message which mentions the actual entity.
|Patch Set 1: Verified


|Patch Set 1: (2 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 9: (1 inline comment)


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 3: (1 inline comment)


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 3: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: (1 inline comment)


|Patch Set 1: (1 inline comment)

pls see  comment in code...
|Patch Set 1:

(2 comments)
|Done
|Done
|Done
|Agreed
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|American English mandates the use of the comma as well as the coordinating conjunction. Organization standards may apply, but I suppose we don't have any, so I'm using the common American style (meaning I added &quot;and&quot; after the comma, not instead).
|Added and, not replaced, following American English standard.
|Already used this one, see line 1202
|This one and SaveStorageProperties are the two I can think of. The latter suggests that it's all of them, so I like it even less. If you have a better suggestion I'd be happy to apply.
|Will be removed from this patch.
|Added and, not replaced, following American English standard.
|Have no idea, I thought I got rid of that.
|Added and, not replaced, following American English standard.
|Sure I will.
|This should stay here, should also add *rename_key*, in later patch.
This is confirmed with Eli.
|I was taking FreeSpaceCriticalLow's (line 873) lead.
Is there a difference?
|Shouldn't be here, will be removed
|Done
|I know this is bad, couldn't come up with a better one. I can overload saveCommonStorageProperties, but this just seems bad in it's own way. Other suggestions are welcome.
|Done
|Done
|Done
|low_space_threshold is percentage, so 0..100.
critical_space_threshold is in GB, set initially by us to 5. We don't expect users to touch this, and if so then probably to 0. In any case there's no meaningfull use case for big numbers.
Int should be fine for both.
|Ack, will remove.
|This was done having seen some other code like this, but this is not the first review saying it should go to the backend, so to the backend it goes.
|Well, if this is removed from here, like both you and Juan suggested, there's not format issue left.
|I know, it's on my todo list, I'm forced to push incomplete patches. I'm sorry this keeps popping up for you in the process. If it'll make it easier for you I'm good with a -1 from you and it'll be my responsibility to let you know when I've finnally taken care of this....
|Yes, but the comment refers to what happens when both conditions are met. It should focus the reader on the fact that even if the two thresholds are met, only the second message gets in, which is indeed the desired behaviour. In other words, someone not familiar with this code might think there's a bug here, and the comment states this is the desired behaviour, rather than a bug.
|Done
|Done
|Done
|Done
|Actually, all of this is not in use, removing it all.
|God no, this snak in here from a patch on top. Will re-post.
|It's been suggested offline with ydary that we leave it for now, as 100, as this is arbitrary just like any other number. Once the tooltip warning is enabled (framework is currently broken, should be fixed soon according to Greg), this limitation will be removed and we'll let the user abuse our system. Are you good with this?
|Don't we? Do we really want to invite this abuse? And the problems occurring in abusive customers? I'm not set on 100, but there should be a limit and it should be reasonable.
|Done
|Done
|There's a test that executes the command. There, if there's no user-set values for thresholds, configuration values are loaded. This was absent from previous patches since this was checked in REST before, but was moved here at yours and Juan's request.
|There's a test that executes the command. There, if there's no user-set values for thresholds, configuration values are loaded. This was absent from previous patches since this was checked in REST before, but was moved here at yours and Juan's request.
|Done
|OK, though  I do think that as a reviewer your job is to question the code, hence you assume this is a bug, but as a reader you probably would have just understood it.
|Probably some auto-shit. Will move back.
|Done
|Done
|Done
|Done.
|Done
|Done
|Done
|Done
|Done
|Done in patchset 10
|Done
|A. Done.
B. What's the issue with Cinder? I noticed the issue only in Glance.
|derez, you suggested -1. Any objections to null?
|I will.
|Glance is indeed &lt;1 now. 
This class, on the other hand, is only in storage general subtab.
Will continue with caution.
|Needs a name change, until it's +2ed it's easier for me this way. Not marking as verified until this is changed. Please give +2 pending this change, not -1, as this will be counter-effective.
|useless code that can cause an NPE (and actually does that in test(s)).
|Done
|Done
|Done
|Done
|I don't this is related to this patch. I will gladly add a patch with this comment. Agreed?
|It's not totaly removed (look at the next patch). This was the result on not needing a default value to size anymore.
|OK, I'm removing it so I can move forward with this and other patches. This looked redundant, but certainly not wrong (without the change), so there shouldn't be any harm in just returning it. Lets talk and if need be, I'll add a patch later on.
|I think it'll be too much for a key.
|Should have removed all. A typo caught my eye with the class, then I expanded. Will fix.
|Naming - I would suggest BaseGetAttachableDisksQuery, as it's supposed to be a base for filtered as well.
|The &quot;All&quot; here bothers me. How about: GetFilteredAttachableDisks ? Shorter too...
|Same issue with the naming -  GetFilteredAttachableDisks ?
|Only redundant if you know the location of each module by heart. Sure, you can look it up, but why?
|Not, removed.
|It's not. I thought we let these minor things slide...
|I didn't. I said I'll deep copy it plus there's no good reason not to deep copy it as it is.
|There's no setter to snapshots, yet copyOf implementation creates a shallow copy of this list. Will re-implementing it to be a deep copy and submit a new patch.
|I didn't. intellij somehow did.
|Same as before.
|Same.
|Use the new message here as well?
|s/shared file/Shared File
|What's incorrect?
Domain Type is currently either export domain or iso, in the two usages in the code, so no need for &quot;the Following&quot;.
In the iso event - it can only be created on a file domain, so again. no need for the following.
Since there are two different usages for this message I would suggest two different messages.
|s/does/do
|I would keep the condition order as in the if on line 116 (or change the order there). The similarity between conditions is more clear this way.
|Yes, as soon as I have the bugs :)
|It's used here, you're just saying it won't be in the next patch.
|If the storage is locked, the above greatly named method will add a message and return false, and so will this statement.
|Looks like.
|Well, *I* didn't, but reformatted the whole thing now.
|Now returned
|Automatically done by the formatter, amended manually, see if it'll hold.
|Why? The whole point is not to be able to edit when it's locked.
|I'll remove because it's not related to the patch, but seriously? I disagree, it's sooo ugly.
|Done
|Done
|Done
|Actually, bringing the model here looks bad, unless I'm missing something...
|What goes in here?
Why are description and comment also missing?
|Done
|Yes, I guess so.
|Done
|Done
|Done
|Done
|I probably meant to move it here and forgot to remove it from the previous spot.
Alas, it's been so long I have to take a deeper look. Will look into it soon.
|I'll take you up on your suggestion as I have nothing better in mind :)
|Actually, I kind of agree the new name represents better what we're checking, but why is alerting the user that he can't do the operation because the VM is attached to a pool wrong?
|ack
|The same issue. The VmDevice getter checks for null, and if null, returns false. Objects.equals will return false, when logically it's true.
|Because null is not false. A test failed on this, so could actual code.
The original settings could be null for both, yet these options will show they're not equal. You rely on the value to be false if it's null in one occasion an not in the other.
|tags make this less readable IMO.
|The name both here and bellow is misleading a makes me think this is just Id generation without reading the comments.
I'd change the names to something like cloneDisk, cloneDiskWithNewId - on the latter (line 67), and to applyDiskIdToVolumes or something simillar to the first (line 52).
Also, IMO, the comment about adding the disk to the map is enough in the later method that's actually doing it, though I can see why you'd want it here, so whatever you think is best.
|s in the end seems to be there by mistake.
|At this point I would just return allDomainsHaveSpaceForDisksWithSnapshots.
|s/any(List.class)/anyList()
|s/any(List.class)/anyList()
|This will fall into the else in line 515, and the actual message does not mention a user, so this scenario is already handled correctly (tThe key does not reflect that).
|2. Although the type name begins with USER for failure, it does not actually contain any user. So no issue there, other for wrong key naming, which can be corrected in another patch.
This is also why I used this flow, which looks less clattered, and is also my answer to 1.
|Copy paste is evil. Will rectify.
|s/disks's/disks'
s/the/The
|alias
|Seems like a redundant empty line to me.
|s/disk's/disk
|s/disk's/disk
|s/disk's/disk
|s/disk's/disk
|IMO s/Detach/detach .
If there are other places with Detach in the dialog, they should be changed to detach and not the other way around.
|Done
|I had to do this for visibility for the test, which is in another package, so protected is not good enough.
|Done
|On mImages.
|Best part :)
|In a previous patch we've established that the nicety of assertThat goes to hell without ValidationResult, and that with boolean it doesn't matter, which is also the case here.
|The collapse size is the minimum between the virtual size and the sum of all snapshots, which is why they're taken into consideration. This is done in StorageDomainValidator size calculations.
|Done
|Done
|Done
|How about - createDiskImageWithExcessData?
|Done
|Done, though this is not the final size of the list (probably).
|There's a hierarchy to maintain here, too much trouble for this patch. This should get into the whole refactoring we want to do with all these commands' CDAs.
|Naming was a leftover.
This is done for each of the implementations, so I wanted to extract it out. Long story any way. I can change, it'll be &quot;nicer&quot; code, yet less self explanatory IMO.
|Done
|I'll think of something else. It can't be get though.
|disksList is updated.
|You're right, cached is enough.
|Done
|WIP, this patch is way from done, just wanted it in gerrit above the hibernate...
|Done
|Done
|The threshold is set no matter what, I just changed it.
Allon prefers the assertThat way, I can use assertTrue either way.
I can separate it into two tests anyway.
|Done
|I got checkstyle without it...
|Not exactly, depends on the threshold value in the configuration, there can be a case where the threshold has been met, yet there's enough space for the request.
|Will do.
|Yes, residue from a not static findStorageDomainForMemory iteration (for tests).
|You mean to this function, not to the handler, I suppose. Will do.
|disksList contains memory and metadata images dummies, in this order.
For metadata VolumeForamat is already set to sparse.
I did add disk aliases to dummies for clarity and considered using these for filtering here, but seemed like TREFA VENEVELA situation to me.
|And do what with it? public method returns storage domain, can't add this to CDA at this point. Note there is another CDA message stating there's no good domain for the request in HibernateVmCommand.
|Done
|OK, so this can't be done the way you suggested since the return value is bool and not ValidationResult. I changed to assertThat ... is(true) and is(false) for the next test. Check out the latest patchset.
|Well... not exactly, will handle soon.
|Done
|No, since storage allocation validations should follow the rules described in the StorageDomainValidator, and all storage allocation checks in the system should use it. But my check should probably be integrated with this one. Will have a closer look, thanks for the catch.
|Ack, will open the bug soon.
|Source domain id was empty guid, resulting in NPE when trying to get the source domain according to this guid in LiveMigrateVmDisksCommand.validateSourceDomainsSpaceRequirements()
|Will check.
|Indeed NPE. Will fix. patchset #3 doesn't fix this.
|s/resported/reported
|Please add comma after execCmd.
|s/temproray/temporary
|It's the same test for both snapshots and new disks, since when creating a snapshot we want to check there's enough space for the new AI.
|Moved around the code, only new thing is other storage validation for cloned disks.
|has to be anyList. This is what jenkins complained about before.
|Done
|Done
|No, this was extracted in order to perform the validation in case there are no disks in the the disksList (&quot;new&quot; validation), yet there are memory disks (&quot;clone&quot; validation).
|c++ assignment bug avoidance habit. Will change if it bothers.
|storageDomain is a non-static field.
|Caller is MultipleStorageDomianValidator. Since it operates on two lists - disks and memory. The lists are extracted from a map according to sdIds. If for one of the SDs there are no disks - there's no value in the map, and null is returned and passed here. If we pass the responsibility there there will be a lot more checks there, and then an empty list will have to be artificially passed here, which is worse than the current situation.
|yep, here too.
|Done
|Done
|Done
|Actually this is redundant, as it appears in setUpDiskValidations().
|Done
|Not applicable here since this is general for all tests.
|I know, but I only had to do this for the !#$$@!#$ test, and is not worth my time thinking about an appropriate other name that will also indicate there is no difference. If it's worth your time please suggest a *good* name :)
|I think in this patch is appropriate, amended.
|Done
|Done
|Done
|Done
|Done
|Don't know how this sneaked in, going back to anyList. This is what jenkins complains about, BTW.
|In the storage allocation context it's cloned, as opposed to new.
But it's better to keep the terminology of this class so I'll change to memoryDisksList.
|Will do.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|In order to be able to mock
|Done
|Done
|Done
|For the use in static generateDisksList. Why not?
|Hmmmm, there's a message from the validatior, but it's always about the target domain. Will Reorganize.
|In MoveDisksCommand.handleChildReturnValue()
|Done
|s/too/to
|Redundant empty line
|s/version/versions
|s/version/versions
|s/version/versions
|s/version/versions
|s/are belong/belong
|Would look better if cut into two lines.
|These methods are used in other tests I haven't touched. Can be done in a different patch to amend those tests as well. Should that be handled, so it the whole not-unit-test convention of said tests.
|Done
|Done
|Done
|Done
|By mistake, will fix.
|Maor, what do you think? I'd like to be done with this ridiculous patch.
|Not sure. I followed this comment since and the lack of CreateVmCommand confused me, so I assumed the meaning was for AddVmCommand and fixed the comment. If what you'e saying is true the whole comment should be removed.
|Done
|Done :)
|Changed to direct-LUN. directLUN seems too programming-language to me.
FYI, other entries just use LUN or LUNs, except for yours.
|Just a matter of naming - I don't like the fact that you're switching from singular to plural (connection --&gt; connections). Should be plural all the way IMO.
|s/Use now/They now use
|Yeah, I know, thought about it, but this patch is only a preparation step towards the final verification in the next patch, and that one will need the value as well. There's no sense in writing it this way in this in-between patch only to rewrite it in the next one.
|The snapshots are collapsed, but when validating I don't know to which size. I know the absolute maximum is the sum of snapshots sizes, and for that I need to take them all into consideration. I also know it can't be more than the disk's capacity/virtual size. StorageDomainValidator takes this into consideration and takes the minimum between the two in hasSpaceForClonedDisks().
Checking only the actual size is the bug this patch is trying to fix (917682), using the uniform hasSpaceForClonedDisks, that was previously written in order to be embedded throughout the system.
|s/values/value
|Didn't address my comment... - s/to/with
|/this/these
|Is there a redundant empty line here or is it just gerrit?
|/to/with
|LOL, will remove
|yep, that wasn't supposed to be so.
|It's not a good idea to use timer.sleep. It would be better to use udevadm control --reload-rules inside udevTrigger, so you only block the needed amount of time, if any.
|Done
|Done
|Done
|Are you referring to the last two init funcs? if so, I'd rename the first to something like updatePoolMD since this is what it's doing anyway.
|Done
|Done
|I prefer to do it in another patch.
|This whole method can be:
return getSupportedDiskInterfaces(osId, version).contains(diskInterface);
|Consider extracting this to a method since it's used again in isDiskInterfaceSupported.
|Should add a test in DiskValidatorTest
|s/as the master domain id/
s/to aren't/&lt;something else&gt;, not sure what you mean to day here.
|s/then/than
|s/uneeded/unneeded
|It looks like it's going to work, and I don't mean to discourage you, but it would be better to push findDomainPath() into getImagePat90h as follows:
def getImagePath(sdUUID, imgUUID):
   return os.path.join(self.findDomainPath(sdUUID),  'images', imgUUID)
Then call getImagePath() as before.
|s/contenxt/context
|Really not sure, it's the former use, and as the *former* use it is, and will always be, buggy.
|This is not a cleanup, I can't properly test without this.
|Will adjust.
|Done
|Done
|Yes, I forgot to get back to that when it finally worked. Amending.
|Done
|Agreed, added as a remark for clarity.
|Done
|Agreed
|Done
|Done
|Maybe you'd like it better now, checkstyle was fine before as well.
|Agreed
|Will improve that, still thinking how exactly.
|Will do
|Sure.
|Look inside! when getStorageDomain returns null. Looks too cautious to me, but I followed code elsewhere.
|Sounds like a good idea, although there's already another message for locked. I'll check it out and resubmit.
|This would change the logic of this if.
If you are sure there's no chance of null here this should be refactored and tested in another patch.
|(active ne active) == false.
That's fine.
|Please note the previous test was actually wrong and passed a bad implementation of the message adding, which is also corrected in this patch.
|Too many possibilities indeed. Previous patch added the specific message - &quot;Storage domain already active&quot;, which needs no further suggestions, but then it was suggested to handle generally since this might happen for several reasons and we want a general message on the one hand, and giving the user some useful info on the other hand.
|Done
|There's a limit to the number of characters, you know...
Will change though.
|Done
|Sorry, engine naming. This is verified against engine (only code is used).
|Motivation is engine compatibility, will clarify.
|Allon, followed the norm in this file.
|Wasn't there before, I thought it might fail the script. If it won't, will add.
|Because there's a limit to how long the error message can be, and I'm a character away from that limit.
|Done to both.
|More important does not mean the other issue is NOT important. Current situation is exception-name almost equals already-agreed-upon-bad-message. Why do you want to fix the whole thing and then have an exception name that turns not really related to it's error message? What if were totally different? would you still want the older exception name? I think you should look at this extremity to decide, and if you still think the naming should remain the same please explain why.
|Ack. Note that when digging into the code in this exact flow the same devices are referred to as pvs. Maybe this should be changed as well (in a different patch, of course).
|getReadOnly() returns Boolean, and as such can potentially (and AFAIR actually did in at least one scenario) return null, while addManagedDevice expects boolean.
|Same as above
|disks and alldisks duality is redundant and was removed in previous patches.
|I'd extract (disksVmDevices.get(disk.getId()) for clarity, especially since it's being used twice and might be used again in the future.
|There were talks about this fact being buggy and should be changed in the future. But AFAIK at this point Liron is correct.
|I second that.
|This has to be Boolean in order to comply with rest, as is isPlugged.
|You can use the previous c'tor, no need to explicitly mention it here since it has no relevance in remove.
|else after return? did you really mean to do that?
|So you didn't mean to do that :)
Some people say that for future code changes easily enters bugs when the else is missing, so with that reasoning I don't want to argue, but there are so few of them I had to ask.
|Use shouldUpdateDeviceProperties() in if instead.
|Please move up one line just so this will be a bit more organized.
|If it were before the start then yes, since it's supposed to be after the start, the service have started anyway, true here would have failed the rest of the flow, which is unnecessary.
|Why not use _metadata() ?
|This looks different than origin with no explanation as to why this is ok. Was this intentional?
|Please rephrase:
Added a log entry that contains the failed storage domains names when a VDS connect to storage domains is unsuccessful
|s/which/that
s/are does/do
|s/found/find
s/which does/that do
|Maybe warn for unused/orphaned classes?
|I agree, should be find.
|s/metched an/matched with an
|s/can not/cannot
|Did you ignore Allon's comment regarding empty blocks on purpose?
|OMG this is hideous. I know it's unrelated to the patch, but pleeeeease consider a cleanup.
|Problematic naming with regard to setter/getter. I don't have a better idea though. Maybe another reviewer will...
|s/can not/cannot
|a. This has to be changed, you don't have possessive here and you can't add it at the current state of the sentence.
b. How about (trying to solve both issues): The SPM priority of 
Host ${VdsName} is set to never. This Host can never be elected as SPM.
|/s/suppose/supposed
Only because you're already at it. This comment is wrong in so many ways, I don't think you'd want to get into that.
|Make sure to change to preferred here as well
|This should be propagated into HostListModel naming as well
|+1 on the first suggestion.
|Consider rearranging the helper methods so that they appear after the method they're used in.
|Please ignore.
|This is no longer paramConnection, just connection.
|It's a good name, and if length is necessary I'm all for it, but it seems to me there's TMI in the name and a shorted version is preferable, assuming it still conveys the meaning. It really is just a suggestion.
|Isn't isConnExists() enough? This really is a question, BTW.
|This sentence is not clear. Suggestion:
Make sure there are no storage domains nor lun disks using a storage connection before it is removed in RemoveStorageServerConnectionCommand.canDoaCtion().
|Just a thought - did you consider just adding the two messages apart (disks &amp; domains) instead of a joint message? I know the one message is neater to the user, but it involves more code to maintain for us, and there's nothing logically wrong with two messages to the user.
|It'll be neater to extract the domains names to a list and use StringUtils.join() here as well, or even prepareEntityNamesForMessage().
|In the original message it says the problem is there's more than one. You removed it and only say what domains are in question, inexplicitly saying there's a problem when it's more than one. I think this should still be explicit.
|I think it should still comment about the &quot;more than one&quot;. This is also correct for the following messages. Otherwise the first thought might be - so what? Even if it's only for a brief moment, it's better to be as clear as possible.
|Yes, sorry.
|Same as VdcBllMessages
|s/a/an
|/s/to/for (first one)
|/s/toward/towards
|s/on what/in which
|has coocured
|Maybe - working towards deprecating Move ...
|s/operations/operation, s/can/might
|Do you mean due to two vdsm calls overhead? If so sneak it in. Otherwise it's not clear why it's slower.
|s/few/several. And is this going to be answered in the future in this patch/other patch or never?
|s/when/while, s/. the/. The
|s/on/in
|Is the decision to leave MoveOrCopyImageGroupParameters as it is (not separating) concious?
|s/Initial/Initialize, while you're at it...
|Define parameters before if, do what you already do in if except returnning from it, and return parameters either way after if.
|I disagree about readability, but there's no overhead in what you're doing, so I'm not insisting.
|Much better!
|I think what you mean is 'the following' and not 'the next'. Applies to the next comment as well.
Also - code duplication between this section and the following one. Any reason not to extract to a function?
|Yeah, just saw that...
|I would extract the specific guids to variables for readability and easier maintenance.
|I think you should use the enum state here instead of polling. Both to be aligned with the first state and for encapsulation sake.
Also:
s/Changed/changed, s/task state/state. There's some duplicity in the second.
|Same as above for wait for poll and others.
|Entity is singular and &quot;some of&quot; and &quot;were&quot; are plural. If it should be entities then it's not aligned with the first parameter. So this should be re-thought.
|s/entity/entity's
s/will be/are
Sorry about the latter, just noticed this.
|typo in procceeded, not sure what you meant, probably processed. Perhaps proceeded? If the latter then better wording would be 'will proceed'.
|s/list/images, then use images in rest of func.
|What problem should that cause here?
|This is not a sentence, takes too much time to understand what you're trying to say. Please rephrase.
|I actually think we SHOULD leave it. In the case some change is introduced somewhere up the hierarchy tree, nobody is going to remember this should be re-added here. It's a bug waiting to happen.
|Inheritance should work like this:
If the father does it, assume sons do it too. if you don't want it, go to them and change.
Your approach has the same issue, only in reverse. If I add something everybody else needs, I'll go make sure they do use. This is the opposite approach, and not what's intended in inheritance. I get that we often break it and with good reason, but I don't see a reason to do it here. Discussed with Maor offline, BTW. If this get's +2 like this I'm not going to raise hell, but this is still my opinion.
|I still agree with Liron, just for future enhancements.
|Usually toString() is preferable, though it doesn't matter here.
And I know this isn't related to the patch , but the enum value is i6300esb and not i3600esb, so have you any idea how come this is working?
|Should also be fixed in line 45, sorry for the ping-pong...
|s/snapshotValidator/snapshotsValidator (plural snapshots for more clarity).
petty, i know...
|I'd change the name to NonEmpty/Populated instead of Full. Full is misleading.
|The following is one very very very long sentence, this is practically unreadable.
|s/was/were
|s/fail/failed
|Just wondering, is this still necessary and in this format/phrasing?
|I think that for debugging issues this is confusing. If I first see it when debugging I would wonder which is the correct one, the message or the key, and whether the flow (not failing upgrade) is indeed correct as it doesn't fit the key.
|UPDATE_STORAGE_POOL_ENCOUNTERED_PROBLEMS maybe?
Changed to update since other keys are like that. Need to change value accordingly too.
|Then change the key, since it actually says failure.
|Assuming this stays, you should add &quot;upgrade failed&quot;, just to be perfectly clear we're not in a might-be-broken status.
|s/th euser/the user
|s/later/latter
|s/exists/exist
|/s/command/commands, /s/were/are
|/s/call/calls
|Why? We can do this offline.
|Why not return false here?
|as above
|/s/withing/within
|That should be within range or upto threshold, but only if you're really petty.
|/s/which/that
|Why the change from false to true?
|As before - Justify the change of boolean value
|s/as/when ? As is not that clear here.
comma after returns. s/non exist/non-existent
|comma after side
|I don't really understand the commit message. Please rephrase.
Specifics - can treat? it's not heuristics, either it does or it does under certain conditions. It's also not conclusive if this is before or after this patch.
s/it the/the .
Also break the sentence somewhere, this shouldn't be all in one sentence.
|s/exist/existent
|I know this was already here, but maybe in another patch - getParameters()
.getParentCommand() == VdcActionType.ImportVm test is done twice. Once here and again in 198, so it's redundant here.
|if-else is more appropriate here now.
|Comment is no longer relevant.
|You can initialize on declaration and avoid this else.
|I think if-else is more appropriate here.
|I don't like creating same two SnapshotsValidator objects one after the other.
|You can just return getVm == null &#124;&#124; ( isVmNotInPreviewSnapshot() &amp;&amp; isVmNotLocked() ) )
|Why the removal of the CDA message here?
|s/ExtendVolumneVDSCommand/ExtendVolumeVDSCommand (extra n in volume)
|/s/propegate/propagate
/s/there/, where
|nope, I intentionally fetched before and was in master.
|Weird, git grep didn't catch this one.
|Don't see it in this patch or dependencies (Or existing code of course).
|/s/prevent/prevents.
Did comment on that before.
|/prevent/prevents
|Will fix to razes typo in next commit.
|Also - totally not true about the timeline. The opposite is correct.
|I see what you mean, but I don't see a clash between the two. The other patch is not sufficient because the MountError will not be propagated to the engine, so the bug will not be solved unless this patch is enclosed at least in the other. I also think that since the two don't clash and there's a working solution it should also be merged, unless it's nacked on it's own merrits.
|I disagree. This patch fixes a specific bug, while 12042 sounds like (from commit message) &quot;lets make things more beautiful&quot; and is unrelated to the bug this patch should fix. Not in comment and not in bug url existence.
|In general this is true, yet here we would like to remove the directory should the mount fail on the one hand, and reflect the true problem in the connect function on the other. We don't really care whether the removal of the directory succeeded or not, yet we want to true cause of the problem to be propagated.
|Is this really in the scope of this patch?
|Will add log.
|I believe this is beyond the scope of this patch as it attempts to fix a specific bug. I don't object to submitting another one after this one. Ayal?
|I don't get what you're saying, this function is obviously doing something. In any case, Dan's comment suggests this is not the function I should be touching for this bug.
|Ack.
|s/GetPermittedStorageDomainsPByTemplateIdParameters/GetPermittedStorageDomainsByTemplateIdParameters

(Redundant P there).
|Done
|Done
|Done
|s/VM's/VMs, s/which/that
|/s/are don't/aren't
|/s/not/no
|s/which/that, either 'a stateless VM' or 'stateless VMs'
|remove last already
|/s/witch/which ?
|/don't/aren't
|/not/no
|/already// - either one
|In the test you proved your point for everything other than (true, true).
|How about a one liner using &lt;? :&gt;   , while you're simplifying?
|/hand/hang
|That's a bit long. I'd assign first and ? : after on the left parameter. Just a suggestion.
|I suppose, will remove.
|Done
|Done, will also change in all other places. Notice on re-review.
|Deprecated, as is the next. All untouched methods in this patch are deprecated.
|Feel free to suggest other names.
|Huhh, silly
|*I* didn't, but OK.
|/in/into , /out/out of , and remove the 'of' after the parentheses.
|/aren't/isn't
|No need for &quot;this&quot;
|No return value - why get?
|The same as above, why get?
|4 uses of ConstantsManager.getInstance().getConstants(), consider moving into a local variable.
|No need for &quot;this&quot;
|You showed me :)
|You should explain why it's no longer needed
|You should explain why we don't need it anymore in the commit message
|/fir/for
|Wouldn't it be better if it were vm instead of getVM() now that the new method was used?
|remove last redundant meanwhile
|Any reason to leave refreshCapabilities in the beginning? And why only one colon when hereafter you use two?
|The same as before with VDS
|Why, oh why, don't you return here?
|/call a/call, a/
|Fair enough
|Add ending ) to comment.
What is the check? Unclear comment if you just read the code and not the patch.
|Sure, just remember to do it :)
|I think else here instead of returnValue assignment to false and next is clearer. It's not a must, just think about it.
|An extra empty line
|refactoring? not sure myself, but I think it sounds better.
/enabled/enables
|/tst/test
|copied and pasted, not relevant anymore.
|/if/whether. Or any other better English.
Also for the two methods above.
|copied and pasted, not relevant anymore.
|State in method name, status as argument.
If you fix make sure the JDOC still complies.
|/movVm/MoveVm
|/meant/means
|Nice :)
|This is done either way now, which looks logical. Just making sure not by mistake.
|Now this is (mild) abuse. Consider checking the DiskStorageType inside canRemoveDiskBasedOnImageStorageCheck() and just return the latter.
|I guess this is a gerrit newline, just make sure.
|Revise comment. It'll be confusing in the future.
|This is the only change in the file - why submit?
|You're right (of course), didn't notice something there.
|You're returning true if they're NOT the same. You'd want to remove the !
|You'd better just check for getAllowDuplicate directly and return true immediately, also save the lock that is only left to be unlocked in this scenario.
Then you can leave the try-catch block untouched, unless you'd like to take this opportunity and make it nicer.
|If iface can be nul in freeMac it can also be null here. I suggest you move the check here and remove it from freeMac.
|That's it, IS_SPM would have probably been better, but that's an existing constant.
I'll change while I'm at it.
|Will rephrase
|Actually, they weren't here before, and I did put them at the and of the line, and when I save they constantly go down and are placed at their own line. :-&#124;
|Looks like you can extract this from the switch to catch both cases at once, unless, of course, it's important to test for the connection parameters first (ISCSI CASE).
|Accessor?
|Yep, I didn't mean to answer the question, I meant access modifier...
|/s/_irsProxyData.get(storagePoolId)/proxyData.
Apply to next two methods as well.
|Check if null is missing
|I agree this is very clean, but getNetworks() isn't a simple getter and shouldn't be called if you fail beforehand. I'd separate into two ifs.
|Same comment as previous file.
|/same/the same, not that important, I think.
|1.severity in not initialized here anymore.
2.No use of local variable severity after assignment, should be discarded.
|singltonMap
|/error/errors
|There is no use of this i this patch.
If you want to add a message to the engine you can follow this wiki:
http://wiki.ovirt.org/wiki/Engine_Adding_Messages.
And of course use it somewhere in the code.
|/can not/cannot/
/reatated/restarted/
|That should be executor, both here and as the class name
|I'd rephrase:
We want to disconnect from the storage domain only if it's inactive
|Should add here pool id as you did before
|No modifier?
|why the call to super?
|/creations/creation

Returns void, please adjust the comment.
|Any reason not to separate the existing wrapper test from a new executor test?
|Not anymore
|Line gets cut here
|Maybe after trying?
|Sorry for the hassle, but is it a gerrit issue or a redundant empty line?
|Why not use failCanDoActionMessage()?
|Adjust comment to include VIDEO
|/to to/to the
|Comment is misleading now
|Looks like a leftover from a previous change, please check it out.
|getVm() is called 4 times, why not extract?
|getVmTemplate() is also called 4 times, I'd extract.
|From following code it looks like getVm() could return null.
|perform A batch
|s/outstanding/hanging.
I think you meant upstanding, but that's also not exactly right.
|to A single
|Remove THE call, s/this/these
|s/was/is
|s/need/needs
|s/if//
|s/catched/caught
|Maybe it's just gerrit, but looks like a trailing space was added here.
|s/it/its
|s/only the/only for the.
Or just totaly rephrase (preferable)-
Only pre-existing vms should have ovf_generation set to 1, so ...
|trailin spaces.
|Unclear comment, please rephrase
|s/needs/need
|I'd extract the last three operations into a 'clear' method
|s/which/that
s/disks is/disks are
|Why the extraction into a variable, it's short as it is and is not used again
|Extract DbFacade.getInstance().getVmNetworkInterfaceDao() into a method and use bellow as well.
|should use List on the left hand side and java naming convention.
|s/which/that. I know it seems petty, but it's grammatically incorrect this way. Thanks.
|s/increment the generation for the vm/template with the given guid by 1/increment by 1 the generation of the vm/template with the given guid
|s/which/that
|/and//
|/codemin/code in
?
|oops...
|It isn't.
|Will fix.
|It doesn't matter since there won't be 3 messages once I fix the above, but just so you'd know - the message is clear. It says what was expected and what is there instead.
|Will, fix. Note that this means no messages here at all.
|Sorry, same comments as dependent patch.
At the very least if you don't like returning the if condition, return true or false straight away. There's no debug advantage here, you can see where you're returning from and with what.
|I'd get rid of isValid and just return the negation of the if condition.
If you really have an agenda against that, at least return true or false when you can and still get rid of isValid.
|I'd remove this empty line. That'll get you -8 lines too!!
|redundant empty line or is it just gerrit?
|Again?
|Please correct me if I'm wrong, but the generated string is of size GENERAL_MAX_SIZE, which doesn't have to be 5000 (and is actually 4000 according to my check, though it doesn't matter).
|I don't get the naming of this method (I get that overloading is taken, but this name doesn't seem right). I also don't get the naming of the new constant. The returned string isn't being used as a name, specifically not in this patch, and even if it were, this class shouldn't know about the uses.
|/aren't/ain't. kidding. change to don't, while you're at it.
|Why is it &quot;A&quot; and not as the previous ones?
stringOf5000Chars - is it?
|s/other wise/otherwise
|It set every disk's id to the last disk's id, so no need to do the last, but also no need to revert the change.
|The following sentence is not clear, please rephrase.
|Same as 2.
|I'd extract lun.getLUN_id() to a variable.
|You do this either way now.
|s/in//
|This is not English, while you're at it why not rephrase?
|StringBuilder is faster for more than two concatenations, which is also the rule of thumb for when to use it.
|It looks useless here, but I agree with Allon it's more readable this way outside of this class.
|is this &quot;iff&quot; on purpose? Doesn't look like it reading the code...
|I prefer a positive condition with else, but I guess it's a matter of style
|I don't think it's necessary, it's simple enough as it is.
|redundant empty line
|s/configured/configure
|s/and/a
|s/now is/is now
|s/taht/that
|s/it/in.
I'd use a built-in.
|There's something very weird with this patch, I'm looking into it...
|Fixed both.
|By mistake, fixed.
|The containing method is a bit long and given that it's already done (it was longer in previous patches) and that I think it's more readable this way, I decided to leave it this way.
|It overrides MoveOrCopyDiskCommand.isImageNotLocked() that is changed in this patch
|Done
|There was only one message for both not so long ago and it was changed to this. I agree it's tedious to maintain, but I'm not sure I should just expunge another patch.
|I saw that one coming...
I actually am a fan, and did see the problem with the two in a row. It wasn't my first try, and the code looked a lot more dirty in my opinion when I did it as you suggest.
|s/which/that
which is not syntactically correct here.
|s/which/that
|s/which/that
|s/which/that
|No
|Yes, will do.
|Fixed, good catch.
|Should add modifier
|Why not used before?
As I understand it, it was used before either way, and now only if the the reconstruct succeeded.
|Done, see patch set #3
|Done, see patch set #3 comment.
|In the flow I was checking (export VM while committing a preview) the disks are not locked so we got to this message. Then Allon suggested in another possible flow when the two conditions are true, we would like to see the more elaborate error message.
|As noted in previous comments, we'd like to give the user a more specific message if possible.
|This fixes a regression, but apparently not completely. I'm removing it from this patch, another one will follow.
|This fixes the same regression and will be entered in the next patch. Still, I don't understand your comment, please explain what you mean for the benefit of the next patch.
|This patch conflicts with this one - http://gerrit.ovirt.org/#/c/8167.
It's about to undergo changes one the above is merged.
|Thanks, fixed.
|To get the more informative error message if possible.
|consider applying De Morgan's law here, it should make it more readable.
|Nobody uses this function anymore
|I agree
|I agree, it's getting long and will only get longer
|Done, thanks
|Done
|Note this comment is after the fix - I just noticed ImportStorageModelBehavior.filterUnSelectableModels(). According to the requested change, the &quot;if&quot; inside this method will never be true. I'll post a new patch back with this original change. I'll add a comment why this is not redundant, and when this can be removed.
|Naaaahhh
|Actually I've noticed another bold warning in the system, but this is how Eldan wants it now - no asterisk and not bold.
|And extension-tool, and extensions-api-root
|Don't you want the empty line here? You wanted it in similar cases...
|Oh, it did, I removed it since I didn't touch the line. Obviously I missed the space.
|????
|What's host gotta do with this? You mean extract it again?
|OK, I'll do it here.
|I removed the change altogether, since I never intended to touch this line, so no formatter applied here.
|Gerrit didn't do such a great job here.
I just moved lines 234-302 into the new method - initStorageItems, and called that method. The calling method is otherwise the same.
|Done
|Yes, automatic. I can't get rid of this. It keeps coming back.
|Ok, next patchset.
|What don't you like?
|will do.
|What line 25?
In any case, I think the more important code extraction here is in the CDA, using noCollapseWithSnapshots(), and there's no double negation there. It's also going to be less clear without it there.
Using copyCollapseOrNoSnapshots() is nicer than the actual condition, no double negation there either. If agree it's not that beautiful in the implementation , thought I'm not which is better/worse.
I can leave the two signatures and explicitly implement  copyCollapseOrNoSnapshots() if you think that would be better.
|OK, with that I can agree. So I'll keep the method and implement the explicit condition.
|I still think that would be less readable to read the condition directly than through the method. I think the question should be whether to use the ! in the copyCollapseOrNoSnapshots() implementation or explicitly spread the condition. I like the code reuse better, but don't insist. What are my merge requirements? :D
|Yes, which is what I did in the first place before Maor's comments!!
|sure, I'll change the name then.
|Looks like, will make sure.
|Will change the name, the condition is clearer with this method.
|Will do.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified-1 Code-Review-1

Not ready for review
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21: Commit message was updated.
|Uploaded patch set 22.
|Uploaded patch set 23: Patch Set 22 was rebased.
|Patch Set 24: Commit message was updated
|Patch Set 23:

(3 comments)
|Patch Set 23:

(1 comment)
|Uploaded patch set 25.
|Patch Set 24:

(3 comments)
|Patch Set 23:

(1 comment)
|Patch Set 19:

(2 comments)
|Patch Set 14:

(1 comment)
|Uploaded patch set 26.
|Uploaded patch set 28.
|Patch Set 28:

(1 comment)
|Patch Set 23:

(17 comments)
|Patch Set 23:

(2 comments)
|Patch Set 28:

(4 comments)

Replied to new comments. All other comments were already replied-to in patchset 23, and addressed, even if not yet submitted. The latest patchset was half-work submitted due to Ori's request. In any case, I did reply to these comments the first time they were entered, please see my answers there.
|Uploaded patch set 29.
|Patch Set 29:

Allon, Juan, this patch is intended to address all the issues raised by both of you in all previous patch-sets, mainly 23,24,28. Please let me know if I left something out.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 32.
|Uploaded patch set 33.
|Uploaded patch set 34.
|Uploaded patch set 35.
|Patch Set 35:

(7 comments)
|Uploaded patch set 36.
|Patch Set 36: Verified+1
|Uploaded patch set 37.
|Patch Set 37: Verified+1

Changed threshold data members in StorageDomainStatic to be Integer instead of int. This slightly affects other related classes.
|Uploaded patch set 38.
|Patch Set 37:

(1 comment)

Allon, Please elaborate.
|Uploaded patch set 39.
|Uploaded patch set 40.
|Patch Set 40: Verified+1

Fixed according to Allon's latest comments. Rebased.
|Uploaded patch set 41: Patch Set 40 was rebased.
|Patch Set 41:

(2 comments)
|Uploaded patch set 42.
|Patch Set 42: Verified+1
|Patch Set 41:

(2 comments)
|Uploaded patch set 43.
|Patch Set 43:

(5 comments)
|Uploaded patch set 44.
|Patch Set 44: Verified+1
|Uploaded patch set 45: Patch Set 44 was rebased.
|Uploaded patch set 46: Patch Set 45 was rebased.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)

Allon, as we discussed, this method doesn't go through our localization process.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Uploaded patch set 4: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Amended according to Daniel's comment. Glance still shows &quot;[N/A]&quot; in this patchset.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Patch Set 8:

(5 comments)
|Patch Set 9: Verified+1
|Patch Set 9: -Verified
|Uploaded patch set 10.
|Patch Set 8:

(2 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 12: -Verified

(1 comment)

upgrade script needs a name change (serial), until it's +2ed it's easier for me this way. Not marking as verified until this is changed - though it IS verified. Please give +2 pending this change, not -1, as this will be counter-effective.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15.
|Patch Set 15:

(1 comment)
|Uploaded patch set 16.
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18.
|Patch Set 18: Verified+1
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1

Allon, what's your issue with StorageDomain.java?
|Patch Set 5:

(1 comment)
|Patch Set 6: -Verified
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9: Verified+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14: Verified+1
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7: -Verified
|Patch Set 7:

Tal, the constant was replaced with null in a previous patch, to which Allon responded there's no need for this at all since the default is now null. Which it is. Hence the removal.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

(1 comment)
|Uploaded patch set 10.
|Patch Set 10: Verified+1

There's a good enough test in MArshallingTestCase. Tal agrees that this + verification is enough.
Verified the look in webadmin, added a new domain successfully.
|Patch Set 11:

(1 comment)
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 12:

(1 comment)
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified-1

Fails Dao test
|Uploaded patch set 14.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Patch Set 15:

(1 comment)
|Uploaded patch set 16.
|Patch Set 16:

(2 comments)
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Patch Set 17:

Well then, I'll update the upgrade script version again only in accordance with someone pushing it in. Enough is enough.
|Uploaded patch set 18.
|Patch Set 18: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1: -Verified
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Verified-1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Rebased only. Allon, Eli gave a +1 a while back. Only changes are rebases. Do we need a new one?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review-1

You should add your own query and not piggy-back on this one.
It's a different query - implement as such. Or at least filter on a higher level. But note the current query's name and what you're trying to do to it.
|Patch Set 7: Code-Review-1

(3 comments)

Reading again my former comment, I'm sorry for not being more clear.
This version is indeed better when it comes to scopes, though I think class namings should be refined.
But I think it would be best to implement this filtering in the DB level (which is what I meant by a new query...).
Is there a good reason not to do it there?
After the DB level you would probably need some Query class to access this.
|Patch Set 7: -Code-Review

Thanks Tal, that just leaves the naming issue AFAIC.
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+1

Although this patch is now reduced to de facto changing the delimeter from :: to space, I'm in favor. The current log is just a bulk of data, making the human reader actively search for the double-colons in order to read it. With spaces instead, the mind makes the field separation automatically. On the one hand, double colon was retained before the module name so it doesn't bother searches, and on the other, a space was added for clear human readability.
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified-1 Code-Review-1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified-1 Code-Review-1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6: -Verified

(1 comment)
|Patch Set 6:

(3 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7:

(1 comment)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

Rebased, nothing more.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

The bz is now targeted to 3.5.1, do fixing to comply.
|Patch Set 3: Code-Review-1

(1 comment)

Looks good, but check if the unit test fails for real, and even i it doesn't this should have a unit test on its own.
|Patch Set 6:

(3 comments)
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Fixed some tests, other than that just rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Just rebase
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

(1 comment)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Verified-1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 7:

(7 comments)
|Patch Set 8:

(1 comment)
|Patch Set 9:

Allon, I see now that I haven't published my comments beloow. Most are irrelevant now, but you might want to have a look at the one on StorageListModel 1135, in case we have a misunderstanding there.
|Patch Set 9:

(2 comments)
|Patch Set 9:

(1 comment)
|Uploaded patch set 10.
|Patch Set 2:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1

This is now rebased over several new tests, and is applied to these tests as well.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Fixed duplicate call to the validation.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 17:

(3 comments)
|Patch Set 20: Code-Review+1
|Patch Set 4:

(3 comments)
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 5: Code-Review+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3:

(7 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review-1

Need to remove redundant validation for stateless. Do not merge at this time.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1:

Rerun-Hooks: all
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Verified - Passes build.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Abandoned

Off track
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Hooks-Rerun: all
|Patch Set 1:

Rerun-Hooks: all
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

This is a draft for a not urgent change. It couldn't get in as is and there more work on that in the future is guaranteed.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(4 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(1 comment)
|Patch Set 5:

Talked to Arik, who accepted my answer.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Verified by creating a new pool with 3 VMs over a template with several disks. Then ran the VMs.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

And tests amending on my part.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Should be merged real soon on master, verified on both.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

rebased
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Patch Set 7: Verified-1
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9:

(4 comments)
|Uploaded patch set 10.
|Patch Set 10:

(2 comments)

Discussed issue offline with Arik. This is not how this was implemented, will add a fix in the next patch.
|Uploaded patch set 11.
|Patch Set 10:

(1 comment)
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1

Rebased after last comment. No other changes.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

Code never gets to the point of executing the space allocation validation, so no need for this patch.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

too soon
|Restored

Now is a good time
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified-1
|Patch Set 3:

Please do not review yet. Tests are far from working at the time.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10:

(2 comments)
|Uploaded patch set 11.
|Patch Set 11:

Yes, I'm putting it in a separate patch right now (before this one), since it' making too much noise in this one. Will post soon. Thanks.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified-1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Commit message was updated
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 32.
|Uploaded patch set 33.
|Patch Set 34: Patch Set 33 was rebased
|Uploaded patch set 35.
|Patch Set 35:

This is a debug patch that is still in need.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Omer, need you again for virt's side, thanks.
|Uploaded patch set 2.
|Patch Set 2:

Amended according to comments.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified-1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

(5 comments)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10:

(2 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Patch Set 14:

(5 comments)

Addressing comments in the next patchset
|Uploaded patch set 15.
|Patch Set 17:

Backported, awaiting merge: http://gerrit.ovirt.org/#/c/32054/
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1

After a more through investigation, there was always an NPE in these scenarios, resulting in trying to process imageId of a lun disk, which is null. BZ1126425 was openned to followup on this issue and will be resolved in a different patch. In light of this, Liron, please remove your -1.
|Patch Set 4: Commit message was updated
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Rebased, no code changes.
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(3 comments)
|Patch Set 4: Code-Review+1
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

TBD - Add tests. Might be too early for review...
|Patch Set 3:

(1 comment)

Allon, already stated in my TBD comment that I'm going to add tests for new functionality.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Found a glitch in the tests, working on a fix. Please do not review, other than flow (there are cosmetic fixes I'm aware of).
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 3:

(14 comments)
|Patch Set 4:

(7 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Amended according to comment, rebased.
|Patch Set 6:

(2 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1

Amended according to comments. Rebased.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

VMStatistics failure is unrelated to this patch.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

VmStatistics failure is unrelated to this patch
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 4:

(12 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Patch Set 7:

Allon, No, Broken master. Binary searching. Not exclusively.
|Uploaded patch set 8.
|Patch Set 8: Verified+1

As discussed offline with Allon, this is correct, yet the solution is not trivial. Opened bz1119022 to follow this issue. Pushing forward with this correct, yet incomplete patch, which is better than the current situation.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2:

Allon, yes, the actual patch was not submitted for some reason.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 1.
|Patch Set 1:

derez, The only call that seem to set the source storage domain in this flow is in MoveOrCopyDiskModel.getParameters(). I assumed this is all that's needed to make this change.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Rebased.
|Restored

Back to being relevant. Storage functional tests context.
|Uploaded patch set 6.
|Patch Set 6:

Addressed Nir's comment. Another patch follows.
|Abandoned

Too much of a hassle for a small detour improvement.
|Uploaded patch set 1.
|Abandoned

Too much of a hassle for a small detour improvement.
|Patch Set 5: Code-Review+1

(1 comment)
|Patch Set 4: Code-Review-1

Just fix the typo, after all, it is API doc...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned

wrong branch
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Applied comments.
|Abandoned

wrong branch
|Patch Set 1: Code-Review+1

(5 comments)
|Patch Set 2: Code-Review+1
|Patch Set 7: Code-Review+1

(1 comment)
|Patch Set 9: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

That's what I meant by verified :)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Resolved errors after rebasing.
|Patch Set 2: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(6 comments)

Addressed all comments, will push shortly.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Commit message was updated
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 3:

(3 comments)

Addressed all comments in the patch to follow
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Abandoned

In master, will be automatically merged for next version.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 11: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: -Code-Review

Other than my comment looks good.
|Patch Set 1: Verified+1
|Patch Set 1:

This is going to be n'acked, just for due process - the bug url is actually https://bugzilla.redhat.com/show_bug.cgi?id=1031881
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 1: Code-Review+1

(1 comment)

Just fix commit message please before merge.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 1.
|Patch Set 1: Verified-1 Code-Review-1

Found something wrong, don't bother reviewing at this point.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Tal, IDE was already covered. Added new test case to both classes.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

Revised according to comments.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Rebased, missed a commend on patch 3, now addressed.
|Patch Set 12: Code-Review+1

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 4:

For what it's worth, verified storage functional tests -localfs and nfs only, versions 0 and 3 on RHEL 3.4 .
|Patch Set 2: Code-Review-1

Missing tests for new CDA flows in AddDisk and UpdateVmDisk commands in case the diskValidator fails with the new validation.
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 3: Code-Review-1

I agree with Sergey, unless this was resolved offline somehow? I don't see any change from last/first patch...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Patch Set 3: Commit message was updated
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

Updated commit message.
Will change ugly lambda usage in a different patch for the entire file.
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 1: Verified+1 Code-Review+1

(3 comments)

*Great* patch. Usage is soooooo much better now.
|Patch Set 2: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Storage type localfs is verified with versions 0 and 3.
We want to add it as a CI job, currently ONLY with the above verified configuration.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Addressed comments from previous patch. Verified in the same manner.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Amended according to reviews.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1

Rebased
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1

Rebased.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 5: (1 inline comment)


|Patch Set 5: I would prefer that you didn't submit this


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1

Rebased
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Rebased.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(3 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Rebased
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

Zhou, Nir, thanks for the reviews.
I'll add a patch according to Nir's last comments later on.
|Uploaded patch set 9.
|Patch Set 9: Verified+1

Rebased, addressed Nir's comments.
|Patch Set 7: Code-Review+1
|Patch Set 7:

(2 comments)

A general comment regarding to all the tests here.
The DiskValidator should be tested once in it's own test.
When testing the commands what we should do is check that assuming the vaildator behaves correctly, the CDA yields the right value, not re-test the vaildator over and over again.
This can be done by mocking the DiskValidator in the relevant commands.
|Patch Set 7: Code-Review-1
|Patch Set 9: Code-Review+1

(1 comment)

I'd like you to address my comment, other than that looks good.
|Patch Set 10: Code-Review+1
|Patch Set 12: Code-Review+1
|Patch Set 1: Verified+1 Code-Review+1

Verified on a RHEL 6.4 host.
|Patch Set 6:

(2 comments)

Can't continue reviewing right now, so just comments on commit message.
|Patch Set 7: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review-1

You've removed the only usage of getImagePath() leaving dead code.
I'd leave getImagePath() and just change its implementation to what you suggest.
|Patch Set 3: Code-Review-1

(1 comment)

Please see comment inline.
|Patch Set 4: Code-Review+1
|Patch Set 4: -Code-Review

Huntxu, did you verify against other-than-gluster Storage Domains? Do we know the removed logic isn't necessary for them? What's the reason for the logic change from the last patch, which seemed just fine logically?
Also, why are you against moving getImagePath into FileStorageDomain? It is, after all, the only class using this function.
|Patch Set 4: Code-Review+1
|Patch Set 11:

(1 comment)
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Modified according to some comments, commented back inline for the others.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(10 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

Addressed comments from previous patch.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1

Previous CI fail is irrelevant to the patch.
Modified code according to Allon's comment.
|Patch Set 6:

(3 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1

Modified according to comments
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Changed according to Michael and Liron's comments.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified-1

Will have to bring back the redundant error message since it's being used all over.
|Patch Set 4:

(1 comment)

Allon, I changed one vdcBllMessage because I refactored another to look like it. This caused usage throughout the system to use the new message that also expects status, without actually sending the status. Easiest thing for now will be to bring back the redundant message without the status expectation. Ugly, but not for this bug's scope.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)

Now using one general illegal message.
|Patch Set 5:

(1 comment)

Cheryn, please see reply inline
|Uploaded patch set 6.
|Patch Set 6:

Changed message according to Allon's comment.
|Patch Set 6: Verified+1

(2 comments)

Liron, Test was checked and is fine.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1

Rebased.
|Abandoned

Accidently pushed here. Actual patch is in http://gerrit.ovirt.org/#/c/21320/
|Patch Set 1: Verified+1
|Patch Set 1:

(6 comments)
|Patch Set 1:

Nir, I disagree. The name no longer (or was ever) fits the content and IMO has to change within this scope.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Addressed comments on previous patch.
|Patch Set 2:

(5 comments)

Accepted Dan's suggestion, will submit soon.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

The oVirt engine corresponding key was also changed to InaccessbilePhysDev. Communication between engine and vdsm is only through code, which did not change. Also verified all possibilities (old/new engine vs. old/new vdsm). All verified.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Only commit message changed.
|Patch Set 4:

Some more info on verification:
Reproduced and verified as QA suggested, which is discovering targets, disconnection the host from them and then trying to connect, having the error. As mentioned before, a corresponding patch was sent to engine. verified with old engine vs. new vdsm and new engine vs. both new and old vdsm. Works as expected.

The reason the fix is different for the to raises is that in one (hsm) the dev's size is accumulated. Therefore iterating has to be used. Didn't seem worth to switch to set and then iterate over it...
|Patch Set 1: Verified-1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 9: Code-Review+1
|Uploaded patch set 2.
|Patch Set 2:

Rebased.
Add &amp; Attach verified through rest only.
RunVm verified with RO disk.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Verified:
HotPlugDiskToVmCommand- verify that hot-plug after hot-unplug is consistent with read-only value before unplugging.
DetachDiskFromVmCommand
AddVmTemplateDevice - verify new disk's read-only state is the same as template's.
RunVmCommand - verify read-only disks are indeed so (done).
Export template
Export/Import Vm.

Still needs verification:
Import template.
AddVmFromTemplateCommand - verify disk's read-only state in new vm is the same as template's.
AddVmFromSnapshotCommand - verify disk's read-only state in new vm is the same as snapshot's.
AddVmAndCloneImageCommand - verify new disk's read-only state is the same as original disk.
CreateSnapshotFromTemplate - verify disk's read-only state in new vm is the same as template's.
TryBackToAllSnapshotsOfVmCommand -(preview snapshot) - verify disk's read-only state is the same as snapshot's.
RestoreAllSnapshotsCommand (undo &amp; commit snapshot).

Known issues:
There's code duplicity between importVm and importVmTemplate commands, which still needs to be fixed.
|Patch Set 14:

(8 comments)
|Patch Set 15:

(3 comments)
|Patch Set 15:

(1 comment)
|Patch Set 17: Code-Review+1
|Patch Set 18: Code-Review+1
|Patch Set 1: Verified+1

The vdsm corresponding exception was also changed to InaccessbilePhysDev. Communication between engine and vdsm is only through code, which did not change. Also verified all possibilities (old/new engine vs. old/new vdsm). All verified.
|Patch Set 1: Verified+1
|Patch Set 1: Verified


|Abandoned

No reply in a long time. If we decide to do this in the future we'll start fresh.
|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)

This patch necessity is currently in deliberations.
I will not submit any other patchsets until this issue is resolved.
|Abandoned

RFE is now closed-wontfix.
|Patch Set 2: (2 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve

I suppose you're aware of the code duplication in ConnectStoragePoolVDSCommand.logFaultInConnectionToMasterDomain() and IrsBrokerCommand and a solution to this would be worse?
|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)

Please reply to other comments
|Patch Set 5: (5 inline comments)


|Patch Set 5:

Should also change script name prefix from found to find
|Patch Set 5: I would prefer that you didn't submit this

-1 Just to take it off my radar until this is continued with.
|Patch Set 9: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: (5 inline comments)


|Patch Set 4: (5 inline comments)


|Patch Set 3: (3 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 7: (5 inline comments)


|Patch Set 7: (2 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(10 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve

(2 inline comments)

Please see inline comment + question.
|Patch Set 13: (3 inline comments)


|Patch Set 13: (1 inline comment)


|Patch Set 15: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 15: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 16: Looks good to me, but someone else must approve


|Patch Set 9: Looks good to me, but someone else must approve


|Patch Set 9: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)

I'm in favor, just against inserting typos to logs, see comment.
|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 4: I would prefer that you didn't submit this

(3 inline comments)


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

I'd add in what method in the commit message.
|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Fails

Currently fails some tests, please review, don't merge.
|Uploaded patch set 2.
|Patch Set 2: Fails


|Uploaded patch set 3.
|Patch Set 3: Abandoned

Too much more work needed, not for 3.3, and if ever, then probably not this way.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)

I have no problem with the code, but even it doesn't explain the commit message, not to mention this should be the other way around.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)

Same reason as previous patch
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Patch Set 2: (2 inline comments)


|Patch Set 2: (3 inline comments)


|Patch Set 3:

Fix commit message as well please. The current one is unreadable.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve

(1 inline comment)

Please see comment
|Patch Set 1: Verified


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 1: (1 inline comment)


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)

Please fix typo in commit message
|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 4: Looks good to me, but someone else must approve

(7 inline comments)

Please refer to (non-petty) comments.
|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 10: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: I would prefer that you didn't submit this

(3 inline comments)

I just want an answer to my question, since it would probably cause a follow-up.
|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 10: Looks good to me, but someone else must approve


|Patch Set 4: (7 inline comments)


|Patch Set 5: I would prefer that you didn't submit this

I really don't think this commit message is readable, please address mt comments from patchset #4,
|Patch Set 6: Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 4: I would prefer that you didn't submit this

(3 inline comments)


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 9: Looks good to me, but someone else must approve


|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)

What about ExtendVolumeVDSCommandParameters?
Regarding vdsm side being re-examined - to see what should be removed there or could that mean not removing it here too?
Should bdsm side be altered - who's responsibility is that once this patch is merged? This should be addressed, even if only in commit message.
|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: I would prefer that you didn't submit this


|Patch Set 3: (1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

Please fix commit message when you rebase.
|Patch Set 2: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: (2 inline comments)

Dan, I didn't and still don't see such previous suggestion.
The problematic call to getRecord() is from storageServer.py:
fileSD.validateDirAccess(self.getMountObj().getRecord().fs_file) .
Eduardo, If I'm removing my change from _translateConnectionError(), then I have no business beautifying it in this patch. Will Resolve the solution with Dan offline.
|Uploaded patch set 4.
|Patch Set 4: Verified

Initial solution missed the origin of the problem, which is that MountError is razed and then ignored, causing getRecord() to fail, though it shouldn't be called to begin with. Note that commit message changed accordingly.
|Patch Set 4: (3 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Patch Set 6: Verified

Added log message, the rest is the same.
|Patch Set 6: (3 inline comments)


|Patch Set 6: Abandoned

Dealt with in 12042
|Patch Set 1: Abandoned

Dealt with in 13610
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 15: Looks good to me, but someone else must approve


|Patch Set 12: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 14: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 4: (3 inline comments)

Liron. this is the design we agreed upon in the short time frame that we have. We decided the db queries overhead is acceptable for now. It will be properly fixed as mentioned in the bz in the future (RFE 920211).
|Uploaded patch set 6.
|Patch Set 6: Verified


|Patch Set 1: Abandoned

Already fixed in If99b9dca0f1b83f1a815d4ebb112828a135e495a
|Patch Set 2: Verified

Verified on Fedora, make rpm succeeds.
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(3 inline comments)


|Patch Set 3: I would prefer that you didn't submit this

(6 inline comments)

All my comments refer to the commit message, but I really don't think it should be submitted as it is.
|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 4: (1 inline comment)

If it indeed doesn't matter to all disk types and two boolean values then I suggest removing it altogether.
If (true, true) is different than the three other combinations (which are the same), and there is indeed use for it in future use, then this method should be kept, but not as it is (just a different name and the different functionality, without the two booleans).
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)

Please consider my comment first.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

Just fix as Alissa suggests.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Verified


|Patch Set 2: Abandoned

A fix will be sent sometime.
|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: (5 inline comments)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Addressed Tal comments, Checked for hard coded issues, there aren't any.
|Patch Set 4: (2 inline comments)


|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Patch Set 2: Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 4:

You actually missed Kublin's comment.
|Patch Set 1: Verified


|Patch Set 1: (5 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified

Fixed typo and rebased, no code changes.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1:

In reply to Maor's suggestion, I think VmPools for an entity is a misleading abomination. If I encounter an entity with this kind of name I expect it to actually contain several pools. I would also waste my time looking for a container, until I get to the conclusion that this is just bad naming (generally speaking, not ovirt-specific - which says it all). I think VmPool is a good start, and the link to the vm_pools is still obvious enough. TBD on the vm_pool change is good enough for now, IMHO.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: No score


|Patch Set 1: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 16: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: (3 inline comments)


|Patch Set 1: (4 inline comments)


|Patch Set 1: (2 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1:

There was no test for these parameters before, but I think you should add one to make sure it's entered when you think it does. The flow isn't the same as when it comes from within canDoAction from my previous experience with this issue.
|Patch Set 2:

Allon, I think verifying any of the error messages do have those parameters is fine. I'd say they all should have been checked since this could have affected them all, but that would be too excessive. I'd just go with the fail messages you touched in this file and that's it.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

Please see comments.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: (4 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve

So much better!
|Patch Set 1:

Oh, This also stands by itself and is unrelated to the other patches. Why not remove the dependency? This will also make merging easier.
|Patch Set 1: (2 inline comments)


|Patch Set 5: Verified

Why did you decide to remove the getDisk() elimination you've already done in patchset#3?
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

Do you eventually intend to remove this argument (check if vm is down) from ImagesHandler.checkWhatever?
|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 4: I would prefer that you didn't submit this

(4 inline comments)

You should also test the new functionality.
|Patch Set 4: (1 inline comment)


|Patch Set 4: Looks good to me, but someone else must approve

I can't go through Moti's comments right now, and don't want it to be a bottle neck for you, so giving it a +1
|Patch Set 1: Looks good to me, but someone else must approve

+1 Specifically due to the override notation.
Not everybody uses eclipse so rearranging imports happens a lot. There was a discussion about the issue before, but it didn't converge to my knowledge. Anyway, this will just be overriden the next time another IDE user merges something.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: (3 inline comments)


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified

Rebased, No code changes
|Patch Set 4: (2 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 6: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 7: (2 inline comments)


|Patch Set 1: I would prefer that you didn't submit this

As Sharad pointed out, there's a conflicting patch. The only error message now is ACTION_TYPE_FAILED_DISKS_LOCKED, and the string to replace is ${diskAliases}. We shouldn't regress back to two so similar messages. It's hard to maintain and got lots of criticism, as can be seen in that same patch.
|Patch Set 1: (2 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: (2 inline comments)


|Patch Set 6: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified

Removed languages files according to Einav's comment.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1:

Still missing in frontend/webadmin/modules/userportal-gwtp/src/main/resources/org/ovirt/engine/ui/frontend/AppErrors.properties
|Patch Set 1: Looks good to me, but someone else must approve

Ignore my last comment, after talking with Gilad, Gluster is a special case that doesn't need the above.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 3:

Why is the added message in this patch?
I get that it's missing from the other patch, but that should be handled in a separate patch. Please also see my comment on patchset 2.
|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 3: (7 inline comments)


|Patch Set 4: (2 inline comments)

Please address my comments from patch 3
|Patch Set 2: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 28: (5 inline comments)

Sorry, some minor comments
|Patch Set 28: (1 inline comment)


|Patch Set 3: (5 inline comments)


|Patch Set 10: (17 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 2: (2 inline comments)


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: (5 inline comments)


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

Rebased, no code changes.
+1 from Maor and +2 from Allon.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 9: Looks good to me, but someone else must approve


|Patch Set 7: Looks good to me, but someone else must approve

(3 inline comments)


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 8: (2 inline comments)


|Patch Set 10: (2 inline comments)


|Patch Set 11: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 4: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve

(3 inline comments)


|Patch Set 3: (1 inline comment)


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, but someone else must approve

(2 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 5:

If there doesn't seem to be a future need for these methods in packages other than bll, then I see no point to this patch.
Would be a shame to forego the documentation upgrade though.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1:

I'd use ${disksAliases} or ${diskAliases} instead of ${diskAlias}. Leave these as they are and fix the rest. Actually, that was the mistake to begin with.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

(3 inline comments)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: (3 inline comments)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (1 inline comment)


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2: (1 inline comment)

Do not merge
|Uploaded patch set 3.
|Patch Set 3: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (2 inline comments)


|Patch Set 5:

Will submit another patch in the future, applying changes according to comments.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Patch Set 8: Verified

This patch now contains patch:
http://gerrit.ovirt.org/#/c/8694/ (Change-Id: Ic91e8718181db7b55b59ca53ddc86e8f76ebd83c), that's to be abandoned.
|Patch Set 8: (4 inline comments)


|Uploaded patch set 9.
|Patch Set 9: Verified


|Uploaded patch set 10.
|Patch Set 10:

Patch set 10 was submitted by mistake, Please ignore.
|Uploaded patch set 11.
|Patch Set 11: Verified


|Patch Set 11: (1 inline comment)

Sharad: Grammatically a list (after colon) may contain only one item. So I'm sure the current version is grammatically correct. I'm not sure about the grammatical correctness of your suggestion, and I suspect there might be a problem with the &quot;be&quot; inflection. I'd rather stay with what I know is correct.
|Uploaded patch set 12.
|Patch Set 12: Verified


|Uploaded patch set 13.
|Patch Set 13: Verified


|Uploaded patch set 14.
|Patch Set 14: Verified

Rebased
|Patch Set 3: (4 inline comments)


|Patch Set 4: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Patch Set 3: Verified

Just removed a dependency that shouldn't have been here.
|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: (1 inline comment)


|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: (1 inline comment)


|Patch Set 7: Abandoned

This patch is now merged into http://gerrit.ovirt.org/#/c/8693/ (Change-Id: I7c56d9d2926eaf34b4a279c8d61a8cb166524da9)
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 12: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

The only difference from previous patch is in frontend/webadmin/modules/userportal-gwtp/src/main/resources/org/ovirt/engine/ui/frontend/AppErrors.properties, dropped persistent 'e' in 'attache'.
|Patch Set 4: Verified


|Patch Set 3: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve

Looks fine java-wise, don't know enough system-wise.
|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 8: Looks good to me, but someone else must approve


|Patch Set 12: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 1: (2 inline comments)


|Patch Set 3: Verified

The required checks (Disks locked, followed by VM locked) are already done in ImagesHandler.PerformImagesChecks().
Changed the code to make sure it'll get there.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 12: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Fails

This patch collides with http://gerrit.ovirt.org/#/c/8167/.
Shouldn't be merged until this issue is resolved.
|Uploaded patch set 3.
|Patch Set 3: Fails


|Patch Set 3:

This patch collides with http://gerrit.ovirt.org/#/c/8167/. Shouldn't be merged until this issue is resolved.
|Patch Set 3: (1 inline comment)


|Patch Set 3: (2 inline comments)


|Uploaded patch set 4.
|Patch Set 4: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 5: Verified

(3 inline comments)


|Uploaded patch set 6.
|Patch Set 6: Verified

There is no bug in the current patch that I know of. If you think otherwise please let me know, if I were aware of it I wouldn't have committed it to begin with. As noted in the previous commit message, this patch fixed an open bug as well as a related regression. As a result of your previous comments I decided to separate the two since they are too loosely coupled. This one id the solely the bug, the next one will handle the regression in the files I've pulled out of the patch. Please comment on the current patch as it is.
|Uploaded patch set 7.
|Patch Set 7:

Same patch, do not review.
|Uploaded patch set 8.
|Patch Set 1: Fails

This patch collides with http://gerrit.ovirt.org/#/c/8078/
Shouldn't be merged until this issue is resolved.
|Patch Set 1: No score


|Patch Set 4: Looks good to me, but someone else must approve


|Patch Set 5:

No change from patch set 4?
|Patch Set 14: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 1: Abandoned

Sent by mistake, was supposed to be a rebase of another patch.
|Patch Set 14: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 5: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 5: Verified


|Patch Set 5: No score; Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve

(1 inline comment)


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Patch Set 5: Looks good to me, but someone else must approve


|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

Minor commit message fix.
|Patch Set 2:

Because the information should change in accordance with typing new values in the percentage textbox, on the fly.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Discussed with Tal offline.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 7:

(1 comment)
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9:

Addressed Tal's comment from previous patch.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

Addressed Tomas' comment on patch 3. Rebased.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Abandoned

Mistakenly submitted with a new change id.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Tal, I don't see how. deres, care to comment?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Allon, Like what? There's nothing else there that's also in ConfigValues, unless you want in there as well.
|Uploaded patch set 2.
|Patch Set 2:

Allon ,these values are not currently in ConfigValues.
Did you mean you want them added there? In this patch?
|Patch Set 2:

Allon, Config values should be just that - configurable. So it sounds logical to me that if we want to add values to ConfigValues, they should also be configurable. But obviously we do not want EMPTY_QCOW_HEADER_SIZE and QCOW_OVERHEAD_FACTOR to be configured by users. Adding them as constants to, say, StorageConstants sounds the better solution to me. I suggest using ConfigValus for the values that are indeed configurable, and StorageConstants to those that don't need to be configured.
|Abandoned

Any change incorporating ConfigValues usage in the StorageDomainValidator, results in multiple test failures since there's due to lack of mocking, making this patch unworthy.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 9: Patch Set 7 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6:

Implemented Tal's review.
CI failure is bogus.
|Patch Set 6: Verified-1
|Patch Set 5:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(1 comment)
|Patch Set 7: Commit message was updated
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 7: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 8: Patch Set 6 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 8: Patch Set 6 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 7: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 7: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 6: Patch Set 4 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 5: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1

Apart from commit message.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)

Code is good, commit message needs altering.
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated
|Patch Set 3: Verified+1

Verified that:
Run stateless is working, allocation policy is OK with and without plugged disks, Error message is propagated to the UI.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: -Verified
|Abandoned

Another solution for this bug
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Verified-1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4: Verified-1
|Uploaded patch set 6.
|Uploaded patch set 7: Commit message was updated.
|Patch Set 7: Verified+1
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Patch Set 7:

(2 comments)
|Patch Set 8: Verified+1
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9:

Sadly had to rebase. Apologies.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

(1 comment)
|Patch Set 1: Verified-1
|Patch Set 1: Verified+1
|Patch Set 1: Verified-1
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 5:

(1 comment)
|Patch Set 7: Verified+1

All previous comments answered in this patch.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Commit message was updated.
|Patch Set 5:

(2 comments)
|Uploaded patch set 8.
|Patch Set 8: Verified+1

Addressed previous comments.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Verified-1
|Patch Set 2: Commit message was updated
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 3:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

CI Failure is not real.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

&quot;New&quot; warning in an unrelated file
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

False failure, unit tests do pass.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Removed dependency on unrelated patches.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Added test
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 6: Commit message was updated
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1

Unit Tests pass locally, dao CI was already reported to be faulty. Verified myself.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 1: Code-Review-1
|Patch Set 1: Code-Review+1
|Patch Set 5: Code-Review-1
|Patch Set 6: Code-Review+1
|Patch Set 9: Code-Review-1
|Uploaded patch set 1.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Looks good to me, but someone else must approve


|Done - separated namespace and method. I will add a more useful help message based on the schema in a different patch.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|thanks, I lost the updated commit message during rebase
|Done
|Done
|Done
|Done
|Done
|it returned a path before and now it returns a list of paths. I don't think the change is really needed right now.
|I don't think it can be separated from this patch, adding drop-ins changes the vars priority
|Done
|I think file names should remain constant, we can play with the file position in every directory.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I get an importError when I try to import constants module. it happens because the import is called before constants is generated. we need to change the order, but it should be in a different patch.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I agree we need to add more coverage and I added two more tests as you suggested.
I prefer not to add temporary conf files to /etc/vdsm or /run/vdsm since they're only for testing purposes and I can create these files in temporary directories.
The read_config function gets the configuration paths as arguments so it's not needed to use these particular paths.
|It
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I'm sorry to tell you guys that this is not possible, it's causing circular imports. we'll have to keep it here...
|I'm working on a change now, I only rebased the patch and didn't refer the comments.
|Done
|Done
|I want a more general behavior so I removed this part from the function
|Done
|Done
|Done
|Done
|The reason for calling it moduleUtils is to collect a few functions related to handling modules. I'm not sure if this module will only load modules in the future.
|Done
|Done
|Done
|Done
|We need a more general behavior, I'm still looking at places in the project where modules are loaded. will change it soon.
|Done
|:)
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|no, it adds the temporary path to modules search path. It's only related to the test.
|Done
|Done
|this is a draft version
|Done
|Done
|I'm still checking it. It can handle relative imports, not in the way it's implemented in the code right now.
|you can use string format instead
|use const instead of actual number
|this is a test I added in the previous version and this change wasn't related to the patch. Now it's removed.
|Done
|Done
|Done
|I modernized the test file but it still not compatible with python3
|same
|Done
|Done
|Done
|shouldn't you check if tox is available?
|2016
|2016
|Done
|Done
|Done
|Done
|Done - I added a similar test before, added another one with different directories since we want to make sure we check priority inside one directory and in several directories.
|Done
|Done
|Done
|for now we can't add imports in this file since config.py file is generated during make install and all the imports fail. we need to add a change to lib/vdsm/Makefile.am in a different patch and then make the change here.
|Done
|Done
|Done
|Done
|I changed it back but don't we want to support only conf files that begin with a number?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done - I didn't create 4 different tests since I want to check the priority by file name and dividing it to a few tests by number of files doesn't seem to have a meaning. what do you think?
|Done
|Done
|Done
|Done
|Done
|I added DEFAULT_BASEDIR and a mock in the tests.
|Done
|I see /etc in config.py
|Done
|Done
|I moved the folder creation to setup. 
The content can change in every test so I can't create it in setup function.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done, part of a new patch
|Done
|Done
|not sure, I see it's the same on master
|Done
|Done
|Done
|I need the temp variables for monkeypatch.
|Done
|right now the priority is decided by the file name. maybe we need to decide about priorities between directories also.
Another unhandled option is same file name in two (or more) different directories.
|Done
|the default configuration
|I added a regex to config.read-configs function that ensures that only files that start with a number will be read.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|it's a rebase problem
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|you're right but maybe it'll be more informative to check and give error message
|Done
|Done
|Done
|Done
|it looks like it can't run combined with shell if condition... it gets invoked without checking the condition
|Done
|sorry, it was late :) I think that if we remove the check from configure we should exit if tox doesn't exist
|Done - removed tox check since it's already being checked in cofigure.ac
|Done
|Done
|Done
|Done
|you're right but I need to return the value to shell script and the two possible ways are with sys.exit(value) or print value.
will this utility be tested? it was written only for the purpose of comparing tox version.
|Done
|Done
|Done
|Done - but actually why not adding a new target named 'style check' and having two runs for pyflakes and pep8?
|Done
|Done
|Done
|Done
|Done
|Done
|Done - but changed it according to my needs
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|renaming the target doesn't prevent the recursive call for make check in subdirs. if i add unittest the tests will run twice
|Done
|Done
|Done
|Done
|can you provide more details why this package is required?
|Done
|Done
|Done
|I tried :) I will abandon this patch. this change is very small and can be done again
|Done
|Done
|Done
|Done
|Done
|yes my work is still in progress, still trying to figure out a solution for strict argument. 
this is from http.client: Changed in version 3.4: The strict parameter was removed. HTTP 0.9-style “Simple Responses” are not longer supported.
I can support both python2 and 3 with a flag checking the version (six.PY3) but it will be ugly
|is strict parameter needed and being used? it's deprecated on python3
|I wanted to stay consistent with `vdsClient -s 0` that uses ssl but I can change it
|Unfortunately the only command I found for adding command output is the one I used.
|Nir, it's the same - he means that now the command output is represented in a file and before that it was represented as a command. 
this is the output of sos report before my patch. you can see that the commands output is also saved in files. the difference is that now it's under sos_strings dir and not sos_commands
# ll sosreport-lochte.tlv.redhat.com-20160719203326/sos_commands/vdsm/
total 80
-rw-r--r--. 1 root root 1111 Jul 19 20:33 fdisk_-l
-rw-r--r--. 1 root root  626 Jul 19 20:33 iostat
-rw-r--r--. 1 root root   27 Jul 19 20:33 iscsiadm_-m_node
-rw-r--r--. 1 root root   30 Jul 19 20:33 iscsiadm_-m_session
-rw-r--r--. 1 root root   65 Jul 19 20:33 ls_-ldZ_.etc.vdsm
-rw-r--r--. 1 root root    8 Jul 19 20:33 ls_-l_.var.log.core
-rw-r--r--. 1 root root  153 Jul 19 20:33 lvm_lvs_-v_-o_tags
-rw-r--r--. 1 root root  126 Jul 19 20:33 lvm_pvs_-v_-o_all
-rw-r--r--. 1 root root  151 Jul 19 20:33 lvm_vgs_-v_-o_tags
-rw-r--r--. 1 root root 1219 Jul 19 20:33 service_vdsmd_status
-rw-r--r--. 1 root root   27 Jul 19 20:33 su_vdsm_-s_.bin.sh_-c_.bin.ls_-lR_.rhev.data-center
-rw-r--r--. 1 root root   42 Jul 19 20:33 su_vdsm_-s_.bin.sh_-c_.usr.bin.tree_-l_.rhev.data-center
-rw-r--r--. 1 root root  233 Jul 19 20:33 su_vdsm_-s_.usr.bin.python_.usr.share.vdsm.dumpStorageTable.pyc
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_getAllTasksInfo
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_getAllTasksStatuses
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_getAllVmStats
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_getDeviceList
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_getVdsCapabilities
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_getVdsStats
-rw-r--r--. 1 root root  218 Jul 19 20:33 vdsClient_-s_0_list
|Done
|Done
|thanks, I forgot to add the call
|Done
|Done
|Done
|will fix it.
|Done
|Done
|Done
|I added a function for connection setup, but from looking at sos report code I see that plugin setup is called only once per run so I'm keeping the function call inside setup.
|Done
|Done
|moduleloader only has a function for loading all modules of imported package. we need to add a new function that imports a module by its name
|as we discussed - this is specific to sos as the plugin name is vdsm.
|it works for config but not for jsonrpcvdscli, this is the reason I did this change
|I asked the maintainer and the file name should be as the class name. This is so that the class loader and command line options map properly to their respective plugin classes.
|Done
|you don't really need this parameter since it already has default value in jsonrpcvdscli.connect
|There isn't any specific reason, I just wanted to make sure that a package from 3.6 version will be installed.
|Done
|Done
|Done
|Done
|Done
|it didn't work for me
|Done
|Done
|Done
|Done
|Done
|I removed it because bonding kernel module wasn't loaded so bond0 wasn't created. Eddy also told me that there is a fix for that issue and this hack is not needed anymore.
|Done
|Done
|it doesn't work
|we need that for catching times of the tests that run on lago
|Done
|Done
|Done
|line 21 should solve testlib import
|Done
|Done
|because they are still tests and are run with nosetest?
|Done
|sorry, it bothered me... :)
|Done
|Done
|Done
|Done
|Done
|Done
|I'll change it in a separate patch
|Done
|Done
|actually when checking it I saw that items is returned:
In [6]: server.fullList()
Out[6]: 
{'items': [{'acpiEnable': 'true',
   'afterMigrationStatus': u'',
   'bootMenuEnable': 'false',
   'clientIp': u'',
   'cpuType': 'Penryn',
....


if you check jsonrpcvdscli.py code you can see that when you return list, its name always gets overridden by 'items' when calling response.success(items=resp.result)

do we want to change this behavior?
|OK, I will work on a fix
|Done
|Done
|Done
|Done
|This patch is about replacing dumpStorageTable with dump_volume_chains. dump_volume_chains needs sd_uuid as an argument
|Done
|Done
|Done
|Done
|Done
|Done
|better push it in a different patch since this patch is only about porting misc.py to py3
|as you wish, I think there are more tests that pass after this change so they can also be removed
|please use this commit message format:
topic: short summary

longer description (if needed)
|i think it's six.moves.map, please check again
|it will be more readable to import six.moves.queue and six.moves.map than call the full name of the module.
|xrange is removed in python 3, please replace it also
|Done
|it runs only over rhv-h. sos report ignores the command if it doesn't exist.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Yes, it means we reached the timeout and got no response. Usually it's because there is an error in the method name/arguments or the basic case in which we lost connection to vdsm.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|It is intentional. This description is the more informative one, with guidelines for developers who are willing to use this module, and the description in the call method is part of the method description. The next update should be responsible and update both places.
|Done
|from https://docs.python.org/2.7/library/contextlib.html:

@contextmanager
def closing(thing):
    try:
        yield thing
    finally:
        thing.close()

The built in contextlib.closing doesn't have this behavior so I added a custom closing context manager to utils in a different patch.
|__exit__ should only raise exception if it was raised during exit. So if t (type) is None it means an exception wasn't raised during the execution of the context manager and we have to handle the exception raised in __exit__. t,v, tb represent the exception that was raised before exiting the context manager and if they're not None, the raised exception from __exit__ will override it.
|Done
|Done
|Done
|Done
|I will address this comment in the next change
|Done
|Done
|same
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Thanks, didn't notice it's still here
|Done
|I've added command to all errors + timeout to TimeoutError.
I'll update the namespace patch to match your request
|Done
|Done
|Done
|I didn't add it to el7 because el7 jobs were successful. I can add it there as well
|Done
|Done
|the problem was the use of self.args, it forces the passed argument to become a tuple.
|Done
|Done
|Done
|Done
|Done
|kwargs stores the command arguments, so we need to remove _timeout before passing kwargs to JsonRpcRequest.
better use kwargs.pop('_timeout')
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done - I've added the change
|Done
|it doesn't really change the string but I can change the calls
|good idea, I will add it in a separate patch
|They were also different in the vdscli version, so I tend to keep them as they are right now, they give information about the command.
|it was &quot;getVdsStats&quot; but it's consistent with vdscli methods representation and we want to get rid of it
|Done
|Done
|Done
|schema vesion:

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    16999    0.083    0.000    0.233    0.000 constructor.py:55(CLoader.construct_object)
    16193    0.072    0.000    0.102    0.000 resolver.py:140(CLoader.resolve)
    13730    0.036    0.000    0.076    0.000 constructor.py:163(CLoader.construct_scalar)
    13571    0.034    0.000    0.131    0.000 constructor.py:383(CLoader.construct_yaml_str)
     2031    0.030    0.000    0.255    0.000 constructor.py:120(CLoader.construct_mapping)
    13730    0.025    0.000    0.025    0.000 nodes.py:27(ScalarNode.__init__)
    13730    0.020    0.000    0.028    0.000 constructor.py:105(CLoader.construct_scalar)
     2031    0.014    0.000    0.019    0.000 constructor.py:170(CLoader.flatten_mapping)
    16193    0.013    0.000    0.013    0.000 resolver.py:111(CLoader.ascend_resolver)
    16193    0.013    0.000    0.013    0.000 resolver.py:88(CLoader.descend_resolver)
     2031    0.009    0.000    0.285    0.000 constructor.py:205(CLoader.construct_mapping)
        1    0.008    0.008    0.643    0.643 __init__.py:64(load)
3418/4062    0.007    0.000    0.294    0.000 constructor.py:395(CLoader.construct_yaml_map)
     2463    0.004    0.000    0.004    0.000 nodes.py:36(MappingNode.__init__)
        1    0.004    0.004    0.314    0.314 constructor.py:42(CLoader.construct_document)
      432    0.003    0.000    0.016    0.000 constructor.py:112(CLoader.construct_sequence)
      864    0.002    0.000    0.018    0.000 constructor.py:390(CLoader.construct_yaml_seq)
        1    0.001    0.001    0.007    0.007 client.py:188(_Client._create_namespaces)
        2    0.001    0.000    0.001    0.000 socket.py:185(_socketobject.__init__)
        1    0.000    0.000    0.643    0.643 vdsmapi.py:119(Schema.__init__)
|without schema:

# time python ~/jsonrpccli_test.py 

real	0m0.117s
user	0m0.090s
sys	0m0.024s

with schema:

# time python ~/jsonrpccli_test.py 

real	0m0.451s
user	0m0.413s
sys	0m0.037s


I'm only running client.connect method
|100 runs:
with schema:

real	2m24.043s
user	0m40.525s
sys	0m3.259s

without:

real	1m53.342s
user	0m9.448s
sys	0m2.258s
|I'll remove it soon, once I'll make sure vdsClient isn't being used anymore
|ok, I added the api package and I will add a script and test it.
|I had a different impression. I don't think it should be part of vdsm, we want it as a separate package.
|why under vdsm? don't we want a separate client like vdsClient?
|I talked with Nir and he said the client should be outside vdsm.
|Done
|I agree, and you can also run them inside a function wrapper run_tests and mount_tmpfs can be named prepare_environment
|failed=&quot;${PIPESTATUS[0]}&quot; is right for the first function, then you should override it only if test wasn't successful, using res=&quot;${PIPESTATUS[0]}&quot;; [ &quot;$res&quot; -ne 0 ] &amp;&amp; failed=&quot;$res&quot;

so changing to failed=&quot;${PIPESTATUS[0]}&quot; won't prettify the code :)
|you can remove this
|2012-2016
|2011-2016
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I would write:
if 'balloonInfo' in stat

just to be aligned with the rest of the code, but this is also OK.
|you're right, please ignore my last comment.
|Done
|Done
|Done
|I've already verified it, and a man page will be added later.
|Done
|I will change it in a separate patch
|good idea, I will do it in a separate patch
|Done
|what about --count-leaked-threads?
|OK, let's add it in a separate patch
|should replace python-blivet with python-blivet1.
or use check-patch packages
|fc25
|do we need check merged files for fedora? we only run the job on rhel
|it's not exactly the same as in fc24, python-blivet is replaced with python-blivet1
|it's part of the effort of moving vdsm to a python module. I want to get rid of the script part in this file.
|I didn't find fc23 files
|I think it's OK. base names - meaning the actual directory or file.
|I didn't write the file, so the English is not mine :)
I'll add an explanation in the beginning of the file.
|It's OK - package or module names.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Actually, it checks vdsm/vdsm python module instead of the vdsm package in lib directory. I had to explicitly add lib/vdsm in order to check it also.
When running pylint in tox virtual environment, special characters ('*' for example) are ignored so I had to add the missing files in vdsm directory.
|I tried this option, but I encountered an annoying error regarding missing __init__.py in every directory and couldn't find a quick solution for that. So I kept the blacklist for now.
|just saw your comment, I will update it in the next patch
|Done
|Done
|you're right, I ignored it by mistake
|Done
|Done
|it's a leftover from another version. I will bring it back
|Done
|Done
|Done
|yes, this was generated using `pylint --generate-rcfile &gt; pylintrc`
|I deleted all of them for now
|Done
|Done
|yes
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|There are a lot of modules with mixed case names, we should fix it before we change the regex.
|There are a lot of modules with mixed case names, we should fix it before we change the regex.
|Done
|yes
|Done
|Done
|where is testValidation.py?
|what happened to the hook?
|It's not a matter of life and death :) but since we already changed supervdsmServer to supervdsmd and the python module is called vdsmd.py (vdsm.py is causing import errors because of vdsm package) - why not to be consistent?
I will change the commit message accordingly.
|it implies more about the script functionality and sounds less general
|Done
|localsync has a higher priority so vdsm should be taken from there.
Why isn't localsync enabled from the first place? 
I remember I had to specifically enable other vdsm repos in order to install dependencies so it's not a good idea to disable the other repos.
|can you elaborate on this issue?
How is it being accessed now?
|can you give more details regarding the package?
Why is it needed? Is it Fedora 25 requirement? Who is using it?
|so it's only available in fedora 25?
|I'd rather save the tests in a list.
|On a second thought, let's add a patch of moving the functional tests to funtional/infra and have similar call as in nrun_network_tests
|what about a more meaning name? it's too general
|can you copy paste the issue in the commit message?
I can't understand what it is and how it's been solved.
|please add a few more details to the commit message
|I agree with Nir, it's not intuitive and I couldn't understand what it means until I read Piotr's comment.
|is this comment still relevant?
|I agree, vdsmapi can identify the complex arguments and we can add specific usage in this case.
In case of very complex structure, like vm parameters, we can refer to the schema.
|when we connect we create the client object that holds the namespaces and methods
|currently vdsm-client -h is not informative enough, I need to update usage message.
I want to add namespace specific and method specific help.
so vdsm-client Host -h will show a list of supported methods and vdsm-client VM create -h will show a list of method arguments.
I'll update commit message once I'll get nice help messages, I still have to refine it a little bit.
|please mention you also added a test
|Done
|Done
|Done
|you should update the date
|please update
|Done
|Done
|Done
|I agree with Piotr, I don't want to expose it. transport should remain private.
We want to expose a certain behavior of JsonRpcClient and don't wish to let calling module depend on internal implementation.
|I'm removing this change, I'm not sure it's safe enough.
|I agree, I will remove the new exception and use VdsmException instead
|JsonRpcError isn't enough informative. since all errors inherit from it, it can be any error type.
If we get a faulty result when we run a JsonRPC command than we should raise JsonRpcCommandError, not a general one.
This shows that we had a specific problem in the command execution.
You can see some references to what I've described in the next patch.
|It seems like a documentation error, when running `vdsClient -s 0 setLogLevel WARN` I get:
ValueError: unknown log level: 'WARN'

WARN and CRIT aren't supported in logUtils also. so this is correct usage, unless we want to add them as well.
|WARN isn't recognized by vdsm-client, only WARNING.
I changed it based on what's written in the schema. 
I will remove ERROR and CRITICAL.
|Done
|I didn't verify it yet, I just made sure all parameter names are correct.
By the way, I need your help verifying the change in spmprotect.sh
|OK
|Done
|Done - took the examples from the docstring. I think it's quite enough as a start.
|Done
|Done
|Notification object gets event_schema as a parameter.
I can't import vdsmapi in this module due to a circular import so I decided to get event_schema as a parameter to notify function.
|Done
|I have to pass event_schema in here, so if I can't import vdsmapi in this module, I can only get it from notify function parameters.
|Done
|Done
|quit
|quit
|I will change to &quot;was started by&quot;, I don't like it either.
|Done
|i've done it in a different patch https://gerrit.ovirt.org/#/c/70610/
|Done
|Done
|Are we the only ones who are touching vdsm code?
|Done
|this is not an API, it is a fake notify command for test purposes.
I added documentation to clientIF notify method instead
|I already started to work on it
|I need the permutations and they contain the xml part. I'll drop all xml related code in a separate patch
|but it's still an error, don't we want to be aware of it when log level is error?
|You should mention the reasons for this change in the commit message. The current message suggests you want to silence a real error just because it's too verbose, but you say it's not a real error and the user shouldn't be aware of that.
To me it looks like a real error, something that prevents receiving messaging, but if you say it's OK, just explain your motive.
|please update
|please update
|better call it sudoers.vdsm_hook_localdisk, same as other hooks.
|please sort alphabetically
|shouldn't it be in before_vm_start directory?
|when looking at history of lib/vdsm/config.py.in I see that 'functional_jsonrpc_enable' was always set to 'false', meaning that the functional tests never ran over jsonrpc.
|Why are you changing only fc25 job? Shouldn't we update all jobs?
|I'll remove it from this patch
|i'm working to replace it. this is part of the change.. I want to drop vdscli first
|I moved vmId outside the conf file as a separate parameter but I missed vmName in the process... I will publish a fix soon
|can it be separated to a different patch?
|provides
|what following options? Maybe: available options are tlsv1.2 or sslv23.
|why is it a global variable and not read from the configuration?
|why don't you use this function anywhere? you always create context directly with the new global you created here instead of using the config value.
|DEFAULT_SSL_CONTEXT
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|since I create the ports then I can assume the name is OK, but I added a check anyway.
|Done
|Done
|I'm not sure it will look better than this. 
I'm afraid it won't be readable.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|http_server
|that's right, you need the &quot;Provides&quot;, otherwise vdsm installation will fail because required package doesn't exist.
Provides: %{name}-xmlrpc = %{version}-%{release}
|I wanted to be consistent with the rest of the methods, as they get MethodRep object.
|schema.describe is good for method description, but we still need another method that creates the nested dict. We can use it internally and have schema.describe call it.
|it's not part of this patch.
|Done
|Done
|Done
|Done
|sorry, I didn't understand your comment
|since dpdk links are injected in getLinks(), isNicLike() function should return True when it gets a DPDK nic.
Thereby, I have to support a check in ipwrapper for this kind of nic and since I'm already touching ipwrapper, then it's a good practice to support another device type.
|good point, there is no driver for dpdk and the check should raise IOError. I moved the dpdk type detection inside the except block.
|Done
|Done
|shouldn't it be part of a separate patch? Why isn't this query (with all the other packages) already in here?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|bad rebase
|Done
|Done
|Done
|Done
|Done
|Done
|already added, see below
|Done
|Done
|I have a problem mocking supervdsm.getProxy() here since I'm blocking real calls related to SRIOV, such as appropriateIommuGroup function.
|I'm working to change it, still investigating why libvirt gets permission denied when trying to access this path.
|yes, it will be added in the next patch
|switched between _source_ovsdpdk_bridge and _get_vhostuser_port_name.

The other methods arrangement should be done in a different patch
|changed to &lt;net_name&gt;_&lt;uuid&gt;
|the problem with uuid3 is that for a given string, it will always create the same uuid. If we pass network name, it will prevent us from putting two interfaces on the same network.
|changed to vmid and device mac address hash
|Done
|correct, it's a leftover from another version
|Done
|Done
|I'll implement it in a future patch
|The change is supported in qemu 2.7+ (Please see https://bugzilla.redhat.com/show_bug.cgi?id=1293405)
RHEL 7.4 will support qemu 2.8 (2.7 will be skipped, as detailed in here https://bugzilla.redhat.com/show_bug.cgi?id=1387600).
|I see now that it was backported to qemu 2.6
I will test it and update the patch.
|The fix is already available, but RHEL 7.3 doesn't support qemu 2.7, which is needed in order to pass mode='server' when creating vhostuser interface in device xml.
I will add the RHEL 7.4 qemu update bz instead.
|Done
|Done
|Done
|Franscesco, thanks for the detailed answer.
Regarding option B: isn't adding another attribute, which the engine isn't aware of, also considered as &quot;lying&quot; to the engine?
Engine thinks we have a bridge interface, while, in reality, we have a vhostuser interface with no external evidence for that, since self.device is bridge and _is_vhostuser is a private function.
I'm not sure this is the right approach at all. I'm not fond of the two options. 
From my perspective self.device should be determined in the constructor level, but it involves calling vdsm API from __init__ method which isn't a good practice, so calling it on setup looks like the lesser of two evils.
|Francesco, this is where Edy and me agreed to do, could you point me to where self.device should be created?
|the detection involves an API call that I've tried to avoid in __init__.
|Done
|Done
|I will add the check in the next patch set
|it only sets is_vhostuser while setup also creates the ovs port.
|it can be None in case of hostdevice
|yes, recover() is implemented only in network devices and I had to call it explicitly.
|Done
|ovs needs root access
|ignore this comment
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|bridge has 'datapath_type' attribute, it will empty in case of a regular ovs bridge and in case of dpdk it be type=netdev.

Regarding your second question: theoretically, yes, BUT, our design prevents us from this scenario. When running setupNetworks, if we recognize a dpdk device we create an ovs dpdk bridge. If we recognize a regular nic we create an ovs bridge.
|OVS naming is bridge 'netdev' type but I tend to stick with 'dpdk_enabled' name since it's more self explanatory.
|Done
|correct, the function should return None in this case
|hmm not really.
we only use net name and check bridge type in order to construct network device xml
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I used set_db_entry since set_bridge_attr uses 'Bridge' which is a different table.
|Done
|It doesn't fit set_interface_attr since it sets two different attributes while the latter function only sets one attribute.
|it's changed only on master (4.2)
|not related to this patch: the name implies this is a class that holds tests while in reality this is a Mock.
We should rename these class.
|same
|same
|please add tests for: - flowID is none
- client ip address
- client port
|it's not being used in the function
|please update
|please update
|pleas update
|where is it tested?
|Are there plans to stop using 'hugepages' and 'hugepagesz' as custom properties and create a property for hugepages with 'enable' boolean and size attributes?
|Good point :) Thanks for the review!
|Done
|it's an SELinux - this word sounds like it begins with a vowel (&quot;S&quot;).
|Done
|Please provide more details. why was it introduced from the first place? why isn't it valid anymore? why is this removal harmless?
|cached
|please explain your motive
|Done
|Done
|total_vms_hugepages? the name is confusing
|please move this to a private function
|_calc_free_hugepages
|same
|can be moved to _calc_vm_hugepagsz
|_get_preallicated_hugepages
|importing the containing module and calling datautils.memoized is a better practice than importing a member from module.
It improves readability and makes it easier to understand the project structure.
|please update
|Done
|Done
|Nice, I was aware of the '-class network' option but it didn't give a valid JSON object (it's a known issue unfortunately) so I chose the more general call.
disabling the calls gives a valid JSON and makes things faster so I'll update the command.
|I don't see any value in reporting the driver. We don't use it anywhere else.
The number of checks is constant so we can afford checking 3 directories.
|Done
|I decided to change it to invalidate_dpdk_devices since it's the only action it does now (removed the _get_dpdk_devices call).
|why is this flag needed?
|strict
|environments
|breakage
|I agree. let's just fix the typo without an alias
|you can drop this option.
|change unsecure option to insecure
|sorry, I meant asking it in the Rng section: ('address', 'model',)
|is the comma needed?
|Done
|Uploaded patch set 1.
|Abandoned
|Patch Set 1:

&gt; you should use the same Change-Id as your previous patch (
 &gt; I42b725075a14bb090e9dd0aa429fffe537ccfed9). Then, reviewers can see
 &gt; the history of your change.
 &gt; 
 &gt; Please abandon this change.

OK, How can I push the change with the same change-id? it's auto generated with every commit I do.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified

Hi,
1. I changed the variable name.
2. I verified this patch by adding a print (and then removing it) to the function and calling it a few times to check if the return value is cached and the function isn't called again.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 17.
|Patch Set 18: Published edit on patch set 17.
|Patch Set 19: Published edit on patch set 18.
|Patch Set 20: Commit message was updated.
|Patch Set 20:

(2 comments)
|Patch Set 20: Verified+1
|Uploaded patch set 21: Patch Set 20 was rebased.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Patch Set 24: Verified+1

(4 comments)
|Uploaded patch set 25.
|Patch Set 25: Verified+1

(16 comments)
|Uploaded patch set 26.
|Patch Set 26: Verified+1

(1 comment)
|Patch Set 27: Commit message was updated.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10:

(3 comments)
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13:

(3 comments)
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17:

(5 comments)
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 18:

(19 comments)
|Patch Set 18: Verified+1
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Patch Set 23:

(6 comments)
|Patch Set 23: Verified+1
|Patch Set 3: Code-Review+1

(1 comment)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8: -Verified
|Uploaded patch set 9.
|Patch Set 11: Verified-1

Tox fails on RHEL because it expects setup.py file. This option is disabled in tox.ini with skipsdist = True option but this configuration isn't parsed well in RHEL.
python-tox version in RHEL7 is old (1.4.2) while on fc23 it's 2.1.1. it seems like a bug that was fixed in a newer version.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Patch Set 14:

&gt; with this patch, we require el7 developers and builders to install
 &gt; tox by pip.
 &gt; 
 &gt; Can we somehow avoid that? If not, we have to make sure we do not
 &gt; harm d/s builds, and we should update our website, and place a
 &gt; clear warning on the commit message.

tox version in el7 is very old and has a strange behavior. We have to install by pip in order to get the newer version. I was planning to update the website once the patch will be merged.
|Patch Set 14:

(10 comments)
|Uploaded patch set 15.
|Patch Set 16: Published edit on patch set 15.
|Uploaded patch set 12.
|Patch Set 12:

I rebased the patch, please verify the changes
|Patch Set 12:

(1 comment)
|Uploaded patch set 13.
|Patch Set 13:

(1 comment)
|Patch Set 13: Verified+1

no errors in vdsm, created a new vm and sos report shows the wanted data
|Patch Set 13:

(1 comment)
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 6.
|Patch Set 7: Commit message was updated.
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10:

(4 comments)
|Patch Set 10:

(6 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12:

(1 comment)
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified+1

(6 comments)
|Uploaded patch set 16.
|Patch Set 15:

(5 comments)
|Uploaded patch set 17.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Patch Set 21:

(1 comment)
|Patch Set 21: Verified+1
|Uploaded patch set 28.
|Patch Set 28:

(1 comment)
|Uploaded patch set 29.
|Patch Set 29:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 25: Code-Review+1
|Patch Set 27: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 6:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Commit message was updated.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5:

&gt; how does it pass on python3 in el7?
 &gt; 
 &gt; File &quot;/home/jenkins/workspace/vdsm_master_check-patch-fc23-x86_64/vdsm/rpmbuild/BUILD/vdsm-4.18.0/lib/vdsm/sslcompat.py&quot;,
 &gt; line 26, in &lt;module&gt;
 &gt; from . import m2cutils as sslutils
 &gt; File &quot;/home/jenkins/workspace/vdsm_master_check-patch-fc23-x86_64/vdsm/rpmbuild/BUILD/vdsm-4.18.0/lib/vdsm/m2cutils.py&quot;,
 &gt; line 33, in &lt;module&gt;
 &gt; from M2Crypto import SSL, X509, threading
 &gt; ImportError: No module named 'M2Crypto'

I saw it, will send a fix soon.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

(2 comments)
|Abandoned

this patch contains changes that were already merged by other patches.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4:

(3 comments)
|Patch Set 4: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 5:

(2 comments)
|Patch Set 6: Code-Review+1
|Patch Set 8: Verified+1
|Patch Set 8: -Verified
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4:

(3 comments)
|Patch Set 4:

(7 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8: Commit message was updated.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 12:

(14 comments)
|Patch Set 13:

(22 comments)
|Uploaded patch set 14.
|Patch Set 15: Published edit on patch set 14.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 18: Published edit on patch set 17.
|Uploaded patch set 19.
|Patch Set 18:

(14 comments)
|Uploaded patch set 20.
|Patch Set 21: Published edit on patch set 20.
|Patch Set 21: Verified+1
|Uploaded patch set 22.
|Patch Set 22:

(5 comments)
|Patch Set 23: Published edit on patch set 22.
|Patch Set 23:

(1 comment)
|Patch Set 24: Published edit on patch set 23.
|Patch Set 24: Verified+1
|Uploaded patch set 10.
|Patch Set 10:

I rebased the patch, please verify the changes
|Patch Set 10: Verified+1

verified by running  jsonrpc Host.getVMList
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1

(1 comment)
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2:

OK, I'm working on the changes
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 5:

(4 comments)
|Uploaded patch set 6.
|Patch Set 6:

(7 comments)
|Uploaded patch set 7.
|Patch Set 8: Published edit on patch set 7.
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 9:

(1 comment)
|Patch Set 10: Verified+1
|Patch Set 10:

verified infra removal on fedora 23 and centos 7
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(3 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10:

(6 comments)
|Uploaded patch set 11.
|Patch Set 11:

(2 comments)
|Patch Set 11:

(2 comments)
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13:

(14 comments)
|Uploaded patch set 14.
|Patch Set 14:

(4 comments)
|Uploaded patch set 15.
|Patch Set 15:

(1 comment)
|Patch Set 15:

(2 comments)
|Uploaded patch set 16.
|Patch Set 16:

(1 comment)
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 19: Published edit on patch set 18.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Patch Set 21: Verified+1

(7 comments)
|Patch Set 21:

&gt; Irit, did you address the comments in version 7?

version 7 is very old, are you sure you meant that version?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 3:

(5 comments)
|Patch Set 5: Commit message was updated.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Patch Set 6: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 2: Code-Review+1

I removed some of the tests in 
https://gerrit.ovirt.org/#/c/57251/9/tests/Makefile.am
|Patch Set 2: Code-Review-1

ovs_driver_test and iproute2_test don't pass
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Published edit on patch set 2.
|Patch Set 3: Verified+1

testlibTests.py pass on jenkins
|Uploaded patch set 1.
|Patch Set 1: Verified+1

test pass on jenkins
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

test passes on jenkins
|Uploaded patch set 1.
|Patch Set 1:

&gt; add the droppin bug-url

It's not the drop-in patch
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 2: Verified+1

test passes on jenkins
|Patch Set 2:

(1 comment)
|Patch Set 2:

keeping this patch until ovirt-imageio will be py3-compatible
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Abandoned

duplicate
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(3 comments)
|Patch Set 6: Verified+1
|Patch Set 6:

&gt; To mark as verified, the tests should pass on python 3 - can you
 &gt; add a python 3 testenv running this module?

yes, I'm adding it. sorry, was sure that the testenv already exists, probably got confused with common/tox.ini patch.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Topic set to pytest
|Topic pytest removed
|Uploaded patch set 2.
|Topic set to pytest
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

vdsm-tool configure issues DeprecationWarning
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

/usr/lib/python2.7/site-packages/vdsm/tool/dump_volume_chains.py:28: DeprecationWarning: vdscli uses xmlrpc. since ovirt 3.6 xmlrpc is deprecated, please use vdsm.jsonrpcvdscli
  from vdsm import vdscli

stacklevel=2 makes the warning refer to the caller rather than the source of the deprecation.
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(5 comments)
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1

verified running `sosreport -o vdsm`
|Patch Set 6:

this is the sos report output for jsonrpcvdscli commands:
# ll sos_strings/vdsm/
total 32
-rw-r--r--. 1 root root   51 Jul 19 11:28 getAllTasksInfo
-rw-r--r--. 1 root root   51 Jul 19 11:28 getAllTasksStatuses
-rw-r--r--. 1 root root   42 Jul 19 11:28 getAllVmStats
-rw-r--r--. 1 root root   42 Jul 19 11:28 getDeviceList
-rw-r--r--. 1 root root 5467 Jul 19 11:28 getVdsCapabilities
-rw-r--r--. 1 root root 2905 Jul 19 11:28 getVdsStats
-rw-r--r--. 1 root root   42 Jul 19 11:28 list


#vim getVdsStats
{&quot;status&quot;: {&quot;message&quot;: &quot;Done&quot;, &quot;code&quot;: 0}, &quot;cpuStatistics&quot;: {&quot;1&quot;: {&quot;cpuUser&quot;: &quot;0.73&quot;, &quot;nodeIndex&quot;: 0, &quot;cpuSys&quot;: &quot;0.40&quot;, &quot;cpuIdle&quot;: &quot;98.87&quot;}, &quot;0&quot;: {&quot;cpuUser&quot;: &quot;13.33&quot;, &quot;nodeIndex&quot;: 0, &quot;cpuSys&quot;: &quot;0.60&quot;, &quot;cpuIdle&quot;: &quot;86.07&quot;}}, &quot;numaNodeMemFree&quot;: {&quot;0&quot;: {&quot;memPercent&quot;: 75, &quot;memFree&quot;: &quot;1002&quot;}}, &quot;memShared&quot;: 0, &quot;thpState&quot;: &quot;always&quot;, &quot;ksmMergeAcrossNodes&quot;: true, &quot;rxRate&quot;: &quot;0.00&quot;, &quot;vmCount&quot;: 0, &quot;memUsed&quot;: &quot;20&quot;, &quot;storageDomains&quot;: {}, &quot;incomingVmMigrations&quot;: 0, &quot;network&quot;: {&quot;bond0&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;0&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;0&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;down&quot;, &quot;speed&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;bond0&quot;}, &quot;ovirtmgmt&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;44268011&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;929117740&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;up&quot;, &quot;speed&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;ovirtmgmt&quot;}, &quot;lo&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;433308033&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;433308033&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;up&quot;, &quot;speed&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;lo&quot;}, &quot;ovs-system&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;0&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;0&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;down&quot;, &quot;speed&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;ovs-system&quot;}, &quot;enp0s25&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;68520312&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;2024742586&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;up&quot;, &quot;speed&quot;: &quot;100&quot;, &quot;name&quot;: &quot;enp0s25&quot;}, &quot;;vdsmdummy;&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;0&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;0&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;down&quot;, &quot;speed&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;;vdsmdummy;&quot;}, &quot;dummy0&quot;: {&quot;sampleTime&quot;: 1468916894.446061, &quot;rxDropped&quot;: &quot;0&quot;, &quot;tx&quot;: &quot;0&quot;, &quot;rxErrors&quot;: &quot;0&quot;, &quot;rx&quot;: &quot;0&quot;, &quot;txDropped&quot;: &quot;0&quot;, &quot;txRate&quot;: &quot;0.0&quot;, &quot;rxRate&quot;: &quot;0.0&quot;, &quot;txErrors&quot;: &quot;0&quot;, &quot;state&quot;: &quot;down&quot;, &quot;speed&quot;: &quot;1000&quot;, &quot;name&quot;: &quot;dummy0&quot;}}, &quot;txDropped&quot;: &quot;0&quot;, &quot;cpuUser&quot;: &quot;7.03&quot;, &quot;ksmPages&quot;: 100, &quot;elapsedTime&quot;: &quot;16.82&quot;, &quot;cpuLoad&quot;: &quot;0.33&quot;, &quot;netConfigDirty&quot;: &quot;False&quot;, &quot;diskStats&quot;: {&quot;/var/log&quot;: {&quot;free&quot;: &quot;15312&quot;}, &quot;/var/log/core&quot;: {&quot;free&quot;: &quot;15312&quot;}, &quot;/tmp&quot;: {&quot;free&quot;: &quot;15312&quot;}, &quot;/var/run/vdsm/&quot;: {&quot;free&quot;: &quot;1757&quot;}}, &quot;memCommitted&quot;: 0, &quot;bootTime&quot;: &quot;1467016888&quot;, &quot;ksmState&quot;: false, &quot;vmMigrating&quot;: 0, &quot;ksmCpu&quot;: 0, &quot;memAvailable&quot;: 2622, &quot;txRate&quot;: &quot;0.00&quot;, &quot;cpuUserVdsmd&quot;: &quot;0.20&quot;, &quot;haStats&quot;: {&quot;active&quot;: false, &quot;configured&quot;: false, &quot;score&quot;: 0, &quot;globalMaintenance&quot;: false, &quot;localMaintenance&quot;: false}, &quot;momStatus&quot;: &quot;active&quot;, &quot;rxDropped&quot;: &quot;0&quot;, &quot;outgoingVmMigrations&quot;: 0, &quot;swapTotal&quot;: 15999, &quot;swapFree&quot;: 15999, &quot;cpuSys&quot;: &quot;0.50&quot;, &quot;dateTime&quot;: &quot;2016-07-19T08:28:16 GMT&quot;, &quot;anonHugePages&quot;: &quot;66&quot;, &quot;memFree&quot;: 2878, &quot;cpuIdle&quot;: &quot;92.47&quot;, &quot;vmActive&quot;: 0, &quot;v2vJobs&quot;: {}, &quot;cpuSysVdsmd&quot;: &quot;0.00&quot;}
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Patch Set 7:

(6 comments)
|Patch Set 8: Verified+1
|Patch Set 9: Published edit on patch set 8.
|Patch Set 9:

(1 comment)
|Uploaded patch set 10.
|Patch Set 10:

(1 comment)
|Patch Set 11: Published edit on patch set 10.
|Patch Set 12: Published edit on patch set 11.
|Patch Set 12: Verified+1
|Patch Set 12:

(1 comment)
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Topic set to jsonrpcvdscli
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Published edit on patch set 2.
|Patch Set 4: Commit message was updated.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 2:

(1 comment)
|Patch Set 3: Published edit on patch set 2.
|Patch Set 3: Verified+1

verified importing jsonrpcvdscli works fine and the report is generated
|Patch Set 3:

(1 comment)
|Patch Set 4: Commit message was updated.
|Patch Set 4: -Verified

(1 comment)
|Uploaded patch set 5.
|Patch Set 5:

please ignore last update
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

(1 comment)

verified importing vdsm.jsonrpcvdscli and vdsm.storage.constants
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 12:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

functional.supervdsmFuncTests.TestSuperVdsmRemotly
20:11:30     testKsmAction                                               OK
20:11:30     testPingCall                                                OK
20:11:30 functional.upgrade_vdsm_test.UpgradeTest
20:11:30     upgrade_test
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Patch Set 11:

(11 comments)
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14: Verified+1

passes in jenkins
|Patch Set 14:

(1 comment)
|Patch Set 15: Patch Set 14 was rebased
|Patch Set 15:

http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/297/
job ended successfully
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

check-merged run:

nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
14:06:05 functional.supervdsmFuncTests.TestSuperVdsmRemotly
14:06:05     testKsmAction                                               OK
14:06:05     testPingCall                                                OK
|Uploaded patch set 2.
|Topic set to module_loader
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Abandoned
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Uploaded patch set 3.
|Patch Set 4: Published edit on patch set 3.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 6: Published edit on patch set 5.
|Patch Set 7: Commit message was updated.
|Patch Set 7: Verified+1

ran check-merged job on jenkins
|Patch Set 8: Commit message was updated.
|Patch Set 9: Published edit on patch set 8.
|Patch Set 10: Published edit on patch set 9.
|Patch Set 10: Verified+1

verified on jenkins http://jenkins.ovirt.org/job/vdsm_master_check-merged-fc24-x86_64/128/console
|Patch Set 10:

(5 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Commit message was updated.
|Patch Set 15: Patch Set 14 was rebased
|Uploaded patch set 16: Patch Set 15 was rebased.
|Patch Set 17: Commit message was updated.
|Topic set to check-merged
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Topic set to module_loader
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Code-Review+1
|Patch Set 9: -Code-Review Verified+1
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 6.
|Patch Set 6: Code-Review+1

rebased and verified
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Verified+1

check-merged run:
nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
14:06:05 functional.supervdsmFuncTests.TestSuperVdsmRemotly
14:06:05     testKsmAction                                               OK
14:06:05     testPingCall                                                OK
|Uploaded patch set 4: Patch Set 3 was rebased.
|Topic set to check-merged
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

(5 comments)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12:

(2 comments)
|Patch Set 13: Published edit on patch set 12.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Patch Set 19: Verified+1

(1 comment)

nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
09:37:08 functional.supervdsmFuncTests.TestSuperVdsmRemotly
09:37:08     testKsmAction                                               OK
09:37:08     testPingCall                                                OK
09:37:08 
09:37:08 ----------------------------------------------------------------------
09:37:08 XML: /tmp/nosetests-el7.xml
09:37:08 ----------------------------------------------------------------------
09:37:08 Ran 2 tests in 0.052s
|Patch Set 19:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Topic set to check-merged
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Topic set to check-merged
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Topic set to check-merged
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Topic set to check_merged
|Topic changed from check_merged to module_loader
|Abandoned
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Published edit on patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Patch Set 9: Published edit on patch set 8.
|Patch Set 9: Verified+1

In [2]: dump_volume_chains.dump_chains('dump-volume-chains','33d5731d-665e-4a70-bb0d-84cd160a3620')

Images volume chains (base volume first)

   image:    c7901677-2a44-4365-81fa-ba235f93b73c

             - a80cfc8e-f9f6-4e38-a6a1-0bde6c35c287
               status: {'message': 'Done', 'code': 0}, voltype: LEAF, format: RAW, legality: LEGAL, type: PREALLOCATED


   image:    ecbc3ebe-417a-4031-ada8-9516c423e949

             - 69268488-0d94-47aa-99db-533f4706444f
               status: {'message': 'Done', 'code': 0}, voltype: LEAF, format: RAW, legality: LEGAL, type: SPARSE


   image:    ffabf370-ee71-4956-978a-ed23c22d17d1

             - 238269a3-ce90-4f7e-847c-88c14a52a87f
               status: {'message': 'Done', 'code': 0}, voltype: LEAF, format: RAW, legality: LEGAL, type: PREALLOCATED


   image:    ce3f7536-bf54-4cee-9f98-65cd5a06b95e

             - 715d310e-752d-4288-a431-f44b93bc6e50
               status: {'message': 'Done', 'code': 0}, voltype: LEAF, format: RAW, legality: LEGAL, type: SPARSE
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Patch Set 11:

&gt; Irit - can you answer Piotr?

Oved, I already talked with Piotr offline, I'm currently working on a fix of the jsonrpc returned result and I'll rebase this patch when I'm done researching for impacts of this change.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 13:

(2 comments)
|Patch Set 13: Verified+1

[root@lochte vdsm]# vdsm-tool dump-volume-chains '05558ceb-52c6-4bf4-ab8d-e4d94416eaf0'

Images volume chains (base volume first)

   image:    5d5c6bdf-6b03-4daf-9b60-3e0056320c0d

             - 447756a0-950d-4950-ad7e-512bca6fe47c
               status: OK, voltype: LEAF, format: RAW, legality: LEGAL, type: SPARSE


   image:    e03de708-a020-405c-9a36-28b6b93f69a4

             - 9a2b3226-47f9-4ded-9107-4ebdfcf32029
               status: OK, voltype: LEAF, format: RAW, legality: LEGAL, type: PREALLOCATED


   image:    589ce3f8-8e66-4e00-a64e-eab2d5e93f71

             - 95c768bd-75af-4134-a3e3-bcea47c1bc8b
               status: OK, voltype: LEAF, format: RAW, legality: LEGAL, type: PREALLOCATED


   image:    e5527f3c-9664-41ef-a279-09f8875764ac

             - 05a1ee7d-75b2-4a73-bee3-2981bdd73982
               status: OK, voltype: LEAF, format: RAW, legality: LEGAL, type: SPARSE
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 15: Commit message was updated.
|Patch Set 15:

(1 comment)
|Patch Set 15: -Verified

please ignore the jsonrpc migration patches until we will have the fixed cli. The current version depends on an abandoned patch.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 18: Verified+1

(2 comments)
|Patch Set 18:

pingg
|Uploaded patch set 19.
|Patch Set 19: Verified+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

passes on jenkins http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/5/
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

passes on jenkins http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/11/console
|Patch Set 4: Verified-1
|Uploaded patch set 5.
|Patch Set 5: Verified+1

passes on jenkins
http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/24/
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6:

pending jsonrpc cli fix
|Patch Set 7: Published edit on patch set 6.
|Uploaded patch set 8.
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 10.
|Patch Set 10:

(3 comments)
|Uploaded patch set 11.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)

sorry for the delayed response, I'm currently working on a fix to the jsonrpc command result representation, thus this patch isn't ready yet.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

(2 comments)
|Patch Set 6: -Verified

pending jsonrpc cli fix
|Uploaded patch set 7.
|Patch Set 7: Verified+1

# ll sosreport-lochte.tlv.redhat.com-20161117202302/sos_commands/vdsm/
total 52
-rw-r--r--. 1 root root 1111 Nov 17 20:23 fdisk_-l
-rw-r--r--. 1 root root  626 Nov 17 20:23 iostat
-rw-r--r--. 1 root root   27 Nov 17 20:23 iscsiadm_-m_node
-rw-r--r--. 1 root root   30 Nov 17 20:23 iscsiadm_-m_session
-rw-r--r--. 1 root root   65 Nov 17 20:23 ls_-ldZ_.etc.vdsm
-rw-r--r--. 1 root root    8 Nov 17 20:23 ls_-l_.var.log.core
-rw-r--r--. 1 root root  705 Nov 17 20:23 lvm_lvs_-v_-o_tags
-rw-r--r--. 1 root root 1272 Nov 17 20:23 lvm_pvs_-v_-o_all
-rw-r--r--. 1 root root  247 Nov 17 20:23 lvm_vgs_-v_-o_tags
-rw-r--r--. 1 root root 1826 Nov 17 20:23 service_vdsmd_status
-rw-r--r--. 1 root root   61 Nov 17 20:23 su_vdsm_-s_.bin.sh_-c_.bin.ls_-lR_VDSMREPO
-rw-r--r--. 1 root root   55 Nov 17 20:23 su_vdsm_-s_.bin.sh_-c_.usr.bin.tree_-l_VDSMREPO
-rw-r--r--. 1 root root  624 Nov 17 20:23 vdsm-tool_dump-volume-chains_05558ceb-52c6-4bf4-ab8d-e4d94416eaf0
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 3: Commit message was updated.
|Patch Set 4: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

passes on jenkins
http://jenkins.ovirt.org/job/vdsm_4.0_check-merged-fc23-x86_64/117/console
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

ping?
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)

&gt; Dependency has not been merged yet.

it won't be merged until it will be tested on jenkins, currently it has only been tested locally.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review-1

(4 comments)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 7:

&gt; (1 comment)
 &gt; 
 &gt; I am not at all certain logSkip change is entirely safe. The
 &gt; supposed change seems to pass all tests using misc.py for both
 &gt; versions, and that's all I can account for.

you accidentally removed the Makefile. Also, please change the commit message so it will explain the removal of alignment scan tests also (if you intend to remove it in this patch).
|Patch Set 10: Code-Review+1
|Patch Set 10:

seems like the rebase is fine.
you can add another patch with makefile change on top of this patch.
|Patch Set 10: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

In [3]: server.list()
Out[3]: 
{'status': {'code': 0, 'message': 'Done'},
 u'vmList': [u'7fbcda8e-847c-449a-a25d-105a1de02cb8']}
In [5]: server.fullList()
Out[5]: 
{'status': {'code': 0, 'message': 'Done'},
 u'vmList': [{u'acpiEnable': u'true',
   u'bootMenuEnable': u'false',
   u'clientIp': u'',
   u'cpuType': u'Penryn',
...
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Abandoned
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

&gt; This looks correct, if https://gerrit.ovirt.org/63408 was correcdt,
 &gt; but
 &gt; I think it was wrong, changing the return value from list of vms to
 &gt; dict with a vmList key, conflicting the schema and possibly
 &gt; breaking engine.

Nir, can we talk about it offline? I don't see any conflict in the schema and a dict is returned now and before (just with different keys). We can test it further if you'd like.
|Abandoned

as we agreed
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated.
|Patch Set 3: -Verified

pending jsonrpc cli fix
|Abandoned
|Patch Set 1: Code-Review+1

I agree with this approach, merging the two style validation checks to one target will shorten make check time and I don't see a reason separating them
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

ping
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1

[root@rhevh-25 sos]# ll sosreport-rhevh-25.gsslab.rdu2.redhat.com-20160921153154/sos_commands/vdsm/
total 84
-rw-r--r--. 1 root root 2610 Sep 21 15:31 fdisk_-l
-rw-r--r--. 1 root root   27 Sep 21 15:31 iscsiadm_-m_node
-rw-r--r--. 1 root root   30 Sep 21 15:31 iscsiadm_-m_session
-rw-r--r--. 1 root root   65 Sep 21 15:31 ls_-ldZ_.etc.vdsm
-rw-r--r--. 1 root root    8 Sep 21 15:31 ls_-l_.var.log.core
-rw-r--r--. 1 root root 1971 Sep 21 15:31 lvm_lvs_-v_-o_tags
-rw-r--r--. 1 root root 1322 Sep 21 15:31 lvm_pvs_-v_-o_all
-rw-r--r--. 1 root root  526 Sep 21 15:31 lvm_vgs_-v_-o_tags
-rw-r--r--. 1 root root 1162 Sep 21 15:31 nodectl_info
-rw-r--r--. 1 root root 1207 Sep 21 15:31 service_vdsmd_status
-rw-r--r--. 1 root root   27 Sep 21 15:31 su_vdsm_-s_.bin.sh_-c_.bin.ls_-lR_.rhev.data-center
-rw-r--r--. 1 root root   42 Sep 21 15:31 su_vdsm_-s_.bin.sh_-c_.usr.bin.tree_-l_.rhev.data-center
-rw-r--r--. 1 root root  537 Sep 21 15:31 su_vdsm_-s_.usr.bin.python_.usr.share.vdsm.dumpStorageTable.pyc
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getAllTasksInfo
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getAllTasksStatuses
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getAllVmStats
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getDeviceList
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getVdsCapabilities
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getVdsStats
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_getVGList
-rw-r--r--. 1 root root  650 Sep 21 15:31 vdsClient_-s_0_list
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(17 comments)
|Uploaded patch set 7.
|Patch Set 8: Published edit on patch set 7.
|Uploaded patch set 9.
|Patch Set 9:

(10 comments)
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(3 comments)
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Patch Set 13: Verified+1

(3 comments)
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15.
|Patch Set 15: Verified+1

(12 comments)
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19.
|Patch Set 19: Verified+1

(4 comments)
|Patch Set 20: Published edit on patch set 19.
|Uploaded patch set 21.
|Patch Set 21: Verified+1
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23.
|Patch Set 23: Verified+1

(3 comments)
|Patch Set 8: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2: Verified+1

(2 comments)
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Patch Set 6: Published edit on patch set 5.
|Patch Set 7: Commit message was updated.
|Patch Set 7: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

job is now successful
http://jenkins.ovirt.org/job/vdsm_master_build-artifacts-fc24-x86_64/627/
|Patch Set 1:

take a look at http://jenkins.ovirt.org/job/vdsm_master_build-artifacts-fc24-x86_64/ and http://jenkins.ovirt.org/job/vdsm_master_build-artifacts-fc24-ppc64le/

both are failing because openssl package is missing
|Patch Set 1:

(1 comment)
|Patch Set 1:

this is from vdsm_master_build-artifacts-fc24-x86_64, the errors repeat in more builds. 

11:36:33 ./makecert.sh: line 15: openssl: command not found
11:36:33 ./makecert.sh: line 16: openssl: command not found
11:36:33 rm: cannot remove 'server.pass.key': No such file or directory
11:36:33 ./makecert.sh: line 18: openssl: command not found
11:36:33 ./makecert.sh: line 19: openssl: command not found
11:36:33 ./makecert.sh: line 21: openssl: command not found
11:36:33 ./makecert.sh: line 22: openssl: command not found
11:36:33 rm: cannot remove 'server.pass.key': No such file or directory
11:36:33 ./makecert.sh: line 24: openssl: command not found
11:36:33 ./makecert.sh: line 25: openssl: command not found
11:36:33 ./makecert.sh: line 27: openssl: command not found
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated.
|Patch Set 2: Code-Review+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(9 comments)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(1 comment)
|Patch Set 4:

please ignore this version, I need to add a few more changes
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1

(8 comments)
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(1 comment)
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Published edit on patch set 5.
|Patch Set 7: Published edit on patch set 6.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(2 comments)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review-1

I saw you published a fix for the test so there's no need marking it broken
|Restored
|Patch Set 3: Code-Review+1

let's mark module_loader test as broken for now, I'm investigating the root cause of the failure
|Patch Set 1: Code-Review+1
|Patch Set 1:

it's not a fix for the test failure but it's a good practice to run tests that change the environment in a different process.
|Patch Set 1:

The reason why the test fails is that importer cache isn't up to date after inserting a new package dynamically.
When you have a different process for every test you force the importer to re-read the temp directory. 
I don't like the idea that every permutation will have its own process. I agree running all the tests in a child process but not to create a new one for every test.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

verified by running `make` and `make rpm`
|Patch Set 2: Commit message was updated.
|Patch Set 3: Commit message was updated.
|Patch Set 5:

Nadav, please separate the backports from your fix. I will backport the changes once you drop it from the current patch
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+1
|Patch Set 7:

Nadav, can you respond to Yaniv's comments?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

I will add gluster_enabled option in a separate patch and handle gluster schema in a different patch as well.
I agree with Yaniv, this patch is all about generating namespace from vdsm schema and not manually.
|Patch Set 4: Commit message was updated.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1

verified by installing vdsm on host and creating a new VM
|Patch Set 2: Commit message was updated.
|Uploaded patch set 1.
|Topic set to moduleloader
|Patch Set 1: Verified+1
|Abandoned
|Uploaded patch set 1.
|Topic set to moduleloader
|Patch Set 1: Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1

couldn't reproduce the error again with this patch
|Patch Set 3: Commit message was updated.
|Topic set to moduleloader
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 4.
|Patch Set 4:

no code change, just a rebase
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Code-Review+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(2 comments)
|Patch Set 4:

I'm working on adding a script in a separate patch
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 8: Verified+1

(1 comment)
|Uploaded patch set 9.
|Patch Set 9: Verified+1

no difference, just a rebase
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 4:

I don't know what we benefit from this effort but the change seems OK from my side
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 6:

(1 comment)
|Patch Set 7: Code-Review+1

(1 comment)
|Patch Set 8: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2:

(3 comments)
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(5 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(5 comments)
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(4 comments)
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated.
|Patch Set 2: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Published edit on patch set 5.
|Patch Set 6: Code-Review+1

(1 comment)

# vdsmctl Host getVMList
[
    &quot;695a66f8-bfbf-4067-8b1b-e4c45b7c2b2d&quot;
]
|Patch Set 6: Code-Review-1 Verified+1
|Patch Set 6: -Code-Review
|Uploaded patch set 7.
|Patch Set 7: Verified+1

(2 comments)
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Patch Set 10: Published edit on patch set 9.
|Patch Set 10: Verified+1
|Patch Set 10:

(1 comment)
|Patch Set 10:

vdsm-client expects a json formatted file, not key=value format
|Patch Set 10:

I will check for a solution
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

check patch failure is not related to this patch
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Code-Review+1
|Patch Set 2: -Code-Review Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Published edit on patch set 3.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Patch Set 6: Verified+1

(1 comment)
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

usage: supervdsmServer [-h] --sockfile SOCKFILE [--pidfile PIDFILE]

optional arguments:
  -h, --help           show this help message and exit
  --sockfile SOCKFILE  socket file path
  --pidfile PIDFILE    pid file path
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Published edit on patch set 3.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 8: Published edit on patch set 7.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(3 comments)
|Patch Set 11: Published edit on patch set 10.
|Patch Set 11: Verified+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1

I rebased on top of multipath patch since it depends on that change
|Uploaded patch set 14.
|Patch Set 23: Code-Review-1

I don't understand why you're not using the new client. you don't have to use vdsm-client script, but we have a replacement for jsonrpcvdscli (new jsonrpc client).
The new client provides a different API and more refined command results.
|Patch Set 23:

Also, I wouldn't wait for 4.2 and migrate the code twice.
|Patch Set 23: -Code-Review

OK, great job, I'm waiting for the migration to the new client.
|Patch Set 23:

I mean in 4.2 :)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 8: Patch Set 7 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned

not possible yet
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Abandoned

the change isn't really needed
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

Yaniv, is it a backport? There are some missing attributes in the commit message.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 2:

(2 comments)
|Patch Set 3:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7:

ci build please
|Patch Set 7:

ci please build
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Yaniv, we only run check merged jobs on el7. 
This patch is not needed since https://gerrit.ovirt.org/#/c/69233 does the same change.
|Patch Set 1:

he created a specific rule for check-merged, take a closer look.
I will abandon this patch.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Commit message was updated.
|Topic set to vdsmd
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 9: Commit message was updated.
|Topic set to vdsmd
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1

check-patch fc25 is successful: http://jenkins.ovirt.org/job/vdsm_master_check-patch-fc25-x86_64/16/
|Uploaded patch set 3.
|Patch Set 3:

we need a different rule for check-merged - only el7 job should run
|Patch Set 7:

yes
|Patch Set 9:

sorry, I was sure all fc25 patches were merged.
This patch https://gerrit.ovirt.org/#/c/69176/ should fix it
|Patch Set 9:

https://gerrit.ovirt.org/#/c/69176/ is ready and waiting for ack+merge
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1

job is successful:
http://jenkins.ovirt.org/job/vdsm_4.1_check-patch-fc25-x86_64/2/
|Patch Set 3: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1

oops :)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 2: Code-Review+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 2: Code-Review+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 4.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 5: Verified+1

(2 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

because it's a great utility that lets us avoid new python related issues. Not all current issues have a quick fix.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Verified+1

(23 comments)
|Uploaded patch set 11.
|Patch Set 11: Verified+1

(4 comments)
|Patch Set 12: Published edit on patch set 11.
|Patch Set 12: Verified+1
|Patch Set 12:

no, the problem is that it looks for the given packages first in vdsm directory and then in lib. So, it first finds vdsm, storage and virt in vdsm directory and ignores the lib/vdsm package. 
When I added lib/vdsm I encountered more errors.
I'm trying to find a solution for that.
|Uploaded patch set 13.
|Patch Set 13: Verified+1

(11 comments)
|Uploaded patch set 14.
|Patch Set 14: Verified+1

(2 comments)
|Uploaded patch set 15.
|Patch Set 15: Verified+1

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Topic set to vdsmd
|Patch Set 6:

(1 comment)
|Patch Set 7: Commit message was updated.
|Patch Set 7:

(1 comment)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Topic set to vdsmd
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

ci please build
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1

OST is successful
http://jenkins.ovirt.org/job/ovirt_master_system-tests_manual/10/
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)

ci please build
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

ci please build
|Patch Set 3: Verified+1

OST successful
|Uploaded patch set 4.
|Patch Set 5: Published edit on patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

ci please build
|Patch Set 7: Verified+1

OST successful
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

ci please build
|Patch Set 3: Verified+1

OST is successful
http://jenkins.ovirt.org/job/ovirt_master_system-tests_manual/12/
|Uploaded patch set 4.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8:

ci please build
|Patch Set 8: Verified+1

OST successful
http://jenkins.ovirt.org/job/ovirt_master_system-tests_manual/27/
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

ci please build
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

ci please build
|Patch Set 6: Verified+1

OST successful
http://jenkins.ovirt.org/job/ovirt_master_system-tests_manual/28/
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 3: Code-Review+1

this is the link
http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/978/
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 9:

(1 comment)
|Patch Set 28:

looks OK to me, I'll ack once you fix the commit message
|Patch Set 29: Code-Review+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Topic set to pylint
|Patch Set 1:

so my patch isn't needed. 
I will abandon this patch
|Abandoned
|Uploaded patch set 1.
|Topic set to pylint
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 14: Code-Review+1
|Patch Set 2:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Topic set to client-events
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 5: Code-Review+1

nice idea. looks good to me
|Patch Set 8: Code-Review+1
|Patch Set 3:

(2 comments)
|Patch Set 5:

So the difference is that this patch also stores methods in a dict instead in a tuple? If you think this change is important, you can still rebase it.
|Patch Set 4:

patch https://gerrit.ovirt.org/#/c/55871/ also adds dispatch.
please rebase this patch on top of it.
|Patch Set 4:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 10: Code-Review+1
|Patch Set 10: Commit message was updated.
|Patch Set 9:

I moved the event schema change to another patch
|Uploaded patch set 9.
|Patch Set 8: -Code-Review
|Patch Set 8:

(1 comment)
|Patch Set 7: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 4:

Can you separate your change to a few patches? I'm finding it very hard to follow what you did here.
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 8: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

the patch isn't ready yet
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified-1

need to set a custom usage + add more information to help message
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8: Commit message was updated.
|Patch Set 8: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: -Code-Review

(1 comment)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

I started doing it in a separate patch
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1

removed all related vdsClient references.
VDSM_CLIENT variable was removed from spmprotect.sh
|Uploaded patch set 9.
|Patch Set 9: Verified+1

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Patch Set 3: Code-Review+1
|Patch Set 4:

please rebase these patches
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 1.
|Patch Set 1: Verified-1

not ready yet
|Patch Set 10: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

ci please build
|Patch Set 9: Verified+1

OST successful 
http://jenkins.ovirt.org/job/ovirt_master_system-tests_manual/51/
|Uploaded patch set 10.
|Patch Set 10:

ci please build
|Patch Set 10: Verified+1
|Patch Set 11: Patch Set 10 was rebased
|Uploaded patch set 1.
|Patch Set 1:

ci please build
|Patch Set 1:

ci please build
|Patch Set 1:

It means i will have to rebase all your patches since my patch depends on them...
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

ci please build
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified-1

not ready yet
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 6: Published edit on patch set 5.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1

rebase, no code change
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1

(2 comments)
|Topic set to yajsonrpc_exception
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 17:

ci please build
|Patch Set 17: Verified+1
|Patch Set 19: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 4:

(2 comments)
|Patch Set 5: Code-Review+1
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Topic set to client_events
|Uploaded patch set 3.
|Patch Set 4: Published edit on patch set 3.
|Uploaded patch set 5.
|Patch Set 6: Published edit on patch set 5.
|Topic changed from client_events to client-events
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Patch Set 8: Commit message was updated.
|Patch Set 8: Verified+1

(1 comment)
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Code-Review+1

(1 comment)
|Patch Set 11: -Code-Review Verified+1
|Patch Set 12: Published edit on patch set 11.
|Patch Set 12: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated.
|Patch Set 5:

(1 comment)
|Topic set to yajsonrpc_exception
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Topic set to Topic
|Topic changed from Topic to yajsonrpc_exception
|Uploaded patch set 4.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 5: Verified-1

bad rebase
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(2 comments)
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(1 comment)
|Patch Set 4: Published edit on patch set 3.
|Patch Set 4: Verified+1
|Patch Set 4:

Yaniv - I will add a post about it.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(2 comments)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Topic set to client-events
|Patch Set 2:

(1 comment)
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1

(2 comments)
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 1: Code-Review+1
|Patch Set 4:

(2 comments)
|Patch Set 5: Code-Review+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6:

see patch https://gerrit.ovirt.org/#/c/71071
I added schema support for this change.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 1:

please rebase on top of https://gerrit.ovirt.org/#/c/72622/
|Patch Set 2:

please split to 3 patches
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(3 comments)
|Patch Set 5: -Verified

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Topic set to client-events
|Uploaded patch set 4.
|Patch Set 3:

(2 comments)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Topic set to client-events
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Topic set to pylint
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

http://jenkins.ovirt.org/job/vdsm_master_build-artifacts-fc24-x86_64/2/ is successful
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

so we need the original version of the patch, adding packages to fc24 jobs.
|Uploaded patch set 5.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3:

check-patch failure isn't related to this patch.
ImportError: No module named 'dateutil'
|Patch Set 5:

(1 comment)
|Patch Set 5:

(3 comments)
|Patch Set 5:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review-1

not needed anymore
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 3: Published edit on patch set 2.
|Patch Set 4: Published edit on patch set 3.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 5: Verified-1

check-merged is failing again
|Patch Set 5:

Please ignore this patch for now
|Uploaded patch set 6.
|Patch Set 7: Commit message was updated.
|Patch Set 7:

looks like the issue is solved:
http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/1165/
http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/1164/
|Patch Set 7: Verified+1

(1 comment)
|Patch Set 7:

Did the test run on Jenkins? because the same failures were not reproduced in a local mock environment.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: -Code-Review Verified+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 1: -Code-Review Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1

It's still being used, in functional tests for example. 
It's not officially supported but this error is too annoying... so until I will migrate to the new client, this change is necessary.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2: Published edit on patch set 1.
|Patch Set 3: Commit message was updated.
|Uploaded patch set 1.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 3:

no, vdsm-cli removal is only from master
|Uploaded patch set 1.
|Patch Set 1: Verified+1

we have import failures because ovirt_imageio_common is missing. 
I will change snapshot to tested repo in a separate patch.
|Uploaded patch set 1.
|Patch Set 1:

I will remove fc25 from 4.1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

job is fixed:
http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/1214/
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Topic set to ovs-dpdk
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 12: Published edit on patch set 11.
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Patch Set 20: Verified+1

check-patch failure isn't related to this patch
|Uploaded patch set 21.
|Patch Set 22: Patch Set 21 was rebased
|Patch Set 22: Verified+1
|Patch Set 23: Patch Set 22 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1

check-merged is successful
http://jenkins.ovirt.org/job/vdsm_master_check-merged-el7-x86_64/1221/
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Patch Set 4: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Topic set to vdsm-client
|Patch Set 4: -Verified

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 4: Code-Review+1

job fails because missing mom dependency - not related to this patch
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

looks like there are no other occurrences.
we can check it by triggering OST and make sure there are no errors.
|Patch Set 2:

ci please build
|Patch Set 2: Code-Review+1

I triggered OST:
http://jenkins.ovirt.org/job/ovirt_master_system-tests_manual/102/

let's wait for the results
|Patch Set 2: Verified+1

job is successful
|Patch Set 11: Code-Review+1
|Patch Set 23:

(3 comments)
|Patch Set 24: Code-Review+1
|Patch Set 26: -Code-Review

(3 comments)
|Patch Set 26: Code-Review+1
|Patch Set 27: Code-Review+1
|Patch Set 32: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Published edit on patch set 4.
|Patch Set 5: Verified-1
|Patch Set 5:

i need to check also the driver in use
|Uploaded patch set 6.
|Patch Set 7: Published edit on patch set 6.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 9: Published edit on patch set 8.
|Uploaded patch set 10.
|Patch Set 11: Published edit on patch set 10.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Patch Set 14:

(5 comments)
|Patch Set 14: Verified+1
|Topic set to ovs-dpdk
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Patch Set 16:

(9 comments)
|Uploaded patch set 17.
|Patch Set 17: Verified+1
|Uploaded patch set 18.
|Patch Set 18: Verified+1

(3 comments)
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Patch Set 23: Verified+1
|Uploaded patch set 24.
|Patch Set 24: Verified+1

(8 comments)
|Patch Set 25: Published edit on patch set 24.
|Patch Set 25: Verified+1

(1 comment)
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Patch Set 27:

(3 comments)
|Patch Set 29: Verified+1
|Uploaded patch set 30.
|Uploaded patch set 31.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Patch Set 32: Verified+1

(9 comments)
|Uploaded patch set 33.
|Patch Set 33: Verified+1
|Patch Set 34: Published edit on patch set 33.
|Patch Set 34: Verified+1
|Patch Set 35: Published edit on patch set 34.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

failure is not related to this patch (missing gluster package)
|Abandoned
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Topic set to drop-xmlrpc
|Abandoned

duplicate
|Uploaded patch set 1.
|Topic set to drop-xmlrpc
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

ci please build
|Patch Set 3: Verified+1

OST successful:
http://jenkins.ovirt.org/view/oVirt%20system%20tests/job/ovirt-system-tests_manual/42/
|Patch Set 3:

OK, let's wait with this change
|Abandoned
|Restored
|Abandoned
|Uploaded patch set 1.
|Topic set to drop-xmlrpc
|Uploaded patch set 2.
|Patch Set 2:

ci please build
|Uploaded patch set 3.
|Patch Set 3:

ci please build
|Abandoned
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

Ramesh, can you please verify?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

module name should also be updated - it suggests we're using xmlrpc
|Patch Set 1: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 8:

(1 comment)
|Patch Set 9: Code-Review+1
|Patch Set 10: Code-Review+1
|Patch Set 13: Code-Review-1

(1 comment)
|Patch Set 14: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 9: Code-Review+1
|Patch Set 15: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

I will add tests soon
|Patch Set 3: -Verified
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Commit message was updated.
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Topic set to ovs-dpdk
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 8: Published edit on patch set 7.
|Patch Set 9: Published edit on patch set 8.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(4 comments)
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12.
|Patch Set 12: Verified+1

(2 comments)
|Patch Set 12:

(1 comment)
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14.
|Patch Set 14: Verified+1

(2 comments)
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19: Commit message was updated.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Patch Set 23: Verified+1

(1 comment)
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Patch Set 28: Verified+1

lshw command was introduced in the previous patch which is already merged.
I'll update the next patch, which already handles improving lshw calls.
|Patch Set 28:

OK, I will.
|Uploaded patch set 29: Patch Set 28 was rebased.
|Uploaded patch set 30: Patch Set 29 was rebased.
|Uploaded patch set 31: Patch Set 30 was rebased.
|Uploaded patch set 32: Patch Set 31 was rebased.
|Uploaded patch set 33.
|Uploaded patch set 34: Patch Set 33 was rebased.
|Patch Set 34: Verified+1
|Uploaded patch set 35.
|Patch Set 35: Verified+1
|Patch Set 36: Patch Set 35 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(4 comments)
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4:

(4 comments)
|Patch Set 5: Verified+1

the package is still missing from ovirt repos, managed to install it after adding its source url manually.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6:

managed to install packages - repo now contains the required packages.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Topic set to ovs-dpdk
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 11: Commit message was updated.
|Uploaded patch set 12.
|Patch Set 13: Commit message was updated.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Patch Set 14:

(2 comments)
|Patch Set 15: Verified+1
|Uploaded patch set 16: Patch Set 15 was rebased.
|Patch Set 17: Patch Set 16 was rebased
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22: Patch Set 21 was rebased.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Patch Set 26:

(9 comments)
|Patch Set 27: Verified+1
|Uploaded patch set 28.
|Patch Set 29: Patch Set 28 was rebased
|Patch Set 30: Published edit on patch set 29.
|Patch Set 30: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Patch Set 2: Verified+1

package is missing from ovirt repos - verified it by manually adding the repo containing this package.
|Abandoned

duplicate
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Topic set to ovs-dpdk
|Patch Set 8: Published edit on patch set 7.
|Uploaded patch set 9.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11.
|Patch Set 11: Verified+1

(1 comment)
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12:

(1 comment)
|Patch Set 12: -Verified

(6 comments)
|Patch Set 12:

(1 comment)
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15: Patch Set 14 was rebased.
|Uploaded patch set 16.
|Patch Set 16:

(1 comment)
|Uploaded patch set 17.
|Patch Set 17:

the patch depends on https://gerrit.ovirt.org/#/c/77245/
will be rebased after the dependencies will be merged.
|Uploaded patch set 18.
|Patch Set 17:

(8 comments)
|Patch Set 17:

(1 comment)
|Patch Set 18:

(1 comment)
|Uploaded patch set 19.
|Uploaded patch set 20.
|Patch Set 20: Verified+1

VM with vhostuser interface was created:

# ovs-vsctl show

Bridge vdsmbr_bqflOsBp
        Port &quot;net1&quot;
            Interface &quot;net1&quot;
                type: internal
        Port &quot;dpdk0&quot;
            Interface &quot;dpdk0&quot;
                type: dpdk
        Port vdsmbr_bqflOsBp
            Interface vdsmbr_bqflOsBp
                type: internal
        Port &quot;9d439731-39a1-415d-9634-e3480ef10dea_vdsmbr_bqflOsBp&quot;
            Interface &quot;9d439731-39a1-415d-9634-e3480ef10dea_vdsmbr_bqflOsBp&quot;
                type: dpdkvhostuserclient
                options: {vhost-server-path=&quot;/var/run/vdsm/vhostuser/9d439731-39a1-415d-9634-e3480ef10dea_vdsmbr_bqflOsBp&quot;}

vhostuser interface:

&lt;interface type=&quot;vhostuser&quot;&gt;
            &lt;address bus=&quot;0x00&quot; domain=&quot;0x0000&quot; function=&quot;0x0&quot; slot=&quot;0x04&quot; type=&quot;pci&quot;/&gt;
            &lt;mac address=&quot;00:1a:4a:16:01:54&quot;/&gt;
            &lt;model type=&quot;virtio&quot;/&gt;
            &lt;source mode=&quot;server&quot; path=&quot;/var/run/vdsm/vhostuser/9d439731-39a1-415d-9634-e3480ef10dea_vdsmbr_bqflOsBp&quot; type=&quot;unix&quot;/&gt;
            &lt;filterref filter=&quot;vdsm-no-mac-spoofing&quot;/&gt;
            &lt;link state=&quot;up&quot;/&gt;
            &lt;bandwidth/&gt;
        &lt;/interface&gt;
|Patch Set 20:

(6 comments)
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Patch Set 23: Verified+1

(2 comments)
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26: Commit message was updated.
|Patch Set 27: Patch Set 26 was rebased
|Uploaded patch set 28.
|Patch Set 27:

(5 comments)
|Patch Set 28: Verified+1
|Patch Set 28: -Verified
|Patch Set 28:

please note it's not the final version
|Uploaded patch set 29.
|Patch Set 29: Verified+1
|Uploaded patch set 30.
|Patch Set 30: Verified+1

(6 comments)
|Uploaded patch set 31.
|Patch Set 31: Verified+1
|Patch Set 31: -Verified

(1 comment)
|Uploaded patch set 32.
|Uploaded patch set 33.
|Patch Set 33: Verified+1

verified recovering, creating and destroying VM and vhostuser ports.
|Patch Set 33:

(4 comments)
|Uploaded patch set 34.
|Patch Set 34: Verified+1
|Patch Set 35: Patch Set 34 was rebased
|Patch Set 2:

what is the output of 'abrt-cli list'?
|Patch Set 2: Code-Review+1

please verify
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Topic set to ovs-dpdk
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Commit message was updated.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(1 comment)
|Patch Set 11: Published edit on patch set 10.
|Patch Set 10:

(1 comment)
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified+1
|Uploaded patch set 16.
|Patch Set 15: -Verified

(8 comments)
|Patch Set 16: Verified+1
|Uploaded patch set 17: Patch Set 16 was rebased.
|Uploaded patch set 18.
|Patch Set 18: Verified+1

(3 comments)
|Patch Set 18:

ci please build
|Patch Set 18:

OST successful http://jenkins.ovirt.org/job/ovirt-system-tests_manual/450/
|Uploaded patch set 19: Patch Set 18 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Topic set to ovs-dpdk
|Patch Set 4: Commit message was updated.
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Verified+1
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(1 comment)
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 13: Patch Set 12 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Topic set to ovs-dpdk
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 8:

(2 comments)
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Verified+1
|Patch Set 4: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 9: Code-Review+1

(3 comments)
|Patch Set 9:

(1 comment)
|Patch Set 10: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 5: Code-Review+1
|Patch Set 6:

(3 comments)
|Patch Set 6: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 8:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2:

ping
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Patch Set 4: Commit message was updated.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8:

(1 comment)

There is already a check there in _validate_bond_addition: it will fail if nic not in kernel_nics.
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 12: Patch Set 11 was rebased
|Topic set to ovs-dpdk
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 3: Published edit on patch set 2.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1

please send an email to rhev-devel announcing this removal.
|Patch Set 1: Code-Review+1
|Patch Set 4:

(1 comment)
|Patch Set 9: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(2 comments)
|Patch Set 2:

ping
|Patch Set 3:

I'm OK with this change but I couldn't understand the issue from the commit message.
|Patch Set 4: Code-Review+1
|Patch Set 6:

(2 comments)
|Patch Set 6:

(4 comments)

nice work! I suggested breaking the 2 big functions in hugepages.py to little chunks of code and document the new functions.
It will make the code more readable.
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 5:

(1 comment)
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Topic set to ovs-dpdk
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(3 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1

(2 comments)
|Patch Set 5: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2:

(3 comments)

so only if you see failures you'll advice the users to enable this check?
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Topic set to ovs-dpdk
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

just a rebase, no code change
|Abandoned

the change is not needed since the corrupting call is removed in the next patch
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

no code change
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 2:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 7: Code-Review+1 Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Topic set to ovs-dpdk
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 1.
|Topic set to ovs-dpdk
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Abandoned

added the same functionality to a different patch
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Topic set to ovs-dpdk
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Patch Set 3: Commit message was updated.
|Patch Set 4: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

It seems like a CI problem, not related to my changes.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

ci please build
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|It is just compatible with the _OLD_TAGS...
|Why is this not needed?

Wouldn't we want to stop the thread once the profiling is stopped?
|If this is the asyncore timeout, can you maybe import the constant from there, instead of just writing the number?
In case anything changes,
and also more readable...
|Does this pass pep8?

I'm pretty sure a space is required after return...
|To be compatible with next variable 'destCreationTime':

s/destinationCreateStartTime/ destCreateStartTime
|This comment is redundant, 
code should be self explanatory.
|s/ time.time() - destinationCreateStartTime/ destCreationTime
|We already print the exc_info in the log.

I think it would be enough to just:
s/raise e/ raise
|yes, Allow logrotate to manage virt_cache_t type is included in
3.12.1-153.el7_0.12
|ping :) it's available
|build is available in brew
|It is available in koji
|There can be 2 cases in which exceptions when reloading a service are raised :


multipath service is down - in that case configure succeeds. 
(and in this case we would like to avoid reloading altogether...)


multipath service is up - in that case configure fails and we do want to raise an exception.
|When the service is down running service_reload would throw a serviceOperationError... (because running service reload would return with rc=1 and runAlts in service.py would consider that as a failure).



so we wouldn't get to line 150.
|before:
1)reload
2)if status is active and fail: raise vdsm intentional exception
3)if status is inactive on el7: exception raised by service
after:
1)check status
2)reload only if active -&gt; avoids reload and exception if inactive for el7
3)check reload rc -&gt; raise exception if failed (service is active)
|on rhel7/centos7 when multipathd is inactive and we try to reload then it explodes...
That's the exception you see in the bug.

This is why I've changed it to check first the status of the service, and we will reload only in case it is active.
If it's inactive there's no reason to reload as the configuration will be reloaded once the service starts.
|In el7 reload service when the service is inactive returns code of 1, 
and on el6, it fails to reload but returns a value of 0.
This is what's causing the difference in behavior.
|I do not understand what would we benefit from changing rc to 1, it really is just an undocumented constant, and in addition what about the cases in which reload was successful (rc=0)?
|Done
|Have you deleted validate on purpose?
|Shouldn't these 3 lined be indented as well?
|Maybe we could just give distutils the paths as a parameter, and then we can get rid of the for loop?
|I'd prefer keeping the same as in line 887:

s/ if self._cmd is None: /if not self._cmd:
|Yaniv, I am strongly against changing anything about the way the file is configured.

Even if it's just a blank line.

The goal of this patch is to move the configuration outside of vdsm and that's the only thing that should be verified now.

any other change should be done in a different patch.
|Done
|Done
|Done
|yes. reading multipath was previously done by supervdsmserver
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Not such a nice catch.

if the service is not running, it will actually return 1.

See service.py line 410-413.
|Done
|Done
|Done
|OK
|OK
|I really disagree with this kind of comment. It feels redundant to me.
|Done
|Done
|I really think it's unnecessary, I wouldn't want adding it to the code.

If you insist that this comment is necessary I'd prefer it in a different patch, because it is irrelevant to the context of the patch.
|These are tags that represent the version of the configuration.

When we configure multipath we check the version, and if there's no PRIVATE_TAG and the version is not the latest we upgrade the conf file.
|we is vdsm-tool, I'll change it in the next patchset so it'll be clear.

Indeed, on force we won't change the multipath.conf file.
|Thanks Sandro,
I was suspicious I did not run into this kind of problem as well.
It only happens when calling super(vdsm).

I'll work on the separation of the sos2 and sos3 classes solution.
|Nice catch. thanks.

In order to allow future debugging to be easier as you've requested before, I will use cp and keep the patches separated.
|Done
|Done
|More style issues. to conform with the style of other names in utils.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|if you are already touching this code, then it will be a good to use only 'raise' so that we don't mess up with the original stack trace
|Done
|let me explain the idea behind this warning.

Renaming a directory is not done in an atomic manner, which means this can cause a race.

'Tomorrow', when this race actually happens, the person trying to debug it will have this as a clue.

In any case,
this bug fix is for the log level of oop and not for this specific comment.
|a warning in vdsm log is not a bug.

It might be a disagreement.

the bug itself is about this warning appearing in syslog.

whether the log should appear in vdsm or not is not a relevant discussion for this patch nor for this bug.

This patch only aims to fix oop logs mistakenly appearing in syslog.
|Done
|not touching the code logic itself. to Nir's request.

This was the original code.
|Done
|Done
|Done
|Done
|It's related because I'm using constants.


Done.
|This is an unrelated change to this patch.


It should be done in a different patch if needed.
|This is an unrelated change to this patch.


It should be done in a different patch if needed.
|Done
|Done
|This is an unrelated change to this patch.

It should be done in a different patch if needed.
|I don't see why the user needs to read vdsm code
|Done
|Done
|Done
|Done
|Done
|Actually it is rebased on purpose on top of Edu's patch.

Both are required.

This is an extension in order to use locking type 1 for clustersafe commands.

as for the proposed change it was considered as the solution at first, but we also obtain cached configuration from '_getCachedExtraCfg',

so the best solution to avoid any misconfigurations has been moved here.
|Done
|Was done in a later patch when testing,
will move it here. thanks.
|Done.
|In my point of view,

safe stands for : 

safe mode == default config of the host

unsafe mode == we allow locking type 1 for cluster safe commands...

If you think it's critical then I can change it.
|Done
|Noted, thanks/
|Done
|create is not the only valid case non-SPM doing this operation,

Please see following patches.
|Done
|Done
|Done
|Done
|Why is that?
|Done
|Done
|Done
|I guess that the intention is to where the next comment is, but it's irrelevant now so I'm removing it
|Done
|Done
|self.fileUtils.cleanupdir = _IOProcessFileUtils(ioproc).cleanupdir
|Done
|The idea behind the IOProcess implementation is that we cannot use standard IO python functions because of NFS. This is why we are avoiding it by implementing this function.
|I'm sorry... Haven't meant to ignore the comment, didn't notice it before.

Worst case we wouldn't ignore the error... ignoreError=False


 Done.
|Done
|Saggi referred to this comment in a previous patchset If I remember correctly.


We want the config file to be accessed only in hsm...
|Done
|Done
|Done
|Done
|True. You are correct. But it is also being removed in the following patches. 

To fix this would just be wasting time on an unnecessary rebase. cause as it is this patch won't get in without the others.


So I'd appreciate if we could skip this fix, unless you feel it's really important.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Same here, Indeed fsyncPath is missing, but this is fixed in following patches.

So would just be a time consuming rebase.

Up to you...
|I am removing the FIXME as devtype in devinfo is initialized in pathListIter.
|Done
|Done
|Done
|Done
|Done
|Done
|1. Currently only one backup option is available, but according to this bug recently opened it will change and be internal to gluster, trying multiple mount points, making it tricky for us to know the actual mount:

https://bugzilla.redhat.com/show_bug.cgi?id=986429

2. ConnectionMonitor is not yet in use. But if it were then it serializes connection information sent from engine to vdsm. Engine is not aware of the actual mount connection available only in vdsm (since vdsm returns to engine only connection id), therefore we will persist the original connection and not only the backup.
|I do not expect it to be mounted,

At the beginning of '_updateBackup' I check if connected to the original mount point and return if it is...
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|The idea is great! 

But I think there's no reason to change the argument purpose and behavior.

postZero is a much better argument and more readable than zeroLen.

I would just move the getVolumeSize call into the 'if postZero' block.

Which would leave us with the better argument 'postZero' and also would save us redundant changes in the other classes.
|Did you mean lvm._checkpvsblksize()?

Anyway,
the fix should be actualy changing the name of the function so it won't be &quot;private&quot;.
|As far as I see, it's not an IO error, but a problem with the qcow format, a corruption, which we don't have an error code for, and I also think we shouldn't add one just because of a temporary qemu bug...

If the user will think it's an IO error, he'll try fixing connectivity to storage...
|sdobj.getVSize(self.imgUUID, self.volUUID, bs)
|BLOCK_SIZE is not defined here, 

either define or take from blockVolume
|BLOCK_SIZE is not defined here also.
|maybe create getVolPath()???
|AI would remove the &quot;or anything&quot;
|v.imgs
|Yes
|You can see in the code, that the chain to remove is calculated the wrong way, Which means we won't delete the volumes we need to.
|Remove redundant %s (3 instead of 2...)

&quot;Domain %s, marked as master, is attached to pool %s but host is not connected to pool&quot;
|Not readable.

Elaborate on what is img run vol.
|Why would you have a scenario where spUUID is None???
|This patch is not diminishing any capabilities we have, since we currently don't support ipV6 targets in vdsm.

When discovering targets on Netapp storage we get a return value that includes both IPv4 and IPv6 addresses.

The only thing I've changed is preventing vdsm from failing discovery because of getting an unexpected response from iscsiadm (our parser is very hardcoded).

If we decide to support ipV6 addresses for discovery, login and managing the connection then it needs to be addressed separately.
|I will add a different patch for the name change.
|Clarification, you changed this by mistake?
|Yes, 

Thank you for the suggestion, I've considered both, but I really really like the 'with' statement.
|This new function introduces another redundant produce of the storage domain.

So either we can pass the domain as an argument or leave it the way it was.
|As I understand, this should be a configuration per vm, so how can it be we take it as a constant from config.py?
|Done
|Done
|I actually want duplicates, such that for each disk that belongs to the vm we'll have in the list the matching sdUUID. 

In such a manner, that when we perform the remove of the domain in hotUnplugDisk, we need the duplicates in case there was more than one disk belonging the specific vm on that sd.
|The reason add is holding the key is because we want runVm to finish as quickly as possible.

This operation (shutdown) on the other hand is less urgent and we want to allow runVm to take the lock in between if possible.
|It is self.oop.utils.forceLink
|Done
|Done
|Done
|Done
|Done
|I will create an additional patch to take care of this problem
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|This has already been discussed with Fede.

This change is not yet included for qemu rpms, I'm pretty sure starting only  in EL 6.5. 

So maybe the best solution here is to leave a TODO, and change it once qemu fully supports this feature.
|Done
|Done
|Extend is implemented in BlockVolume only also.

Do you suggest we should change the implementation for both?

If so, I'd rather commit to submitting such a 'raise NotImplementedError' change in a different patch.

What do you think?
|Done
|Done
|I agree that we should have a utils function to do the aligning.
I'll add it in a consecutive patch, so I won't add any explicit info here.
|Done
|'head', 'download', 'upload' are pretty much the same except for the first line that constructs cmd.

Can unify all other lines into one helper function that returns rc, out, err for 'head'.
|fileUtils repeated
|move here: prepare of memoryVol (lines 3563-3565), instead of teardown on finally.
|teardown to memoryVol in case of exception.
|I would try to use a meaningful name, rather than 'Elements'
|Same here.
|There is no harm in using oop for SDs other than NFS.

But, it will be better to use oop only when the domain is NFS, resourcewise.
|Please check if you can use fileUtils' DirectFile. 

Its write also allows you the padding you're looking for.
|no need to explicitly state these facts.
|param snapMemVolHandle: 

memory snapshots are not suported i.e. older versions: default value.
 
vm snapshot should contain memory: a comma-separated string of IDs: domain,pool,image1,volume1,image2,volume2 (hibernation volumes representation).

vm snapshot should not contain memory: empty string

type snapMemVolHandle: string
|Why does this belong to the vm object(self)?

It looks to me like a general method.
|_vmConfForMemorySnapshot
|code convention for 'memorysnapelem'
|round down.
|Please check if you need to teardownVolumePath of memory snapshot volume.
|This is an important unifying of the block size constant and from what I see this size is used explicitly in blockSD, fileUtils and storage mailbox and also implicitly in image as the default block size. 

Why not unify this now into a storage constant?
|Done
|I think we should maintain compatibility to the original output of virt-alignment-scan tool, and the output is straight-forward from the ScanOutput namedtuple structure.
|Done
|Done
|Done
|Dan,

I believe that it is wrong logic to return a value (x, f(x)).

If you want to be able to get the boolean return value then we should consider adding a new function, maybe 'isIamgeAligned(image_path)' that uses 'scanImage' and returns a boolean value.
|It is an expected behaviour (virt-alignment-scan failed and no vdsm error), hence no reason to raise.

In this case we return an empty dictionary and the engine can tell that we couldn't get the result of the alignment.
|s/foundIn/imgDomains
|I'm not sure I understand the difference between current and previous implementation.
both produce the domain (look into hsm.getImagesList). Is the point only to remove redundant code?
|What is next patch? please explain the motivation. It is difficult to review this way.
|Please explain why is this not necessary
|qemuConvert no longer returns (rc, out, err)
|Would be nice to change unexpected error and storageException here too...
|qemuConvert no longer returns (rc, out, err)
|too general:

except se.ActionStopped, e:		
     raise e

will be better, this way we can see what the error is.
|Would be nice to change unexpected error here too...
|Here we have the source and destination format in volParams, it's a shame to call getFormat() inside qemuConvert.

Also, qemuConvert no longer returns (rc, out, err)
|Change StorageExcetion....
|This function belongs to vdsm/qemuImg.py, I think we should move it there.
|seems redundant to remove the src format and dst format parameters and then call getFormat() several times, when we already have the format info when calling qemuConvert.
|We should use misc.execCmd()
|We should raise: 

raise QImgError(rc, out, err)

just like with qemu-img info and check in qemuImg.py, since this is no longer a generic storageException as in ddWatchCopy.
|You should check first, I understood that qemu-img might introduce some problems with this code and that is why dd was used in the first place.
|Done
|Done
|That is a good point.
Please move before devices and that's it..
|Please add the keyword: TODO

And move it before the devices section,so it will be more clear what it refers to.
|Also add keyword: TODO
|It seems like logging evaluated status is enough here since last status is not related to the logic of this method.
|Yes, I meant that evaluated status logging is enough,
and that last status logging can be removed...
|Please be compatible to rest of the code and just use:
supervdsm.getProxy().ksmTune(tuningParams)
superVdsm is an unnecessary variable and just makes it more complex.
|/s/controling/controlling
|/s/This argument contains a dictionary.../a dictionary...
|you are right.. must have got it confused when rebasing
|Done
|Done
|Done
|It is a ping sent to the destination server to test the jsonrpc connection created,
in case it failed, it will fallback to the xmlrpc connection.
|Can you explain why it's better?
In the next patch set it is only creating the socket before connect and pinging after... not sure it's necessary...
|In case jsonrpc connection fails we have a failover to xmlrpc
|I'm not sure I understand this comment...
|Done
|Done
|You are right! :)
|my bad. I should import d_addr instead of d_port at the top.
Fixed in next patch.
|Done
|Done
|Done
|I've discussed this with Saggi.
He is currently working on a getter for the reactor, so this is only temporary.
|xmlrpc will be handled with 'except Exception'
|Done
|not yet, only after Saggi's new json client patches.
|json client needs an explicit close, and in the old code we did not have json client, we only used xmlrpc.

You can see the example in the json unit tests.
|Done
|because ping is the only first real jsonrpc communication we have with the vdsm remote server, this is the first time we can actually detect if destination has jsonrpc or xmlrpc.
and in case it has xmlrpc we will get a RuntimeError and failover to xmlrpc.
|createStompClient which is called in self._createClient will raise RuntimeError on failure,
also,
ping will raise a RuntimeError in case it fails...
|This is the only way for us to check if connection was actually established,

If not we want to failover onto xmlrpc.
This is why we must do the ping...
|pep8 is not a good enough reason to have another variable, you can use '/' to split the line...
|request_queues variable is unnecessary, you can just:
config.get('addresses', 'request_queues').split(&quot;,&quot;)
|No need to return if it's none, you can just do the following:
if self._reply_to:
    self._client.send(
|^^ These 3 lines can go in a one liner... no need to split, just makes the code harder to understand.
|But you still have that method (create_socket) in jsonrpchelper if I remember correctly, I will fix my patch on top of this.
|Please use the helper method for creating a socket...
|Yes, I have added this according to your request:
https://gerrit.ovirt.org/#/c/41894/

I meant that we should be more careful with CALL_TIMEOUT value now because it makes it much more important,
and what do you think is the optimal one.
|What do you think is the optimal default timeout?
Is the current one good enough?
|Since I have made the change in latest comment then this is not relevant here anymore.. 
If there's a change to be considered it should be in jsonRpcClient code...
|How is it different than timeout not checked on call of jsonRpcClient?
|Done
|They are very different,

and jsonrpcvdscli will eventually replace vdscli when xmlrpc won't be supported.

the main difference is the need to translate each command to jsonrpc representation... 
so I think it's better to keep this semantics separate.
It also makes the code much more readable...
|Done
|Do you mean we should change it here? 

I think that if connect does nothing (as can be seen in stompconnection) then we should consider removing it altogether, cause this is just a sideaffect...

What do you guys think?
|Done
|You are right.. I just need it here because of the jsonrpcvdscli use...
|possible,
but it gets even longer in next patch in series and I think it's more readable this way...
|Response is expected to behave the following way:
response['status']['code']

You can see its usage in line 312 in migration...
|We have to be compatible with the vdscli response...
Do you have a suggestion for that?
|Done
|Done
|Done
|somebody can try to use jsonrpcvdscli for a method that has not yet been defined in command_converter...
|You are right,
I misunderstood your previous comment.
Thanks
|We could... But I just think that it's better for it all to go through one place and not have different constants in different places.
|With migrationcreate it expects the different return value...
which is in the shape of a dictionary like xmlrpc returns...
|I'm not sure I understand what you mean... 
can you elaborate?

The reason it's done this way is for the jsonrpc client to be closed as soon as there are no more users to it, which means the moment this object is deleted...
|I need to get the stomp client from the reactor which is in cif,
do you have a better idea?
|Done
|We will failover to xmlrpc but I will add an explicit try except..
|Please take a look at '_prepareJSONRPCBinding',
you will see that fulfilment of this condition is not enough.
The binding's creation depends on the imports success.
|Done
|no problem, I see your point, thank you, I will remove the check here.
but from what I understand, if the stomp client we return can't be None, because createClient does not retuen None,
then we don't need to check it over there as well...
|Piotr,
can you take a look at your comment from here, you stated exactly the opposite:
https://gerrit.ovirt.org/#/c/39203/2/lib/vdsm/jsonrpcvdscli.py
|I'm sorry,
but I don't think I understand your comment..
can you explain the issue you're referring to?
|Thanks Nir,
This will be handled in next patchset.
|I actually think it's more elegant the way it is, 
just do it at once with one operation and then do a failover,
rather than check and then do the operation.

It's a matter of style.
|That was the idea at first - to get the reactor.

But Piotr suggested that we don't want to get the reactor, but only a client.
|That's the way the reactor code is designed currently,
so it's not a decision related to this patch.

A broader explanation would state that json, stomp and the transport (socket) are three different layers,
and that is why we already pass it a connected socket - the bottom layer ready already for the second layer.
|Done
|jsonrpcvdscli.


We create a stomp client,
and then wrap it with jsonrpcclient

In the final patch in the series will eventually be used for the migration.
|Done
|Done
|indeed.
Thanks,
will fix in next patch set.
|Done
|Done
|Done
|Done
|I think it is still creating a socket,
maybe a good solution would be create_connected_socket
|Why don't you call connection.close instead of clean?
|I feel this method is unnecessary, and is very confusing why we need both close AND clean.
I'd prefer if you move the 2 cleanup lines into the close method.
|I agree with wanting a small method,
but a 2-line method for close is as small as it gets.
And close does these 2 actions anyway, so you have no way to avoid it.
Additionally, close is the only place we use clean, so I still think it's unnecessary...
|/s/subscribes which subscribed/subscribers
|destination part is quite self explanatory, I think we can remove second line of comment and let the code explain itself...
|I think it might be better to add a ctor to FakeClientIf and pass it the json_binding.

so cif will only be created after json_binding.
This allows us to remove line #48 that instantiates cif json_binding to None which seems redundant.
|Here also,
I think that there are too many details. Following will be enough:
Send notification using provided subscription id and event body.

Whoever needs more details should read Notification code in yajsonrpc.
|This is the vdscli path for vdsm certificates...
|It is needed because of the way vdscli works.
|This is a mistake,
will be fixed in next patch set. thanks.
|Piotr, 
I liked patch set no.3 better.
I think it is clearer there what is request.
|This change is good,


just a comment for reminder,
when upgrading from earlier versions multipath won't be reconfigured,
since its configuration was done as part of vdsm restart.
|Why do we need to save the frame?
|Why do we need to print None?
|Wouldn't it be helpful to log the command received with the sender details (from)? (after we parse it)
|I would add 'subscription request is missing...' at the beginning...
|shouldn't is_empty return True when deque is empty, meaning len==0?

Looks like it's doing the opposite...
|why not use pop_message in the first place?
|I think 'if headers' might be enough...
|Why are the lines for the arguments separated?
That's different than any other vdsm modules.
And much less readable... 

I think it would be better to change it everywhere around this patch..
|same
|same
|Do we have a way of knowing about this?
|removed the '\', but for str - libvirt does not recognize it without the conversion.
|Done
|Done
|But now you won't do wakeup when calling stop()...
|why do you disable ksmtuned?
|you can remove 'this call will'...
|It says bigger than...
Don't you mean the smaller ones?
|Are you sure sysv-rc is still needed?
I see that its source package is sysvinit...
|same here...
|I think that maybe the best choice instead of this docstring which gives info that is straightforward from the code is to give a warning that when using this you should remember to close the client...
It might save us some uncalled for trouble in the future.
|because in the case of migration we'd like to use the vdsm reactor and not use a separate one...
and then we supply our own client.
|I think it's better to do it in 'call'.
callMethod is using call,
but methods using 'call' will still fail.
|yes, I think that fixing the response handling is great and important,
I just mean that maybe it should be done inside 'call' instead of 'callMethod',
because callMethod is using call.
This way responses handling will be done for both call and callMethod ...
|Ok, it sounds like a good enough reason.
|/s/required/custom
|/s/required/custom
|Sounds reasonable.
I'd give a +1 to this one and the following, just please add a # TODO before all devices specific configuration so we'd remember this important bit.
|Can you please explain...

Do you override the multipath embedded defaults with new values(if so, how did you pick the values),
or with multipath's default values(if so, why do you need to override them? what will happen next time they'll be updated and we won't know about it?)
|good idea.
|I think old / previous one is more accurate. but your call.
|add:
Backup previous multipath.conf...
|but then it tries to access stats['devices'].
This means that you were probably trying to get the stats of the vm and not the vmId using getVmList...
|getVmList returns a list of UUIDs, so you can't use it to access devices key (first of all, it's not a dictionary and second it does not return the stats of the vmId).

getVmStats will return 'devices' only if the vm has devices.
That is why I have added the 'if'.
|Please notice the verb being used:
'getVmList'.
It does not return a statsList.
I'm pretty sure this code never worked.
Found it while trying to run functional tests using JsonRpc.
|Looks like it's an issue introduced by the jsonrpc bridge translation.
I will investigate this further.
It's behaving differently there.
|no..
|why not use sslctx.wrapSocket(sock) ?

It already has all parameters, so its doing this call for you and you don't have to work hard here...
|If no one is using it, then you should probably remove it... ?
|I mean that _log is 'static' so why access it as 'self._log'.
Also log_info was a member of cls which is 'static', and not of 'self' which is the object instantiated from the class - 'non static'.
|If the logger is a member of the class it will be created only once as I understand... exactly the opposite from what you say...

Anyway,
Just make sure that log_info and log are represented the same way.
|why is this a member of the object and not a member of the class like 'log' and the previous 'log_info'?
|Nir, could it be that the debain rules are overriding this configuration? Which makes this ok..?
|I tend to agree with you Yaniv.
This is what we have vdsm.conf for.
|Nir and Piotr, good point. Fine by me.
|Piotr,
Can it happen that we'll be on debian with config.py ssl_implementation=='m2c' and then we'll fail the import?
|why is  '@SSl_IMPLEMENTATION@' not all capital letters?
|Please specify which other option the user can use.
/s/m2c by default/ m2c or ssl.
|maybe use ssl=False before importing, and set it in case you need import.
and only import it if needed...
|Could you try and do it more nicely?
maybe use a True/False variable, and set it in case of ImportError or the 'else' clause.. and only then import ssl instead of importing twice..?
|Why are you not using SSLSocket implemented in sslutils?
Why change it?
|But as far as I can see you are not removing SSLSocket from sslutils in this patch...?
|I think you should keep the test as is by giving parameter:
self.vdscli.getVMFullList([vmId])
|There is the comment that explains it '# If failing to import old code, then try importing the legacy code'.

At the time we had to support legacy code of ovirt node. 
Fabian should know if we can remove this section now.
|Douglas,
What you're saying is that we did the import wrong?

We tried to import the legacy code first instead of the new code?

I think Fabian knows best if we still need to try and import legacy code...
|Done
|Can you explain what do you mean?
I don't understand your comment...
|Please ignore the latest comment... :)
|/s/prepare_args/_prepare_args
|allargs is constructed from keys that are from a regular dictionary. not an ordered dictionary. I'm afraid that if we use it this way then we will zip the value to the wrong key... 

we need to find a way to make data be ordered..
|In case we have a vdsm with ssl only then the _m2cEnabled flag does not make sense as well.
I'm referring to the current case where we have m2crypto enabled by default and we want to use ssl to create the socket.
In case we decide to drop use of m2crypto of course we can get rid of the m2c flag together with the _m2cEnabled flag...
|Done
|Changed in next patchset to SC_NPROCESSORS_CONF like francesco did in vdsm.
|Done
|Done
|Verbs can be added in one patch. 
But it is unrelated to this change which is about making the vdsm functional tests work over jsonrpc.

It can either be done all in one patch before this one.
Or add the remaining verbs in a following patch after this is merged.

Please choose your preference.
|I will add another patch to make this more coherent.
|I will add another patch to make this more coherent.
|Please look at API and Bridge and the way it is parsed there.
|This is just the way it is translated by the bridge. so these are the arguments jsonrpc expects.
|Changed to timeout.

As we've discussed this cannot change position. otherwise tests will break.
|Once we deprecate xmlrpc, we can change everything to be compatible with jsonrpc.
Until then making this compatible just creates a lot of extra work and unnecessary re-translations.
|Done
|Will change this.
|Will rethink this.

Waiting for Piotr's analysis of why jsonrpc takes a lot more time to run tests.
|Done
|Done
|The only thing different here is that you clean self._partialLogs. 

No need to split everything.
Leave everything the same and just add the line:
self._partialLogs = ''
|/s/Logging/LoggingTests
|I'm not sure it was ever working.
|Done
|Done
|Done
|Done
|Now that testCircularRefs is passing , do we still need this comment?
|Please notice:
https://gerrit.ovirt.org/#/c/47661/1

Do we need to require it here as well?
|Or is this requirement enough?
|What will we need to do in order to add support for python3?

https://gerrit.ovirt.org/#/c/44388/
|Done
|Done
|Done
|Done
|Done
|Done
|it didn't mention this,
but I'll fix this anyway...
actually it was there all along.
But I'll fix it anyway.
|what about the '.service' ending?
|I think it is better to do this with a for:

for s in ['vdsmd', 'vdsm-network'...]:
    service.systemEnable(s + '.service')
|same for here...
|make private:
/s/REQUIRED_SERVICES/_REQUIRED_SERVICES

What about '.service' ending, you don't need it?
|It broke while I was trying the JsonRpc functional testing instead of xmlrpc, helped finding the reason.
|not relates. but seemed harmless to do this here. 
Didn't think it's necssary to add an extra patch just for this...
|If we had a KeyError in line 326,
isn't it possible destination won't be set?
|Why have you removed the log added in patchset2 according to Dan's request?
|If it's used for backing up domain metadata why would you want me to remove it? what do you want instead?
|EXT_CP is still used in multipath configurator
|Done
|Done
|Done
|Do we still need the boolean self._connected?

Maybe we can just change the boolean to be Event object and check is_set instead of the boolean value.
I also like the name _connected better than _ready. easier to understand the context.
|Why do we need a special exception just for this class?
Especially when it gives us no additional meaningful info?
Can't we use StompError with a meaningful timeout message?
|Done
|Done
|Done
|Done
|Done
|Done
|I need WHITELIST in both places.. 
The tox.sh will use a different process to run.
|Done
|What we are trying to achieve in the scope of this patch is running pep8 and pyflakes the same way as we do now but just use a specific version.

Any other changes are unrelated to this and should be addressed in a different, following patch.

One change at a time.
|Done
|Done
|Done
|Done
|source won't work here since the makefile and shell script has different formats for lists... do you have another idea?
|Done
|Done
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

danken..
will do..
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Abandoned
|Patch Set 11: Code-Review+1
|Patch Set 11: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Verified when on upgrade the older version if vdsm contains this patch.

Still need to find a solution for older vdsm versions upgraded to this one.
|Patch Set 8: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as master. 
Just in lib/vdsm/SecureXMLRPCServer.py
instead of lib/vdsm/sslutils.py
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Same as master with slight location changes 
(sslutils -&gt; securexmlrpcserver)
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2:

Same as upstream.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 8: Code-Review-1

AsyncoreEvent should be moved to betterAsyncore in the previous patch,
and not here...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review-1

(3 comments)
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 8: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 8: Code-Review-1

There is a confusion between this patch and next one in chain.

AsynccoreEvent is only removed here from stompReactor,
but not added to betterAsynccore (only in next patch),
needs to be fixed...
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 7: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 2: Code-Review+2 Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review-1

This should be on the same patch as the previous one.
There is no reason to separate them as this patch is only a side effect and a requirement of the previous patch.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

verified on el6.6: 
multipathd is inactive.
change configuration of /etc/multipath.conf to an older vdsm conf so vdsm-tool has to configure.

vdsm-tool configure --force fails.
and then vdsmd restart fails.

That is the expected result: el6 now behaves the same on reload as el7.
|Patch Set 4:

I verified it first by itself.
The verification for the following one would result with vdsm-tool configure to finish successfully,
since we wouldn't reload multipath...
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 10: Code-Review+1
|Patch Set 11: Code-Review-1

what about removing name attribute for multipath.py?
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Patch Set 20: Verified+1
|Patch Set 6:

(2 comments)
|Patch Set 4: Code-Review+1
|Patch Set 1:

what is the default if size is not specified?
|Patch Set 1:

I mean, what is the default for qemu-img if it is not passed a size argument, which is what happening with the current code...?
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Does not break pep8/pyflakes.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as master. Does not break the build.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1:

(3 comments)

Nir:
Thank you for the review... some answers to your comments:

1. as far as I could tell, there is no special check when vdsm starts, it just uses vdsm tool isconfigured. do you know any other place for this?

2.Thank you, reverted in following patch.

3. maybe we should close the bug as duplicate of the current bug-url attached to this patch?
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(7 comments)
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4:

(3 comments)

force should not override existing configuration if it contains PRIVATE_TAG
|Uploaded patch set 5.
|Patch Set 5:

(5 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

(4 comments)
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13:

It doesn't make sense to change the use of rotateFiles to copy in a different following patch, because it means that we will need to move rotateFiles to utils from storage.misc,
and then in the following patch move it back.
and Dan is against exposing rotateFilles to utils... so this is the only way to do it.
|Patch Set 13:

moving to use backup instead of rotateFiles is not because 'Dan doesn't like it'.

The cheange is because it does not make sense and there is no need to rotate the conf file. 
as part of doing things the same way as all configurators, we are using a single backup file just like the backup of the libvirt conf by the configurator.
The user only needs the backup of his original conf file.
not of the vdsm conf file.
and that's what we want to preserve.

That is the way I would explain it to the user.
|Patch Set 13:

(3 comments)

Separating into two steps / patches:
1. move to backup file from rotate files
2. move to vdsm tool configurator
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 16:

(4 comments)
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Patch Set 20: Verified+1
|Patch Set 21: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

REPLACED BY: http://gerrit.ovirt.org/35929
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as upstream. does not break the build.
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

verified vdsm.log is created on:

sos-3.0-23.el7.noarch
sos-2.2-47.el6.noarch
sos-3.1-1.pkvm2_1.1.noarch
|Patch Set 1: Verified-1

(1 comment)
|Patch Set 1: Verified+1

returning the verified flag as sos.plugintools.PluginBase is an old-style class, which is the reason we did not get the TypeError.

This hack will work now as an urgent solution, will work on a new patch to separate the vdsm plugins for sos2/3.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

added timestamp instead of single backup file to make everyone happy.

Yaniv,
This issue was discussed in the devel mailing list, and was decided that because multipath configuation is more complex than libvirt we'd rather just save old copies aside for the meantime...
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Abandoned

Unified with http://gerrit.ovirt.org/#/c/30909
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as master.
Does not break the build.
|Patch Set 1: Code-Review+1
|Patch Set 2: Verified+1
|Patch Set 2: Verified-1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

verified both on el6 and el7.
killed process with SIGABRT and coredump was created successfully.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

verified both on el6 and el7.
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1

Same as master.
|Patch Set 1: Code-Review+1

Same as master...
|Patch Set 1: Verified+1

I've checked it both on el6 (sosreport 2.2) and on el7 (sosreport 3.0) and it seems to generate the sosreport just fine. 
as expected.
Thank you Sandro.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4:

I think the changes are unrelated, I prefer to keep it this way. Simpler and clearer to understand and review.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned

This patch does not fix the problem.

The fix will be delivered as part of selinux-policy in versions 6.6.z, 7.0.z and 7.1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

Toni,
The reason for a single IOProcess per SD, is that we want the SDs to be independent. so if one of the domains is stuck and the process dies, it does not affect any of the other storage ops to the other domains.
|Patch Set 4:

(10 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

Nir, I will wait with verification for the whole series of patches.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7:

Verified by:

Installing an ovirt-node vm from iso.
transferred changed files in patches to the node.
persisted these files.
changed libvirt conf.
vdsm-tool configure --force, to use vdsm/utils/persist.
then reboot.
verified that new libvirt configuration persisted post reboot.
|Patch Set 1:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

verified by: 
ran a vm with a disk on iscsi storage on one host and then migrated the vm to another host and it completed successfully.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

verified by: 
ran a vm with a disk on iscsi storage on one host and then migrated the vm to another host and it completed successfully.
|Patch Set 5: Code-Review+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6:

verified by: 
ran a vm with a disk on iscsi storage on one host and then migrated the vm to another host and it completed successfully.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as upstream.
build is ok.
|Uploaded patch set 1.
|Patch Set 1: Code-Review-1

already in
http://gerrit.ovirt.org/#/c/32136/
|Patch Set 1: -Code-Review

didn't notice the branch..
|Uploaded patch set 2.
|Patch Set 2: Code-Review-1

Marking Dan's -1. 

Only fixed a line that was missing.
|Patch Set 2: Verified-1

Needs to be abandoned.
obsolete by requirement for ioprocess-0.12, that fixes memory leak.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

The packages are available under the testing repo:

https://admin.fedoraproject.org/updates/search/ioprocess?_csrf_token=574567b5950a5590bb70aaaa33a0e5d7192a9122
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

thank you Danken and Douglas, Now it is passing tests.
|Patch Set 3:

(4 comments)

Dan,
 sorry for ignoring comments on ps2, didn't see them.

Douglas,
thank you for pointing it out to me.
|Abandoned

different patch is replacing this one.
|Patch Set 12: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

multipath is configurated when using vdsm-tool, under the same conditions as before (will not change existing ovirt configuration).
|Uploaded patch set 3.
|Patch Set 3:

(10 comments)
|Abandoned

replaced by a new patch
|Uploaded patch set 1.
|Abandoned

new patch is replacing this one:
http://gerrit.ovirt.org/#/c/30850
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(4 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(6 comments)
|Uploaded patch set 8.
|Uploaded patch set 4.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(3 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as ovirt upstream.
|Patch Set 2: Code-Review-1

If I'm not mistaken it's already there, so now it's there twice...:

if (err) {
    g_error_free(err);
}
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review-1

All relevant builds are available on koji,
which is as far as I know is open for everyone.
|Patch Set 1:

Please stop with the propaganda against ioprocess and abandon this unnecessary patch.

There are no 'bugs', there is just one bug. as with a lot of features.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as upstream.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified+1

Manual testing + CI automation tests for nfs sanity
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Patch Set 19: Verified+1
|Uploaded patch set 20.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 18: Verified+1

Manual testing + CI automation tests for nfs sanity
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Patch Set 22: Verified+1
|Patch Set 22:

(1 comment)
|Uploaded patch set 23.
|Patch Set 23: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Patch Set 21:

(1 comment)
|Uploaded patch set 23.
|Uploaded patch set 24.
|Patch Set 24: Verified+1

Manual testing + CI automation tests for nfs sanity
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Patch Set 27:

(1 comment)
|Patch Set 27: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11:

(1 comment)
|Uploaded patch set 12.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Uploaded patch set 17.
|Patch Set 15:

(1 comment)
|Uploaded patch set 18.
|Uploaded patch set 19.
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Patch Set 25: Verified+1

Manual testing + CI automation tests for nfs sanity
|Uploaded patch set 26.
|Patch Set 26:

(4 comments)
|Uploaded patch set 27.
|Uploaded patch set 28.
|Patch Set 28: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Verified-1

MainThread::ERROR::2014-06-15 16:02:07,552::vdsm::132::vds::(run) Exception raised
Traceback (most recent call last):
  File &quot;/usr/share/vdsm/vdsm&quot;, line 130, in run
    serve_clients(log)
  File &quot;/usr/share/vdsm/vdsm&quot;, line 80, in serve_clients
    cif = clientIF.getInstance(irs, log)
  File &quot;/usr/share/vdsm/clientIF.py&quot;, line 155, in getInstance
    cls._instance = clientIF(irs, log)
  File &quot;/usr/share/vdsm/clientIF.py&quot;, line 109, in __init__
    self._createAcceptor(host, port)
  File &quot;/usr/share/vdsm/clientIF.py&quot;, line 161, in _createAcceptor
    self._acceptor = MultiProtocolAcceptor(host, port, sslctx)
  File &quot;/usr/share/vdsm/protocoldetector.py&quot;, line 52, in __init__
    self._socket = self._create_socket(host, port)
  File &quot;/usr/share/vdsm/protocoldetector.py&quot;, line 207, in _create_socket
    sockopt = server_socket.getsockopt()
  File &quot;&lt;string&gt;&quot;, line 1, in getsockopt
TypeError: getsockopt() takes at least 2 arguments (0 given)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(3 comments)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 10:

(1 comment)
|Uploaded patch set 13.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 1:

Why?
|Patch Set 1:

DEV_MIXED is set. Please consider this again.
|Uploaded patch set 2.
|Patch Set 2: (4 inline comments)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4: (2 inline comments)


|Patch Set 5: (1 inline comment)


|Uploaded patch set 6.
|Patch Set 1: (6 inline comments)


|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 4: Code-Review+1
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

No uses.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Code-Review-1

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 2: No score


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

verified it is unused + pep8 + make
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

Verified:
Checked that the functions have no uses, 
and also make and ran some manual tests because of locking type for lvm.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 2: Code-Review+1
|Uploaded patch set 2.
|Abandoned
|Patch Set 8: Code-Review-1

I'm confused, I might be missing something...
What about :
vdsm/storage/hsm.py:1039:                pool.getMasterDomain(msdUUID=msdUUID,
vdsm/storage/hsm.py:1054:                pool.getMasterDomain(msdUUID=msdUUID,
|Patch Set 8: -Code-Review
|Patch Set 8: Code-Review+1
|Patch Set 1: Verified+1

Same as master branch.
|Patch Set 1: Verified+1
|Abandoned
|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review-1

(1 comment)
|Patch Set 3: Code-Review-1

(3 comments)
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1

Just a name change, copying +1 from last patch set.
|Patch Set 1: Code-Review-1

I think the name should still contain the 'copy' word. Maybe use 'copyAndCollapse', or something similar.
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1:

No. Just fixed it along the way.
|Patch Set 1: Verified+1

(2 comments)
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified+1

Same as ovirt master branch.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)

Just need to make one minor change, other than that it's great.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2:

(2 comments)
|Patch Set 1: I would prefer that you didn't submit this

Need to use minimal timeout just like current forceIScsiRescan to minimize races.
|Patch Set 7: Fails


|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1: Verified+1
|Abandoned

rebased into another change.
|Patch Set 2: Code-Review+1

great work! I was just writing the same patch :)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Patch Set 4: Code-Review-1

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1: Verified+1
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Only changed name. Copying Verified from patchset1.
|Patch Set 1: Code-Review-1

I am currently working on a patch that is removing this function altogether.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve

Since July 2, 2012... but it really is broken... and unused in vdsm elsewhere.
+1
|Patch Set 3: I would prefer that you didn't submit this

(1 inline comment)

This will not fix the issue, since you still iterate over the dictionary. 


I'm working on a bigger fix , will be uploaded later today.
|Patch Set 10: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Patch Set 8: Verified


|Patch Set 1: Verified

Verified on Fedora 19
|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)


|Patch Set 3:

Bug-Url?
|Patch Set 3: Looks good to me, but someone else must approve

Ohad, can you please verify it using the test that failed so this patch can be merged?
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: (5 inline comments)


|Uploaded patch set 2.
|Patch Set 2: (4 inline comments)


|Uploaded patch set 3.
|Patch Set 3: (6 inline comments)


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: (2 inline comments)


|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified


|Patch Set 8: (5 inline comments)


|Uploaded patch set 9.
|Patch Set 9: Verified

Only change from last patch set are comments and constants.
|Patch Set 5: I would prefer that you didn't submit this

(2 inline comments)

I would try to unify 'download' and 'upload' methods as throughout the flows they are exactly the same except for the name of the function being invoked from within (upload/download).
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 1: Verified


|Patch Set 12: (1 inline comment)


|Patch Set 12: (3 inline comments)


|Patch Set 12: I would prefer that you didn't submit this

Sorry Arik, I must. Otherwise comments might be ignored.
|Patch Set 17: (7 inline comments)


|Patch Set 18: I would prefer that you didn't submit this

Comments are in previous patchset
|Patch Set 19: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 20: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 3: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 1: (5 inline comments)


|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Patch Set 6: Verified


|Patch Set 6: (2 inline comments)


|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 11.
|Patch Set 11: Verified


|Patch Set 11:

Dan, you are right, I will add the schema.

Fede, as far as I recall, the API we agreed upon is 'getImageAlignment' as we can see in the engine patch 'core: add the image block alignment scan': http://gerrit.ovirt.org/ovirt-engine refs/changes/46/11946/1. 

I was not aware of this wiki page and it wasn't mentioned in any discussion of this bug. Have you published it somewhere?

If you think it's necessary we can open it for discussion on arch@ovirt.
Personally, I think it should be 'image'.
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 13: Verified

Need to open a bug for SELinux
|Uploaded patch set 14.
|Uploaded patch set 15.
|Patch Set 15: Verified


|Patch Set 5: (2 inline comments)


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 5: (2 inline comments)


|Patch Set 7: Looks good to me, but someone else must approve


|Patch Set 1: Abandoned
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified


|Patch Set 1: Abandoned

The bug is in pyflakes, not vdsm.
|Patch Set 4: I would prefer that you didn't submit this

(11 inline comments)

A few small changes to make, but other than that the idea itself looks good.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

Created a vm with a snapshot.
moved between:
block -&gt; file
file -&gt; block
file -&gt; file
all stays thin provisioned.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified

Created a vm with a snapshot. moved between: block -&gt; file file -&gt; block file -&gt; file all stays thin provisioned.
|Uploaded patch set 6.
|Patch Set 6: Verified

Created a vm with a snapshot. moved between: block -&gt; file file -&gt; block file -&gt; file all stays thin provisioned.
|Uploaded patch set 7.
|Patch Set 7: Abandoned

This patch was a bug fix now replaced by a different implementation:
I9eedaa41a64502e548e52c10742335abd05301d8
|Patch Set 1: (1 inline comment)


|Patch Set 1: Abandoned

Sent by mistake...
|Patch Set 5: Verified; I would prefer that you didn't submit this

Looks good, but need to change the assert like Saggi said.
|Uploaded patch set 2.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 3.
|Uploaded patch set 2.
|Uploaded patch set 6.
|Patch Set 1: Verified


|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1

It looks ok,
but wasn't it used in the code anywhere?
Or did you remove the usage in another patch?
|Uploaded patch set 1.
|Patch Set 1:

This patch will enable the client to work with the new subscription and broker patches that will be pushed for 3.6
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11: Patch Set 10 was rebased.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 1: Code-Review-1

(2 comments)

I like it,
except for 2 minor comments.
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 8:

(1 comment)
|Patch Set 8:

(1 comment)
|Patch Set 6: Code-Review-1

(3 comments)
|Patch Set 7:

Looks good,
apart from another minor issue,
I think you should add setKsmTune to Bridge.py...?
|Patch Set 8: Code-Review+1
|Patch Set 10: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: -Verified
|Patch Set 2:

(10 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(8 comments)
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9:

Francesco,
They will be unified later on I believe,
This is just a step in the way as this jsonrpc cli is not yet a complete one for vdsm, but only answers our current, specific needs for migration's sake.
|Uploaded patch set 10.
|Patch Set 10:

(1 comment)
|Uploaded patch set 11.
|Uploaded patch set 12: Patch Set 11 was rebased.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Patch Set 14:

(1 comment)
|Uploaded patch set 15.
|Uploaded patch set 16: Patch Set 15 was rebased.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 18: Verified+1
|Patch Set 18:

(1 comment)
|Uploaded patch set 19.
|Patch Set 19: Verified+1
|Patch Set 19:

(1 comment)
|Patch Set 19:

(1 comment)
|Uploaded patch set 20: Patch Set 19 was rebased.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 27: Code-Review-1

(4 comments)
|Patch Set 27:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3:

(5 comments)
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5:

(5 comments)
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Patch Set 8:

(1 comment)
|Uploaded patch set 9: Patch Set 8 was rebased.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10:

(1 comment)
|Patch Set 10:

(1 comment)
|Uploaded patch set 11.
|Patch Set 10:

(2 comments)
|Patch Set 11:

(1 comment)
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Patch Set 15: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4: Commit message was updated.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5:

(3 comments)
|Patch Set 6:

Nir,
Please see Piotr's comment on patch set 2.
Piotr,
What do you think?
|Uploaded patch set 7.
|Patch Set 7:

(1 comment)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 8:

(1 comment)
|Uploaded patch set 9.
|Patch Set 9:

(2 comments)
|Uploaded patch set 10.
|Patch Set 10:

(1 comment)
|Patch Set 10:

(1 comment)
|Patch Set 10:

(2 comments)
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12:

(1 comment)
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2:

Done in next patch set
|Uploaded patch set 3.
|Patch Set 3:

(3 comments)
|Uploaded patch set 4.
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8:

Yaniv,
As Nir said, that was the suggestion to change exactly this,
Do you agree?
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Uploaded patch set 12.
|Uploaded patch set 13: Patch Set 12 was rebased.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 16: Verified+1
|Uploaded patch set 17.
|Uploaded patch set 18: Patch Set 17 was rebased.
|Patch Set 18: Verified+1
|Uploaded patch set 19.
|Patch Set 19: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Why is utils not good?
It definitely shouldn't be in sslutils,
since the socket is both for a plaintext or secure connection...
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 4:

(1 comment)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 20: Code-Review-1

(1 comment)

Looks good, other than a minor comment.
|Patch Set 20:

(1 comment)
|Patch Set 23: Code-Review+1
|Uploaded patch set 19: Patch Set 18 was rebased.
|Patch Set 31: Code-Review-1

(4 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 8: Verified-1
|Patch Set 9: Commit message was updated
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 13:

(3 comments)
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 3: Code-Review+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 15:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 9: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 13: Code-Review+1
|Uploaded patch set 18: Patch Set 17 was rebased.
|Patch Set 18: Code-Review-1

(3 comments)
|Patch Set 3: Code-Review+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 15: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 15: Code-Review+1
|Uploaded patch set 19: Patch Set 18 was rebased.
|Patch Set 19: Code-Review-1

(6 comments)
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Verified with the destination host having two nics.
When once, destination graphics port on consoleAddress are dropped using iptables and spice seamless migration fails,
and once with no rules and seamless migration using consoleAddress succeeds.

Danken, is this good for us?
|Patch Set 4:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1

fixed schema line length hurting unit tests
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

same as on master
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated
|Uploaded patch set 5: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1:

Francesco,
Thank you.
What do you think is the best way to verify this?
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Patch Set 7 was rebased.
|Patch Set 8: Verified+1
|Uploaded patch set 9: Patch Set 8 was rebased.
|Patch Set 9:

Moving to a different independent branch...
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 3: Code-Review-1

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 4: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 7: Code-Review-1

Can this one be abandoned now that we have:
https://gerrit.ovirt.org/#/c/40726/

?
|Patch Set 6: Code-Review-1

I'm pretty sure this one is also included in:
https://gerrit.ovirt.org/#/c/40726/

Can it be abandoned?
|Patch Set 4: Code-Review-1

(3 comments)

What about:
vdsmd_init_common.sh

If you look inside: 
_has_systemd()
task_load_needed_modules()

Do we still need those?
|Patch Set 7: Code-Review-1

Yaniv, you did not answer my comments on patch set 4...
|Patch Set 2:

Why is the name of the directory integration and not infra?

Other than that looks fine to me...
|Patch Set 3:

who is we?
Anyway, it will still be nice to understand the naming convention.
|Patch Set 3: Code-Review+1

Piotr, thanks for the info.
|Uploaded patch set 1.
|Patch Set 1:

getVdsCapabilities
|Patch Set 1: Verified+1
|Patch Set 1:

why do you think it should break other flows? 
It is another entry in the dictionary. 
Worst case other flows don't access it, but the ones that do get a KeyError currently...
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified-1

Thank you Francesco. you are right. I will fix this.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review-1

Piotr, is there a way to provide a close mechanism for the daemon thread once we're done with the client?
when using this for functional tests we run out of fds because we use a new stanadlone client for each test...
|Patch Set 3: -Code-Review

thanks, did not see the last comment...
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 1: Code-Review-1

(1 comment)
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned
|Patch Set 5: Code-Review-1

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review-1

(1 comment)
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+1

Sandro, I have added a branch to ioprocess:
ioprocess-0.15.0
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 1: Code-Review+2
|Patch Set 4:

looks good, waiting for minor changes..
|Patch Set 5: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 4: Code-Review+2
|Patch Set 6: Code-Review+1
|Patch Set 6: Code-Review+2
|Patch Set 4: Code-Review+1
|Patch Set 7: Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Patch Set 3:

Fine by me... I'll change this.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated
|Patch Set 6: Code-Review+1
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review-1

Using ip will fail other usecases.. like fqdn for example.
|Patch Set 1:

It is client code, not server..
Dan's intention is that we should check the certificate and then send it as the 'host' parameter...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: -Verified

(1 comment)
|Abandoned
|Restored
|Abandoned
|Patch Set 8: Code-Review+1
|Patch Set 10: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review-1

(1 comment)
|Uploaded patch set 6.
|Patch Set 16:

Looks good to me.
Except for Yaniv's comments, which I agree with.
Piotr, waiting for your response.
|Patch Set 16: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Some network functional tests takes more time to return.
|Patch Set 1:

The calls are fine.
They are just network operations that are slower and takes more time.

I don't really understand what is there to investigate... ?
|Uploaded patch set 2.
|Patch Set 2:

setupNetworks takes a long time:

Traceback (most recent call last):
  File &quot;/usr/share/vdsm/tests/functional/networkTests.py&quot;, line 221, in wrapper
    func(*args, **kwargs)
  File &quot;/usr/share/vdsm/tests/functional/networkTests.py&quot;, line 2405, in testLowerMtuDoesNotOverride
    status, msg = self.setupNetworks(networks, bonds, NOCHK)
  File &quot;/usr/share/vdsm/tests/functional/networkTests.py&quot;, line 375, in setupNetworks
    status, msg = self.vdsm_net.setupNetworks(*args, **kwargs)
  File &quot;/usr/share/vdsm/tests/functional/utils.py&quot;, line 103, in call_and_update
    ret = func(self, *args, **kwargs)
  File &quot;/usr/share/vdsm/tests/functional/utils.py&quot;, line 168, in setupNetworks
    result = self.vdscli.setupNetworks(networks, bonds, options)
  File &quot;/usr/lib/python2.7/site-packages/vdsm/jsonrpcvdscli.py&quot;, line 97, in _callMethod
    raise JsonRpcNoResponseError(method)
JsonRpcNoResponseError: [-32605] No response for JSON-RPC Host.setupNetworks request.
|Patch Set 2:

It takes a longer time probably because it tries to setup multiple nettworks in the test: testLowerMtuDoesNotOverride
(ERROR: Adding multiple vlanned networks with different mtus over a bond)
|Patch Set 2:

Thank you Piotr. You are right. Fix will be in the conversion to jsonrpc patch, and I will abandon this one.
|Abandoned

Will be handled in a different patch.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3: Code-Review-1

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4: -Code-Review
|Patch Set 4: Code-Review-1

(1 comment)
|Patch Set 6: Code-Review-1

(1 comment)
|Patch Set 6:

(1 comment)
|Patch Set 15:

(1 comment)
|Patch Set 15:

(3 comments)
|Patch Set 23:

(1 comment)

One minor comment, other than that looks ok...
|Patch Set 1: Code-Review+1
|Patch Set 2:

Is vsdm-api.html on purpose?
|Patch Set 2: Code-Review-1

I think you forgot to remove vdsm/rpc/vdsm-api.html
|Patch Set 2:

If it is generated during the build, why is it added as a file to this patch?
|Patch Set 3: Code-Review+1
|Patch Set 3: Verified+1
|Patch Set 5: Code-Review+1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 9:

(1 comment)
|Patch Set 9:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review-1

I think you should keep the test as is by giving parameter: self.vdscli.getVMFullList([vmId])

But other than that patch is good.
|Patch Set 2:

Piotr has presented a patch that will help with this: 
https://gerrit.ovirt.org/#/c/45429/

Let's get this one ready in the meantime...
|Patch Set 2:

Martin, I have to take this 2-liner into the functional tests patch.
Getting either one of them in without the other will break the tests...
Is that OK by you?
|Patch Set 1: Code-Review+2

Nir,
Please verify
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 1: Code-Review+1 Verified+1
|Patch Set 2:

Waiting for Mordechai to verify this.
|Patch Set 2: Code-Review+2

Raising score.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

Raising score
|Patch Set 1:

(1 comment)
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as master.
Builds successfully.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Upgrade from vdsm-4.16 completes successfully.
multipath is configured after upgrade and vdsm starts successfully.
|Patch Set 1:

(2 comments)
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as master.
Builds successfully.
|Patch Set 2: Code-Review-1

(2 comments)
|Patch Set 4: Code-Review+1
|Patch Set 5: Code-Review+1
|Patch Set 5: Code-Review-1

Yaniv spotted that api is not created under vdsm lib
|Patch Set 9: Code-Review+1
|Uploaded patch set 10: Patch Set 9 was rebased.
|Uploaded patch set 11: Patch Set 10 was rebased.
|Patch Set 11: Verified+1
|Uploaded patch set 12: Patch Set 11 was rebased.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 6: Verified+1
|Patch Set 7: Commit message was updated
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Verified on el7.2.

Set vdsm affinity to run on a specific host (&quot;1&quot;)
Results:

 CGroup: /system.slice/vdsmd.service
           ??5683 /usr/bin/python /usr/share/vdsm/vdsm
           ??5761 /usr/libexec/ioprocess --read-pipe-fd 33 --write-pipe-fd 32 --max-threads 10 --max-queued-requests 10
           ??5784 /usr/libexec/ioprocess --read-pipe-fd 42 --write-pipe-fd 41 --max-threads 10 --max-queued-requests 10
           ??5791 /usr/libexec/ioprocess --read-pipe-fd 49 --write-pipe-fd 47 --max-threads 10 --max-queued-requests 10
           ??5798 /usr/libexec/ioprocess --read-pipe-fd 57 --write-pipe-fd 56 --max-threads 10 --max-queued-requests 10
           ??5806 /usr/libexec/ioprocess --read-pipe-fd 66 --write-pipe-fd 65 --max-threads 10 --max-queued-requests 10
           ??5821 /usr/libexec/ioprocess --read-pipe-fd 78 --write-pipe-fd 77 --max-threads 10 --max-queued-requests 10

taskset -cp 5683
pid 5683's current affinity list: 1
taskset -p 5683
pid 5683's current affinity mask: 2

taskset -cp 5784
pid 5784's current affinity list: 0,1
taskset -p 5784
pid 5784's current affinity mask: 3
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6:

(1 comment)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7: Code-Review+2

Raising.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

It is impossible. 
It will break the tests.
|Patch Set 1:

Done.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review-1 Verified-1

Did not rebase,
since it was easier to just redo it.

Can be abandoned due to: 
https://gerrit.ovirt.org/#/c/47995/
|Uploaded patch set 1.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Commit message was updated
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 8: Commit message was updated
|Patch Set 8:

(4 comments)
|Uploaded patch set 9.
|Patch Set 9:

(3 comments)
|Uploaded patch set 10.
|Patch Set 10:

(1 comment)
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Patch Set 11:

(3 comments)
|Uploaded patch set 12.
|Uploaded patch set 13.
|Patch Set 11:

(1 comment)
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Patch Set 1: Code-Review-1

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Verified on ovirt-3.6 branch.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Verified on ovirt-3.6 branch.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2:

Yaniv, all of the above verified.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Same as master.
|Patch Set 2:

Looks like it fails on a network test.. unrelated..
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Verified on upgrade from vdsm-4.14 (ovirt-3.4) to vdsm-4.17 (ovirt-3.6).


multipath is configured on vdsm start with no need for any manual configuration.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2

Raising score.
|Patch Set 2: Continuous-Integration+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4: Commit message was updated.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Patch Set 6: Commit message was updated
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Abandoned

https://gerrit.ovirt.org/#/c/50115/
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 11:

Simone, can you verify the patch?
Thanks!
|Patch Set 11:

(4 comments)
|Patch Set 12: Code-Review-1

Simone,
I have added comments on patchset11 ,
Didn't notice the rebase..
Could you take a look?
|Patch Set 12:

You are right.
Since python3 is not merged yet, and there's still time then we can take care of it in a follow up patch when it's relevant.

We just have to remember :)
|Patch Set 12:

Simone,
You probably missed them.. Can you take a look at my questions on previous patch set?
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review-1

Please change to release 6.

We already built d/s for release 5...
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified-1
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(5 comments)
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

Thanks Nir, Done.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

You are right,
we could have it for any other configurable.
The only benefit is that it might be more readable.
It was suggested here: 
https://gerrit.ovirt.org/#/c/36699/3/vdsm/clientIF.py

It is up to your opinion.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 1: Code-Review-1

(3 comments)
|Patch Set 2: Code-Review-1

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4: Commit message was updated.
|Patch Set 4:

This patch is verified on fedora.
The mixed option is not yet backported to EL. 
So this patch is waiting for 7.2 (see 'depends on' flag in BZ).
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

Waiting till vdsm no longer supports el7.1, since killmode mixed is only backported to 7.2.
|Patch Set 6:

Yaniv,
If we set killmode to process: only the main process itself is killed.
Which means that we could end up with vdsm zombie children that won't be killed.

If we set killmode to mixed: 
the initial SIGTERM signal is sent to the main process (vdsm only). and after a delay if children processes still remain another signal this time: SIGKILL signal is sent to all remaining processes of the unit's control group.

This means that we get both benefits of using 'process' mode and 'control-group' mode.

First of all we systemd will termainate only vdsm.

If, after a delay, its children did not terminate on their own, then a SIGKILL will be sent to them.

This way we make sure no zombies are left.

I believe it is our best option.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+1
|Patch Set 7:

https://bugzilla.redhat.com/show_bug.cgi?id=1222564#c8
|Patch Set 7: Code-Review+1
|Patch Set 2: Code-Review-1

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 3:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

(2 comments)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

Done
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8:

Nir, the commit that added it is indeed in the rhev-3.0 branch.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 2:

Nir, only if you still want it for 3.5... ?
|Patch Set 2: Code-Review-1

(2 comments)
|Uploaded patch set 1.
|Patch Set 1:

(10 comments)
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(6 comments)
|Uploaded patch set 4.
|Patch Set 3: Code-Review+2

Please verify.
|Patch Set 5: Code-Review+1
|If I do this, I get an error from jjb (using include-raw). Is there a way to overcome this?
|I meant the parameters.yaml file
|I think a two-spaces indentation need to be added here (and in the other yamls).
|I first added the jobs without labels and they were failing because they were running on machines with inappropriate java version (sometimes even test machines). 
I think it's safer to leave the label..
|I'm not sure why, but the old _merged and _created jobs were configured differently, and that's why the commands are  in two different place  (configured the same way). I can change them both to work with the same build steps we have in the _created jobs.
|For this to work we need to configure the maven installation in jenkins global confs,
|The whitesource API token should be added to jenkins global confs.
|this does not work, only disable or global works here
|I'll change it for uniformity.
|Actually, the TARBALL_FILE param is a file parameter in the jenkins job, so the file itself is really called TARBALL_FILE when uploaded to the workspace, and it's moved to exported-artifacts folder and given its original name (the one stored in the variable $TARBALL_FILE).
|@sandro, the idea is to have a job for each projects that will trigger the relevant build-artifacts-manual jobs for the selected version.
These keys are used to specify the jobs names to be triggered. I removed the '.' from the version because of yaml limitations. If you have any other idea on how it should be done, please let me know.
|the upgrade.sh, which is being called from the last line of the script, has a function called init_postgres which removes and re-installs postgresql-server. Maybe it's better to move it to this function?
|Yes it's used for that. So I'll remove this option and use 'new' in the code.
|If I understand correctly, using make rpm will also create the tarball. Please correct me if I'm wrong.
|The idea in this step is to create the rpms from tarball, assuming that the tarball is found in the project's topdir. It's meant for developers who wish to build from a local tarball. 
There are corresponding jenkins jobs that are supposed to replace the old crete-rpms-manual jobs.
I've updted the commit message with the info.
|In the jenkins job - it removes all *.tar.gz files before moving the tested one to the folder. I can of course check in this script as well if there are more than one such file, and fail in this case. Please let me know what you think is best.
|I sent a new patch to the doc, I hope it's more clear now.
The idea is to enable developers to build from a local tarball, that is uploaded manually to the job.
|I tested locally for el7 and got a missing dependency for python-nose. I guess it's a typo.
|No, the version list here is used in the job's template as the values of a choice parameter. This job will then trigger the build-artifacts-manual jobs of the selected version.
|It can inherit, though it only uses the project name.
I will add a comment.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-hosted-engine-setup-1.3 as commit 3e7b38028f739ac0165c54b347541cf41617a0e0
|Patch Set 1: Verified-1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Patch Set 2: Code-Review+1 Verified+1

verified on jenkins
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Workflow+1

I have a few questions:
. I saw there is a job called &quot;ovirt-engine_3.5_upgrade-from-3.5-stable_merged&quot;. Should I add it to the yaml conf?
2. The job runs the scripts upgrade.sh and build_engine_rpm.sh. Each job has its own scripts within its own directory,
   but the scripts are identical. Should I move them to a unified location?
3. The current jobs are of Multi-configuration type, and run on el6 only, so I added node: el6 to the configurations.
   Should I add the distro to the name of the job (and add the distro to the project parameters)?
4. In the main bash script, one of the parameters that is passed to the upgrade.sh script is: --repo-to=&quot;${REPOS_TO:+$REPOS_TO,}file://$tmp_repo&quot;.
   I'm not sure what the ${REPOS_TO:+$REPOS_TO,} syntax does, but there's a problem where jjb searches for the variable name inside the curly brackets, which fails, of course.
   So my solution was to change the line to:
   --repo-to=&quot;$REPOS_TO,file://$tmp_repo&quot;
   which gave me the same result, but maybe I'm missing something.
|Patch Set 2:

(2 comments)

David,
How would you suggest to separate the failure and unstable cases?
Is there a way to overcome jjb errors about the {} when it doesn't recognize the variable inside?
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1 Workflow+1

I verified the jobs on Jenkins. 
3.4,3.5-&gt;3.5 and 3.5-&gt;3.6 jobs completed successfully.
3.6-&gt;3.6 and 3.6,master-&gt;master jobs failed during the upgrade with the error: Failed to execute stage 'Setup validation': Failed checking Engine database: [u''] 
I'm not sure if it's related to the jobs' configurations (for example the answer file that's being used) or a real problem in the upgrade process.
|Uploaded patch set 10: Patch Set 9 was rebased.
|Patch Set 10: Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 5: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Abandoned

Should be configured in ovirt_jenkins_slave/manifests/base.pp
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1

both 3.4-&gt;3.5 and 3.5 -&gt;3.5 succeeded with this change
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Abandoned

Added the installation to the job's script.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Patch Set 2: Commit message was updated
|Abandoned
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated
|Patch Set 2: Verified+1
|Patch Set 2: Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3: Verified+1 Workflow+1
|Patch Set 5: Commit message was updated
|Patch Set 5: Verified+1 Workflow+1
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Workflow+1

This patch should be merged only after we add java 8 installation through puppet: https://gerrit.ovirt.org/#/c/47062/1
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Workflow+1

I have changed the way java 8 will be set in this job.
Instead of changing JAVA_HOME through the job's script, I've changed the yaml configurations, so that the JDK in the job's jenkins configurations will be java 8.
|Uploaded patch set 1.
|Patch Set 1:

Please note that this patch changes the jobs' names (adds the distro).
|Patch Set 1:

@dcaro, what's currently stopping us from moving it to mock?
|Patch Set 1:

@dcaro, as far as I understand (and just rechecked) this job doesn't run engine setup. Please correct me if I'm wrong.
|Patch Set 1: Verified+1

verified for el7 (but it should be ok for el6).
I will have to remove the old jobs (with the old names).
I'll add myself a task to add this job to mock.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Workflow+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Workflow+1

@bkorren, I agree with you, but the code separation was done intentionally, since there might be differences between the versions (currently there are differences in the upgrade.sh script). 

So I will send a patch that will leave the upgrade script separate and merge the build_engine_rpms.sh and cleanup.sh script to one script.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified+1 Workflow+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

Are you planning to add the jobs to yaml?
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Workflow+1
|Uploaded patch set 1.
|Abandoned

The jobs are not needed
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1 Workflow+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

&gt; (1 comment)

Maybe from the $project/exported-artifacts or $project/output folder.
@dcaro?
|Uploaded patch set 2.
|Patch Set 2:

@dcaro, is this patch still relevant, in your opinion?
|Patch Set 1: Code-Review+1
|Patch Set 1:

ok, I think I found out why it doesn't fetch all branches from the jenkins' configured git repo.
It's related to the refspec that is configured in the job's git confs. If this parameter is left blank then it will fetch all branches, bus since this is not the case here, it will not.
You can find more info when clicking on the '?' sign near the refspec parameter.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1

verified on master-&gt;master upgrade job
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1

With this patch, the 4.0-&gt;master upgrade job passes the iptables rules check. It still fails, but for a different reason.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 7:

(1 comment)
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12:

(1 comment)
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 2: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(3 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Workflow+1
|Patch Set 2:

Nir, Eyal,
Should I abandon this patch for now, and remove the existing Jenkins jobs?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7:

(2 comments)
|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Patch Set 7: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2:

I'm not sure if this addition is needed in the 3.6 and 4.0 upgrade.sh script.
|Patch Set 5: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Workflow+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1 Workflow+1
|Patch Set 12: -Verified -Workflow
|Abandoned

Will send a separated patch for every project.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Abandoned

script is not needed by project's maintainer.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3:

@Juan, if this is not needed by you for building the project, then I will abandon the patch (also on the 3.6 branch). Please confirm.
|Abandoned

script is not needed by project's maintainer.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2:

@pkliczew, can we merge this patch (and the master patch: https://gerrit.ovirt.org/#/c/62542/)
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1

@pkliczewski, I removed el6 files - it was indeed not needed.
There are also check-patch el6 files which I think can be removed (in another patch).
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 7: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

Verified with a tarball created from the following patch:
https://gerrit.ovirt.org/#/c/63129/
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated.
|Patch Set 3:

(2 comments)
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified-1

@fromani, even after rebasing the patch on top of https://gerrit.ovirt.org/#/c/62779/1 the jobs still fail on tests. 
For example: http://jenkins.ovirt.org/job/vdsm_master_build-artifacts-manual-el7-x86_64/4/
|Patch Set 7:

&gt; I see https://gerrit.ovirt.org/#/c/62779/1 is not helping :\
 &gt; Still, the failure seems very much unrelated to your patch.
 &gt; Can you reproduce the jenkins failure locally (e.g. on your dev.
 &gt; PC)?
 &gt; Can you verify in a different way? The two issues seem independent
 &gt; (Of course we need to fix both).

@fromani, I tried testing it locally inside mock for el7, using the same tarball and mock confs, and the tests passed locally. I'm not sure why there is a difference..
|Patch Set 7:

&gt; I see https://gerrit.ovirt.org/#/c/62779/1 is not helping :\
 &gt; Still, the failure seems very much unrelated to your patch.
 &gt; Can you reproduce the jenkins failure locally (e.g. on your dev.
 &gt; PC)?
 &gt; Can you verify in a different way? The two issues seem independent
 &gt; (Of course we need to fix both).

@fromani, I think I understand what happens. build-artifacts-manual is using a tarball I uploaded from a recent build-artifacts job. This tarball contains a test folder that has the code without your change, and therfore it failes. Could you please supply a tarball that contains your patch and I'll test it?
|Patch Set 7: Verified+1

Using a tarball created from the following patch worked:
https://gerrit.ovirt.org/62779
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Commit message was updated.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6:

@eedri, I got comments from ybronheim and Juan, and fixed the doc accordingly. I can either wait for another opinion, or merge and fix later if needed.
|Patch Set 3: Code-Review+1

Do you also intend to add a check-patch stage?
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+1

@eedri, No, as far as I understand. It was relevant to the create-rpms jobs. The build artifacts jobs are configured differently (see https://gerrit.ovirt.org/gitweb?p=jenkins.git;a=blob;f=jobs/confs/yaml/templates/standard-stage.yaml;h=9b828278f83d45f930ea3ba7ab8f5cccb183bff1;hb=master#l53)
|Patch Set 2: Verified-1

Testing build-artifacts.sh locally failed with the error: 'autoreconf: command not found'
Adding autoconf and automake to build-artifacts.packages and check-patch.packages should solve the problem.
|Patch Set 3:

(1 comment)

Testing locally check-patch.sh failed on missing dep.
fc23 tests work after the change.
|Patch Set 4: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: -Verified
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated.
|Patch Set 4: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

verified build-artifacts-manual.sh, still need to verify the rest.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 4:

@sandro, check-patch and check-merged failed for el7 but not for fc23:
http://jenkins.ovirt.org/job/ovirt-hosted-engine-ha_4.0_check-merged-el7-x86_64/6/console
|Patch Set 5:

&gt; @sandro, check-patch and check-merged failed for el7 but not for
 &gt; fc23:
 &gt; http://jenkins.ovirt.org/job/ovirt-hosted-engine-ha_4.0_check-merged-el7-x86_64/6/console

All other scripts went ok for el7 and fc23
|Uploaded patch set 1.
|Patch Set 1: Verified+1

I encountered this issue when running the build-artifacts-manual 4.0 jobs. This patch solved the problem.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

tested locally with mock_runner
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 2.
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Workflow+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1

I didn't git add this change in the previous patch by mistake,
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

From what I see in the jenkins_master_check-yaml_gerrit job, the branch was updated to ovirt-4.0 in the build-artifacts jobs, and check-patch jobs will be created for 4.0 (el7+fc23).
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Workflow+1

@eedri, It's hard to tell, since the original job didn't fail yesterday (probably because it was running on a vm it didn't run on before).
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1 Workflow+1

I simplified the yaml code. It's now set to run in a mock env of the same distro it checks for 3.6 and 4.0. For master it set to run on fc24
|Uploaded patch set 6.
|Patch Set 6: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1 Workflow+1
|Uploaded patch set 1.
|Patch Set 2: Verified-1

@sandro, I tried running the job with your patch, but it failed on the archive_coverage step.
when running: coverage html -d exported-artifacts/coverage_html_report
it says: No data to report.
|since this used to be the output of statusTranslator which did pretty much a 1:1 status mapping (as you found out), the answer is probably yes. I think that you can remove this comment (you can do it later on obviously - this shouldn't block merging this patch). 

thanks.
|I wouldn't call it a UI thing - maybe a 'client thing'; only the engine-client (whether it is a UI or not) should decide whether the engine session should be kept alive or not. The engine should not be allowed to make (or modify) that decision.
|localize &quot;Last Day&quot;?
|[if we are already doing some re-formatting to this file in this patch] maybe remove the trailing white-space?
|same as above
|please change Bug-Url to be of the 3.4.z bug [1145779]. thanks.
|rename &quot;Firefox17OnLinux&quot; to &quot;Firefox31OnLinux&quot;?
|Provinding -&gt; Providing
|thanks; as I mentioned, I recommend doing a 'localeKey.replace(&quot;-&quot;, &quot;_&quot;)', just to prevent undesired behavior in case the user filled locale(s) in the 'xx-YY' format.
|does this ^^^ support locale strings in the &quot;xx-YY&quot; format as well as the &quot;xx_YY&quot; format? (if not, I recommend to add a 'replace' here, just in case).
|ideally, we should incorporate here the list of unsupported locales (so the user would know what are the valid values for this config option) - not very easy to implement though (as the list of unsupported locales is itself a configuration value...)
|&quot;new File(db + ...&quot;: should be &quot;bd&quot; instead of &quot;db&quot;?
|&quot;new File(db + ...&quot;: should be &quot;bd&quot; instead of &quot;db&quot;?
|please replace &quot;	&lt;userportal&#124;webadmin&gt;:&quot; with &quot;userportal, webadmin:&quot;
|please remove 1075508 - it is just a duplicate of 1075509 (it seems like two bugs were created by mistake)
|I believe that the intention here is to insert a line break between the HostsList and the &quot;Please...&quot;. 

can you please add a line break accordingly (&quot;\n\&quot; if I am not mistaken)?

thanks.
|worth replacing the 'webadmin:' with 'core:' as this is a backend/common change.
|&quot;create create&quot; -&gt; &quot;create&quot;?
|setHelpTag()?

[http://lists.ovirt.org/pipermail/engine-devel/2014-February/006551.html]
|Greg is right, we should have a consistent look and feel for all tool-tips in the system, and we are trying to move towards the blue panel-based tool-tips. we already have several &quot;title&quot; tooltips in the system, such as the one mentioned in https://bugzilla.redhat.com/show_bug.cgi?id=1023545; another example is tool-tips of grid-column titles for icon-titles or cropped-text-titles. we need to convert all of them to blue panel-based tool-tips at some point; in the mean time, let's not introduce new ones.

@Alexander - although functionality may be the same, the look-and-feel is not the same. can we make the &quot;title&quot; tool-tips look like the blue panel-based ones? if not - we need to move the panel-based ones. 

thanks.
|maybe add:
 target=&quot;_blank&quot;
to the &quot;a&quot; tag, to make sure that password changing window (or any other window, for that matter) will not &quot;override&quot; the existing ovirt GUI window, but will open in a new browser tab/window?
|Need to keep in mind that we are dealing here with the Feedback button URL, and not the Feedback button label.

I don't think that we need it in the label at this point (it will also impact the layout of the top banner, due to the 'lengthy' string).

I think that it is OK to add this ability without actually using it in oVirt; however, we *can* use it in oVirt as well (e.g. make the URL something like &quot;mailto:users@ovirt.org?subject=feedback-on-oVirt-engine-{0}&quot;, where '{0}' is the version placeholder). 

@Alex, what do you think? is that something that we can easily do?
|maybe use 'getConfigFromCache()'? can save a request to the backend, as we will fetch from cache, rather than backend.
|maybe prefix commit-comment subject with &quot;engine&quot;/&quot;packaging&quot;?
|maybe prefix commit-comment subject with &quot;engine&quot;/&quot;packaging&quot;? 
[we actually miss &quot;packaging&quot; in our git commit comment template]
|+1.

Let's change &quot;About RHEV Manager&quot; to simply &quot;About&quot;, and &quot;about_rhev_manager&quot; to &quot;about&quot; or &quot;about_engine&quot;.
|I suggest to amend the commit comment to include a little bit more background and explanations, and also - need to separate to paragraphs (for readability).
i.e.:

&quot;&quot;&quot;

before this patch, 'remove' confirmation dialog message contained a default message that could have been overridden only if the dialog's HashName didn't start with &quot;remove_&quot;.

in this patch:

- 'remove' confirmation dialog still contains a default message, but now it can always be overridden, regardless of the dialog's hashName value.

- Cleaned up (now unnecessary) HashName manipulation in RemoveNetworkQoSModel.

- Cleaned up useless calls to set dialog's message (which were probably useful up until http://gerrit.ovirt.org/#/c/14621/ has been merged) in order to prevent regressions such as displaying &quot;Virtual Machines&quot; as the dialog's content instead of the default &quot;Are you sure you want to remove the following items?&quot; message.

- Removed the related (now unused) UI constants.

&quot;&quot;&quot;

Thanks.
|I see that we actually had some places in which the HashName was manipulated just so the dialog message could be overridden... I am glad that we are fixing the code so this kind of manipulations wouldn't be necessary anymore.
|please remove trailing whitespace from line above.
|&quot;back ground&quot; -&gt; &quot;background&quot;
|Is there a public BZ associated with the patch? if so - please fix the line above, otherwise - please remove the entire line above. Thanks.
|maybe move this calculation to be before the &quot;if (usecache)&quot; [that way it could be used for the bottom part of this patch as well]?
|see comment above - if this calculation will move to be before the &quot;if (usecache)&quot; - the maxCount variable can be used here as well as in the top part of this patch.
|indeed, but it should be done for the English source string first, and the relevant code that uses it should be changed as well (for now, this key matches the source (English) one, so we're good).

your suggested change should be done in a separate patch; this patch is merely the result of pulling-and-auto-generating the non-English .properties files from Zanata.
|- please change prefix to &quot;core:&quot; or &quot;engine:&quot;, which probably represents better the actual change main context.
- please change the &quot;sort login domain select box&quot; to &quot;sort domain list query results&quot; (the fact that the domain select box in the GUI is also being sorted as a result is a &quot;side-effect&quot;) - commit comment body could use a similar rephrase as well.

Thanks.
|this may be completely irrelevant / not important / not make any sense, but in [1], the above &quot;url-pattern&quot; has been changed from &quot;theme&quot; to &quot;ovirt-engine-theme&quot;. Is there a chance that the below should, for some reason, follow the same naming pattern (i.e. &quot;ovirt-engine-favicon.ico&quot;)?

[1] http://gerrit.ovirt.org/#/c/17567/2/backend/manager/modules/root/src/main/webapp/WEB-INF/web.xml
|this website says exactly what Alexander explained above. We want to use &quot;method1&quot;, not &quot;method2&quot;, as we don't want to configure every web-page in the system separately. Did I miss something?
|posted my last comment a bit too late, apparently; 

@Greg - are you going with Alon's suggestion?
|OK, I think that now I get the difference, and Alon is right - we need to distinguish between strings (which we take as-is and not really care about what they are and/or what they stand for) and resources (which are also *represented* by strings, but we know that each such string represents a path of a file which its *content* needs to be checked/served in some sense, etc.)

actually, what I initially had in mind is to treat the favicon path like any other branded string: put it in messages/resources.properties, and use it as-is in the relevant context (in this case - in the 'href' property of the relevant 'link rel=&quot;shortcut icon&quot;' tag in the relevant pages).

we can always say that the user is fully responsible for the branded content that he supplies; just like he can put in 'user_portal.css' a reference to a background-image URL that doesn't exist, provide a feedback-button-URL that leads nowhere, etc., he can provide a favicon path that doesn't exist.

so I think we need to do either that (unless I missed something), or fully go with Alon's suggestion, but no mixing.

thoughts?
|I am probably missing something here, but can't this be added to messages.properties (or to resources.properties, once http://gerrit.ovirt.org/#/c/18623/ is merged)?
|instead of adding the new message above, why not re-use the &quot;removeConfirmationPopupMessage&quot; message in gwt-common's &quot;CommonApplicationConstants.java&quot;?
|the entire point of this patch was to separate the strings that require translation from the strings that don't require translation.

currently (i.e. without this patch), due to the fact that we are using Zanata as our translation-management system, and due to the fact that the values of these particular strings is identical across locales (at least now), it would result in having these values duplicated in all .properties files in all locales, and I was hoping to avoid that.

having said that, I agree that having different URLs in different locales is a possible/valid use-case which makes sense, however this is not &quot;translation&quot; (there is a difference between &quot;translation&quot; and &quot;supply different values per locale&quot;), hence this is not something that needs/expected to be managed via a translation-management system (like Zanata), hence the file separation introduced in this patch does make sense.

As mentioned by Alon - these strings can still be &quot;localized&quot;, i.e., values can still be provided per locale (e.g. I assume that one can create &quot;resources_ja_JP.properties&quot; that will override the values in this (default) file in case the application's current locale is &quot;ja_JP&quot;). Correct?
|&gt; ok, it sounds weird for me that exceptions cannot be marked properly...

why mark exceptions (either properly or improperly) if we can simply (really simply) avoid them in the first place?...
|the system doesn't force me to do anything; I can leave messages untranslated, but it will result in inaccurate translation-completion statistics. I might be able to forcibly mark an empty translation as &quot;completed&quot;, however the translators will need to be aware of this exception (which might seem weird from their point of view). Moreover, there is a chance that it will result in having a certain locale overriding the default value with an empty value, which we probably don't want to do.

So instead of making the translation-management system do things that it doesn't suppose to do (e.g. manage strings that don't qualify as &quot;translations&quot;), I suggest to separate the relevant strings to a new file, which is exactly what this patch does.

The important thing to keep in mind is that people that contribute/in charge of text translations aren't necessarily (or most likely are NOT) the same people that will determine the feedback link URL. That's why separating these files makes sense.
|- change tabs to spaces
- remove trailing white space at the end of the line
|Alex, even though you simply preserved the string, let's take this opportunity to change it to &quot;Click&quot; as Greg suggested (which is indeed better).
Once you will upload the updated patch, I will merge (based on Vojtech's &quot;+2&quot;). Thanks.
|Greg - let's not use &quot;setInfo()&quot; if it is incorrect to do so. Please fix this patch to use the setChangeProhibitionReason() method instead of 'setInfo()' and make sure that the message is localized. All other occurrences of 'setInfo()' can be taken care of in a separate patch, in the context of solving bug 995754.
|first line within the commit comment should be a little bit shorter (it should be around 50 characters) and not contain multiple lines (need to follow the commit comment template in &quot;config/engine-commit-template.txt&quot;).

something like &quot;webadmin: fixed action availability in tree context&quot; should be ok.

thanks.
|&gt; I traced all the invocations ... 

including ones that ended up in some failures, I assume? again - invocations that end successfully will indeed *always* result in an empty &quot;faults&quot;.

also: what happens today when a RunMultipleAction invocation ends up is some failures? do we see an error dialog in the GUI with all of the relevant error messages? [if so, then there is a chance that we are &quot;reading&quot; the &quot;faults&quot; data someplace else, and we indeed don't need it here; otherwise - we have a bug]
|IIRC, when RunMultipleAction was invoked, the faults array-list would have been empty if the RunMultipleAction succeeded for all of its &quot;instances&quot; (which was usually the case, I guess). But if there were failures (one or more), the failures information would have been entered into the faults array list.

I *strongly* recommend to test it (i.e. temporarily change one of the backend's commands to fail on the CanDoAction stage, for example, and invoke this command via RunMultipleAction and see what happens); In any case, as far as I can remember, we should generally support it (i.e. the error messages for the failed instances of the RunMultipleAction invocation should be displayed in an error dialog in the GUI); if, for some reason, this is not the behavior - it sounds like a bug to me.
|please replace &quot;&lt;core &#124; engine&gt;&quot; with &quot;core&quot;
|[code style] I believe that the tab should be replaced with white-spaces.
|IIRC, this query was created in order to supply the contents for the images/ISOs/? (cannot recall the exact name) sub-tab in the Storage main tab that appears when an ISO storage-domain is selected in the main Storage grid. 

All images are displayed in this sub-tab (with a column for the image type: Floppy/CD); theoretically (maybe already practically - don't know), there can be additional image types, therefore splitting the query to two queries might not be ideal here: the GUI would then have to call to two queries and combine the results in order to create the contents of a single grid; moreover, if/when a new image(s) type will be introduced, a new query would have to be introduced. 

I think that a single query that accepts the ImageType as a parameter is the best approach here, so when a new image type is introduced, only the ImageType enum is updated (and no new query needs to be introduced).
|I suggest to improve the debug message in this case, and mention in it also the returned value of &quot;lookupSupportedLocale(locale, getLocaleKeys())&quot;, especially if it is != locale.
|Alex - I believe that &quot;messages.removeConfirmationPopupMessage&quot; should be removed from the code entirely. I am not sure if there are any usages for it other than this file, but if there are - they should be replaced with the new &quot;constants.removeConfirmationPopupMessage&quot;, and &quot;removeConfirmationPopupMessage&quot; should be removed from Messages (it is important to remove it in order to make sure that it won't be used anymore, as any usage can create a translation problem wherever this message is used).

What do you think?
|maybe &quot;fix documentation locale detection&quot; (or &quot;fix locale detection for documentation&quot;)?
|I understand the fix (the org.apache.commons.lang.LocaleUtils.toLocale() method expects to accept as a parameter string with &quot;_&quot; rather than &quot;-&quot; [1]).

However, I don't understand why this patch fixes the problem: AFAIK, the only call to this method from the DocsServlet is with &quot;returnDefaultLocale = true&quot;; so even before this fix, this method always returned something: either the &quot;real&quot; locale, or the default &quot;Locale.US&quot; locale; so how come the experienced behavior was to eventually receive a 404 response? &quot;Locale.US&quot; is a legitimate return value for this method, and the US documentation is always installed.

[1] http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/LocaleUtils.html#toLocale(java.lang.String)
|[take #2 - fixed formatting for this comment]

....

[1]        FrontendActionAsyncResult f = new FrontendActionAsyncResult(actionType, parameters, result, state);

[2]        boolean success = false;

[3]        if (!result.getCanDoAction()) {

[4]            List&lt;VdcReturnValueBase&gt; failed = new ArrayList&lt;VdcReturnValueBase&gt;();

[5]            failed.add(result);

[6]            translateErrors(failed);

[7]            callback.executed(f);

....

the &quot;failed&quot; ArrayList contains &quot;result&quot; [5]; 

&quot;result&quot; is contained within &quot;f&quot; [1].

the &quot;failed&quot; ArrayList items (i.e. &quot;result&quot;) are being manipulated in [6].

[the 'translateErrors' method takes every VdcReturnValueBase item within the ArrayList passed to it as a parameter, and manipulates the CanDoAction messages array within that item (i.e. it turns the CanDoAction messages keys into CanDoAction messages values, which we eventually want to display)]

&quot;result&quot; is manipulated -&gt; &quot;f&quot; is manipulated (since &quot;f&quot; contains &quot;result&quot;).

&quot;f&quot; is defined outside the context of the &quot;if&quot; statement [1] 

(and regardless - &quot;f&quot; is being used in [7]).

so the 3 lines that you have suggested to remove are indeed actually used as Derez mentioned, therefore they shouldn't be removed.
|....
[1]        FrontendActionAsyncResult f = new FrontendActionAsyncResult(actionType, parameters, result, state);
[2]        boolean success = false;
[3]        if (!result.getCanDoAction()) {
[4]            List&lt;VdcReturnValueBase&gt; failed = new ArrayList&lt;VdcReturnValueBase&gt;();
[5]            failed.add(result);
[6]            translateErrors(failed);
[7]            callback.executed(f);
....

the &quot;failed&quot; ArrayList contains &quot;result&quot; [5]; 
&quot;result&quot; is contained within &quot;f&quot; [1].
the &quot;failed&quot; ArrayList items (i.e. &quot;result&quot;) are being manipulated in [6].

[the 'translateErrors' method takes every VdcReturnValueBase item within the ArrayList passed to it as a parameter, and manipulates the CanDoAction messages array within that item (i.e. it turns the CanDoAction messages keys into CanDoAction messages values, which we eventually want to display)]

&quot;result&quot; is manipulated -&gt; &quot;f&quot; is manipulated (since &quot;f&quot; contains &quot;result&quot;).
&quot;f&quot; is defined outside the context of the &quot;if&quot; statement [1] 
(and regardless - &quot;f&quot; is being used in [7]).

so the 3 lines that you have suggested to remove are indeed actually used as Derez mentioned, therefore they shouldn't be removed.
|thanks Alex. Rebasing and merging.
|they match - I copied them straight from the web-admin's page source (http://oi41.tinypic.com/5wvv4m.jpg)
|our standard is to use space (rather than tab) for indentation. 
Please change the section above accordingly.
|- typo (lacales -&gt; locales)

- see my inline comment for SubTabClusterGeneralView.ui.xml - problem is not with &quot;button text overflow&quot;; the text is OK, the borders are simply truncated.
|&quot;text.width&quot; was pretty much the case even before this patch (see http://oi45.tinypic.com/w82i5z.jpg for screen-shots of the application before this patch has been applied - you can see that even before this patch, the Japanese button is &quot;automatically&quot; rendered as wider than the English button).

IIUC, the problem documented in the BZ is not about *text* truncation/overflow - the Japanese &quot;Edit Policy&quot; text is fully shown within the button, without overflowing or truncating.
The problem is about *borders* truncation of the button.
[see http://oi47.tinypic.com/2igyhe8.jpg for the Edit Policy button in English, which properly has its borders displayed, vs. http://oi45.tinypic.com/awdmo.jpg (Edit Policy button in Japanese), which doesn't have its left and right borders displayed.
|to keep consistency across all of the classes, I suggest to remove the &quot;?&quot; from the string above as well. thanks.
|missing &quot;log.debug(builder.toString());&quot;?
|[from gchaplik] this change also needs to move to http://gerrit.ovirt.org/12023
?
|please remove the &quot;- Made changes based on code review.&quot; from the commit-comment - it is not necessary.
|Alex - derez is right; no need to mention these kind of things in the commit comment; 

All &quot;process-related&quot; changes in the patch [i.e. changes done due to code-review comments or due to related code-changes introduced after rebase (i.e. code-changes that happened to be merged before this patch was merged)] - should be documented in the code-review system (i.e. a *gerrit* comment, rather than a *git* commit-comment), once uploading the relevant patch-set that addresses those code-review comments and/or those introduced-related-code-changes after rebase.

These comments are interesting to the reviewer, therefore they should be written in the code-review system.

The commit-comment should purely describe the purpose of the patch (i.e. what it is coming to solve) and the contents of the patch; someone that will look at the commit-comment two years from now wouldn't really care that this patch was &quot;conformed to changes introduced due to rebase&quot; or &quot;addressed code-review comments&quot; - the git commit comment should always be phrased as if this patch was written in this way &quot;from the beginning&quot;, without going through the process.
|Alex- derez is right; see my previous comment.
|any reason to not remove completely the getDefaultConfigurationVersion() method above?
|indeed - I guess that those side-effects has something to do with the two lines that have remained in the OnSuccess method:

   LoginModel loginModel = (LoginModel) model;
   loginModel.getLoggedInEvent().raise(loginModel, EventArgs.Empty);

I assume that if the call to getDefaultConfigurationVersion() will be replaced with these two lines in the initCache() method (below), everything will work appropriately and there will be no need to keep the getDefaultConfigurationVersion() method anymore.

In any case - there is no justification for keeping the Frontend.RunQuery call to the GetDefaultConfigurationVersion query - this is an unnecessary round-trip to the server which we want to avoid; there is no problem keeping the &quot;getDefaultConfigurationVersion()&quot; method if it will contain only the two lines that I mentioned above, however in that case it will probably make sense to rename this method to something like &quot;raiseLoggedInEvent&quot;.
|data centers -&gt; Data Centers
|disks -&gt; Disks
|clusters -&gt; Clusters
|virtual machines -&gt; Virtual Machines
|pools -&gt; Pools
|templates -&gt; Templates
|networks -&gt; Networks
|volumes -&gt; Volumes
|users -&gt; Users
|events -&gt; Events
|storage -&gt; Storage Domains
|hosts -&gt; Hosts
|That is totally understandable. As I have some experience with the oVirt translators, I can quite safely say that this kind of sentence wouldn't impose a problem translation-wise, and should be good for at least most cases if not all of them.

If we will encounter a specific problem with a specific title/locale, we can always override the relevant title if needed.
|Alex, there should be no translation-related problems if we are going with Daniel's approach. 

As long as the sentence is a full sentence and the nature of the parameter is the same for all use-cases (in our case, the parameter value is always a name of a business-entity type), we should be OK.

Can you please update the patch according to Daniel's suggestion? We might actually automatically gain for free some more &quot;strongly-typed&quot; &quot;no x to display&quot; messages for some of the grids in the sub-tabs that might haven't been taken care of in your original patch, etc. Thanks.
|should be localized (ApplicationConstants or ApplicationMessages, I guess).
|message is ok, assuming the dialog contains the &quot;are you sure&quot; message separately (as practically all confirmation dialogs in the application should).
Tomas - is this the case? Does the dialog contain *also* an &quot;are you sure&quot; message?
|The bz also says to reverse the logic, however no logic has been reversed in this patch... logic must be reversed if we want to use the text-above (i.e. if text-box was checked by default, it should now be un-checked by default, we should send to backend the opposite value according to the checked/unchecked status, etc.)
|could be.


I actually prefer that the model's property will be logically the same as the backend parameter (i.e. if the backend parameter is named &quot;PublicUse&quot;, then the model's property should be named &quot;IsTemplatePublic&quot; and represent the same thing - less confusing that way). It will also match the check-box name (which now practically means &quot;make public&quot; instead of the old &quot;make private&quot;).


So the code here should actually be the old code, before the change (i.e. parameters.setPublicUse(model.IsTemplatePublic), but you need to make sure that the check-box &quot;checked&quot; value matches the model.IsTemplatePublic value appropriately (i.e. when the check-box is checked, the model.IsTemplatePublic value should be &quot;true&quot;; when check-box is un-checked, model.IsTemplatePublic should be &quot;false&quot;).
|The above looks like a bug: setPublicUse(!getIsTemplatePublic).
I would expect the following: setPublicUse(getIsTemplatePublic). 
[as it actually was before the code change]

Not sure if this is only a variable-naming problem and the logic itself is correct, or something more (maybe the state before the code change was actually buggy - don't know);  in any case - should be investigated and fixed - this is really confusing...
|Assuming that the meaning of the &quot;make public&quot; check-box is the same as the &quot;IsTemplatePublic&quot; property of the model, then derez is correct - code should be:

parameters.isPublic = model.isPublic

and not:

parameters.isPublic = ! model.isPublic

Also, in one of the previous patch-sets I mentioned that &quot;parameters.isPublic = !model.isPublic&quot; is very confusing, so it shouldn't be that way in any case.

So it seems that the only thing that needs to be done here is to remove the negation, however need to verify that the behavior is correct after that change.
|same comments as in UserPortalListModel.
|the  &quot;//$NON-NLS-2$&quot; part can be removed (it suggests that the second hard-coded string in this line should not be localized, however there in no second hard-coded string in this line anymore, after your change)
|see previous comment
|see previous comment
|&quot;Custom&quot; should still have number next to it -&gt; This line shouldn't be changed.
|as there is no spmStatus column anymore, and there are no other usages for this string, it can be entirely removed.
|both &quot;//$NON-NLS-1$&quot; and &quot;//$NON-NLS-2$&quot; can be removed - there aren't any hard-coded strings in this line anymore (see my comments in HostModel.java)
|see my previous comment
|see my previous comment
|no need for the &quot;//$NON-NLS-2$&quot; part - there is only one hard coded string in the line (see my comments in HostModel.java)
|&quot;//$NON-NLS-1$&quot; should be removed (refer to my original comment for this file in patch set 1, in which I mentioned that both &quot;//$NON-NLS-1$&quot; and &quot;//$NON-NLS-2$&quot; should be removed, since there are no hard coded strings in this line anymore)
|see my previous comment
|see my previous comment
|how it the change above related to adding the &quot;reconnect&quot; action-group to the tree?
[no problem to do it, just make sure that in the commit comment it is explicitly described]
|I suggest to rephrase to &quot;Allow to override the currently opened remote console session&quot; (or, in general, change it to include the word &quot;console&quot;, so it will match the tree-node text).
|in order to keep the behavior similar to the old one as much as possible, we need to check here that the &quot;succeeded&quot; value of &quot;all&quot; return values is &quot;true&quot;, so the dialog will stay opened in case something went wrong during the CanDoAction phase, and will be closed only if the CanDoAction phase succeeded.
|[See also my comment on http://gerrit.ovirt.org/#/c/6249/]
Since the HotPlugUnplugVmNic is being used for both Plug and UnPlug actions, its appropriate translation should be something like &quot;Activate/Deactivate Interface&quot; or something similar.
|It seems that the HotPlugUnplugVmNic Command is being used for both Plug (&quot;Activate&quot;) and UnPlug (&quot;Deactivate&quot;) actions.
Therefore, I think that the ActionMessageParameters should be set according to the &quot;Action&quot; property within the HotPlugUnplugVmNicParameters class:
If getAction() is PlugAction.PLUG, then the CanDoActionMessages array-list should be added the &quot;VAR__ACTION__ACTIVATE&quot; message (&quot;activate&quot;).
If getAction() is PlugAction.UNPLUG, then the CanDoActionMessages array-list should be added the &quot;VAR__ACTION__DEACTIVATE&quot; message (&quot;deactivate&quot;).

[worth consulting with an engine-core maintainer about this]
|Maybe rephrase to something more general and short, like: &quot;Not supported for this client&quot;?
|please make sure that engine-core and rest-api maintainers will take a look at this change as well - it can cause behavioural changes in engine-core and rest-api - not sure if these changes are desired.
|some white-spaces were added here - any reason?
|Is the above a treatment for the &quot;Blank&quot; template? If so, why shouldn't we retrieve its UsbPolicy and set it in the Model just like we would have for any other template?
|Instead of checking if the cluster-version &lt;= 3.0, I suggest to check that it is &lt; 3.1 (or even do an &quot;if... else...&quot; with the &quot;if (Version.v3_1.compareTo(cluster.getcompatibility_version()) &lt;= 0)&quot; statement below).

Although probably won't happen: If, for some reason, there will be a cluster version 3.0.5, it should still be considered as 3.0; i.e. this check will lead to the wrong result.
|I would simply change the keys to contain &quot;_&quot; instead of &quot;-&quot;.
|how come this was acked/merged?
|the &quot;if&quot; statement above seems to be unnecessary. Please remove it.
|I agree. If so, then maybe &quot;Enforce&quot; should become &quot;Enforced&quot; (&quot;disable&quot; and &quot;enforce&quot; are actions; this text should give an indication regarding a mode, not an action).
|Note that in order to be sync'd with the rest-api, the &quot;SIZE&quot; text should be mapped to the &quot;size&quot; property (instead of the &quot;actual_size&quot; property).
|the change that Gilad has made actually causes the QueryableId to be the storage domain ID, unless telling it otherwise;

The QueryableId of the storage domain should, in most cases, simply be the domain ID.
The only scenario in which we want it to be otherwise is when dealing with the results for the GetStorageDomainListById query: each item in the returned list of that query has the same ID but a different storagePoolId; in this case, the GUI sets the QueryableId to be a concatenation of the storage-id and the storage-pool-id (see the other file in this patch).

The only change that should (maybe) introduced to this patch is to set the special QueriableID as part of GetStorageDomainListById query execution, instead of setting it in the GUI code only after getting the results (as the GUI probably shouldn't manipulate the properties of the backend-results)

Gilad/Michael: Thoughts?
|I see that you are iterating through the version files, so you will eventually returnonly ISOs that have a version file associated with them as a retun-value.
What about old/legacyISOs (that don't have a version file associated with them)? Shouldn't we return these as well?
Assuming we should still support old ISOs, I suggest returning these as well as part of the return value (maybe add a separate query just for them?) and if we do - make sure that there are no duplicates in the returned results.
|1. we need to differentiate:
- when this.mVmDynamic.getvm_host() is empty, vm_host should be set to vm_name + &quot;.&quot; + vm_domain
- when this.mVmDynamic.getvm_host() is not empty, vm_host should be set to vm_host + &quot;.&quot; + vm_domain.

In this patch (in this part), you are always setting vm_host to vm_name + &quot;.&quot; + vm_domain

2. I would replace the &quot;.contains&quot; with &quot;.endsWith&quot; (if there is anything like that).
|test comment on test9 file.
|SpiceUsbAutoShare should actually be available for users;
The fact that it is currently not being used in the user portal is a bug.
|I think that ExportDefaultPath and ImportDefaultPath are obsolete. But even if they aren't, they represent directory paths on Host/storage-domain that shouldn't be exposed to the user.
|All configuration values regarding selection-algorithm/load balancing (i.e. VdsSelectionAlgorithm, LowUtilizationForEvenlyDistribute, LowUtilizationForPowerSave, HighUtilizationForPowerSave) should either be exposed to the user or not. I suggest to not expose them to the user - they are irrelevant to him.
|Since user isn't supposed to deal with Host Power Management options, I suggest to not expose this configuration value to the user.
|All Custom Properties related configuration values should be either exposed or not.
I suggest to expose them all (i.e., expose UserDefinedVMProperties and PredefinedVMProperties to users)
|parenthesis around &quot;getReinitialize()&quot; can be removed.
|please replace the period (&quot;.&quot;) at the end with colon (&quot;:&quot;).
|immidiatly -&gt; immediately
|Uploaded patch set 1.
|Patch Set 1: Verified+1

@Tomas/Shubhendu - recommending to review (this patch removes double quotation marks from strings that you have added/changed in [1], [2]). Thanks. 

[1] https://gerrit.ovirt.org/#/c/3354/ [Tomas]

[2] https://gerrit.ovirt.org/#/c/36294/ [Shubhendu]
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1: Code-Review+2
|Patch Set 1:

Hi Kanagaraj, can you please verify this patch? thanks.
|Patch Set 1:

@Derez/Gilad/Lior/Alona: Please take a look at Alexander's inline comment in EntityModelCellTable.java - seems like a very basic functionality that is being changed there, and we would like you to take a look in order to make sure that we are not missing anything. 

Many thanks in advance!
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 11:

Martin: please take a look at http://gerrit.ovirt.org/#/c/35185/ - even after all of the changes in the way that a REST-API-Session-ID is acquired, the UI-Plugins are still receiving a REST-API-Session-ID - there is no reason to not utilize this very same Session-ID for the virt-viewer as well. If you need assistance with adjusting your patch accordingly, I assume that Vojtech will be able to help.
|Patch Set 6:

hi Anmol, can you please describe how will the tree look in:
- gluster-only ApplicationMode
- virt-only ApplicationMode
- combined ApplicationMode
?

[preferably with screen-shots]

Thanks!
|Patch Set 7:

Thanks for posting the screen-shots, Anmol - much appreciated. 

A couple of clarifications (and I apologize in advance if you have already answered that in here one way or another): 

- In &quot;Both&quot; mode: will we have the 'root' &quot;Clusters&quot; node as well as the &quot;Data-Centers&quot; 'root' node (assuming we have both 'virt' Data-Centers and gluster-only Clusters in the setup)? 

- Will a specific Cluster appear twice in the tree if it is enabled for both the 'virt' service and the 'gluster' service (once beneath the &quot;Clusters&quot; 'root' node and once beneath the &quot;Clusters&quot; node of the specific Data-Center to which this Cluster belongs)? 

Have you tested your code in the particular cases above to see that the UI is behaving as expected?

Thanks!
|Patch Set 7:

Thanks Anmol and Greg.

&gt; I believe that in 'both' mode, Datacenter will show up and look normal

Based on the latest screen-shots from Anmol, I think that Greg is right. 

The point that I missed is that there can't be a &quot;mixed&quot; mode in the tree (i.e. a mode in which there is a &quot;Clusters&quot; root node *as well as* a &quot;Data-Centers&quot; root node in the tree): 

- In 'Gluster-Only' ApplicationMode: There aren't any (meaningful) Data-Centers, we only have gluster-only Clusters, hence the tree will contain only the 'Clusters' root node. 

- In any other ApplicationMode: *Every* Cluster, even a gluster-only Cluster, must belong to a Data-Center. Therefore, we will not have in the tree a 'Clusters' root node at all - only a 'Data-Centers' root node, and all of the Clusters will appear beneath their relevant Data-Center node. 

So since there is no &quot;mixed&quot; mode in the tree, my concern regarding having a Cluster appearing potentially twice within the tree or anything like that is irrelevant. 

Bottom line: Looks OK on my end. 

@Greg/Anmol - please correct me if I was wrong in any of the assumptions that I made above and/or share any additional questions/comments that you have. 

Thanks.
|Patch Set 1: Code-Review+2
|Patch Set 2:

&gt; For greg some images:
 &gt; RHEV:
 &gt; http://imgur.com/9ULWaxj
 &gt; http://imgur.com/92hz6D4
 &gt; Ovirt:
 &gt; http://imgur.com/pFLvw9m
 &gt; http://imgur.com/6HViAjM

looks good - thanks for posting the screen-shots, Alexander.

maybe we can do a couple of minor improvements, mostly to be more compatible with the PatternFly alert widget [https://www.patternfly.org/widgets/#alerts] - let me know what you guys think:

- change link color to the #0099d3 color (will be more consistent with our welcome page as well [http://i.imgur.com/YMzaEB2.png])

- append an icon to the left of the message. 

thanks.
|Patch Set 2:

&gt; We went with red on the links because the blue was designed to be
 &gt; on a white background.
 &gt; 
 &gt; But on second thought, it doesn't look too bad on gray:
 &gt; 
 &gt; http://i.imgur.com/3IPo7gV.png

yeah, I think that the blue over the gray background stands out more than the red, hence the text is clearer [http://i.imgur.com/sjFEkCZ.png] - I recommend going with the blue.

 &gt; 
 &gt; +1 for an icon.
 &gt; 
 &gt; I think using the exact same font as the fields (maybe just remove
 &gt; bold?) too.

I think the bold looks good - need to keep in mind that the message should really stand out in the screen (like the &quot;Hey there is a problem!&quot; text in the PatternFly alert example) - this is what we want the user to notice. but we can try both options and then decide.
|Patch Set 3:

&gt; With icons and changed link colors:
 &gt; http://imgur.com/kqQzA3a
 &gt; http://imgur.com/J5DCb3x

Looks awesome, thanks Alexander.
|Patch Set 2:

in addition to addressing the inline comments, please make sure to rebase this patch on top of the latest version of http://gerrit.ovirt.org/#/c/33720/ (currently, this patch depends on an outdated version of http://gerrit.ovirt.org/#/c/33720/). 

thanks.
|Patch Set 8:

Greg, here are a few issues that I have noticed; some may not be related to your patches at all, others may be issues that you are already aware of and are on your TODO list - let me know what you think:

1. There are no tool-tips on cropped grid-column text headers [https://raw.githubusercontent.com/eco-public/clipboard/master/out-23.ogv] or on icon column headers (I don't have a screen-cast for that). 
For grid-column text headers: when cropped, it would be nice to have them with the &quot;...&quot; suffix, just like text-cells in the grids' body (we never had the ellipsis feature for column text *headers*, I think). 

2. Grid column-sorting behavior is completely off: When clicking the column header, nothing happens. Re-size the column - the sorting-triangle icon suddenly appears (on-mouse-leave). Another click on the column header - nothing happens. Re-size the column again - sorting-triangle icon suddenly flips (allegedly indicating that sorting was reversed). Throughout this entire scenario - *no sorting is actually being performed* [https://raw.githubusercontent.com/eco-public/clipboard/master/out-24.ogv]. 

3. When hovering over the grid column headers from left to right - mouse cursor seems OK. However, when hovering over the grid column headers from right to left - mouse cursor gets &quot;stuck&quot; on the column-resize icon (pointing out that there are no mouse-clicks involved in this scenario - only hovering) [https://raw.githubusercontent.com/eco-public/clipboard/master/out-25.ogv]. 

4. [Most likely not related to your patch, but mentioning anyway just in case it somehow is] Widths of grid-columns in the Disks main-tab are evenly distributed, which looks strange [http://i.imgur.com/yVvSqb5.png]. 

5. [May be related to 4 / may not be related to your patches] Re-sizing of the Disks' grid-columns is behaving strange (re-sizing one column unexpectedly affects other columns as well) [https://raw.githubusercontent.com/eco-public/clipboard/master/out-26.ogv]. 

6. Tool-tips for the &quot;Attached to&quot; column in the Disks grid are &quot;regular&quot; tool-tips (i.e. tool-tips that show the full cell-text when it is cropped), which is OK for Disks that are attached to only one VM/Template. But in case a Disk is attached to more than one VM and the grid-cell shows e.g. &quot;2 VMs&quot;, need a tool-tip that (a) will contain the actual names of the VMs (e.g. &quot;VM1, VM2&quot;) and (b) will be displayed upon hovering always (and not only when text is cropped) [same image as 4]. 

Thanks.
|Patch Set 14:

re-tested with updated patches: 

 &gt; 1. There are no tool-tips on cropped grid-column text headers
 &gt; [https://raw.githubusercontent.com/eco-public/clipboard/master/out-23.ogv]
 &gt; or on icon column headers (I don't have a screen-cast for that).
 &gt; For grid-column text headers: when cropped, it would be nice to
 &gt; have them with the &quot;...&quot; suffix, just like text-cells in the grids'
 &gt; body (we never had the ellipsis feature for column text *headers*,
 &gt; I think).

tool-tips on icon column headers - fixed.
ellipsis + tool-tips on cropped text column headers - not fixed, however I assume will be treated separately in the context of bug 1199725?
 &gt; 
 &gt; 2. Grid column-sorting behavior is completely off: When clicking
 &gt; the column header, nothing happens. Re-size the column - the
 &gt; sorting-triangle icon suddenly appears (on-mouse-leave). Another
 &gt; click on the column header - nothing happens. Re-size the column
 &gt; again - sorting-triangle icon suddenly flips (allegedly indicating
 &gt; that sorting was reversed). Throughout this entire scenario - *no
 &gt; sorting is actually being performed* [https://raw.githubusercontent.com/eco-public/clipboard/master/out-24.ogv].

fixed - works perfectly. 

 &gt; 
 &gt; 3. When hovering over the grid column headers from left to right -
 &gt; mouse cursor seems OK. However, when hovering over the grid column
 &gt; headers from right to left - mouse cursor gets &quot;stuck&quot; on the
 &gt; column-resize icon (pointing out that there are no mouse-clicks
 &gt; involved in this scenario - only hovering) [https://raw.githubusercontent.com/eco-public/clipboard/master/out-25.ogv].

fixed.

 &gt; 
 &gt; 4. [Most likely not related to your patch, but mentioning anyway
 &gt; just in case it somehow is] Widths of grid-columns in the Disks
 &gt; main-tab are evenly distributed, which looks strange
 &gt; [http://i.imgur.com/yVvSqb5.png].

fixed. 

 &gt; 
 &gt; 5. [May be related to 4 / may not be related to your patches]
 &gt; Re-sizing of the Disks' grid-columns is behaving strange (re-sizing
 &gt; one column unexpectedly affects other columns as well)
 &gt; [https://raw.githubusercontent.com/eco-public/clipboard/master/out-26.ogv].

fixed. 

 &gt; 
 &gt; 6. Tool-tips for the &quot;Attached to&quot; column in the Disks grid are
 &gt; &quot;regular&quot; tool-tips (i.e. tool-tips that show the full cell-text
 &gt; when it is cropped), which is OK for Disks that are attached to
 &gt; only one VM/Template. But in case a Disk is attached to more than
 &gt; one VM and the grid-cell shows e.g. &quot;2 VMs&quot;, need a tool-tip that
 &gt; (a) will contain the actual names of the VMs (e.g. &quot;VM1, VM2&quot;) and
 &gt; (b) will be displayed upon hovering always (and not only when text
 &gt; is cropped) [same image as 4].

fixed (works perfectly for &quot;plain&quot; cropped text as well as text that needs to be detailed). 

 &gt; 
 &gt; Thanks.
|Patch Set 25:

(1 comment)
|Patch Set 3:

(1 comment)
|Patch Set 4:

Oved - can you please take a look on the backend change? thanks in advance.
|Patch Set 1: Code-Review+2
|Patch Set 4:

@Alexander/Greg: 'Connect Automatically' in the User Portal login page looks kind of strange: http://i.imgur.com/cGBUsAH.png

Known? related to this patch?
|Patch Set 3:

Hi Anmol, can you please post screen-shots of the new widgets that you are adding? thanks.
|Patch Set 4:

(1 comment)

@Greg, do we know if PatternFly has any date-time selection solution planned (or maybe already in place - couldn't find one though)?
|Patch Set 2:

&gt; Hey Greg, any chance you could give me +2? Or do you want me to ask
 &gt; also someone else to review? Do you have someone specific in mind?

Hi Tomas, @Alexander can review your patch.
|Patch Set 2:

Yevgeny, any chance that you can post a screen-shot?
|Patch Set 4:

&gt; here is the sceenshot http://imgur.com/LeyV5Cd

thanks Yevgeny, looks good - the icon of the 'Sessions' node in the tree is a bit too close to the text itself, but that's not critical to fix right now.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 5:

Thanks, Juan - I see that you added the relevant config values. 

@Greg[/Jenny] - can you please test/verify?
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1:

Vojtech - once http://gerrit.ovirt.org/#/c/36737/ is merged - please verify this patch and rebase (or re-run hooks if cannot rebase, so &quot;-1&quot; on Verified will be reset)
|Patch Set 2:

&gt; see above comment, I am unsure why this patch is required.

the idea is to make sure that the engine session will die before the rest-api-http-session; in case the rest-api-http-session dies before the engine session, the GUI is still alive but the UI-plugin potentially stops functioning, disturbing the GUI with rest-api-credentials-request-pop-up (see my comment in http://gerrit.ovirt.org/#/c/36622/), etc.
|Patch Set 2:

Alon, the fact that the engine session ends before the rest-api-http-session is indeed ok. 

what this patch is trying to do is to make sure that the engine session will *always* end (at the exact same time or) before the rest-api-http-session ends. without this patch, the engine session may end *after* the rest-api-http-session, which is problematic. 

why is it problematic? here is an example for clarification: 

SCENARIO

- UserSessionTimeOutInterval=2
- 12:00:00: engine expires expired sessions.
- 12:00:01: user login to web-admin, web-admin http session (w1), rest-api http session (r1) are created, all pointing to a newly-created engine session (e1). there is no user interaction, the ui-plugins are not performing any rest-api requests.
- 12:02:00: engine expires expired sessions. e1 is 1m59sec old, so it is not expired. w1 and r1 are still alive as well (their TTL is 2 minutes, just like UserSessionTimeOutInterval).
- 12:02:01: r1 is expired. e1 is still alive (and will be until 12:04:00).
- 12:02:02: user performs an action / ui-plugin makes a rest-api request -&gt; a rest-api request is attempted (either immediately, or sometime in the upcoming minute). r1 is expired, therefore rest-api request cannot be fulfilled. 

PROBLEM

because the rest api http session (r1) is expired, but the engine session (e1) is still alive:

- ui plugins potentially stops working, i.e. in case it attempts to make rest-api calls (while the GUI is working normally)
- the browser displays a credentials-request-for-rest-api pop-up -&gt; disruptive for the user experience.

SOLUTION

we need to avoid a situation in which the rest api http session (r1) is expired, but the engine session (e1) is still alive. 

this means that the rest api http session TTL should be higher or equal to the engine session timeout. 

the practical engine session timeout is somewhere between UserSessionTimeOutInterval and UserSessionTimeOutInterval*2 - the GUI cannot control this exact timeout, let alone control it. 

this means that the if we will set the rest-api-http-session TTL to UserSessionTimeOutInterval*2, we can guarantee that the rest api http session TTL would be higher or equal to the engine session timeout, therefore preventing the problematic situation explained above. 

before this patch: the rest-api-http-session TTL was set to UserSessionTimeOutInterval.

after this patch: the rest-api-http-session TTL is set to UserSessionTimeOutInterval*2, per the explanation above. 

if anything is seems unlclear/wrong in the explanation above, please share. thanks.
|Patch Set 2:

&gt; the GUI cannot control this exact timeout, let alone control it.

correction: the GUI cannot *know* this exact timeout, let alone control it.
|Patch Set 2:

@Vojtech - merge?
|Patch Set 3:

&gt; http://jenkins.ovirt.org/job/ovirt-engine_master_unit-tests_merged/9605/ : FAILURE

unrelated: failure is in REST API unit-tests, patch is pure UI. 

&gt; http://jenkins.ovirt.org/job/ovirt-engine_master_find-bugs_merged/1989/ : FAILURE

unrelated: find-bugs problems are reported in the DAL, patch is pure UI.
|Uploaded patch set 3.
|Patch Set 3:

rebased; fixed a couple of checkstyle issues [missing '//$NON-NLS-1$' in AbstractTooltipCell.java, unused 'import's in AbstractTooltipCell.java]
|Patch Set 3:

&gt; [missing '//$NON-NLS-1$' in AbstractTooltipCell.java, unused 'import's in AbstractTooltipCell.java]

correction: [missing '//$NON-NLS-1$' in AbstractTooltipCell.java, unused 'import's in SearchPanelView.java]
|Patch Set 3:

see https://raw.githubusercontent.com/eco-public/clipboard/master/out-6.ogv: 

the tool-tips themselves look great, their behavior though is somewhat sluggish:
- it takes them a little bit of time to appear after hovering on the icon. 
- a tooltip may appear when the user has already hovered-out of the relevant icon. 
- two tool-tips may appear at the same time. 
- tool-tips may take a significant amount of time to disappear. 

and this is only what I discovered in very few minutes of testing this patch - I'm afraid that the current implementation is less-than-ideal from a UX perspective, and may be prone to unexpected behaviors and users' complaints. 

@Greg:
- With your patch applied: are there any PatternFly tool-tips in the GUI that are not in a grid?
- Assuming tool-tips behave seamlessly in the GUI in locations other than the grids: I am wondering whether we should, for now, &quot;fallback&quot; to native browser tool-tips in the grids, and migrate to PatternFly tool-tips only in places that are not re-rendered upon refresh [e.g. dialogs, action-buttons (?), etc.]

Thoughts/Comments are welcome. Thanks.
|Patch Set 3:

&gt; see https://raw.githubusercontent.com/eco-public/clipboard/master/out-6.ogv:

without the colon (':') at the end:
see https://raw.githubusercontent.com/eco-public/clipboard/master/out-6.ogv
|Patch Set 3:

&gt; times are configurable. Fading in/out is by design. I think the current implementation where it instantly opens at you is harsh / scary.

Although in the PatternFly demo immediate opening and closing looks OK (https://www.patternfly.org/widgets/#tooltip), I tend to agree with you on immediately opening, which may be overwhelming. I think for opening, we should wait ~0.5 second but closing should be done immediately (or with a delay much shorter than 0.5 second) - similar to native browser tool-tips behavior in the application today - see https://raw.githubusercontent.com/eco-public/clipboard/master/out.ogv

&gt; &gt; two tool-tips may appear at the same time.

&gt; is that a problem?

I think it is, however it is more painful if the tool-tips are lingering as they are right now (in some cases, e.g. towards the end of the previous screen-cast that I posted); if the tool-tips will disappear quickly enough, it may not be a problem anymore. 

&gt; 1 second is by design (https://bugzilla.redhat.com/show_bug.cgi?id=1023549) if they take longer, it's because a grid refresh happened. currently i have the reaper set to 5 seconds or something, but we could have it shorter or even near-instant.

I think that the current 5-seconds lingering is somewhat disrupting the user experience; as I mentioned above - we should aim towards closing the tooltips immediately or after an extremely short delay; however, we need to make sure that the frequent timers in the code are not causing any issues to the GUI behavior/performance, so we may need to balance things out eventually somehow. 

Please proceed with fixing the issues (rather than resorting to native browser tool-tips, as I suggested earlier). 

Thanks.
|Patch Set 3:

@Greg - is this obsolete and should be abandoned? or are you planning on refreshing it (maybe as 'Depending On' http://gerrit.ovirt.org/#/c/36597/)?

thanks.
|Patch Set 5:

&gt; setting UserSessionTimeOutInterval=2 (2 mins). Chrome 36 logs me out in about 2 minutes. Firefox 31 takes 4 minutes, though.

Thanks for the verification, Greg. 
I am not sure that the difference that you have observed between Chrome and Firefox has anything to do with the browser; AFAIK, the UserSessionTimeOutInterval value can practically be up to value*2; this is due to the way that the engine invalidates sessions: the frequency in which the engine checks for expired session is 'value' as well. 

so if e.g. UserSessionTimeOutInterval=2, the engine will check for expired sessions (i.e. sessions that are idle for at least 2 minutes) every 2 minutes. so the following scenario can happen:

- 12:00:00: engine expires expired sessions. 
- 12:00:01: new engine session (s1) is created, and is idle. 
- 12:02:00: engine expires expired sessions (s1 is idle &quot;only&quot; for 1m59sec, so it cannot be expired). 
- 12:04:00: engine expires expired sessions (s1 is idle for 3m59sec, and is expired). 

so s1 is expired only after 3m59sec (i.e. almost 4 minutes, or 2*UserSessionTimeOutInterval), even though UserSessionTimeOutInterval=2. 

practically, this means that if a ui-plugin will perform a rest-api call after 'UserSessionTimeOutInterval' seconds of being idle (i.e. rest-api-http-session is expired, but engine session still not expired yet necessarily, per the explanation above), then we may see a browser-pop-up asking for credentials for the rest-api. This seems like a very highly unlikely scenario to me (especially after we have removed the ui-plugins heartbeat mechanism), so IMO we can definitely proceed with the patch as it is now. 

thanks.
|Patch Set 5:

&gt; ... so the scenario you wrote above is not possible, I think.

consider the following scenario:

UserSessionTimeOutInterval=2

- 12:00:00: engine expires expired sessions. 
- 12:00:01: user login to web-admin, web-admin http session (w1), rest-api http session (r1) are created, all pointing to a newly-created engine session (e1). there is no user interaction, the ui-plugins are not performing any rest-api requests. 
- 12:02:00: engine expires expired sessions. e1 is 1m59sec old, so it is not expired. w1 and r1 are still alive as well (their TTL is 2 minutes, just like UserSessionTimeOutInterval). 
- 12:02:01: r1 is expired. e1 is still alive (and will be until 12:04:00). 
- 12:02:02: user performs an action / ui-plugin makes a rest-api request -&gt; a rest-api request is performed (either immediately, or sometime in the upcoming minute). r1 is expired, therefore rest-api request cannot be fulfilled -&gt; browser displays a credentials-request-for-rest-api pop-up.
|Patch Set 6:

&gt; http://jenkins.ovirt.org/job/ovirt-engine_master_find-bugs_merged/1957/ : FAILURE

doesn't seem related to the patch. from http://jenkins.ovirt.org/job/ovirt-engine_master_find-bugs_merged/1957/console :
...
ERROR: Error fetching remote repo 'origin'
...
|Patch Set 1:

shouldn't all of the modified lines be with &quot;//$NON-NLS-1$&quot; or something similar (to avoid check-style issues)?
|Patch Set 2:

&gt; Ok. Doesn't appear to work in my Chrome. Maybe Einav can try?

sure - will apply and report in a bit.
|Patch Set 2:

&gt; sure - will apply and report in a bit.

update:

I have tested the following scenario in Chrome 38 and FF31 on Fedora 19:

- within the Data-Centers main grid: scroll until 'ccc' is the first item displayed in the visible section. 
- refresh the grid a couple of times
- Chrome, Firefox: scroll is retained, i.e. 'ccc' is still displayed as 'first' [v]
- select the 'dc10' item in the grid [sub-tabs appear]
- Chrome, Firefox: scroll &quot;jumps&quot; to the top and slightly afterwards - goes 'back' to displaying 'ccc' as first [?]
- refresh the main grid a couple of times
- Chrome, Firefox: scroll is retained [v]
- deselect the 'dc10' item in the grid [sub-tabs disappear]
- Firefox: scroll &quot;jumps&quot; to the top and slightly afterwards - goes 'back' to displaying 'ccc' as first [?]
- Chrome: scroll &quot;jumps&quot; all the way to the bottom [x]

Chrome: https://raw.githubusercontent.com/eco-public/clipboard/master/scrolling-Chrome.ogv

Firefox: https://raw.githubusercontent.com/eco-public/clipboard/master/scrolling-Firefox.ogv

need to look into the delays (marked with '[?]' above) and the strange Chrome behavior (marked with '[x]' above). 

Notes:

- I have tested Data-Centers, not Events or Users. 
- By default, the dev-env 'make' command-line compiles only for Firefox; make sure that you are using the 'BUILD_ALL_USER_AGENTS=1' option in the 'make' command or similar (see http://gerrit.ovirt.org/#/c/32164/), to ensure that indeed Chrome is loading a permutation targeted for it, rather than a permutation targeted for another browser. 

please let me know if I can further assist in any way.
|Patch Set 2:

&gt; I can actually explain the scroll to ccc in FF

the scroll to cc in FF is OK, that is the desired behavior. 
what we need to understand is why this does not happen in Chrome. 

&gt; showing and hiding the sub tabs doesn't count as a scroll event, so the offset is not changed, then the next automatic refresh of the grid will cause the jump, that is the delay you saw.

is there a way to avoid this delay? i.e. make sure that upon selection/deselection in the grid (maybe only first selection / last deselection) a 'scroll-event' will happen?
|Patch Set 2:

&gt; @Vojtech, I believe Einav has some issues with the solution.

indeed, there are issues with the current patch (i.e. the scrolling behavior with this patch applied is a little buggy), Alexander is working on improving this patch.
|Patch Set 1: Code-Review+2

this changes non-English .properties strings - parallel changes will be made in Zanata's oVirt project, ovirt-3.5 version so that strings here and there will be sync'd.
|Patch Set 1: Code-Review+2

this changes non-English .properties strings - parallel changes will be made in Zanata's oVirt project, master version so that strings here and there will be sync'd.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

&gt; Einav, there are many trailing white spaces.

&gt; Is it possible to remove it?

the trailing white-spaces are in translations within Zanata. 
in order to remove the trailing white-spaces, the translators need to update the translations in Zanata accordingly. But need to keep in mind that some texts may contain trailing white-spaces by design (i.e. in case the English source string contains a trailing white space), e.g. in case the translated string is a part of sentence/paragraph that expects an additional string to appended as its suffix.
|Patch Set 4:

@Yaniv/Shirly: this patch has been only partially verified (see Alexander's comment right after posting patch set 3) - any chance that you can fully verify that this patch is working?

thanks.
|Patch Set 4:

&gt; Looks good now :) Any chance to backport it to 3.5?

BZ is currently targeted for 3.6, but if patch is small and safe enough, we can definitely backport. 

@Alexander: if patch seems safe to you - please re-target the BZ to '3.5.1' and backport the patch to 'ovirt-engine-3.5'.
|Patch Set 4: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 5:

guys, let's wait for Monday to merge please :) thanks.
|Patch Set 1:

&gt;  Also wrong indexes and missing default messages.

@Alexander: I think that the unit-test should fail only in case of an error that would have failed the build (without unit-tests) when compiling in all-lang. 

when compiling with all-lang: does a missing default message fail the build? if not - maybe worth removing this check or cause it to throw a warning instead of failing the build. 

thanks.
|Patch Set 1:

&gt; An icon for Ubunutu 14.04 is required, too, as the Ubuntu icons contain the version number.

@Rene[/Roy]: Icons were already sent to you by Eldan - can you please confirm?
|Patch Set 1:

Ravi, the Events tab has a &quot;Basic Mode&quot; view and an &quot;Advanced Mode&quot; view (toggable via the radio-buttons at the top of the list); did you extend the width of the message only in &quot;Basic Mode&quot;? only in &quot;Extended Mode&quot;? both?
|Patch Set 1:

thanks, Ravi. sounds good.
|Patch Set 4:

&gt; Need a +2 from someone, either Vojtech or Einav.

I prefer that Vojtech will provide that, just to make sure that we are not missing anything on the GUI side.
|Patch Set 1:

&gt; Patch Set 1: Code-Review+1

@Vojtech - any reason for not granting &quot;+2&quot;?
|Patch Set 1: Code-Review+2
|Patch Set 1:

(2 comments)
|Patch Set 3: Verified+1 Code-Review+2
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

&gt; kind of a bummer we gotta change 4 config files to do this :/

I believe that we have tried to improve this a while ago [see http://gerrit.ovirt.org/#/c/27973], however we encountered some build-related issues (something about mvn plugins versioning, IIRC) and had to revert it eventuality [see http://gerrit.ovirt.org/#/c/30530/]. we can always re-attempt to fix this problem in another way, I assume.
|Patch Set 4:

Thanks, Alon. 

@Vojtech - &quot;+2&quot;?
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2
|Patch Set 3: Patch Set 2 was rebased
|Change has been successfully rebased as 40496334327528999b93a1a632f09ac4c4f77eea
|Patch Set 1:

@Derez - any chance that you can review this? we would like to have another opinion on this patch. thanks.
|Patch Set 1: Code-Review+2
|Patch Set 3:

Sahina/Anmol: Is this patch still relevant? if not - please abandon. If you need help from my team with reviewing this patch - please let me know. thanks.
|Patch Set 3:

pending Vojtech's review, which is OOO and will be back in ~1.5 weeks. 

@Alex: please make sure that this patch is ready for review (i.e. rebase and re-verify this patch) in ~1.5 weeks from now. 

thanks.
|Patch Set 5:

@Vojtech: review?
|Patch Set 1:

&gt; fixed: http://i.imgur.com/0zp6EKV.png (arrows now line up)

Greg, this looks good, just verifying: In the BZ, there are 9 VLANs displayed [http://i.imgur.com/jfxEKvb.png] - have you tested to see that for that number of VLANs it looks good as well? at your screen-shot it displays only 5, not sure if critical or not. 

thanks.
|Patch Set 1:

&gt; Yes, looks good with any number. Here it is with 9 http://i.imgur.com/8eIi4Wt.png

yep, definitely looks good. thanks for verifying.
|Patch Set 1:

@Alexander: In the coverity scan issues e-mail that I forwarded you there were issues about both SideTabExtendedResourceView and PolicyUnitPanel.java.

is this patch fixing the coverity scan issue found in SideTabExtendedResourceView, PolicyUnitPanel or both?
|Patch Set 1:

excellent, thank you. 

@Gilad - can you please review?
|Patch Set 1:

@Gilad - waiting for your response?
|Patch Set 2:

@Vojtech/Alexander: Can you please review this patch?
|Patch Set 1:

@Alex, can you please specify the changes between this patch and http://gerrit.ovirt.org/#/c/30122/ (that was already reviewed, but reverted)? just want to figure out which parts actually need to be reviewed here. thanks.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

this is a backport of http://gerrit.ovirt.org/#/c/31851/ that is not merged yet (hence the &quot;-1&quot; on the &quot;Verified&quot; field). 
once http://gerrit.ovirt.org/#/c/31851/ is merged, this patch can be merged as well.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 12:

&gt; OK, created a screenshot with some autgenerated data: http://i57.tinypic.com/ohju4y.jpg

looks amazing! :) good job, Tomas!

a couple of small questions: 

- what is the default width of the MEM/CPU/NET columns in the grid, and what is being displayed in that width (maybe another screen-shot to visualize that)?

- the same widget can be utilized for the MEM/CPU/NET in the Hosts main tab, assuming that the Host business entity will have the same short term history data of cpu/memory/network usage (like the one added for the VM business entity in http://gerrit.ovirt.org/#/c/29710/), correct?

thanks.
|Patch Set 1:

@Vojtech: this is a backport of http://gerrit.ovirt.org/#/c/29142/ that you have already reivewed - can you please review this patch as well? thanks.
|Patch Set 2: Code-Review+2
|Patch Set 4:

Rerun-Hooks: all
|Patch Set 4:

@Vojtech - review?
|Patch Set 1:

@Alexander - quick review?
|Patch Set 5:

@Alexander - quick review?
|Patch Set 1:

@Vojtech: this is a backport of http://gerrit.ovirt.org/#/c/29709/ that you have already reivewed - can you please review this as well? thanks.
|Patch Set 2:

@Vojtech: Alexander has addressed your comments. Can you please re-review?
|Patch Set 2:

@Vojtech - re-review?
|Patch Set 2:

@Frank - any progress on this one?
|Patch Set 1:

@Alona/Lior/Greg: Any chance that you can test this patch and check whether it indeed improves GWT debug performance in your environment? many thanks in advance.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 6:

Alexander, reminding to backport this patch to 'ovirt-engine-3.5'. thanks.
|Patch Set 6:

&gt; The backport of the patch that caused the unit test breakage contains this patch as well
&gt; http://gerrit.ovirt.org/#/c/29904/

thanks (no backport is needed)
|Patch Set 2:

&gt; http://jenkins.ovirt.org/job/ovirt-engine_3.5_unit_tests_gerrit/193/ : FAILURE

NOTE (after discussing with Alex): the failure above doesn't seem to be related to the patch.
|Patch Set 1:

@Alex: can you please make sure that the Change ID of this patch is identical to the one of the parallel patch in 'master'? thanks.

[not sure why gerrit hasn't alerted on this itself]
|Uploaded patch set 2.
|Patch Set 3:

Alex, was this patch tested to confirm that it fixes the engine 3.5 rpm build jenkins job?
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

@Frank - any progress on this one?
|Patch Set 5:

(4 comments)

patch looks ok, please see several inline comments.
|Patch Set 5:

(1 comment)
|Patch Set 2: Code-Review+2

&gt; Since I am the one that pushed it, I can't give +2. or at least +1

well, you are the Owner, but Greg is the Author, so it *may* be OK, but to be on the safe side - granting &quot;+2&quot;.
|Patch Set 12:

@Tomas/Gilad - can you please take a look? seems to be in the os-info/ballooning area?
|Patch Set 4:

includes the gray version?
|Patch Set 5: Code-Review+2
|Patch Set 8: Code-Review+2
|Patch Set 8:

Greg, it needs &quot;+1&quot; on &quot;Verified&quot;
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

thanks, Derez :)
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

&gt; imo we need this fix because we cannot use browser's cookie to save user+domain anymore, means you'll need to select the domain as well -&gt; imo really annoying (especially if you're used to it in previous versions).

Gilad, assuming that the user is typically logging in with the same user/password/domain, he only needs to select the Domain once (in his first login) - in the login actions afterwards, the same Domain will be pre-selected for him, since it is saved (and retrieved) in (from) a cookie. 

please see my comment #32 in BZ#1112252. we need to:

- have the Domain drop-down *always* enabled.

- send user, password, domain values to the engine as-is.

If this patch does not do the above, please re-write it or abandon it. thanks.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)

see inline comment. 

in addition:

- this patch currently depends on an outdated version of http://gerrit.ovirt.org/#/c/28872. A simple rebase ('git fetch origin; git rebase origin/master') and pushing again should solve this problem. 

- please make sure to add the relevant maintainers to this patch (maybe same ones from http://gerrit.ovirt.org/#/c/25593/)

thanks
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 1:

AFAIK, Alexander has already spend a significant amount of time researching the issue, however it is still unclear what the exact issue is. 

my question is: we are moving to PatternFly tool-tips anyway; does it matter if this revert gets merged or not? i.e. are you basing your PatternFly tool-tips patch on the http://gerrit.ovirt.org/#/c/27325/ patch somehow?
|Patch Set 1: Code-Review-1

please remove the changes from the non-English .properties files (these will be modified separately in Zanata by the ovirt translators once they see that the English string was changed). thanks.
|Patch Set 1: Code-Review-1

I assume that this patch is for the old login page design. 
Please note that the login page design has recently adopted PatternFly [1], and was dramatically changed as a result. 

therefore, I assume that this patch is irrelevant, hence needs to be abandoned. thanks. 

[1] http://gerrit.ovirt.org/#/c/24594/
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 1:

Vojtech, I suggest to consider abandoning this patch (which we will need to do anyway if this patch will keep on being stale). 
thanks.
|Patch Set 3:

Hi Anmol, I noticed this patch and I have a couple of questions:

- I see that this is sort-of an infrastructure to export data from the GUI to a PDF file or something similar - is this correct?

- If so: is this something that you intend to use in order to export data from the GUI grids to a PDF? if so: I think that it can be a very useful functionality for *all* grids in oVirt; I also know that some users would love to see support in exporting the grids data to CSV - do you think that we can maybe prepare the grounds for supporting data-export to additional formats other than PDF (e.g. CSV)?

Thanks!
|Patch Set 3:

Tal/Federico: still relevant? if not - please abandon. thanks.
|Patch Set 1: Code-Review-2

Hi lei tian, translations should not be changed directly in the code repo - they need to be updated in the oVirt project in Zanata: https://translate.zanata.org/zanata/project/view/ovirt

In order to update translations within the oVirt project in Zanata, you need to become an oVirt Zanata project maintainer. more info in https://translate.zanata.org/zanata/ , &quot;Translators&quot; section. 

If you don't intend to change the translation in Zanata, please open a BZ with your translation update suggestion [1], and we will take care of updating the translation in Zanata for you. 

Thanks. 

[1] https://bugzilla.redhat.com/enter_bug.cgi?product=oVirt
|Patch Set 4:

&gt; ping - still relevant?

@Kanagaraj - is this patch still relevant? if not - please abandon. thanks.
|Patch Set 1:

(1 comment)
|Patch Set 3:

&gt; ping?

@Lee - any plans on improving the patch based on comments given on September 2013? if not - please abandon. thanks.
|Patch Set 2: Code-Review+1

looks good to me, need an engine-core maintainer to grant &quot;+2&quot;.
|Patch Set 1: Code-Review+1

thanks, Greg - based on the screen-shots it looks good. 
let's wait for Alona/Lior to confirm that the patch is OK.
|Patch Set 1: Code-Review+1

giving &quot;+1&quot; based on the screen-shots.
@Alexander/Tomas - can you please review and give &quot;+2&quot; if patch is OK?
|Patch Set 1:

gerrit doesn't like the fact that this patch is in 'ovirt-engine-3.4' only... let's abandon, push the revert-patch to 'master', backport to 'ovirt-engine-3.4' and then work on fixing things on 'master'.
|Patch Set 26:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2:

@Vojtech - are you waiting for changes to be made in this patch? or can this patch basically get a &quot;+2&quot;?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

&gt; These are just brazilian and japanese updates?

I did a full pull from the translation management system; it seems that only pt-BR and ja-JP translations were updated since my last pull (http://gerrit.ovirt.org/#/c/26277/)
|Patch Set 1:

and one German (de-DE) document as well, it seems.
|Patch Set 1: Verified+1 Code-Review+1

looks good to me. screen-shots of before and after:
http://i.imgur.com/22PdSow.png

before this patch: if the first line runs out of room, it cuts the word at the character at the end of that line, no matter what that character is. 

with this patch: if the first line runs out of room, it will cut the word only at &quot;allowed&quot; characters, e.g. zero-width space. this allows to better control where words will be cut in case their container is too narrow to contain them in a single line.
|Patch Set 1:

@Alex/Greg - can you please review as well?

[I verified on Firefox, in Chrome it doesn't work and it seems indeed that it is not supported ATM: https://code.google.com/p/chromium/issues/detail?id=141792]
|Patch Set 1:

&gt; Are there any other places this happens besides the dialog tabs?

probably. if indeed there are - they can be taken care of in separate patches, I assume.
|Patch Set 1:

&gt; Maybe we should add someone that knows about storage pools

adding Derez/Allon/Eli, that reviewed http://gerrit.ovirt.org/#/c/14878/ [adding comment field to the DataCenter business entity]
|Patch Set 2:

@Eli - I think that Alex has addressed your comment - any chance for a review?

thanks.
|Patch Set 2:

@Alexander - can you please change the commit comment subject (first line) to better reflect the change introduced in this patch (&quot;core: StoragePool [short description of 'comment' change]&quot;)? you can keep the explanation on the GUI problem (of the wrongfully displayed loading indicator) in the commit comment description. 

thanks.
|Patch Set 3:

@Juan - can you take a look as well (to verify that there are no rest-api-related issues with this patch)?
|Patch Set 3: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Abandoned

need to change the ChangeID to match the parallel 'master' patch (even though this is not exactly a backport - translation is pulled from different places in Zanata for each ovirt-engine branch)
|Patch Set 11:

Gilad, I tend to agree with you, the only problem is that the 'Comment' field is already there and may already be used by users, and not necessarily for filling a shutdown reason. 

What if we are shutting down the VM, and the 'Comment' field is already filled with a value? 

- Override? probably not a good idea - the user will lose data. 
- Append to existing comment with a &quot;~;~&quot; separator (or similar)? we can, but what if the user will edit that comment? we won't necessarily be able to remove the shutdown reason once the VM is started (since the &quot;~;~&quot; separator is not there anymore since the user removed it, for example). We can parse the value to the 'Comment' part and the 'Reason' part (and display the 'Reason' as a read-only label, for example), but instead of parsing and concatenating, etc., it actually seems simpler to me to add a new field. 

Therefore, I think that we should proceed with the way that Ravi implemented it. 

Let me know what you think. thanks.
|Patch Set 11:

Gilad, I like the idea, bug again - my only concern is that, unlike the other 'notes', the shutdown reason 'note' needs to be non-editable and needs to be removed automatically once the VM was started; so we need to mark that particular 'note' in a special manner, and I am not sure how exactly to do that. We can probably format the string (that contains the overall 'notes' data) in a special pattern to support that or something similar - so need to think about that a bit.
|Patch Set 11:

I suggest to send the current implementation vs. the improvement suggestion (i.e. use already-existing 'comment' field, within the comment - support multiple 'notes' with different types, etc.) to engine-devel and users for feedback.
|Patch Set 1:

Eli, is your solution in line with the comments within https://bugzilla.redhat.com/show_bug.cgi?id=1059646 and https://bugzilla.redhat.com/show_bug.cgi?id=1057141 (both &quot;duplicates&quot; of https://bugzilla.redhat.com/show_bug.cgi?id=1052151)? what is the GUI behavior once your patch is applied?
|Patch Set 2: Code-Review+2
|Change has been successfully merged into the git repository.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

&gt; Patch Set 1: Code-Review+1

Alex, any reason for not giving +2?
[this is just a pull from the translation management system, completely automated]
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1:

&gt; As far as I know, there's no need to fix translated files, please remove.

correct, please remove from this patch the changes in the non-English .properties files.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

backporting to 3.4.0, so 3.4.0 will have updated translations in it.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Rerun-Hooks: all
|Abandoned

Change-ID is different than the 'master' one. 
This was done on purpose, as the 3.4 patch is not a backport of the 'master' patch (translations for 'master' and '3.4' are managed separately). 
However, since I don't know how to push a ovirt-engine-3.4-only patch without failing this hook, I will abandon this patch and push a new patch with the same Change-ID as the 'master' patch, even though it is not a backport, just to workaround the hook.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

Hi Anmol, can you please elaborate on this patch a little? is that a new feature? do you have a feature-page / mock-ups to share?

Thanks.
|Patch Set 1:

@Lior - since Vojtech may not be able to verify/ack this on time for the ovirt-3.4 build planned for Monday morning UTC - any chance that you can assist us with an extra verification and review of this patch? this patch is a revert of [1]. [1] is a backport of [2]. [2] is the problematic patch that caused all of the recent issues, and apparently it should have never been backported to ovirt-3.4 in the first place, hence this revert. 

many thanks in advance. 

[1] http://gerrit.ovirt.org/24213/ 
[2] http://gerrit.ovirt.org/23605
|Patch Set 2: Verified+1 Code-Review+2
|Patch Set 1:

@Daniel/Oved - any chance that you can review this so we will be able to add the space-shooter plugin to the samples-uiplugins repo?

thanks.
|Patch Set 3:

&gt; I believe that [1] will also solve this issue presented here.
&gt; [1] http://gerrit.ovirt.org/#/c/23951/

@Gilad - per the above by Alexander - you probably need to abandon this patch?
|Patch Set 1:

@Alexander - this is a backport of http://gerrit.ovirt.org/#/c/23367/ that you have already reviewed - can you please review this one as well?

thanks.
|Patch Set 1: Code-Review+1

@Tomas - can you review please?
|Patch Set 1:

Alexander, this is a generic fix, correct? I noticed that the problem exists in the Hosts main tab (but not in the VMs sub-tab, for example) - will the patch potentially fix this problem that may occur in other locations as well?
|Patch Set 3:

the helpTag is to understand the context of a dialog. A dialog won't necessarily have a main-tab/sub-tab location (e.g. 'Configure' dialog), dialog might have several possible locations from which it would be available (e.g. almost every dialog that is available from the 'Guide Me' dialog, 'VM Migrate' that is available from the VMs main tab as well as the Hosts main tab -&gt; VMs sub-tab, &quot;tomorrow&quot; will will make actions available also from the left-pane tree, etc.) - therefore I prefer to not force any pattern. 

A free-text comment allows the developer to describe the dialog context as he sees fit, without limiting him in any way.

If it was a simple change and/or it had real value for now, I would insist that a structured tag would be used here, but it is neither. 

Let's keep it simple, and continue with the free-text comment, please.

Thanks.
|Patch Set 3:

I apologize - I lost you in the last comment.

We can have a structured helpTag in the form of &quot;dialogID=xxx;description=yyy&quot; (and nothing else at the moment, due to the reasons that I explained in the previous comment) so we can &quot;prepare the grounds&quot; for additional meta-data if such will ever be needed, for some reason, in the future.

[I am not sure if we have any string-limitations on the keys within a .properties file - I assume that it cannot contain '=', for example, so that would be one limitation for the description; also not sure how it handles white-spaces within the key]

BTW - just realized that we can have in the code multiple instances for the same 'dialog', but we wouldn't want to set the full dialog's help-meta-data for each instance. I think that we need a way that will allow us to define the full meta-data per dialog (not per instance), and define a dialog-identifier (associated with the full meta-data) per dialog instance.

So if we have in the code instance1, instance2, instance3 of a specific dialog, we should be able to do:

instance1.setHelpTag(&quot;dialogID=xxx;description=yyy&quot;);
instance2.setHelpTag(&quot;dialogID=xxx&quot;);
instance3.setHelpTag(&quot;dialogID=xxx&quot;);
[or the equivalent of &quot;playing&quot; with the setHelpTag() method parameters as they are implemented now]

one way of ensuring that we won't have multiple descriptions for one 'dialog' is to keep a .properties file (unrelated (?) to the .properties files that we have discussed so far) with a dialogID/description mapping, but then I don't like the idea that the developer would need to maintain another file when adding a new dialog to the system. 

the tool that auto-generates the mapping based on the code should be aware of situations like that and generate a warning when two or more instances with the same 'dialogID' contain a description/full-meta-data. also, it shouldn't override an existing description with an 'empty' description that has been discovered for an instance with the same ID later in the process.
|Patch Set 6:

&gt; &gt; No, this is bad Java. We shouldn't do bad Java for ease of grep purposes.

&gt; This exactly what we need to do, as these tags are MEANT to be scanned by external tool to produce the index.

I agree; once we decided to treat these files as text files (as far as the parser is concerned), the Java rules aren't really relevant/applicable here - we should make that as easy to consume by the tool as possible.

let's go back to the way that it was in here, for example: 
http://gerrit.ovirt.org/#/c/21052/3/frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/clusters/ClusterGlusterHookListModel.java

thanks.
|Patch Set 6:

forgot to mention - I think it is important to not involve the HashName in this at all, as it is used for other purposes in the application (i.e. GWTP/GIN Location stuff) and I don't want that requirements/assumptions for it will collide with requirements/assumptions that we will impose on the helpTag feature.
|Patch Set 7:

&gt; if we replace the tag with some structured format we can drop the description.

Alon: This is problematic for several reasons that I detailed before and that we have discussed. one more reason that I mentioned recently (but you haven't replied on AFAIK) is the fact that there can be several instances of the same dialog in the application (e.g. 'Migrate VM' - available from the VMs main tab and also from the Hosts main tab -&gt; VMs sub tab). 

I would like both of these instances to have the same &quot;entry&quot; in the dialog-to-docs mapping, since it is literally the same dialog. 

This means that in the code, I will have to give both of these instances the exact same &quot;structured format string&quot;, which I don't want to do (and I am not even sure if possible / what exactly it will contain - the main tab is not the same, the sub-tab is not the same, etc.). 
I also don't want to give them different &quot;structured format strings&quot;, since this will result in multiple &quot;entries&quot; on the in the dialog-to-docs mapping for literally the same dialog, which is wrong.

What I would like to do is to have a (short, simple) identifier associated with each dialog, and assign each instance in the application with its relevant dialog-identifier (so in the Migrate VM case, both instances that appear in the application will be assigned with the same identifier). 

The other meta-data (whether it is a &quot;structured format string&quot;, description, whatever) can then be defined only once *per dialog* (and not *per instance*). 

So in any case - I would like to have two &quot;things&quot; associated with each instance: a dialog identifier, and a dialog meta-data. the dialog identifier (unique *per dialog*, not *per instance*) would need to be associated with *all* dialog-instances. the dialog meta-data would need to be associated *only with one instance per dialog*. That's why the &quot;structured format string&quot; that you suggested (which is only one &quot;thing&quot; which, of course, would need to be associated with all instances) is problematic in my view.
|Patch Set 7:

we need to keep in mind that the helpTag serves two purposes: 

(1) a dialog-identifier for the documentation team to associate with the relevant docs URL. This should be defined once per dialog (e.g. for the 'Migrate VM' dialog - it should be defined once, even if this dialog have multiple instances in the application - one in the VMs main tab, one in the Hosts main-tab -&gt; VMs sub-tab, etc.). 

(2) a dialog-identifier for the code to know at run-time which docs URL to associate with the dialog. This should be defined per dialog *instance* (e.g. for the 'Migrate VM' dialog - *all* instances within the code should contain this identifier, otherwise - the code wouldn't know what is the docs URL that should be set for the help ('?') icon within the dialog instances that are not associated with this identifier)

a *single* structured format string as you suggested is something that is supposed to contain all the information about the dialog (i.e. one that will identify the dialog and will allow the documentation team to understand what this dialog is about); tomorrow this string can grow to contain 100 attributes - I don't want to have to set that per dialog *instance* - only once per dialog. Bug again - we have (2), so we have to set something for each dialog-instance, and I don't want it to be the 100-attribute-structured-string - I would like that to be a short, minimalistic, simple dialog-identifier. All of the other information (whether it is free-text description, 100-attribute-structured-string, etc.) should be defined only once per dialog (and not per dialog instance) - so I need to put in another string, separate from the (short, minimalistic, simple) dialog-identifier. 

[not sure that I understood your last response - maybe we are saying the same thing]
|Patch Set 7:

I now understood what is Alon's concern:

From one of my previous comments:

&quot;&quot;&quot;
...
I also don't want to give them different &quot;structured format strings&quot;, since this will result in multiple &quot;entries&quot; on the in the dialog-to-docs mapping for literally the same dialog, which is wrong.
...
&quot;&quot;&quot;

From the developer's perspective, there shouldn't be &quot;two instances of the same dialog&quot; - the decision whether two instances are of the same dialog or not should be the documentation guy decision. Therefore, each dialog instance should have a unique identifier, and it might as well be descriptive, assuming we want to maintain only one property per dialog instance, and not multiple.
|Patch Set 7:

The problem is that the dialog-identifying-method we are using should be used for two purposes:

1. generate the template mapping file (by treating the code like a text-file and parsing the identifiers in it)

2. during run-time: tell each dialog which docs URL to open when its &quot;?&quot; icon is clicked. 

2 requires that the dialog-identifying-method will be consumable by the GUI code itself; therefore, we cannot use annotations which are supported only in Java 8. 

Therefore, we must fallback to the way that things are currently implemented, rather than use annotations.
|Patch Set 9:

&gt; please use plain data, so we can load it into application at runtime

not sure what you mean by &quot;load it into application at runtime&quot; - into which application? the GUI? the GUI doesn't need this data - this data is merely input for doctag.py to create a dialog-id-to-docs-URL-mapping *template* to be filled by the documentation team; once ready - the filled dialog-id-to-docs-URL-mapping is the one that will be loaded/used by the GUI. Moreover, this data is likely to change along with other GUI code-changes anyway (e.g. dialog added/removed/edited), so no &quot;harm&quot; in having this data &quot;coded&quot; (within CommonHelpTags) as well. 

&gt; and into the doctag.py easily

We can auto-generate a .properties file from CommonHelpTags (I am generating .properties files from GWT .java files all the time for localization purposes) to be used as input for doctag.py. One advantage in Greg's currently-implemented-method is zero chance of typos in the dialog ids, for example - with Greg's method, such mistakes will be caught in compilation time.
|Patch Set 9:

&gt; Just have setHelpTag(&quot;0a72022e-ca4e-4751-8097-fd162078454c&quot;) at every location, having some file to map this uuid to whatever metadata we need, and produce from this whatever we need for docteam.

we are doing just that, only our UUID is not in UUID format but a more &quot;readable&quot; identifier, and instead of a .properties file mapping, we are using a coded-mapping (from which a .properties file can be easily auto-generated, if needed) which has the advantage of zero chance of typos.
|Patch Set 10:

&gt; Why do we need this complexity? What is more safe?

as I mentioned before: one advantage is that CommonHelpTags can help avoid typos that can happen if using a .properties file; e.g. things like the following: 

// code:

 setHelpTag(&quot;0a72022e-ca4e-4751-8097-fd162078454c&quot;)

// .properties file:

 12bf5f1b-5459-4c1f-a388-a9bfda5aefe1.id = short-desc
 12bf5f1b-5459-4c1f-a380-a9bfda5aefe1.description = bla bla bla /* typo in the dialog uuid here */

cannot happen if we are using CommonHelpTags. 

using CommonHelpTags is not really a complexity - the data is just kept in a .java format instead of a .properties format. 
A .properties format can be auto-generated from the .java format with 0 effort, if necessary (so let's call it a minor &quot;complexity&quot; but with a minor advantage as well).
|Patch Set 10:

&gt; as each constant is used one time only.

define &quot;used&quot;; in your (original) method, the constant is *written* at least two times: in the code, and in the properties file. see the example in my previous comment. 

&gt; introducing it, forces people to touch two files each modification

in your (original) method as well: the code, and the .properties file. 

&gt; I still suggest to use plain setHelpTag(&quot;id&quot;[, &quot;description&quot;]) at actual code, dropping this common file entirely.

if you are referring to going back to code-scanning (i.e. treating the .java files as text files and scan for the entire information there) - we prefer to avoid that, since it requires people to write this particular piece of code in a very specific way (e.g. no variables, etc.), sometimes a way that is even considered &quot;bad java&quot;, tomorrow it might contradict check-style/find-bugs/whatever issues - so this may be hard to track/enforce. 

The method introduced in this patch is simple, clean, and the least error-prone that I can think of. People are already used to updating such Constants .java files in the GUI code anyway due to our localization support, for example - so I don't think that with the currently-implemented approach there is a major over-&quot;load&quot;/complexity on the patch author here.
|Patch Set 10:

&gt; I fail to understand how we can avoid it... we need to scan this common file anyway, no?

yes, but *only* this file. so if, for example, check-style or find-bugs will decide to shout at us for whatever reason, we can make the necessary adjustments only in this single file, or even tell check-style/find-bugs to ignore this file entirely (I assume that we don't want to tell check-style/find-bugs to ignore all of the GUI code files that contain a dialog instance creation...).

&gt; I just think that there should be no dependency between sources and this file is not adding any benefit.

valid point. but, as I mentioned before, I expect changes in the code and changes in the dialog-details-data (whatever file format it is in) to happen together anyway (i.e. upon adding/updating/removing dialogs to/from the code), so there isn't much &quot;harm&quot; in creating that dependency IMO (I agree it is not ideal). 

&gt; I won't create any more noise... Just wanted to make sure you know the alternative.

your input is always appreciated - thank you.
|Patch Set 17:

&gt; Possible follow-up could be to auto-generate HelpTag enum from properties file (with well-known format) provided by documentation writers.

Vojtech, the HelpTag meta-data is, by definition, information that engineering provide to the documentation team so that the documentation team will be able to make an educated decision about which documentation-URL to associate with each dialog. 

therefore, I don't think that there is much value in your suggested follow up.
|Patch Set 1:

&gt; what is this needed for in stable?

this is a complementing patch for the Frontend Refactoring patch [http://gerrit.ovirt.org/#/c/17356/]
|Patch Set 1:

@Lior - this is a ovirt-engine-3.4 backport of http://gerrit.ovirt.org/#/c/23920/ that you have already reviewed - any chance that you can review it?

many thanks in advance.
|Patch Set 1:

@Tomas/Roy/Omer - any chance that you can review this patch? this patch will optimize the multiple calls to SetVmTicket() invoked when attempting to connect to multiple VM-consoles at once. 

The solution in this patch was brought up in this thread: http://lists.ovirt.org/pipermail/engine-devel/2013-November/005951.html. 

Many thanks in advance.
|Patch Set 1:

@Roy/Omer - any chance that you can review the backend portion of this patch?

many thanks in advance.
|Patch Set 1:

&gt; @Einav, I see that the translation is wrong as well.

translations will be OK - once I will push the fixed English strings to the translation management system, the translators will fix the translations accordingly.
|Patch Set 1:

@Gilad - I am not sure, but I think that you mentioned to me something about this a while ago - any chance for a review?
|Patch Set 1:

&gt; Which is not the same, that one is related to sub tabs, I am talking about the main tab.

well, Gilad talked to me specifically about what happens immediately after logging into the webadmin... I think he referred to the VMs *main* tab: it seems to take too much time for the loading animation within the VMs main tab to disappear and for the VMs grid contents to appear instead.
|Patch Set 1:

&gt; tested it and it still happens for subtabs.

well, this patch is changing the *MainTab*Presenter, so I'm not surprised.

@Gilad: 

- is there an improvement on the main tab loading time (since this is what we were aiming for in this patch IIUC)?

- isn't your patch [http://gerrit.ovirt.org/20595] supposed to handle sub-tabs?
|Patch Set 1:

Alexander - can you please grant &quot;+2&quot;?
|Patch Set 1:

@Eli(/Liran) - this is a backport of http://gerrit.ovirt.org/#/c/23241/ that you have already reviewed - any chance for a quick review here?

many thanks in advance.
|Patch Set 1:

@Yair - what is the expected source of the URL? is that something that will arrive from the engine's configuration (configurable by the user)? is that something that may start with &quot;https://&quot; rather than &quot;http://&quot; for example, or &quot;HTTP://&quot; (or &quot;HTTPS://&quot;)? if so - we should probably cover more use cases (at least the ones that I listed above). thanks.
|Patch Set 1:

(1 comment)
|Patch Set 1:

@Eli/Liran - can you please review this patch? it is fixing a problem introduced by http://gerrit.ovirt.org/#/c/21714/. thanks.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

Verified, Reviewed (based on previous comments). 

Merging.
|Change has been successfully merged into the git repository.
|Patch Set 3:

@Alon/Vojtech - your urgent review is needed for this patch; it is a backport of http://gerrit.ovirt.org/#/c/21195/ which you have already reviewed.

many thanks in advance
|Patch Set 3:

&gt; not sure we need multiple reviewers for changes like these...

just want to make sure that we are not missing anything with regards to this backport (i.e. is there something that exists only in 'master'/'ovirt-engine-3.4' and not in 'ovirt-engine-3.3' which prevents this patch from being merged, or prevents this patch from being merged without backporting something else first?) and different people are familiar with different relevant parts of the code. 

thanks, Alon, for your input. Is that &quot;+1&quot;, from your perspective?
|Patch Set 1:

&gt; I would suggest adding vojtech or someone from ux team as reviewer as well.

@Alexander - can you please take a look?
|Patch Set 2:

&gt; this patch resolves the issue.

Gilad/Alex - just so I will be clear on what the 'issue' is - this is the session time-out issue? i.e. after this patch, we will have a proper session time-out in the GUI?
|Patch Set 2:

&gt; 2. Every event refresh (5 sec) caused a model refresh.

thanks. another question (I apologize...) - so now, a model refresh will occur only upon an event refresh *that contains new event(s)*?
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2

many thanks, Gilad, for the patch. 
merging.
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Patch Set 1:

@Vojtech - is this patch still needed or is it obsolete? if still needed - please rebase and request a re-review. if obsolete - please abandon.

Thanks.
|Patch Set 2:

Gilad - any chance that you can re-review this patch? thanks.
|Patch Set 7:

&gt; Einav, what do you think?

we should make sure that text inside the 'General' sub-tab is copy-paste-able, therefore, I believe that we should replace everything to use TextBoxLabel, rather than ValueLabel.

Thanks.
|Patch Set 7: Code-Review+1
|Patch Set 1:

&gt; ping - what is this waiting on?

rebase and review. it is on the patch-owner's todo list (patch owner is a tad overloaded atm...)
|Patch Set 1:

@Alex/Greg - any chance that you can take a look?
|Patch Set 1:

&gt; Is there any reason why we selects the DC version instead of highest version?

I don't think so; AFAIR, this was an arbitrary decision. 

Question is if we create a DC in version x, what is the most appropriate/expected default version for a newly-created cluster within this DC: x, or the highest version possible; not sure what the answer is and/or if there is one correct answer; I don't mind changing it to the highest version available.
|Patch Set 1: Code-Review+1
|Patch Set 1:

(2 comments)

&gt; @Einav can you answer the question about if we should add the version option to the feedback label as well?

done (replied also on the second comment). thanks.
|Patch Set 2:

@Gilad - many thanks for the review and for the comments. Any reason for the &quot;+1&quot; rather than &quot;+2&quot;? if there are any additional comments, we will by happy to hear/address. thanks.
|Patch Set 2:

thanks, Gilad - I appreciate it. 
will rebase and merge.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2

based on previous comments. 
merging.
|Change has been successfully merged into the git repository.
|Patch Set 1:

@Vojtech, can you please take a look?
|Patch Set 1:

&gt; vojtech - if bug is verified, and you +2'd it - why not merge it while at it?

typically, AFAIK, the patch author takes care of rebasing/merging once patch has been verified/acked. 
not sure if Alissa has merging privileges; if not - Vojtech will take care of that for her.
|Patch Set 1:

@Allon - any chance for a re-review (see Vojtech's inline answers to your inline comments)? Many thanks.
|Patch Set 1:

please supply a screen-shot and mark &quot;+1&quot; on the &quot;Verified&quot; section (after verifying, of course).
thanks.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

Hi Oved, IIUC, in CommonModel, you are setting the 'model' search to be case-insensitive, but in the SearchableListModel, the default is for the search to be case-sensitive. So what is actually happening? What is the exact flow and the logic behind this patch?

Thanks.
|Patch Set 1: Code-Review+1

I don't mind the 'true' default value within SearchableListModel - just wanted to verify that indeed the 'false' value set by the common model is the one that eventually being applied - thanks for the explanation. 

The patch looks OK to me, but I'd rather that people that are more familiar with uicommon will review it as well - adding Derez/Gilad, in a hope that they will be able to assist here.

Thanks.
|Patch Set 1: Code-Review+2
|Patch Set 3: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

@Alon/Greg - what is the status of this patch? based on Alex's last comments: should we change it or can we ack/merge it?
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1:

maybe prefix commit-comment subject with &quot;engine&quot;/&quot;packaging&quot;?
|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1:

&gt; Strange question, wouldn't it be less error prone during parsing to instead of a java property file, return a json file with key/value pairs, and just map it with a dictionary?

need to keep in mind that the people that will update/maintain the contents of this mapping file wouldn't necessarily be developers (but documentation maintainers or similar) - I think that the .properties file format is a little bit more friendly for them in that sense, but I could be wrong.
|Patch Set 1:

(1 comment)
|Patch Set 1:

&gt; I understand that, but it should be pretty trivial to have a servlet read the property file (Just a resource bundle), and generate the appropriate JSON from that. That way the maintainers get the property file, while the application gets a dictionary.

thanks for clarifying - I was wrongfully under the impression that you were suggesting to maintain a JSON file.

@Greg - thoughts?
|Patch Set 3:

1. I agree that less conversions are better in general for the application, but in this particular case I would rather be more user-friendly for the people maintaining this file, which again may be non-developers. Let's keep the .properties file.

2. I was actually thinking that we wouldn't persist the .properties files in the code-repo at all - just auto-generate them (maybe we can do it in a pre-compilation phase or similar). But in general - I am with Alon on this one - we should not maintain the .properties files (I am generally not in favor of persisting content that you can auto-generate). So we should either go with empty .properties files or with no .properties files at all in the code-repo.

4. I am not sure how this is / should be related to the branding mechanism...
|Patch Set 2:

Hi Ramesh,

- what do you mean by &quot;for consistency purpose&quot;? are there confirmation dialogs today that contain the dash 'prefix' before each item, and some dialogs that don't?

- would you mind posting a before-and-after screen-shots, just so we will be able to see if that is indeed an improvement?

Many thanks in advance.
|Patch Set 3:

Hi Shahar, please remove from this patch the changes to the non-English .properties files (the non-English .properties files are completely auto-generated and should not be manipulated).

Other than that - changes looks good. Thanks.
|Patch Set 1:

&gt; It's half of what was requested by Itamar and Einav on that engine-devel mailing list.

thanks for the patch, Lior; according to the subject, I understand that the VnicProfilesEditor is now utilizing AddRemoveRowWidget - would you mind elaborating in a little more detail which &quot;half&quot; of what was requested by Itamar/me has been addressed here (and which half hasn't)?
|Patch Set 1:

&gt; Sure, &quot;half&quot; refers to this being only one of the two widgets that should be refactored to inherit from AddRemoveRowWidget. This only affects the vNIC section of the add/edit network dialog, so a succeeding patch would have to take care of the custom properties widget (which resides in the add/edit vNIC profile dialog if I'm not mistaken).

you probably refer to the 'add/edit VM dialog' (that contains the 'custom properties' widget). many thanks for the details!
|Patch Set 1: Code-Review+1

Many Thanks, Derez - looks better indeed.

@Vojtech/Tomas - any chance for a quick review here?
|Patch Set 1:

@Oved/Derez - any chance that you can take a look?

many thanks in advance.
|Patch Set 2:

Hi Sahina, I apologize for the extremely late response.

I am not a big expert on gluster and/or ovirt upgrade paths, however, this is my opinion:

IIUC, gluster-only clusters do not really need Data-Centers, and the fact that they are added behind the scenes to the Default DC is somewhat a 'hack'.

Ideally, I would want to see proper ovirt support in &quot;orphan&quot; Clusters (i.e. clusters that don't belong to any data-center) for gluster-only clusters. If this will be implemented, one of the things that would need to be done is to ignore any DC-related validation conditions when adding a new &quot;orphan&quot; (gluster-only) Cluster to the system. Therefore, the solution of adjusting the code to ignore DC-related validation conditions when adding a gluster-only Cluster seems more correct to me (I realize that the code change would need to be significantly larger, however if it is taking a step in the right direction - it is worth it in my view).

In addition, for gluster-only application-mode, I would want that in the initial DB setup stage, no Default DC will be added at all (again - assuming we have proper &quot;orphan&quot; Clusters support). Therefore, any manipulation to the currently-somewhat-&quot;abused&quot; Default DC indeed seems a bit hacky and incorrect, as Alon and Yair mentioned before.

If I was incorrect in any of my assumptions, and / or if you have any further questions or comments - please let me know. Thanks.
|Patch Set 2:

Hi Sahina, thank you for acknowledging my comment.

&gt; Without this, even disabling validation for DC on create cluster is a hack, IMO.

although only disabling validation for DC is not a full solution (therefore, may seem as &quot;hacky&quot;), it is still a step in the right direction to my understanding. Assuming the New Cluster dialog is going to remain pretty much the same, with the same DC-related-validations (for virt purposes), you will still need at some point to ignore anything DC-related in that dialog (depending on the cluster-type/application-mode). 

I think that for the purpose of solving the bug you can start with that. My hunch is that supporting &quot;orphan&quot; clusters is a big task, and there is no reason to not do it in several phases. However, I am not a packaging/engine-core maintainer, so better make sure with the other reviewers of this patch that they are OK with going with this solution (@Alon/Allon/Yair?).
|Patch Set 1:

many thanks, Eli/Allon; any reason for the '+1' rather than a '+2'?
|Patch Set 1:

&gt; I was waiting for a review by the subject owner. Upgrading to +2.

thanks!
|Patch Set 2: Code-Review+2
|Patch Set 1:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Code-Review+2
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Patch Set 1:

Note: this is NOT a backport of http://gerrit.ovirt.org/#/c/20299/ - translations for 'master' and for 'ovirt-engine-3.3' are pulled from different project-versions in Zanata.
|Patch Set 1:

&gt; http://jenkins.ovirt.org/job/ovirt_engine_3.3_find_bugs_gerrit/4525/ : FAILURE

please note that the failure above has nothing to do with this patch - the previous run of the same job has failed as well [1], on patch http://gerrit.ovirt.org/#/c/20292/.

[1] http://jenkins.ovirt.org/job/ovirt_engine_3.3_find_bugs_gerrit/4524/
|Patch Set 1:

Gilad - can you please post a screen-shot of the dialog, just so we'll see that its content is indeed OK?
[if so - I will give &quot;+2&quot;]
|Patch Set 1:

&gt; screenshot: http://tinypic.com/view.php?pic=10dw0ea&amp;s=5#.Ul-3bFXMgmO

Thanks, Gilad.
From the dialog's text, it may seem like we are going to remove users from the System, which is a bit misleading. 
Any chance that you can change the message to be &quot;Are you sure you want to remove the Quota assignment from the following Users?&quot;
?
|Patch Set 1: Code-Review+2

just found out that if a 'remove' confirmation dialog has its hashName set to something that begins with 'remove_', the message within the dialog cannot be overridden, which is wrong IMO, and I would like to change that behavior [1], but it should be done in a separate patch.

giving &quot;+2&quot; for now, as I don't want to block this patch, that fixes a broken dialog behavior.

[1] http://lists.ovirt.org/pipermail/engine-devel/2013-October/005732.html
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 2:

@Alex, I assume you verified this patch; if so - can you please mark the patch as Verified? thanks.
|Patch Set 2: Code-Review+2

based on previous &quot;+2&quot;s.
|Patch Set 1:

is that query user 'safe'? i.e. if the user doesn't have permissions on the VM (that was given as a parameter), will this query properly return &quot;user does not have proper permissions&quot; or something similar (relevant mainly for api purposes, I assume)? 

[I don't know if we have some infrastructure that takes care of that, or if each query needs to be handled separately]

Thanks.
|Patch Set 1:

thanks.
|Patch Set 2:

@Allon/Yair - any chance for a &quot;+2&quot;? or does this patch need further adjustments?
|Patch Set 1: Code-Review+2
|Patch Set 1:

thanks for drawing my attention to this patch, Derez.

what I don't understand is why we are sending a localized value to the backend in the first place? shouldn't this be hard-coded &quot;root&quot;? localized values should be used only for display purposes.
|Patch Set 3:

looks better; small note: if constants.defaultUserName() is not used anywhere else in the code, let's remove it from the Constants collection.
|Patch Set 4: Code-Review+1

looks OK (could have been nice to put the &quot;root&quot; string as a const somewhere; not sure where though).

@Derez - thoughts?
|Patch Set 1: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

@Tomas/Gilad - any chance that you can take a look?

Thanks.
|Patch Set 1:

thanks for the review, Tomas.

@Alex - please amend the commit comment and rebase. I will merge.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 4:

(1 comment)
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

@Greg - please take care of the needed rebase. thanks.
|Patch Set 2:

@Greg - can you please rebase and re-verify before we will merge it? thanks.
|Patch Set 1: Code-Review+2
|Patch Set 1:

maybe I am missing something, but shouldn't the new key be added to &quot;./packaging/branding/ovirt.brand/external_resources.properties&quot; (instead of ApplicationConstants)?

[looking at http://gerrit.ovirt.org/#/c/18146/ for comparison; note that it was merged before introducing external_resources.properties IIRC]

Thanks.
|Patch Set 1:

note that I am asking about the key, not the value.

[IIUC, the key should always be there, but if the value is empty - we shouldn't try to retrieve the file, hence we won't get the 404]

what I am trying to understand is why was the &quot;docMappingFile&quot; entry added to ApplicationConstants;
in similar cases [e.g. http://gerrit.ovirt.org/#/c/18146/ (guide link branding)], nothing was added to ApplicationConstants, but was added to external_resources.properties (well, to messages.properties which was later split into external_resources.properties).

Thanks.
|Patch Set 1:

thanks for the clarification. 

it is kind of problematic that we are mixing strings that should be translated with strings that shouldn't be translated; that's why we have separations such as messages vs. external_resources, Enums vs. LocalizedEnums, etc. 

it doesn't have to be taken care of in this patch, but we should consider splitting strings that shouldn't be translated out of our existing .properties files and into separate .properties files (not sure how many strings like that we actually have).
|Patch Set 1:

I was referring to ApplicationConstants, to which you have added an entry that represents a path, rather than an entry that represent a text that should be translated.
|Patch Set 1:

Thanks. As I said - no need to take care of that as part of this patch - we will take care of that separately [we need to look into the content of all of our .properties files and see if we have any values that need to be extracted into separate .properties files].
|Patch Set 3:

Greg - I think that you can abandon this patch and remove it from the External Tracker in the BZ. Thanks.
|Patch Set 1:

Many thanks for the patch, Derez. I assume that you have verified, given the screen-shot that you provided in the commit comment... if indeed so, can you please mark &quot;+1&quot; on the &quot;Verified&quot; section? Once done - I will merge.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

@Alex - can you please rebase and (re)verify? once done - I will merge. thanks.
|Patch Set 2: Code-Review+2
|Patch Set 3: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: (2 inline comments)


|Patch Set 2:

indeed - I agree that this patch is better than nothing and I would like to see it in the code.

[Need to be careful with sub-tabs / drop-downs(?) that contain a large number of items - GUI might become unresponsive when displaying them, so might need to limit the results quantity specifically for them]

please rebase and re-verify this patch, as it is almost 4 months old and there is a chance that it has gone a little bit stale.
|Patch Set 1:

Thanks, Gilad, that looks pretty good in English and in the problematic locales mentioned in the BZ as well: 
http://i.imgur.com/rJhA64s.png

In order to polish that a little bit further, is there a chance that you can lower the text-box labels and reduce the width of the text boxes (http://i.imgur.com/spKnfYi.png)? if so - maybe the dialog width can be reduced a little as well to accommodate more neatly the compacted structure. 

Thanks!
|Patch Set 4:

just a general note - please keep in mind that we should expose brandable styles for the elements that it makes sense to brand [e.g. general theme colors (not every single color in the application), top banner image, etc.]

I am not sure if it makes sense to externalize the rather-neutral style of the locale-drop-down in the login page, for example.

Also need to keep in mind that specifically in GWT, externalizing resources can affect the performance/behavior of the application. 

Therefore - please think *carefully* on your exact branding needs and which styles it actually makes sense to  externalize.

Thanks.
|Patch Set 4:

I am not sure that I am comfortable with this patch - I gave a comment on Aug 28 (on patch set 4) which the patch author acknowledged (see comment after that), however no updated patch set(s) were sent since.

@Alexander/lijing - can you please change the commit comment to detail the styles that are being externalized in this patch?

@Alexander: does it make sense for all of the styles being externalized here to be externalized?
|Patch Set 4:

Thanks, lijing, for your confirmation. please feel free to consult us via the users/engine-devel@ovirt.org mailing lists if you need any assistance.

Once you will post an updated patch set, we will be happy to re-review the patch. however, if it is not going to happen any time soon, may I suggest that you will abandon the patch for now and post a new one / re-activate this one later on.
|Patch Set 8: Verified+1 Code-Review+1

looks good:

http://i.imgur.com/6hWmxus.png

http://i.imgur.com/XkGa9Qb.png

http://i.imgur.com/VMV2cia.png

need &quot;+2&quot; from a GUI maintainer for a final code review (Tomas/Vojtech)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2

Yair - many thanks for the prompt review!
merging.
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1 Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2:

&gt; Can we merge this ASAP, it cause a lot of errors in jenkins uts...

done.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)

thanks, Tal, see my inline reply.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2:

(1 comment)
|Patch Set 2: Code-Review+1

+1 on the GUI code change; needs &quot;+2&quot; from an engine-core maintainer (Eli?), wouldn't hurt to get an ack from a rest-api maintainer as well (Michael?).
|Patch Set 3: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 10.
|Patch Set 10: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+2

- worth mentioning (either in branding.properties and/or at the top of messages.properties + resources.properties) that messages.properties should be used to store brandable text that should typically be translated, and resources.properties should be used to store brandable strings that don't typically require translation (e.g. URLs).

- please remove from the patch the changes to the non-English .properties files - these are auto-generated from Zanata and shouldn't be manipulated manually (unless not manipulating them manually will result in &quot;compilation&quot;/run-time error to the application)
|Patch Set 2:

Hi Alon, we don't fetch the translations during make (although I must admit that it sounds like a very interesting idea...).

I meant that typically, translation-updates are always pushed in separate patches which contain the non-English .properties files that are auto-generated from Zanata (i.e. without any manual intervention) - see http://gerrit.ovirt.org/#/q/owner:ecohen+message:translation,n,z for examples for such patches. Because these files are completely auto-generated, there is no point in changing them manually, since in the next pull-and-auto-generate-from-Zanata, these changes will be overridden.

The only exception in which changes to the .non-English files should be made in &quot;regular&quot; patches is when NOT changing the non-English .properties files is causing a compilation/run-time error.
|Patch Set 3: Code-Review+2

(1 comment)

minor inline comments.

also question: will this change actually include the change introduced in http://gerrit.ovirt.org/#/c/18828/ (so http://gerrit.ovirt.org/#/c/18828/ will need to be abandoned if this patch is merged)?
|Patch Set 8:

Greg, the patch currently depends on an outdated version of another (merged) patch. can you please rebase (fix conflicts, if any) and re-push?
|Patch Set 8:

&gt; Greg, ...

or Alexander, of course.

Thanks.
|Patch Set 9:

thanks Greg, for the quick response.
|Patch Set 9: Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2:

Alexander, can you please amend the commit comment according to Alon's last feedback + mark the patch with &quot;+1&quot; on &quot;Verified&quot; (assuming you have verified it)? Thanks.
|Patch Set 4:

@Alon/Vojtech - can you please review?

Thanks.
|Patch Set 1: Verified+1 Code-Review+1

@Vojtech - can you please review as well?
|Patch Set 1: Verified+1
|Patch Set 1:

thanks for the prompt review, Vojtech. Merging.
|Change has been successfully merged into the git repository.
|Patch Set 6:

@Vojtech - can you please re-review the patch? thanks.
|Patch Set 7:

(1 comment)
|Patch Set 9: Patch Set 8 was rebased
|Patch Set 9: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

added Eli, for engine-core review.
@Eli - any changes in the db-scripts that need to be done if we want to remove a certain configuration value (&quot;DocsURL&quot;)?
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

&gt; Merge?

Verify?
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1:

Greg - did you verify the patch (in ovirt-engine-3.3)? if so, can you please mark &quot;+1&quot; on the Verified section? thanks.
|Patch Set 1:

&gt; Yes, I did verify it.

thanks. merging.
|Change has been successfully merged into the git repository.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2

verified that upper-left icon in error dialog appears correctly with this patch applied:

http://oi44.tinypic.com/28jvrk.jpg

Thanks, Alex - merging.
|Change has been successfully merged into the git repository.
|Patch Set 1:

many thanks for the prompt review, Derez. Merging.
|Change has been successfully merged into the git repository.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 3: Code-Review+2
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1

http://oi40.tinypic.com/2nicnwx.jpg
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1

http://oi39.tinypic.com/aw3qmc.jpg
|Patch Set 1:

&gt; these files have way more TWS than the other translation files, I guest it's Zanata fault?

not exactly - it seems that the TWS actually exist in Zanata [i.e. the translator explicitly put them there: http://oi44.tinypic.com/wrde8w.jpg], that's why they arrive also to the auto-generated .properties files.

I will instruct the translators to pay more attention from now on, and hopefully it will improve for the next pulls.
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1 Code-Review+2

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1:

Greg - in this patch you took care of Cluster and Host.
What about DataCenter, Network, Storage, Volume?
|Patch Set 2:

many thanks for the comments, Derez.
Greg - please take a look at Derez's inline comment. Note that it is in patch set #1, not the most recent patch set #2.
Also - maybe worth updating (or closing and opening a new?) Bug 995754 and Bug 995755 accordingly. thanks.
|Patch Set 2:

posted my comment a bit too late, obviously... :)
|Patch Set 1:

(1 comment)
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Code-Review+1

looks good to me;
@Kanagaraj - any chance that you can take a look at the Volumes part? thanks.
|Patch Set 1:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 2:

Greg, it seems like you have removed the &quot;+1 Verified (probably by mistake). 
Please return it, and I will merge your patch. thanks.
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified+1 Code-Review+2
|Change has been successfully merged into the git repository.
|Abandoned

not imperative for ovirt-3.3 [bz in the commit comment has actually been solved by a different patch: http://gerrit.ovirt.org/#/c/16359/]
|Patch Set 1:

Alex, have you reviewed the patch &quot;using real installation&quot;, as suggested by Alon?
|Patch Set 1:

&gt; Alex, have you reviewed the patch &quot;using real installation&quot;, as suggested by Alon?

reviewed -&gt; verified*
|Patch Set 1:

Juan, where is this message being displayed in the GUI? 
Does it still look OK even though the text is longer?
|Patch Set 1:

confirming that it seems that the only place this message is used is within the Host General sub-tab. If the long message looks OK there, this patch can be merged.
|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve

looks good, need &quot;+2&quot; from an engine-core maintainer.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Alex, have you verified? if so, please mark &quot;+1&quot; on Verified.

Thanks.
|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 5:

&gt; backend do the validation in GetoVirtISOsQuery.java I don see it as requirement for this change. Einav? Please correct me if I am missing something

I am not familiar with the code; as long as there is no &quot;node has upgrade&quot; notification when there are non-compatible ISOs available, we are good (doesn't really matter if the logic resides in engine/GUI/both).
|Patch Set 5:

Hi Douglas, a couple of comments:

I think that what Doron was saying (Doron - please correct me if I am wrong) is that in case you have &quot;ovirt-node-iso-2.6.0-20120212.fc18.noarch.rpm&quot; installed and &quot;ovirt-node-iso-3.0.0-20130212.fc18.noarch.rpm&quot; available, the &quot;node has upgrade&quot; alert shouldn't be displayed, as upgrade is impossible in case the &quot;major&quot; part of the versions don't match (in this case, the installed major part of the version is &quot;2&quot; and the available ISO major part of the version is &quot;3&quot;). 

I think that &quot;vdsm-compatibility.txt&quot; is not related to Doron's comment: AFAIK, the &quot;vdsm-compatibility&quot; of the ISO needs to be compared against the compatibility-version of the Cluster in which the node resides; if one of the values within the &quot;vdsm-compatibility&quot; of the ISO matches the compatibility-version of the Cluster in which the node resides, then the ISO is valid for upgrade of this node; if there is no match - the ISO is not valid for upgrade of this node. 

AFAIK: All-in-all, an available ISO is valid for a node upgrade if *all* of the following conditions are fulfilled:

- available ISO version is higher than the node version
- &quot;major&quot; part of the available ISO version is identical to the &quot;major&quot; part of the node version
- one of the available ISO's vdsm-compatibility values matches the compatibility-version of the Cluster (in oVirt-engine) in which the node resides.

One more note: in your example, you mentioned that in case the node is installed with &quot;ovirt-node-iso-2.6.1-20120228.fc18.noarch.rpm&quot; and there is an available ISO versioned &quot;ovirt-node-iso-2.6.0-20130212.fc18.noarch.rpm&quot;, then the &quot;node upgrade available&quot; notification will be displayed. my question is if this indeed should be the behavior: the node version is &quot;2.6.1-....&quot; and the available ISO version is &quot;2.6.0-...&quot; (which seems to me as a lower version, even though the &quot;2.6.0-...&quot; ISO is marked with a later date) - I believe that in this particular case, the &quot;node has upgrade&quot; alert shouldn't be displayed. thoughts?
|Patch Set 1:

&gt; Please don't merge before merging the patch that provides the definitive solution.

the patch that provides a definitive solution (for the RepoImage business entity): http://gerrit.ovirt.org/#/c/17352/

as Juan mentioned - please don't merge this patch before merging http://gerrit.ovirt.org/#/c/17352/.
|Patch Set 6:

@Daniel - any chance that you can re-review the patch (AFAIK - your inline comment has been addressed)? Thanks.
|Patch Set 6: (1 inline comment)


|Patch Set 6: (1 inline comment)


|Patch Set 6:

@Vojtech/Derez - are there any remaining issues that Alex should address?
|Patch Set 7:

@Vojtech - can you please re-review this patch? thanks.
|Patch Set 6:

&gt; @Einav - this patch contains a change in a KEY in a properties file. Would you prefer it be changed for all the localized files (like was done here), or be left alone?

hi - please exclude the non-English .properties files from this patch (on my next pull from Zanata, they will be overridden anyway). Allon - thanks for notifying!
|Patch Set 8:

@Alon - can you please (carefully) rebase this patch? I am concerned that now that http://gerrit.ovirt.org/#/c/16773 is merged, there would be a conflict. thanks.
|Patch Set 1: (2 inline comments)

a couple of minor inline comments.
also - adding Yair (engine-core maintainer) as a reviewer.
|Patch Set 4: Do not submit

Hi Pavel, many thanks for sending an update to the Spanish translation.
Please note that translation updates should not be directly changed in the code - they should be changed in the Zanata translation system (Zanata) - please see http://www.ovirt.org/Localization_Howto for more details.
|Patch Set 2:

&gt; The messages files should probably be proceed using Zanata...

indeed - many thanks, Derez - will take care of that from now on when pulling/pushing files from/to Zanata.
|Patch Set 1:

@Tomas - any chance to get a quick review for a one-liner Edit Vm-Pool dialog change?

Thanks.
|Patch Set 7:

&gt; Well got +1 from db, backend and UI Time for a +2 no? :)

@Noam - I must have missed it: who gave the UI &quot;+1&quot;?
|Patch Set 8:

&gt; To Einav: Erez said it looks OK but he wishes to wait until all the parches are ready. 

from Daniel's comment [1] I got the second part (&quot;he wishes to wait until all the parches are ready&quot;), however I haven't got the first part (&quot;it looks OK&quot;) as he hasn't granted &quot;+1&quot; and hasn't mentioned anything about being OK with it in his comment.

&gt; I personally disagree and would like to push the patches as soon as the are ready and reviewed because they are independent

I somewhat understand Daniel's concern from the ux perspective, however it is not too bad - the different business entities already differ significantly from one another fields-wise anyway; IMO it doesn't really matter if one additional different/common field is introduced now/later to one/all business entity(ies).

So I agree with Noam that pushing these changes gradually (rather than all at once) makes sense, as they are independent.

@Derez - any chance that you can give &quot;+1&quot; on this change, if you are OK with the code (assuming that you don't strongly object to introducing the new field only to the DC business entity at this stage)?

[1] &quot;I think it's preferable to merge along with the other business entities (i.e. only when the work is completed on all main tabs).&quot;
|Patch Set 8:

+1 on Daniel's suggestion for an icon-column-header [preferably with a (localized!) &quot;Has Comment&quot; tool-tip or something similar]
|Patch Set 3:

@Tomas - is this some kind of preparation-work for the instance types [1] GUI changes, or is it unrelated? Do we have mock-ups for these changes (or an example-mock-ups of how these changes are going to be used in some dialogs) in [1] or in a different ovirt feature page?

Thanks.

[1] http://www.ovirt.org/Features/Instance_Types
|Patch Set 5:

&gt; @UI-Maintainers: please share your thoughts for a quick convergence on this.

@Daniel: If I got the times correctly, you have posted this comment before the latest &quot;developments&quot; on the engine-devel thread.

[I posted the following questions on the engine-devel thread, I will post them here as well]

- Do you agree to the concept of a top static header section in the VM(like) dialog(s) in general (i.e. at least for the &quot;Instance Type&quot; + &quot;Image&quot; fields, which are kind-of-replacing Templates, and affect the content of most of the side-tabs in the dialog)?

- If so: Do you agree that having the DC field in that top static header as well makes sense, since the list of Instance Types and Images is being determined by the selected DC?
|Patch Set 5:

@Derez: only now I fully understand your concern (I think) - I apologize that it took so long :)

the relevant engine-devel thread is still continuing, there is a chance that we will find out that introducing the top static header at this stage (and not in the &quot;final dialog patch&quot; stage) is not such a bad idea.

it would be great if you can continue to follow the very-latest &quot;developments&quot; on the thread (at this stage, we are waiting for some information from Tomas on what *exactly* is being introduced in the 7-patches chain that he sent) and let us know what you think. thanks.
|Patch Set 2:

@Tomas - similar question as the one I posted in http://gerrit.ovirt.org/14635 - I assume that this is instance-type-related? and will the instance-types wiki page contain a mock-up of it (or link to a PDF that contains a mock-up of it)?
|Patch Set 8:

&gt; Why can't we use our basic common.widget.ComboBox widget? (for search capabilities I assume?)

@Daniel - I saw that Tomas responded to your question on May 22; do you have any comments on his response?
|Patch Set 1: (1 inline comment)


|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: (1 inline comment)

- see inline comment
- please verify both locale drop-down content and &quot;...?locale=...&quot; part within links URLs for the following default browser locales (mark &quot;+1&quot; on the Verified section once done):
 - en-US (page should be &quot;rendered&quot; in en-US)
 - != en-US, but supported (e.g. 'ja-JP'; page should be &quot;rendered&quot; in 'ja-JP')
 - unsupported (e.g. 'ja', 'ru'; page should fallback to en-US)

Thanks.
|Patch Set 3:

thanks for correcting me, Alex.

it sounds like the behavior that you have described will practically be better than my simplistic suggestion to always fall-back to English.

however, my concern is that our fallback is from a 'generic' locale (e.g. 'ja') to a more 'specific' locale (e.g. 'ja-JP'), when generally I think (I could be wrong) that the expectation is to fallback from a (missing) 'specific' locale ('ja-JP') to a 'generic' locale ('ja') [although this is not applicable in our case, as all of our supported locales are specific].

thoughts?
|Patch Set 3:

that's a good question. I am not sure how different the dialects of the various locales are (i.e. I am not sure if a fallback from 'es_bo' to 'es_es' makes sense from a es_bo native speaker point of view).
so I suggest to leave it as is for now, and review later as needed, possibly based on the community feedback on that.
|Patch Set 3:

@Alex: please fix patch according to inline comment *and rebase* (the find-bugs error fix has already been merged AFAIK). thanks.
|Patch Set 23:

@Alex - please perform one (hopefully) last comprehensive verification as well, before proceeding with merging this patch. thanks.
|Patch Set 3:

&gt; Messages_&lt;lang&gt;.properties files should be renamed as well (for I18N).

&gt; @Einav - translation process should probably be modified...

@Shahar - same comments as the ones for http://gerrit.ovirt.org/#/c/15309/ - can you please update this patch accordingly? thanks.
|Patch Set 4:

&gt; Constants_&lt;lang&gt;.properties files should be renamed as well (for I18N).

right. @Shahar - can you please add to this patch the renaming of all &quot;Constants_&lt;lang&gt;.properties&quot; to &quot;UIConstants_&lt;lang&gt;.properties&quot;?

&gt; @Einav - translation process should probably be modified...

right again; Once this patch is merged, need to make sure that the &quot;new&quot; UIConstants file is pushed/pulled to/from Zanata, rather than the &quot;old&quot; Constants file. I will take care of that.

Many thanks, Derez, for noticing and notifying!
|Patch Set 1:

Hi Alona, any chance that you can review this patch? this is a 'findbugs' fix that has been introduced in http://gerrit.ovirt.org/#/c/14695/ (which you have reviewed as well).

Thanks.
|Patch Set 2: Looks good to me, approved

we are ok with merging
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

&gt; Vojtech - I can give +2. Depends on who else do you think should review this patch. If I'm enough, go ahead and merge the patch.

Many thanks, Oved - I believe that your review is sufficient here -&gt; I am merging this patch.
|Change has been successfully merged into the git repository.
|Patch Set 1:

&gt; Voj, did you verify?

indeed; Vojtech/Alex: need to verify that:

1. the problem (found by Derez) that was caused by http://gerrit.ovirt.org/#/c/14820/ has been solved.

2. the issue that http://gerrit.ovirt.org/#/c/14820/ originally solved (i.e. old sub-tabs &quot;flickering&quot;) is still solved.
|Patch Set 1:

&gt; Anyway it would be great if Alex (or someone else) double-verified this patch, too :-)

@Alex: before merging: Can you please verify this patch as well and see that it solves the problem + that the &quot;old sub-tab flicker&quot; problem also remained solved?
|Patch Set 1: (1 inline comment)


|Patch Set 2:

Alex - did you verify this patch? if so - please mark &quot;+1&quot; in the Verified section. Thanks.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1:

Thanks, Alex.
@Vojtech/Tomas - can you please review the updated patch?
|Patch Set 1:

&gt; Thanks, Alex. @Vojtech/Tomas - can you please review the updated patch?

ignore - this comment was meant for http://gerrit.ovirt.org/#/c/14625/ (way too many opened browser tabs...).

[@Vojtech - we could still use a review for this patch :) Thanks]
|Patch Set 1:

Alex: Once I applied the patch and ran the web-admin, I am seeing &quot;no items to display&quot; once I hit &quot;refresh&quot; until the results are retrieved from the backend.

[In &quot;fast&quot; environments, the &quot;no items to display&quot; only blinks so you can hardly even notice it, however in slow environments (in which it takes some time from hitting &quot;refresh&quot; until results are returned), the &quot;no items to display&quot; is clearly displayed]

[In order to simulate a &quot;slow&quot; environment, I added &quot;java.lang.Thread.sleep(2500);&quot; within the RunQuery method in GenericApiGWTServiceImpl]

Any thoughts?
|Patch Set 2:

&gt; Fixed Einav's issue and renamed the method to better relay its purpose.

Alex - can you please double check that in addition to &quot;my&quot; issue, the original issue is fixed as well (i.e. manual refresh stuck at loading in the user portal)?
|Patch Set 2:

Thanks, Alex. @Vojtech/Tomas - can you please review the updated patch?
|Patch Set 1:

Tomas - any chance that you can review this patch? Thanks in advance.
|Patch Set 2:

&gt; Maybe we should extend FormBuilder API to control label 
&gt; width per each detail column? [I really don't want to 
&gt; use Grid/FlexTable again just for layout purposes]

+1. probably need to supply a method overload/default-value (to prevent enforcing each consumer of this API to explicitly specify the width).

[Many thanks to Derez for noticing this issue and suggesting the above improvement for Vojtech's suggested solution]
|Patch Set 4:

Some comments from derez (thanks derez!)

- There's a problem with general sub-tabs that have less than 3 columns
- Clusters -&gt; General sub-tab: Might look better using a SplitLayoutPanel (e.g. VMs -&gt; Network Interfaces / Snapshots) 
[can be taken care of in a separate patch]

Also: Please include the relevant bug URL in the commit comment [https://bugzilla.redhat.com/show_bug.cgi?id=915904]. 

Thanks.
|Patch Set 2: (2 inline comments)


|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Vojtech: http://gerrit.ovirt.org/#/c/12945/ has been merged - would you like to sent an updated version of this patch?
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Patch Set 1: Looks good to me, approved

rebased
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased (now for real)
|Change has been successfully merged into the git repository.
|Patch Set 1:

Oved/Vojtech - we can maybe combine the two approaches: We can have an engine-level default time-out, and each plug-in can later override this value within its own configuration.

[as mentioned here before - all of this can be done in separate patches; this patch is merely the solution for the BZs mentioned in the commit comment, i.e. event flooding and browser pop-ups resulting from the heartbeat mechanism]
|Patch Set 1: Verified

I tested the patch, and the user portal doesn't show an error-pop-up upon login failure anymore.
@Derez - I think we are good to go with merging this patch.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified


|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4:

Alex/Alon: before I merge, just to make sure I understand what this patch is doing (and it should be reflected in the commit comment, BTW) - this unit-test was fixed by creating a temp file &quot;on the fly&quot; (without actually writing it to the disk) and using it for the unit test, rather than relying on a file that may or may not exist on the disk?
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

Thanks Alon.
rebased, updated commit comment, merging.
|Change has been successfully merged into the git repository.
|Patch Set 3:

&gt; As far as I could understand from Einav, you aren't supposed to touch the translation files manually.

correct - non-English .properties files should not be manipulated, as they are auto-generated from Zanata.
Please remove the changes in the non-English .properties files from this patch.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2:

Vojtech/Alex - what do you think? Derez has raised an interesting point here: The patches seem to do pretty much the same, just with a different implementation/design:

[I could be wrong with everything that I have written below, as I am not familiar with the exact technical details - please correct me if I am wrong]

(1) in this patch, the loading-progress is represented by the &quot;squares&quot;-animation which is triggered on the relevant tab-related events (onReveal, onRefresh/ManualRefresh, etc.).

(2) in http://gerrit.ovirt.org/#/c/7493/, the loading-progress is represented by &quot;a small text box shown
in top center of the screen&quot; which is triggered by the &quot;LockInteraction&quot; event, fired when &quot;the application is
transitioning from one place to another&quot;.

IIUC, in (2), the loading-text-box will show up upon any transitioning event in the application. 
It just so happens that today, the only transitioning events that we have in the applications are ones that are associated with moving between tabs... 

One difference that I can think of between (1) and (2) [and I could be wrong] is that upon manual refresh, the loading-indication in (1) will be triggered, but not the loading-indication in (2).

Also: I expect the loading-text-box (2) to potentially appear in more places (e.g. clicking on a button that doesn't open a dialog, or, in general, any call that will involve a call to the server) - it is a more &quot;generic&quot; indication than the animated-squares (which were designed to fit only in the tabs/sub-tabs context). 

Having said that: Although theoretically the loading-text-box (2) can be a sufficient indication for moving between tabs, I think that the animated-squares are a really nice addition to it, and I prefer to have it in, rather than just showing a blank grid during loading.

So I agree with Derez on this one - we should probably consider both patches to be eventually introduced.

Thoughts/Comments are welcome.
|Patch Set 2:

Vojtech - can you please take a look at my comment from Mar 14 and do the final review for this patch? thanks.

Alex - please take care of formatting problems on which Derez has pointed out.

[Derez - thanks for the review!]
|Patch Set 4:

vojtech - can you please review this patch? thanks.
|Patch Set 1:

Alex - have you verified this patch? is so - please mark &quot;+1&quot; on the &quot;Verified&quot; section. Thanks.
|Uploaded patch set 2.
|Patch Set 2:

rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2:

rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5:

Hi Mark, translation for ovirt-engine text is managed via the Zanata system [1]. Because of that, we are not supposed to change the non-English .properties files manually - they are being automatically generated by Zanata. In order to keep the translations of oVirt up-to-date, I occasionally push oVirt's up-to-date English strings into Zanata (in which they are being translated), and pull the up-to-date translations from Zanata into oVirt (see patches such as http://gerrit.ovirt.org/#/c/12111/, for example).

Feel free to contact me if you have any other questions about it.

[1] https://translate.zanata.org/zanata/iteration/view/ovirt/master
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Patch Set 11:

Juan - can you please re-review this patch?
|Patch Set 16:

Vojtech - can you please re-review this patch? thanks.
|Patch Set 2:

Alona - any chance that you can re-review this patch? Thanks.
|Patch Set 1: Verified

verified - the &quot;min&quot; string now looks OK in Japanese: http://oi49.tinypic.com/2nosp3.jpg

One concern, similar to the one raised by Doron for http://gerrit.ovirt.org/#/c/13194/, not sure if relevant here, please let me know what you think: Although chances are slim for the &quot;min&quot; text to &quot;go wild&quot;, maybe worth increasing the width instead of removing it altogether?
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: (2 inline comments)

- see my inline comments

- I am actually not sure why the button style is not consistent with all of the other main-tabs/sub-tabs buttons. 
Maybe worth considering doing something more like http://oi46.tinypic.com/vos7b7.jpg - what do you think? 
[can be done in a separate patch, of course - not urgent]

- patch doesn't rebase cleanly, since it changes a CSS style that has been removed in http://gerrit.ovirt.org/#/c/12945 (merged), so even if we are not implementing the suggestion in the previous bullet - need to send an updated patch anyway.

Thanks.
|Patch Set 1:

[take #2, hopefully with the correct bulletting this time]

- see my inline comments

- I am actually not sure why the button style is not consistent with all of the other main-tabs/sub-tabs buttons. Maybe worth considering doing something more like http://oi46.tinypic.com/vos7b7.jpg - what do you think? [can be done in a separate patch, of course - not urgent]

- patch doesn't rebase cleanly, since it changes a CSS style that has been removed in http://gerrit.ovirt.org/#/c/12945 (merged), so even if we are not implementing the suggestion in the previous bullet - need to send an updated patch anyway.

Thanks.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

looks good now (Japanese button contains left and right borders): http://oi46.tinypic.com/34ovp06.jpg
|Change has been successfully merged into the git repository.
|Patch Set 9:

It seems that we won't be able to converge via gerrit correspondence and/or engine-devel mailing-list correspondence.

Therefore, I have scheduled a meeting for next week to discuss this matter [1].

reviewers - please join to share your opinion and help to finalize this matter. thanks.

[1] http://lists.ovirt.org/pipermail/engine-devel/2013-February/003831.html
|Patch Set 1: Looks good to me, but someone else must approve

I cannot review the code, but I like the concept.

Adding gchaplik and derez to help review the code (if they can). Thanks.
|Patch Set 1:

Alex:

- can you please change the BZ URL in the commit comment to the more relevant one (https://bugzilla.redhat.com/show_bug.cgi?id=948548)?

- can you please verify this patch (and once done - mark &quot;+1&quot; on the &quot;Verified&quot; section)?

Thanks.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3:

&gt; Changed but to be the more appropriate bug.

- I assume &quot;but&quot; -&gt; &quot;bug&quot;

- only now noticed that BZ URL remained the same and hasn't been updated (not critical).
|Patch Set 3:

&gt; Patchset 2 has the correct bugzilla.

Alex: you are right - when I rebased the patch prior to merging, I took patch-set 1 by mistake (instead of 2) - I apologize.
|Patch Set 1: (1 inline comment)

- adding an engine-core maintainer to review changes in common entities.

- please note one inline comment. thanks.
|Patch Set 3: (1 inline comment)


|Patch Set 4:

Yair - can you please re-review this patch? thanks.
|Patch Set 5:

Yair - patch is pending only on your re-review. thanks.
|Patch Set 5:

&gt; Yair - patch is pending only on your re-review. thanks.

Yair - still pending... thanks.
|Patch Set 5:

&gt;&gt; Yair - patch is pending only on your re-review. thanks.

&gt; Yair - still pending... thanks.

Yair?
|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

&gt; We might want to use this query for the sub-tab as search is limited for 100 results by default (instead of the search-query according to the template name).

indeed, using the query will not be limited in results quantity (like the search). However, I think that the results-quantity limitation is actually desirable here, assuming we will potentially have performance issues if results will contain a very large number of items, and assuming that we will introduce paging to the sub-tabs at some point.

So I think it is OK that the search will remain as the &quot;source&quot; of the sub-tab contents (I am not thrilled about the fact that we are searching according to Name rather than ID, but that's a different story and a material for a separate patch...), so IMO we can safely proceed with this patch for removing the GetVmsByVmTemplateGuid query.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2:

Alex - please rebase (to eliminate outdated dependency)

Vojtech - any reason for not giving this patch &quot;+2&quot;?
|Patch Set 3:

Vojtech - any reason that you gave &quot;+1&quot; rather than &quot;+2&quot; on this patch?
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified

rebased, conformed to pom.xml changes (i.e. &quot;all-langs&quot; moved to parent pom.xml), verified.

@Derez - any chance that you can re-review this patch?
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified

rebased, re-pulled updated German .properties files from Zanata, verified.

@Derez - any chance that you can re-review this patch? (this is again just pulling the auto-generated German .properties files from Zanata)? Thanks.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: (1 inline comment)


|Patch Set 7:

vojtech - can you please do the final review for this patch (and make sure that everything that you asked for in the BZ was actually addressed either in this patch or in http://gerrit.ovirt.org/12023)?
|Patch Set 8:

Vojtech - can you please take a look at Alex's last comments here and re-review the updated patch? thanks.
|Uploaded patch set 10.
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

derez - any chance that you can verify that this patch indeed eliminates the problem in eclipse?
|Patch Set 1:

&gt; It fixes the issue for me obviously otherwise I wouldn't have pushed the patch.

obviously :) just wanted Derez to verify it as well, as he is the one that found the problem in the first place, and I wanted to make sure that the problem on which he pointed out was indeed fixed for him (not sure if there are any differences between different clients that have eclipse installed on them, etc.).
|Patch Set 2:

Derez/Vojtech: Can you please re-review this patch? thanks.
|Patch Set 1:

please change the commit comment to conform to the commit comment template.

[specifically, shorten the commit comment subject and have it prefixed with &quot;webadmin:&quot;, so it would be something like: &quot;webadmin: ui-plugins: dynamic tab alignment&quot;; in the commit comment body, you can detail as necessary]
|Patch Set 2:

Alona - can you please re-review this patch?
|Patch Set 2:

Alex - it seems that after patch http://gerrit.ovirt.org/#/c/12071/ has been merged, the &quot;all-langs&quot; section moved from the userportal/webadmin pom.xml files to the parent pom.xml (frontend/webadmin/modules/pom.xml). 

Can you please change the patch accordingly? Thanks.
|Patch Set 4:

Alona - any chance that you can re-review the latest version of this patch, with Vojtech's latest changes? thanks.

Vojtech - did you verify this patch? If so - please mark &quot;+1&quot; on Verified. thanks.
|Patch Set 4:

Thanks Vojtech. 

Alona - would be great if you can re-review the updated patch. Thanks.
|Patch Set 4:

Vojtech/Alex: when I applied the patch, everything seems to work ok when I am configuring my browser to have one of oVirt's supported locales as the default locale (e.g. French).

however, once I configure my browser to have an unsupported locale (e.g. German) as the default locale, I get a blank page when browsing to the web-admin.

can you please look into it? thanks.
|Patch Set 5:

Thanks Alex.

- Can you please detail what you changed in patch set 5 that fixed this issue from patch set 4?

- Please make sure that the issue detailed in the BZ is fixed, and also that the general behavior is OK (i.e. no blank page is displayed...) for the following scenarios:

  - default browser locale is English

  - default browser locale is supported by ovirt, but not English (e.g. French)

  - default browser locale is not supported by ovirt (e.g. German; in this case, fallback to English should occur)
|Patch Set 5:

Vojtech - can you please re-review this patch? thanks.
|Patch Set 1:

Alex - thanks for the explanation, however I believe that Itamar referred to updating the git commit comment to be more descriptive about the patch content (rather than supply a gerrit comment about it). Thanks.
|Patch Set 3:

Alex: the patch doesn't rebase cleanly - there are a couple of files (VmDiskPopupWidget.java, SubTabClusterGeneralView.java) that were changed recently in other patches. 

Can you please rebase (carefully, to not &quot;ruin&quot; the changes introduced in the other recent patches that touched these files)? thanks.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Thanks for the patch, Juan. Did you verify the change? if so, can you please mark &quot;+1&quot; in the &quot;Verified&quot; section?
|Patch Set 1:

Vojtech - can you please take a quick look at this patch? thanks.
|Patch Set 4:

Yair/Michael - I believe that engine-core/api will be affected from this patch as well; as engine-core/api maintainers, please review. thanks.

Alex - please address Juan's comment on the commit message.
|Patch Set 5:

Michael - please see Alex's question in the inline comment within standalone.xml; thanks.
|Patch Set 8:

Michael - can you please clarify your question to Alex?
Vojtech - can you please do the final review for this patch (already reviewed by Juan and Michael)?
|Patch Set 8:

Alex: Due to some changes introduced by http://gerrit.ovirt.org/#/c/12411/, the patch is not rebasing smoothly (need to solve a conflict). Please send an updated version of the patch. thanks.

Juan: would you mind re-reviewing this patch once Alex will upload the new version of it (just to make sure that nothing collides with your changes from http://gerrit.ovirt.org/#/c/12411/)? thanks.
|Patch Set 10: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3:

Libor - can you please update the commit-comment message to include more details on what will be the exact effect of your patch on the application (e.g. &quot;each pop-up displayed due to an action CanDoAction failure will have a '???' prefix in its title/body/etc., ...&quot;)? Thanks.
|Patch Set 1:

Vojtech - please note that patch http://gerrit.ovirt.org/#/c/11975/ (merged) eventually included some changes in UiCommandButtonDefinition, so this patch needs to be conformed accordingly. thanks.
|Patch Set 1:

Vojtech - did you verify this patch?

[if so - please mark &quot;+1&quot; on the &quot;Verified&quot; section. thanks.]
|Patch Set 1:

Vojtech, did you happen to verify that the drag-and-drop behavior in the Host network configuration dialog is still working appropriately on IE10 with this patch?

[Alona - maybe you can help with verifying it as well?]
|Patch Set 4:

Alex, as Gilad also commented earlier:
Please change the subject of the commit comment to be in a single line, i.e. change it from:

  userportal: Added caching to user portal page
  webadmin: Added caching to webadmin page

to:

  userportal, webadmin: Added caching

We need to avoid multi-line subjects in commit comments; subjects should be single-lined and contain 50 characters or less.

multi-line subjects actually result in a single-long-line subjects (see http://i45.tinypic.com/wn1ah.png), since the new-line character is actually interpreted as a white-space.
|Patch Set 5:

Alex, please change (again) commit-comment subject from:
 
  userportal, webadmin: Added caching to user portal page

to simply:

  userportal, webadmin: Added caching

Thanks.
|Patch Set 7: (1 inline comment)


|Patch Set 12:

Juan - any comment on Alex's answer? Do we have an agreement?
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2:

&gt; The translated properties files (such as AppErrors_zh_CN.properties) should not be touched. Only the main AppErros.properties should be fixed.

That's right - thanks for noticing, Alissa.
Dhandapani - please remove the non-English .properties files from this patch. thanks.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved

verified, looks great: http://oi47.tinypic.com/2vs10lu.jpg
|Patch Set 1:

&gt; verified, looks great: http://oi47.tinypic.com/2vs10lu.jpg

wrong screen-shot; the correct one is: 
http://oi46.tinypic.com/1ywgfm.jpg
|Patch Set 1: Verified; Looks good to me, approved

verified, looks great: http://oi47.tinypic.com/2vs10lu.jpg
|Patch Set 1: Verified; Looks good to me, approved

verified, looks great: http://oi49.tinypic.com/2vjvpcx.jpg
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Allon - question, just out of curiosity:

AFAIR, this query has been used internally as part of the search mechanism.

e.g. if I have a tag &quot;Israel&quot;, and sub-tags &quot;TLV&quot; and &quot;Jerusalem&quot;, and I am searching &quot;VM: tag = &quot;Isra*&quot;, the search query mechanism was(/is) using the GetTagIdsAndChildrenIdsByRegExp query, which accepts &quot;Isra*&quot; as a parameter, and return the following result:

 { [Israel-tag-id], [Jerusalem-tag-id], [TLV-tag-id] }

this result would have then be used by the search query mechanism to build the relevant part of the SQL query (e.g. &quot;... and tagID contains { tag-id1, tag-id2, ...} ...&quot; or something similar).

So IIUC: The GetTagIdsAndChildrenIdsByRegExp is not used by the search mechanism anymore? and I assume that there is another solution for the search example that I detailed above?
|Patch Set 1:

- [after talking to Vojtech] UiCommandButtonDefinition.java: change should be excluded from the patch?

- ListModel.java: Contains only indentation/whitespace changes  (maybe separate to a different patch?)

- other than that: all changes are within user-portal code, so there is no effect on the web-admin.
|Uploaded patch set 20.
|Patch Set 20:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 21.
|Patch Set 21: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 13.
|Patch Set 13:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 14.
|Patch Set 14: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 4:

see my last comment in http://gerrit.ovirt.org/#/c/10579/
|Uploaded patch set 17.
|Patch Set 17:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 18.
|Patch Set 18: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

Gilad: several questions:

1) vm_pool's defaultStartTime/defaultEndTime issue:
  - this patch should not be submitted without a fix to this issue, since without this fix - the &quot;shouldBeRefreshed&quot; method in IUserPortalListModel will always return &quot;true&quot;, which will result in re-rendering of the view in each refresh, so no rendering optimization will actually occur. Is that correct?
  - you said: &quot;check in vm_pools:eqauls, it's always different&quot;. Did you mean that the 'equals' method is wrong and should be fixed, or that the actual values for the defaultStartTime/defaultEndTime vm_pool fields are different for each retrieval from the backend?

2) [assuming 1 is fixed] From the &quot;shouldBeRefreshed&quot; method:

   if (!currentVm.getStaticData().equals(newVm.getStaticData()) &#124;&#124; !currentVm.getStatus().equals(newVm.getStatus())) { ...

Looking at the &quot;equals&quot; method of the VmStatic business entity, it seems that not all fields are being checked there (e.g. &quot;NumOfMonitors&quot; is not being checked). 
Which means that there is a chance that although the VM has been updated, the &quot;equals&quot; method for VmStatic will return &quot;true&quot;, which means that shouldBeRefreshed will return &quot;false&quot;, which means that the grid won't be re-rendered, which is OK, as long as we are not displaying the relevant field (e.g. NumOfMonitors) in the grid.

Question is: What will happen when the user will select that row and be displayed with the &quot;General&quot; sub tab (which contains the &quot;numOfMonitors&quot; information) and/or when the user attempts to Edit the VM? Will the user see the updated VM, or the &quot;old&quot; one?
|Patch Set 2:

[posting questions again, with fixed gerrit text formatting]

Gilad: several questions:

1) vm_pool's defaultStartTime/defaultEndTime issue:
- this patch should not be submitted without a fix to this issue, since without this fix - the &quot;shouldBeRefreshed&quot; method in IUserPortalListModel will always return &quot;true&quot;, which will result in re-rendering of the view in each refresh, so no rendering optimization will actually occur. Is that correct?
- you said: &quot;check in vm_pools:eqauls, it's always different&quot;. Did you mean that the 'equals' method is wrong and should be fixed, or that the actual values for the defaultStartTime/defaultEndTime vm_pool fields are different for each retrieval from the backend?

2) [assuming 1 is fixed] From the &quot;shouldBeRefreshed&quot; method:

   if (!currentVm.getStaticData().equals(newVm.getStaticData()) &#124;&#124; !currentVm.getStatus().equals(newVm.getStatus())) { ...

Looking at the &quot;equals&quot; method of the VmStatic business entity, it seems that not all fields are being checked there (e.g. &quot;NumOfMonitors&quot; is not being checked). Which means that there is a chance that although the VM has been updated, the &quot;equals&quot; method for VmStatic will return &quot;true&quot;, which means that shouldBeRefreshed will return &quot;false&quot;, which means that the grid won't be re-rendered, which is OK, as long as we are not displaying the relevant field (e.g. NumOfMonitors) in the grid.
Question is: What will happen when the user will select that row and be displayed with the &quot;General&quot; sub tab (which contains the &quot;numOfMonitors&quot; information) and/or when the user attempts to Edit the VM? Will the user see the updated VM, or the &quot;old&quot; one?
|Patch Set 2:

We need to make sure that we are refreshing the view whenever it needs to be refreshed.

Which means a couple of things:

- For read-only view (grid/sub-tabs) - need to make sure that view is updated appropriately whenever a relevant business-entity property value changes. So need to take into consideration:
 - properties that are being displayed [e.g. VmName (appears in the grid), Description (appears as a tool-tip in the grid), AppList (appears in the 'applications' sub-tab), etc.]
 - properties that control display [e.g. the vm_status property, which controls some buttons' availability, such as 'run', 'stop', 'remove', etc].

So all of these - either need to be part of the &quot;equals&quot; method of the relevant business entity (e.g. VmStatic) or specifically referred to in the &quot;shouldBeRefreshed&quot; method (e.g. like &quot;status&quot;, which is already there in the patch).

- For editing view (dialogs) - need to make sure that all the data within the dialog (once opening it) is up-to-date, otherwise it can result in update-commands to the backend that contain obsolete information. This can be achieved by doing one of the following:
  - make sure that &quot;shouldBeRefreshed&quot; is covering all of the fields for the dialogs (i.e. just like I wrote above for the &quot;read-only view&quot; section: making sure that all the relevant dialogs' fields are part of the relevant &quot;equals&quot; method in the business-entity or referred to explicitly in the &quot;shouldBeRefreshed&quot; method).
  - retrieve the item from the backend right before opening and filling the dialog with data (e.g. upon &quot;Edit VM&quot; button-click).
|Patch Set 2:

[trying again, hopefully gerrit-text formatting will be better this time...]

We need to make sure that we are refreshing the view whenever it needs to be refreshed.
Which means a couple of things:

1) For read-only view (grid/sub-tabs/basic-view - see http://gerrit.ovirt.org/#/c/10509/) - need to make sure that view is updated appropriately whenever a relevant business-entity property value changes. So need to take into consideration:
- properties that are being displayed [e.g. VmName (appears in the grid), Description (appears as a tool-tip in the grid), DisplayType (appears in the 'General' sub-tab), AppList (appears in the 'applications' sub-tab), etc.]
- properties that control display [e.g. the vm_status property, which controls some buttons' availability, such as 'run', 'stop', 'remove', etc].
So all of these - either need to be part of the &quot;equals&quot; method of the relevant business entity (e.g. VmStatic) or specifically referred to in the &quot;shouldBeRefreshed&quot; method (e.g. like &quot;status&quot;, which is already there in the patch).

2) For editing view (dialogs) - need to make sure that all the data within the dialog (once opening it) is up-to-date, otherwise it can result in action-requests to the backend that contain obsolete information. This can be achieved by doing one of the following:
- make sure that &quot;shouldBeRefreshed&quot; is covering all of the fields for the dialogs (i.e. just like I wrote above for the &quot;read-only view&quot; section: making sure that all the relevant dialogs' fields are part of the relevant &quot;equals&quot; method in the business-entity or referred to explicitly in the &quot;shouldBeRefreshed&quot; method).
- retrieve the item from the backend right before opening and filling the dialog with data (e.g. upon &quot;Edit VM&quot; button-click).
|Patch Set 3:

added Omer to review vm_pools business-entity change.
|Uploaded patch set 5.
|Uploaded patch set 15.
|Patch Set 15:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for this patch in patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 16.
|Patch Set 16: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 9.
|Patch Set 9:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 10.
|Patch Set 10: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 13.
|Patch Set 13:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 14.
|Patch Set 14: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 10.
|Patch Set 10:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 11.
|Patch Set 11: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Patch Set 3:

rebased and re-pushed the entire patch-chain in an attempt to eliminate the double &quot;Needed By&quot; that existed for http://gerrit.ovirt.org/#/c/10579/ in its patch-set 14 (see http://oi46.tinypic.com/ilvcxl.jpg)
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1:

it seems like a &quot;duplicate&quot; of http://gerrit.ovirt.org/#/c/11047/ (which has been already reviewed and solves an additional issue).

Alex/Vojtech - can you please confirm that?
[if so - I'm afraid that this patch would have to be abandoned]
|Patch Set 1:

mobixsw: based on the previous comments: can you please abandon your patch?

thanks.
|Patch Set 4: Looks good to me, approved


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1:

added Doron (author of HealthStatus.java, AFAIK)
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1:

verified that everything stayed intact in chrome and firefox:

Firefox Extended: http://i47.tinypic.com/4jol1w.jpg

Firefox Basic: http://i49.tinypic.com/i1ivdt.jpg

Chrome Extended: http://i47.tinypic.com/eq8bxc.jpg

Chrome Basic: http://i46.tinypic.com/bfrv9h.jpg

@Alex - did you verify that both Basic and Extended view look ok on IE8 (on which the BZ was opened) with your patch applied? If so - please mark &quot;+1&quot; on the &quot;Verified&quot; section. Thanks.
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 1:

&gt; Einav, is it fine to add changes to the non-English 
&gt; properties files when it's only for the messages keys?

as long as the GUI compiles/runs successfully *without* the changes to the non-English properties files, please don't make any changes to them (the key changes will be applied automatically to the non-English files in the next pull/push to/from Zanata).
|Patch Set 2: Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, but someone else must approve

- verified that bottom-gray-alerts-section has &quot;no Alerts to display&quot; message (see http://i49.tinypic.com/2z6s684.png)

- seems that the model-title-based &quot;infrastructure&quot; is being used here appropriately.

- other reviewers: please review the clean-up.

[Gilad - need to upload a new patch-set according to your last comment?]
|Patch Set 1: Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2:

Alex, please separate the GetConfigurationValueParameters.java and GetConfigurationValueParametersTest.java to a different, independent patch: these are clean-up/code-style changes, which are not related to addressing the specific rest-api original issues.

[the separate patch needs to be prefixed with &quot;engine&quot;]
|Patch Set 3:

Michael: Note that we have the following warning message written in the engine log in case &quot;null&quot; version was sent:

2013-01-16 00:18:55,834 WARN [org.ovirt.engine.core.bll.GetConfigurationValueQuery] (http-/0.0.0.0:8443-5) calling GetConfigurationValueQuery (ApplicationMode) with null version, using default general for version

this warning is being written to the log because the user is expected to explicitly provide the version when asking for a configuration value.

setting the version value in the Parameters class (as you suggested) will not do any good - it will be just &quot;cover-up&quot; the cases in which the user did not explicitly provide version (&quot;cover-up&quot; == no warning message will be written to the engine.log). We might as well just remove the warning-message-writing altogether - it will be exactly the same.
|Patch Set 3:

&gt; if you want to force users specifying version, leave only one constructor 

we cannot do that, as the class is marked as Serializable [since it is being serialized/deserialized between client (javascript) and server], therefore it must contain a default c'tor. 

&gt; and replace 'String version' with 'Version version', 

not sure how it will help for our issue: if Version can be set as 'null' - it doesn't help; if Version cannot be set as 'null', then again - we will only cover-up the problem (unless implementing *along with* your c'tor suggestion above, which again - is impossible).

&gt; in addition maybe we should add validation to make sure version get specified,

if you mean that the GetConfigurationValue query should *fail* in case a 'null' Version value has been provided: That is a great suggested and indeed can help, however can result in many regressions. So before doing that - need to make sure first that we are passing a non-null version in the existing GetConfigurationValue calls in the code (in order to avoid these regressions as much as we can), which is what this patch is all about.

&gt; current solution is only temporary resolution of the problem as you have no tool to prevent someone passing NULL as version tomorrow.

Indeed; I am all for the validation solution that you suggested (if I understood you correctly), but it can (and should, IMO) be handled in a separate patch; in any case - no matter how we decide to ultimately solve it - need to make sure first that the GetConfigurationValue calls provide a non-null version value.
|Patch Set 3:

Thank you for your comment, Alissa. Although not written explicitly in the commit comment, this was the original trigger for this patch - to clean the WARN engine-log messages about the 'null' version sent during the GetConfigurationValue request.

Michael - still waiting for your response on my last comment (which is a response to your last comment). thanks.
|Patch Set 3:

&gt; i was not talking about of default constructor, but about
&gt; GetConfigurationValueParameters(ConfigurationValues cVal),
&gt; i.e without the version ...

You said in your previous comment: &quot;leave only one constructor&quot;; it doesn't matter which c'tor you meant - we must have also the default c'tor, which doesn't accept any parameters.
the only way to solve this *correctly* via c'tors, is for *all* c'tors to accept a (non-null) version parameter, which will enforce the user to define a version. Again, this is impossible since we must have a default c'tor (i.e. a c'tor that doesn't accept any parameters) due to serialization considerations.

&gt; my only problem is that we still don't have any tool 
&gt; to prevent this from happen and as such i think that setting 
&gt; defaultConfigurationVersion in GetConfigurationValueParameters.privateVersion 
&gt; will do much better job (for now till we have validation) to reach 
&gt; the goal of this patch, don't you think?

The goal of this patch is not to:
 1) eliminate the WARN messages just for the sake of eliminating them.
 2) make sure that the backend receives a non-null version.

The goal of this patch is to:
 3) make sure that the client sends a non-null version (it is different from 2), which is the problem that the WARN message is pointing is pointing on.

Your suggestion (setting defaultConfigurationVersion in GetConfigurationValueParameters.privateVersion) will only cover up the problem, as it will solve only 1 and 2; we will potentially be able to add another bunch of &quot;illegal&quot; client calls (i.e. client GetConfigurationValue calls that don't provide Version) and no one will even notice them, since the WARN messages will not be written - this is *much* worse.
[need to understand that 2 is not the problem; the backend can, obviously, handle &quot;null&quot; version; the problem is with the client that is not explicitly providing a version when calling to the GetConfigurationQuery, which is wrong by definition; the client *must* know what he is doing, i.e. it needs to request a configuration value for a concrete version; we cannot have the GetConfigurationValue parameters class take care of that for him - it is simply wrong].

I agree that the comprehensive solution should include validation, but again - once we will introduce it, any &quot;illegal&quot; call which exists in the clients (i.e. without passing the version parameter) will fail, which will result in bugs/regressions. 
so need to fix these &quot;illegal&quot; calls first, which is what this patch is all about.
we are not doing any unnecessary work here - we will have to fix these calls sooner or later. 
If we have already found these problematic calls and sent a patch to fix them - why not merge it?
Having said that, I see your point of potentially adding to the code new &quot;illegal&quot; calls in the mean time (until the comprehensive solution will be introduced).
so if you completely object to doing the comprehensive solution in a separate patch and you want everything in a single patch - than we will abandon this patch (or update it with the comprehensive solution once we will have the time to do it).
|Patch Set 3: (2 inline comments)


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Patch Set 1: (1 inline comment)


|Patch Set 1:

[Alon/Gilad - your feedback is needed here]   
[Alex - please hold off any changes to this patch until feedback from Alon/Gilad is received]

I didn't look into the details very thoroughly, but it seems that the GetDefaultConfigurationVersion Query (added in http://gerrit.ovirt.org/#/c/10330/ and changed in http://gerrit.ovirt.org/#/c/10263/) is there on purpose, although at first sight - it seems like this query is not needed (since it returns &quot;ConfigCommon.defaultConfigurationVersion&quot; which is accessible to both client and core)? [1]

If so - then I guess that the getDefaultConfigurationValue() method in AsyncDataProvider which, in my last inline comment, I instructed Alex to remove (or at least alter to not include the call to the core's GetDefaultConfigurationVersion query) should actually remain intact (i.e. the call to the core's GetDefaultConfigurationVersion query should not be removed)?

If you have any additional feedback/info to provide - please share. thanks.

[1] IIUC, all of this was done as part of a general effort to decouple the backend/frontend?
|Patch Set 1:

Alon/Gilad: So it means that the client (any client) shouldn't reference &quot;ConfigCommon.defaultConfigurationVersion&quot; at all?

[which means that http://gerrit.ovirt.org/#/c/11173/ should be altered as well to not include references to &quot;ConfigCommon.defaultConfigurationVersion&quot;?]
|Patch Set 1:

&gt; wait, about REST, don't know for sure...

Gilad: you mean that the REST APi is considered the engine-core's API, therefore it is considered an integral part of the engine-core, therefore REST API and engine-core wouldn't be decoupled, so no problem for the REST API to access ConfigCommon (i.e. http://gerrit.ovirt.org/#/c/11173/ is ok as-is and doesn't have to be altered)?
|Patch Set 1:

&gt; I think the restriction applies only for GWT components.

Alon/Gilad: I believe that the restriction applies to any component that we want/plan to decouple from the engine-core. 
Currently, the only components for which decoupling from the engine-core makes sense are the web-admin and user-portal (and dependents), which happen to be GWT components (i.e. the fact that they are GWT components has nothing to do with the fact that it makes sense to decouple them from the engine-core).

Correct? 

[just making sure that I understand everything correctly and that I am not missing anything; apologies for nagging on this]
|Patch Set 1:

&gt; I would have split it based on executable units. The GWT is a remote application interacting with engine, had we done this better, we would have used the restapi to do the communication.

a very old item on our todo list...

&gt; The fact that it is maintained at same tree as engine is something I would like to see gone in future :)

right - this is one of the purposes for decoupling.

&gt; The rest api is part of the backend, it is not standalone execution unit, right?

right - I wrote it myself in one of my previous comments (&quot;the REST APi is considered the engine-core's API, therefore it is considered an integral part of the engine-core, therefore REST API and engine-core wouldn't be decoupled&quot;) - just making sure that decoupling logic is based on something that (I referred to as) makes sense  (== executable units, according to your definition), and not on something else (== GWT?). 
Thanks.
|Patch Set 1:

Alex - need to abandon this patch.
Due to decoupling purposes:
- we need to keep the call to the engine-core (backend) GetConfigurationValue query.
- we cannot refer to ConfigCommon.defaultConfigurationVersion anywhere in the GUI code.

Thanks.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Patch Set 3:

Laszlo - I tested this patch and everything compiled successfully. what is broken?
|Patch Set 1: Looks good to me, but someone else must approve

Gilad - any chance to address Alona's comment about the one-line method?

Other than that - great patch: results are not limited anymore, we are querying according to ID instead of name which is more &quot;correct&quot;, and we cleaned-up the code.
|Patch Set 1:

&gt; going fw, we need to support paging for this field.

not sure about the paging (could be), but we'd might want to utilize the search ability for building a searchable drop-down or something similar.
+1 for dropping this patch.
|Patch Set 3:

AFAIR, today we are not manipulating any user-input, so current approach of not trimming the whitespaces and raising a validation error instead seems OK to me.

We can look into trimming whitespaces across the entire application (not only to the linux boot parameters) separately.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 2:

Alex, please fix the commit comment:

- there is no &quot;core&quot; component change here, only webadmin.
- the subject (first-line in comment) is too long - please shorten it.
- the lines in the body (second-line and on in comment) are too long - please break them into multiple lines.
|Patch Set 3: (12 inline comments)


|Patch Set 4: (1 inline comment)


|Patch Set 4: (1 inline comment)


|Uploaded patch set 14.
|Patch Set 14: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified

verification details: after applying the patch:

FF10: Shows message [http://i47.tinypic.com/xm34oo.png]
FF12: Shows message [http://i47.tinypic.com/2928hzb.png]
FF17: Doesn't show message [http://i50.tinypic.com/15n0qbn.png]
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2:

- rebased
- changed VmDiskPopupPresenterWidget (in both user-portal and web-admin) to fit the change in the &quot;handleEnterKey()&quot; method in AbstractModelBoundPopupPresenterWidget (an identical change was done in StoragePopupPresenterWidget in patch set 1).
- verified behavior: almost everything works appropriately, however the close button in the error dialog (e.g. for CanDoAction failure) doesn't work (i.e. after clicking the &quot;x&quot; icon, nothing happens - dialog stays open)
|Uploaded patch set 2.
|Patch Set 2: Verified

- rebased
- fixed commit message
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Vered - please remove from the patch the changes to the non-English properties files (they shouldn't be manipulated manually). Thanks.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 6: Looks good to me, approved


|Patch Set 6: No score

[acked rest-api patch by mistake - reverting ack]
|Patch Set 7: Looks good to me, approved


|Patch Set 1:

Alex, can you please remove the first &quot;Signed-off-by&quot; line from the end of your commit comment?
Also, no need for the &quot;Bug-Url&quot; line at all in case there is no relevant bugzilla item - you can remove that line as well.
Thanks.
|Patch Set 3:

Yair - we need an engine-core maintainer to review engine-core files. thanks.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

- rebased
- verified in Japanese in both FF and Chrome
- fixed commit comment (I assume &quot;mm&quot; referred to &quot;minutes&quot; and not &quot;seconds&quot;)
|Change has been successfully merged into the git repository.
|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved

- rebased
- verified on Chrome and FF, for both English and Japanese.
|Change has been successfully merged into the git repository.
|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved

- rebased
- verified on both FF and Chrome
|Change has been successfully merged into the git repository.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

- rebased
- verified on both FF and Chrome
|Change has been successfully merged into the git repository.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved

- rebased
- verified on both FF and Chrome
|Change has been successfully merged into the git repository.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved

- rebased
- verified on both FF and Chrome
|Change has been successfully merged into the git repository.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved

- rebased
- verified on both FF and Chrome
|Change has been successfully merged into the git repository.
|Patch Set 5:

&gt; In the old WPF days, we needed some compatibility, so changes such as-

&gt; isAutoStartup &lt;= getauto_startup

&gt; were blocked. This may not be relevant anymore, but I'd appreciate if Einav can ack it as well.

[sorry for the extremely late response]

The issue that we had with WPF was related to the fact that we couldn't control the way that the C#-to-Java-converter converts C# getters/setters to java methods. 

That let to constraints on how methods should be named on the java side.

We don't have any of the above anymore; therefore, as long as all the method renames were appropriately updated also on the GUI side (just like all other parts of the code that are using the business entity) - we should be good.
|Patch Set 1: Verified


|Patch Set 1:

- commit comment will be fixed

- Note that:

  - all files in the patch are auto-generated from Zanata

  - the files in this patch are .properties files; at least some of the trailing white-spaces are due to strings that indeed need to end with a space (e.g. CommonApplicationConstants file, diskNamePrefix key: Value in English is: &quot;Disk &quot;).

What is the &quot;rule&quot; regarding strings within a .properties file that needs to end with a whitespace?
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

- rebased
- commit comment fixed
- verified
|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Patch Set 3: Verified

- rebased
- verified - looks good (see https://bugzilla.redhat.com/attachment.cgi?id=641728)
|Patch Set 3: Looks good to me, but someone else must approve


|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified

- rebased
- removed &quot;htmlSpace()&quot; from CommonApplicationConstants&quot; that is not being used
- verified
|Patch Set 6: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Yair - please review core changes: AuthenticationResult.java
Alona/Derez - please review the rest (text changes).
Thanks.
|Uploaded patch set 2.
|Patch Set 2:

- uploaded an updated patch according to Alona's comments
- Yair: Please note that:
   - There are more backend changes in this patch set than the previous one - please review them.
   - One of the messages that I changed in this patch set is the one associated with AppError's &quot;NETWORK_ATTACH_ILLEGAL_GATEWAY&quot;, which is (maybe) referred to in Common's &quot;NetworkInterfaceValidator.java&quot; - not sure if the fact that I changed the value of this messages affects the NetworkInterfaceValidator or not - let me know if there are any issues with that.
|Patch Set 2:

Derez - generally, you are right; 
specifically in this case, the strings within the annotations are not being used, as they are overridden by the strings within the .properties file(s); 
however, for the sake of good order, I will upload a new patch set with your suggested fixes.
|Uploaded patch set 3.
|Patch Set 3:

Moti - can you please review the engine-core changes?
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, but someone else must approve

- reviewed messages only (AppErrors.properties/AppErrors.java)
- not critical: I think that the double &quot;cannot&quot; within the messages can be changed to something like one of the following:
  - &quot;cannot [action] [type]. Connecting to the Host via SSH has failed. ...&quot;
  - &quot;cannot [action] [type] due to failure in connecting to the Host via SSH. ...&quot;
 (just sounds better, IMO)
- giving &quot;+1&quot; only, as the remaining files in this patch need to be reviewed by an engine-core maintainer.
|Patch Set 6: Looks good to me, but someone else must approve

- no change in messages from previous patch-set -&gt; approved.
- needs engine-core maintainer ack for rest of the files.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, but someone else must approve

- Derez - can you please review as well? code looks OK to me.
- Verified (compiled with all-langs, checked French locale, no line breaking anymore)
|Patch Set 1:

What about the code for Hosts sub tab in the Cluster's main tab? Shouldn't it be fixed as well? Maybe need to post an additional patch?
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

- rebased
- removed some trailing white-spaces
- verified
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased.
|Change has been successfully merged into the git repository.
|Patch Set 3:

- when adding/editing quota, the storage section always shows in the table &quot;All Storage Domains&quot;, even if the &quot;Specific Storage Domains&quot; radio button is selected.
- the quota-usage seems to be wrong (in my case, it shows 0 used GB instead of something larger than 0).
- when standing on &quot;Specific Storage Domains&quot;, clicking on the &quot;Edit&quot; button in the table doesn't do anything
[maybe there is some kind of gwt exception?]
|Patch Set 6: (1 inline comment)


|Patch Set 1:

Ofri, I believe that there are changes in MoveOrCopyDiskModel.java that weren't supposed to be part of the patch?
|Patch Set 1:

[I specifically refer to the commented-out lines]
|Patch Set 2:

Ofri: it seems that when I attempt to move a disk to a storage domain that has no quota (bypassing the client validation by commenting out the GUI validation code), I get the ACTION_TYPE_FAILED_QUOTA_IS_NOT_VALID CanDoAction error, instead of the one that you have added: ACTION_TYPE_FAILED_NO_QUOTA_SET_FOR_DOMAIN.

Is that OK?
|Patch Set 1: Verified

looks good, Vojtech.
|Patch Set 2:

I agree with Gilad - removal of pool should be executed on the backend side, rather then the frontend.
the command can either be altered accordingly (but then it affects also REST API - need to check that this is OK), or add another optional boolean parameter to the command (&quot;removePoolUponDetachAllVMs&quot;, false by default).
|Patch Set 6: (1 inline comment)


|Patch Set 6:

Tomas, text-wise it is (almost) OK, however, a few tweaks need to be done:
- Add &quot;Note:&quot; to the beginning of the label text
- Put the label text before the check-box
- Align the left &quot;border&quot; of the label with the left &quot;border&quot; of the check-box (i.e. push the label a little bit to the right)
|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved

Eventually, I would want the note-label to appear before the &quot;approve operation&quot; check-box, since I believe that it is more correct UX-wise: The user should first read all the relevant information, and only then make the decision [reading-flow-wise it is more correct].

However, this change should be applied to all places that contain a latch and a note; i.e. the correct place to do that is the RemoveConfirmationPopupView. So you made a good point - since this type of change will affect multiple views in the application, it is better to do it in a separate patch.

[I rebased the patch and added &quot;Note:&quot; to the beginning of the label text]
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Uploaded patch set 3.
|Uploaded patch set 5.
|Patch Set 1: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 3: (1 inline comment)


|Patch Set 4: (2 inline comments)


|Patch Set 5:

patch seem to depend on patch set 1 of http://gerrit.ovirt.org/#/c/7177, which is outdated.
please upload an updated patch, that depends on the updated patch set (2) of http://gerrit.ovirt.org/#/c/7177.
|Patch Set 5:

or simply on latest upstream, whatever it is...
|Patch Set 6: Verified

verified behavior.
|Patch Set 1: (9 inline comments)


|Patch Set 2: (3 inline comments)


|Patch Set 2: (2 inline comments)


|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)

see my inline comment.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased, re-verified.
|Change has been successfully merged into the git repository.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 3:

note: in order to make sure that there aren't VMs/Templates in the system with &quot;illegal&quot; USB-Support values, need to take care of Import as well:
When importing a Linux VM/Template with Legacy USB-Support to the system, need to modify this value to Disabled.

[can be done within this patch or in a separate patch]
|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, but someone else must approve

ack for GUI
|Uploaded patch set 2.
|Patch Set 2:

rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 4.
|Patch Set 4:

rebased
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: (1 inline comment)


|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved

rebased
|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Patch Set 2: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

shouldn't we use the maven-antrun-plugin which is already used in ear/pom.xml, for example, for deleting a directory (in the ear/pom.xml case, it is used to delete the deployment directory)?
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

please remove comment.
|Patch Set 2: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

No real need in &quot;storagesTitle&quot;; please remove it and use &quot;storageTitle&quot; instead.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased, tested
|Change has been successfully merged into the git repository.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, but someone else must approve

rebased, verified the bahavior on devel env.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified

rebased.
|Patch Set 2: Looks good to me, approved

rebased.
|Change has been successfully merged into the git repository.
|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 1: I would prefer that you didn't submit this

&quot;uicommon&quot; is obsolete (will be removed soon).
&quot;uicommonweb&quot; should be changed.
|Uploaded patch set 2.
|Patch Set 2:

rebased
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 5:

- No need for the &quot;WAN Options&quot; sub-title within the dialog - the &quot;Enable WAN Options&quot; check-box is enough (if there were more WAN options, it would have made sense).

- Please make sure that the &quot;Enable WAN Options&quot; is un-checked by default.
|Patch Set 7: Verified

behavior verified.
|Patch Set 2: (4 inline comments)


|Uploaded patch set 7.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1:

agreed (didn't know that the mount command is accepting tenths of seconds as a parameter) - indeed it should be more intuitive/easy for the user to pass the parameters exactly as the &quot;mount&quot; command expects them.
I recommend to abandon this patch; instead, the label in the GUI should indicate that the timeout is in milliseconds and not in seconds.
|Patch Set 1:

correction to my previous comment: tenth of seconds, not milliseconds.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 6.
|Patch Set 6: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: (1 inline comment)


|Patch Set 1: Verified

verified - applied the patch and was able to add a POSIX DC and storage domain to my setup.
|Patch Set 1:

Allon, what was before this patch? admin got nothing or got everything when running queries as user? as admin? not sure exactly what the problem was (if there is also an example, it would be great). Thanks.
|Patch Set 1:

got it - many thanks for the clarification.
|Patch Set 1: I would prefer that you didn't submit this

you have checkstyle violations:

frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/vms/key_value/KeyValueModel.java:74: String &quot;;&quot; is non-externalized.
 Please externalize it by moving it to i18n Constants/Messages interface or add //$NON-NLS-1$ comment to marks the string as non externalized

frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/vms/key_value/KeyValueModel.java:83: String &quot;=&quot; is non-externalized.
 Please externalize it by moving it to i18n Constants/Messages interface or add //$NON-NLS-1$ comment to marks the string as non externalized

frontend/webadmin/modules/uicommonweb/src/main/java/org/ovirt/engine/ui/uicommonweb/models/vms/key_value/KeyValueModel.java:117: String &quot;=&quot; is non-externalized.
 Please externalize it by moving it to i18n Constants/Messages interface or add //$NON-NLS-1$ comment to marks the string as non externalized
|Patch Set 2: Verified

verified behavior.
There is a problem when selecting a key and value remains empty: Validation isn't being performed on the client side and it fails on validation on the engine-core instead (i.e. CanDoAction).
Can be fixed later in a separate patch.
|Uploaded patch set 3.
|Patch Set 3:

rebased
|Patch Set 3:

The validation problem on which I pointed out earlier is fixed in http://gerrit.ovirt.org/#change,4571
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved

rebased, verified behavior (validation messages should change accordingly - can be done in a separate patch)
|Patch Set 9: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8: (1 inline comment)


|Patch Set 2: Verified


|Patch Set 1: Verified


|Patch Set 1:

Yes, &quot;edit policy&quot; button is now working again...
Please mention https://bugzilla.redhat.com/818224 in the commit comment.
|Patch Set 4:

I guess that this patch can be applied for consistency, although the whole point of public queries is for the user to be able to run them even if he is not logged in, so there is no meaning for the &quot;isFiltered&quot; in this context, since filtering should be done according to the logged-in user permissions; if there is no logged in user, according to what are we filtering?...
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified

tested power user portal: Add Disk works, no infinite animation in all sort of places, etc.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Patch Set 4: Verified


|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8:

Danny: The engine-core action changes that you have mentioned are taken care of in the following patch:
http://gerrit.ovirt.org/#change,3679
|Patch Set 1: Verified

Applied and tested on my environment - looks OK.
|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 11: Looks good to me, approved


|Patch Set 12: Verified; Looks good to me, approved


|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 11: Looks good to me, approved


|Patch Set 12: Verified; Looks good to me, approved


|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 11: Looks good to me, approved


|Patch Set 12: Looks good to me, approved


|Patch Set 12: Verified


|Patch Set 13: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

- New Pool: No need for &quot;Total &lt;text-box&gt; + &lt;text-box&gt;&quot;; should be only &quot;Total &lt;text-box&gt;&quot; (text-box enabled)
- Edit Pool: Missing border in Total text-box.
- New/Edit Pool: Please align Prestarted text-box to the right.
|Patch Set 4: Verified


|Patch Set 6: Verified


|Patch Set 1: Looks good to me, but someone else must approve

the code looks OK,
the only thinks that I am not sure about is the AppErrors-related changes (e.g. changes from &quot;VALIDATION.VDS.NAME.INVALID&quot; to &quot;VALIDATION_VDS_NAME_INVALID&quot;) - adding derez as a reviewer to verify that the messages changes are correct.
|Patch Set 4: Looks good to me, but someone else must approve

Frontend seems ok (uicommon is obsolete, so no real need to change it - only uicommonweb is relevant, but it doesn't matter that much).

Just in case, I added derez to review the GUI part as well.
|Patch Set 1: (1 inline comment)

please note embedded comment.
also, note that uicommon is obsolete and doesn't needs to be updated (doesn't matter if you change it or not).
|Patch Set 2:

Since os doesn't affect the Monitors field anymore, the call to &quot;UpdateNumOfMonitors&quot; can be removed from the &quot;OSType_SelectedItemChanged()&quot; method within UnitVmModel.
|Patch Set 3: Looks good to me, but someone else must approve

Logic seems OK. Please wait for Derez's review on this as well.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Fails

UICommonWeb: VmListModel, HostListModel: the &quot;import&quot; for ConstantManager has been removed, and now the project refuses to compile.
Also, a lot of the imports have been changed in the UICommon project (which is practically an obsolete project).
Please:
- Remove only LINQ comments in UICommonWeb
- Remove only LINQ comments in UICommon (or ignore this project completely - doesn't matter)
- Make sure that the project compiles before submitting the patch into gerrit.

Thanks.
|Patch Set 2:

Vojtech:

- missing &quot;VM Network&quot; check-box in New Network dialog from DC context.

- when checking the &quot;override MTU&quot; check-box, filling something in the text-box and then un-checking the check-box, the contents of the text-box should be cleared. This is true for the New Network dialog from both DC and Cluster context.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Patch Set 1: Looks good to me, approved

note: this patch shouldn't be merged until http://gerrit.ovirt.org/#change,2631 is merged.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved

in a separate patch, please fix text; also, mention units of time (seconds?, miliseconds?)
|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 8:

also, change commit comment to begin with &quot;core:&quot; instead of &quot;history:&quot;.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 5: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2:

STP should indeed be removed, however this can be done in a separate patch.
|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 9:

- Regarding patch separation: Not critical; only if really easy and trivial; not worth doing an artificial, difficult separation work just for the sake of separation.
Alona - how difficult is it?

- Regarding Eclipse/mvn plug-in: I didn't understand in the end if an Eclipse plug-in can be used or not. If there is, there should be problem that the check-style mvn plug-in will fail compilation on hard-coded strings in the GUI code.
Alona - Do we have an Eclipse plug in? Can we use it?

- Regarding localizing events/alerts/tasks: As already mentioned earlier, engine-core work needs to be done in order to support this appropriately. This can be handled later, no need to do it as part of this patch (which is a pure GUI patch).

If there are other open issues - please share.
|Patch Set 9:

Gilad - you are right, no question about it. Localization of search/tasks/events/alerts should be handled.
I just don't think that these must be handled as part of this particular patch - it can be handled in a later stage.
We can change the patch subject to &quot;webadmin: user portal and webadmin localization (phase 1)&quot; in order to hint that the localization is not full.
|Uploaded patch set 16.
|Patch Set 16: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

Vojtech, I agree with Gilad on this: This check-box seems strange, I am not sure if people would understand what it is used for and/or ever un-check it.

We should keep in mind what is good for a typical use case (automated GUI tests (Selenium) launching multiple browsers in parallel on same machine is not a typical use case).

I suggest to remove the check-box and have the refresh rate set to the minimal one when out of focus.

In the future, we can consider having all focus-refresh-rates and out-of-focus-refresh-rate configurable.

[I will also put this note in the bugzilla]
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, but someone else must approve

ack on SearchBackend.gwt.xml
|Patch Set 2:

please hide the Disks main tab when standing on a non-Data storage domain node in the left-pane tree.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Patch Set 1: (1 inline comment)


|Patch Set 5: (1 inline comment)


|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 8.
|Patch Set 8: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

- need to display the value also in main grid.
- if value is lower than &quot;low&quot; or higher than &quot;high&quot; - need to display it as custom.
- &quot;never&quot; should not have the number (&quot;-1&quot;) near it.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, but someone else must approve


|Patch Set 4: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

please split to two patches.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 1:

- Not sure that the commit comment should start with &quot;webadmin&quot; - maybe worth replacing (or at least adding) the &quot;engine&quot; component.
- Please add someone from the backend team to review this patch.
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: (1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: (1 inline comment)


|Patch Set 4: Verified; Looks good to me, but someone else must approve

ack on functionality (performed basic sanity on user portal)
|Patch Set 2:

Not sure if &quot;gwt&quot; should be removed; we might have commits that are relevant for both user-portal and web-admin and/or relevant for the gwt infrastructure.
|Patch Set 2:

I actually prefer to keep it short, &quot;gwt&quot; seems OK and understandable enough to me.
|Patch Set 1:

Itamar didn't instruct to remove &quot;gwt&quot;; he asked what is the difference between userportal/webadmin and &quot;gwt&quot;. I answered to that question in one of my previous comments (there might be patches that are common to userportal/webadmin and/or involve changes to the gwt-related infrastructure).

I suggest that &quot;gwt&quot; will stay. You may, of course, remove it if you understood otherwise.
|Patch Set 2: Looks good to me, but someone else must approve

Understood. Acking.
|Patch Set 3: Looks good to me, but someone else must approve


|Patch Set 1:

please split this patch to two patches (the two changes aren't related).
|Patch Set 1: Looks good to me, approved

text change is related to this patch. acking.
|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, approved


|Uploaded patch set 5.
|Patch Set 5: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Verified; Looks good to me, approved


|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 7: Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Patch Set 1: Verified; Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: (1 inline comment)


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 3: Verified; Looks good to me, approved


|Patch Set 1:

Keith, what about http://gerrit.ovirt.org/#change,217? is this instead of it? on top of it?
|Patch Set 3: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: I would prefer that you didn't submit this

Please change commit comment + comment within code. Thanks.
|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)

general test comment on the entire patch.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 4.
|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 3.
|Patch Set 3: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 2.
|Patch Set 2: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: (5 inline comments)

some comments embedded. Please take a look.
|Patch Set 3: (1 inline comment)


|Patch Set 8: Looks good to me, but someone else must approve


|Patch Set 4: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 3: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 2: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Uploaded patch set 4.
|Patch Set 4:

- patch has been rebased
- when attempting to &quot;configure local storage&quot;, a new DC was created, a new Cluster was created, the Host moved to the new cluster and has been activated successfully, but no attempt to create the new local storage domain has been made.
Alexey: Please check the patch again.
|Patch Set 5:

There is a call to RemoveStorageServerConnection after a successful call to AddStorageServerConnection followed by a successful call to AddLocalStorageDomain.
RemoveStorageServerConnection should be called only if AddStorageServerConnection has succeeded and AddLocalStorageDomain has failed.
[Adding local storage domain regularly (i.e. not via &quot;configure local storage&quot;) is working well]

Please fix the patch.
|Uploaded patch set 7.
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1:

please make sure that:
- When selecting a vlan that has other vlan &quot;siblings&quot;, the &quot;bond&quot; button is disabled.
- When selecting a vlan that is attached to a bond (rather than to a NIC), the &quot;bond&quot; button is disabled.

Also, need to consider enabling the &quot;bond&quot; button when checking the left-hand side of the row (i.e. the eth), rather than the right-hand side.
|Patch Set 7: Verified; Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, approved


|Change has been successfully merged into the git repository.
|Patch Set 1: Looks good to me, but someone else must approve


|Patch Set 1: Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 1: Looks good to me, approved


|Patch Set 2: Verified; Looks good to me, approved


|Patch Set 1:

@Alexander, this is a backport of your patch https://gerrit.ovirt.org/#/c/36084. 

Please advise whether or not this is a safe change to backport to 3.5. If not - I recommend abandoning this patch. If so - please review to ensure backport is clean. 

Thanks.
|Patch Set 1:

&gt; I don't see this as much of a risk at all. Should be good to backport.

thanks.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1:

@Tomas - would be great if you can review as well. 

Please note that a similar change was done in the New/Edit Host dialog in patch https://gerrit.ovirt.org/#/c/41240/. 

Thanks!
|Patch Set 1:

Vojtech - is this something that we can/should push forward?
|Uploaded patch set 8.
|Patch Set 1:

@Alexander - need to add reviewers? or too early?
|Patch Set 1:

@Greg: abandon this patch and require PatternFly v1.2.0 instead?
|Patch Set 1:

please rebase now that https://gerrit.ovirt.org/#/c/40887 is merged (I expect there would be a conflict). 
the important thing is to make sure that the double quotation marks are not in the value anymore. thanks.
|Patch Set 2: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1:

&quot;-1&quot; from gerrit-hooks is because the master patch [https://gerrit.ovirt.org/#/c/42590/] is not merged yet. 

Need to merge https://gerrit.ovirt.org/#/c/42590/, then merge this one.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 7:

Alexander - need to add reviewers? or is this still WIP?
|Patch Set 15:

@Eli/Martin: Any chance that you can apply this patch and test the feature end-to-end?

Thanks!
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

@Greg/Vojtech - can you please review? thanks.
|Patch Set 1:

@Greg/Vojtech: can you please review? thanks.
|Patch Set 1:

@Greg/Vojtech - can you please review? thanks.
|Patch Set 1:

@Greg/Vojtech - can you please review? thanks.
|Patch Set 1:

@Greg/Vojtech - can you please review? thanks.
|Patch Set 1:

re: section 4 (&quot;&lt;keyPrefix&gt;_&lt;version&gt;_&lt;actualKey&gt;&quot; client storage key format): 

- including the &quot;version&quot; part in the key is problematic, as we actually expect an upgraded oVirt to read the &quot;old&quot; oVirt persisted values (e.g. column widths in web-admin grids, 'connect automatically' in user-portal login page, etc.). If we include the version part, and we have e.g. ovirt-3.4 installed with a bunch of key-values already persisted: once we upgrade to ovirt-3.5, these values will not be read anymore (therefore, will be practically lost). So I think that the &quot;version&quot; part should not be included in the key. 
- the fact that we are changing the keys will cause an oVirt GUI with this patch applied to &quot;lose&quot; the client-storage values (that are persisted with the &quot;old&quot;-format keys). In order to not lose these values, I recommend attempting to read from the old-format key as a fallback for attempting to read from the new-format key. writing should be done to the new-format key only; if there is a smart way of removing the entries with the old-format keys along the way (to save some client-storage space) - it would be great (nice to have).
|Patch Set 1:

&gt; Does above make sense?

it does, Vojtech - sounds good. thank you.
|Patch Set 1:

&gt; I thought there are different keys at webadmin and userportal per what awels showed me once.

I assume some keys are different, but AFAIK, some keys may be the same, e.g. keys that persist widths of columns in grids within sub-tabs of the VM grid, maybe some defaults in the New VM dialog, etc. (all exist in both web-admin and extended view of user-portal). Assuming keys are persisted per origin, and not per web-app, we may have overlap.
|Patch Set 1:

&gt; Turns out that (3) is not possible since VdcQueryType.GetConfigurationValue (user query) execution requires logged in user (Engine session) context.

I think this is not accurate: look into the runPublicQuery() method in Backend.java: You will see that some configuration values are eligible for anonymous retrieval, including ProductRPMVersion (which is the one that you are interested in, I believe).
|Patch Set 1:

@Derez/Vojtech/Greg - can you please review? thanks.
|Patch Set 2:

@Vojtech/Greg - can you please re-review? thanks.
|Patch Set 1: Code-Review+2

pointing out that the find-bugs warning does not seem to be related to this patch, so should be OK to merge.
|Patch Set 6:

@Greg/Vojtech - can you please review? thanks.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Continuous-Integration+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Continuous-Integration+1

thanks, Greg.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Continuous-Integration+1

thanks, Greg.
|Patch Set 3:

+1 for Alexander's recommendation for using a predefined date-time format, we can do that in a separate patch though. 

@Alexander - other than that, +2?
|Uploaded patch set 1.
|Patch Set 1: Verified+1

.properties files were automatically generated by Zanata.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Continuous-Integration+1

CI failure is not related to the patch (this patch is updating only non-English strings), one CI failure seem to be with resolving dependencies / fetching dependencies from artifactory, other CI failure occurs before the maven part. Both failures are identical to ones that occurred shortly before I rebased the patch.
|Patch Set 2:

&gt; I think it's totally cool if you +2 these yourself. Alon Bar-Lev
 &gt; has done that for simple things he owns. I think it's sometimes ok.

makes sense - thanks, Greg.
|Patch Set 2:

&gt; Build Failed
 &gt; 
 &gt; http://jenkins.ovirt.org/job/ovirt-engine_master_unit-tests_merged/12407/
 &gt; : FAILURE

unrelated to the patch (fails in a very early stage, error seems identical to previous run on the same job). 

 &gt; 
 &gt; http://jenkins.ovirt.org/job/ovirt-engine_master_create-rpms-quick_merged/6482/
 &gt; : FAILURE

unrelated to the patch (fails on some artifactory/infra issue). 

 &gt; 
 &gt; http://jenkins.ovirt.org/job/ovirt-engine_master_dao-unit-tests_merged/12648/
 &gt; : There was an infra issue, please contact infra@ovirt.org

unrelated to the patch, this job seems unstable for a while now.
|Patch Set 4:

Greg, will the error message be displayed at the same locale that is currently used in the GUI by the user?
|Patch Set 4:

&gt; &gt; Greg, will the error message be displayed at the same locale that
 &gt; &gt; is currently used in the GUI by the user?
 &gt; 
 &gt; Yes, this calls the ErrorTranslation code which looks up the
 &gt; correct strings based on the current user locale.

excellent, thanks.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 1: Code-Review+2
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

granting &quot;+2&quot; as this patch contains only automated output from Zanata.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

http://i.imgur.com/kYjeS9a.png
|Patch Set 1: Continuous-Integration+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Continuous-Integration+1
|Patch Set 2:

@Greg/Vojtech - can you please review?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 2: Code-Review+2
|Patch Set 2:

&gt; Alex, you pushed this patch as draft so I can't merge it, please
 &gt; click on &quot;Publish&quot; if you like it merged

strange, the patch appears as &quot;Ready to Submit&quot; [http://i.imgur.com/VLGdUol.png]. Wouldn't a draft patch appear as &quot;Draft&quot; [like http://i.imgur.com/9oTLGYW.png for example]?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 1:

this patch is ready to be merged.
|Patch Set 2:

&gt; Build Failed
 &gt; 
 &gt; http://jenkins.ovirt.org/job/ovirt-engine_3.6_upgrade-from-3.5_el6_merged/115/
 &gt; : FAILURE

doesn't seem related to the patch:

[ ERROR ] Yum Cannot queue package iproute: Cannot find a valid baseurl for repo: epel

[ ERROR ] Failed to execute stage 'Environment packages setup': Cannot find a valid baseurl for repo: epel

 &gt; http://jenkins.ovirt.org/job/ovirt-engine_3.6_upgrade-from-3.6_el6_merged/111/
 &gt; : FAILURE

doesn't seem related to the patch:

[ ERROR ] Failed to execute stage 'Misc configuration': Command '/usr/share/ovirt-engine/dbscripts/schema.sh' failed to execute
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 1:

patch is ready to be merged.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.

patch is ready to be merged.
|Uploaded patch set 1.
|Patch Set 1:

Rerun-Hooks: all
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Code-Review+2 Verified+1

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 1:

this patch is ready to be merged.
|Patch Set 2:

@Vojtech/Greg: Can you please review this one?

Thanks.
|Patch Set 2:

&gt; I +2'd it on Sep 17 :)

thanks, sorry for missing that.
|Patch Set 1: Code-Review+2
|Patch Set 1: Code-Review+2
|Patch Set 1:

&gt; screenshots look nice. thanks for posting those!

+1, looks awesome, Vojtech!
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1

backport.
|Patch Set 1:

@Alexander, from the patch it looks like you took care of both the formPanelLabel and the formPanelValue. However, when testing the patch, it seems like the wrapping occurs only for the labels, and not for the values (see http://i.imgur.com/BHzOMsT.png for a Cluster General sub-tab example)?
|Patch Set 1:

&gt; &gt; @Alexander, from the patch it looks like you took care of both
 &gt; the
 &gt; &gt; formPanelLabel and the formPanelValue. However, when testing the
 &gt; &gt; patch, it seems like the wrapping occurs only for the labels, and
 &gt; &gt; not for the values (see http://i.imgur.com/BHzOMsT.png for a
 &gt; &gt; Cluster General sub-tab example)?
 &gt; 
 &gt; Well yes and no. For any NON input fields (divs/spans) the wrapping
 &gt; will now work, however for input fields it will not. Unfortunately
 &gt; MOST of the values are all input fields.

I'm wondering if it makes sense to change all of the input field values to divs/spans instead? AFAIR, we used input fields in order to be able to highlight the full text (for copy/paste purposes, mostly), even if that text was cropped; but if the text is not going to be cropped anymore, we will always be able to select it (all of it) without needing an input field in order to achieve that. 

The alternative is to resolve [1], at least for the values, which is not trivial, to my understanding, and would also not be consistent with this patch. 

Thoughts?

[1] Bug 1205309 - Cropped labels and values in General subtabs should have a tooltip

[https://bugzilla.redhat.com/show_bug.cgi?id=1205309]
|Patch Set 1:

&gt; &gt; &gt; &gt; @Alexander, from the patch it looks like you took care of
 &gt; both
 &gt; &gt; &gt; the
 &gt; &gt; &gt; &gt; formPanelLabel and the formPanelValue. However, when testing
 &gt; &gt; the
 &gt; &gt; &gt; &gt; patch, it seems like the wrapping occurs only for the labels,
 &gt; &gt; and
 &gt; &gt; &gt; &gt; not for the values (see http://i.imgur.com/BHzOMsT.png for a
 &gt; &gt; &gt; &gt; Cluster General sub-tab example)?
 &gt; &gt; &gt;
 &gt; &gt; &gt; Well yes and no. For any NON input fields (divs/spans) the
 &gt; &gt; wrapping
 &gt; &gt; &gt; will now work, however for input fields it will not.
 &gt; &gt; Unfortunately
 &gt; &gt; &gt; MOST of the values are all input fields.
 &gt; &gt;
 &gt; &gt; I'm wondering if it makes sense to change all of the input field
 &gt; &gt; values to divs/spans instead? AFAIR, we used input fields in
 &gt; order
 &gt; &gt; to be able to highlight the full text (for copy/paste purposes,
 &gt; &gt; mostly), even if that text was cropped; but if the text is not
 &gt; &gt; going to be cropped anymore, we will always be able to select it
 &gt; &gt; (all of it) without needing an input field in order to achieve
 &gt; &gt; that.
 &gt; &gt;
 &gt; &gt; The alternative is to resolve [1], at least for the values, which
 &gt; &gt; is not trivial, to my understanding, and would also not be
 &gt; &gt; consistent with this patch.
 &gt; &gt;
 &gt; &gt; Thoughts?
 &gt; &gt;
 &gt; &gt; [1] Bug 1205309 - Cropped labels and values in General subtabs
 &gt; &gt; should have a tooltip
 &gt; &gt;
 &gt; &gt; [https://bugzilla.redhat.com/show_bug.cgi?id=1205309]
 &gt; 
 &gt; Right if we switch all the TextBoxLabels to be spans or divs (I
 &gt; would have to change that in one of the base classes) the wrapping
 &gt; should work MOST of the time (exception being when the browser
 &gt; cannot wrap the text, it uses white space or dashes to determine
 &gt; when to wrap). So for instance long paths it will be unable to wrap
 &gt; since there is no point in the path to wrap against. So [1] might
 &gt; still need to be done simply due to that fact, but it should be
 &gt; much easier to implement on spans/divs.
 &gt; 
 &gt; Another thing to consider that it is a fairly significant change
 &gt; this close to release.

Thanks for the insights, Alexander. 

Let's proceed with this patch as-is (including backport, etc), since it resolves the reported overlap issue. 

In a separate patch (maybe in the context of bug 1205309), let's switch all the TextBoxLabels to be spans or divs; we can observe/test that for a little bit before deciding whether it makes sense to backport it or not (as you mentioned, it's quite a significant change).
|Patch Set 1:

&gt; Feel free to give me +2 :)

will leave that to @Greg/Vojtech, just to make sure that this patch is properly reviewed and to ensure that we are not missing anything :)  Thanks.
|Patch Set 1: Code-Review+1

(2 comments)

+1 on the ux design. please note minor inline comments regarding the texts. thanks.
|Patch Set 1:

Vojtech, this is the backport of https://gerrit.ovirt.org/#/c/47598/ - can you please review it? thanks.
|Patch Set 1:

@Tal/Eliraz, can you please take a look?
|Patch Set 3:

@Greg: Given that we want the tool-tips to be displayed only when the displayed value is cropped but still be able to highlight (copy/paste) the full value somehow (which is tricky), and given that Alexander has already introduced the patches [1] for wrapping the labels/values which (almost) eliminates the need for tool-tips altogether (as values are not supposed to be cropped anymore) - does it make sense to abandon this patch?

[1] http://tinyurl.com/oly94n7
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2

granting &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1:

granted &quot;+2&quot; as files in this patch are auto-generated by Zanata.
|Patch Set 1: Continuous-Integration+1

not sure why CI is not starting for this patch, in any case - this is only a translation update, was tested locally and should work.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Continuous-Integration+1 Verified+1

granting CR &quot;+2&quot; as files in this patch are auto-generated by Zanata.
granting CI &quot;+1&quot; as CI is not initiated, for some reason - this is just a translation update, was tested locally and works.
|Patch Set 2: Code-Review+2

@Greg - verified?
|Patch Set 2:

&gt; verification screenshots: http://imgur.com/a/EuDLS

cool - thanks for the elaborated verification screen-shots!

@Tal - ok to merge.
|Uploaded patch set 1.
|Patch Set 1: Code-Review+2 Verified+1
|Patch Set 1: Continuous-Integration+1
|Patch Set 1:

automatic pull of translations from Zanata (translation management system).
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2
|Patch Set 1: Continuous-Integration+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+2 Continuous-Integration+1

automatic pull of translations from Zanata (translation management system).
|Patch Set 1:

@Alexander, can you please review? this is a backport of [1] that you have already reviewed. thanks.

[1] https://gerrit.ovirt.org/#/c/48438/
|Patch Set 1:

@Greg/Vojtech - can you please review?

thanks.
|Patch Set 1: Code-Review+1

&quot;IRS&quot;?!... :)
|Patch Set 4:

Oved - any chance that you can review or recommend someone that will be able to grant &quot;+2&quot; on this patch? many thanks.
|Patch Set 7:

@Alexander, were there any changes to the backend part since Ravi's/Oved's &quot;+1&quot; (Jan 4)? should Ravi/Oved re-review anything on the backend side?
|Patch Set 7: Code-Review+2
|Patch Set 1:

@Alexander/Greg: Can you please review?

Thanks.
|Patch Set 2:

@Greg - mostly for formality: +2?
|Patch Set 2:

@Vojtech: rebase, re-verify, merge?
|Patch Set 1:

&gt; Interestingly enough there is no 'master' patch for this since
 &gt; master no longer has these login pages for webadmin/userportal. Not
 &gt; sure how to tell the bot to ignore that fact.

@Eyal/Sandro - any idea how to work around that? we have here a 3.6-only patch since the parallel 'master' code simply doesn't exits (due to the SSO changes).
|Patch Set 8:

&gt; still relevant

Oved/Ravi - does this patch need review from my team? or is this still WIP/irrelevant?
|Patch Set 1:

@Eliraz, please note that due to a translation cycle that took place before this patch was created, the code currently contains translations to the *old* English messages [1]. 

Since the old English messages contained variables (&quot;{0}&quot;), their translations also contain variables. 

And since the updated messages in this patch no longer contain variables, but their translations do contain variables, I believe that rebasing this patch may result in a compilation error. 

Please rebase, and, as needed, remove any variable occurrences from the translated messages (typically, non-English .properties files should not be manually modified; however, in this case - we must do that in order to prevent a compilation error). 

Let me know if you have any questions. Thanks.

[1] https://gerrit.ovirt.org/#/c/49445/ (observe the changes in the non-English UIMessages .properties files)
|Those hosts are candidate for running a vm?
|Please move this declaration closer to the usage (before the loop).
|Please move this closer to the actual usage.
|It would still be readable (even more so in my opinion) if they are together but a bit lower. You are not using any of them for any of the ifs.
|Please rename it to &quot;host&quot;.
|So, just to see I understand correctly: if we have enough spare hosts that means we can use them to run other vms on and that's why they are added to the &quot;candidateHosts&quot; list. 
Eventually we will get a situation where that are not enough spare hosts and in that case those hosts are not returned as candidates for other vms to run on because we want them as spares?

If that's the case shouldn't it be &lt;=?
|Please rename it to &quot;host&quot;.
|shouldn't the error be related to selector somehow?
|why not use java 8 stream here instead of the loop?
|what is the meaning of recording a null entry?
|I'm pretty sure this can be done using streams in java 8.
|You have in your code places where you call record(null,...). Maybe add a unit test for that as well.
|if vmBase.getCpuProfileId() == cp.getId() what's the point of this line: vmBase.setCpuProfileId(cp.getId())?
|Shouldn't this be under profiles section? Like in the previous file (userportal-gwtp/src/main/resources/org/ovirt/engine/ui/frontend/AppErrors.properties)?
|Maybe move it to &quot;buildIoTune&quot; method, where the cache is actually used. That way when the method is called there is no chance of it falling on null cache.
|If someone will call &quot;buildIoTune&quot; with cache=null it will fail. See my previous suggestion.
|I still find that a little weird (why not use both 0 and null as unlimited? or just disallow null values and use 0 as unlimited). 
However, if that is the intended design just add a comment in &quot;StorageQos&quot; about the interpretation of 0.
|How are 0 values interpreted?
|So if the value is 0, the returned converted value is 1. 
Isn't it easier (and has the same logic as libvirt) to set the allowed min value to 1 and treat 0 value as unlimited, as opposed to treating nulls as unlimited?
|Could this be null?
|Could this be null?
|Done
|Done
|I think it's more readable with members, and yes I wanted to use the equals.
If the collections have at least one element in common disjoint will return false (disjoint({1,2},{1}) = false) and that is not what I want. I need to know that the collections are equal (all elements are common).
|Done
|Done
|Done
|Done
|Why did you change all the arrays to collections and not this one?
|So now if hosts or cluster are null an exception will be thrown. Is this the desired behavior?
|Ok. 
Once the field is editable, and you preform an update command, does something change in the db in regards to this field?
|So the code doesn't update the field and no indication of that is provided to the user?
|This will fix it for the disk list. But what about the other fields that are different?
Shouldn't all of them be marked, to make sure the update doesn't fail on something else?
|No. You always want to add a disk profile to the new domain. 
And if you don't give the users permissions no one can use it.
|Can't you inject it in the test instead?
|I agree with Roman, it seems a bit weird to pass it as an argument.
I'm not familiar with injector.get, but if it can be used it sounds like an elegant solution.
|Master branch already contained this constructor, that's why I didn't add it there. I'm not sure what you mean by &quot;support compensation&quot;...
|Is there a time you don't want to refresh the labels list?
|Isn't there a method or a query that will return the list of labels by host id? Instead of looping over all the labels.
|And again, if we have a method that will return the labels by vm id I think it's better to use that.
|The vmId is returned in hosts?
|Is 3 the default number for visible items we usually show? 
If so, maybe it's worth using a constant. 
Actually, I think using a constant is better even if that's not the case.
|Done
|Done
|Done
|why did you add that?
more specifically, why wasn't it there in the first place?
|At this point you can define a &quot;bestHostId&quot; variable and use it.
I think it's more readable.
|Won't that throw an exception if bestHost is not present? Is that what we want?
|how come it wasn't needed before?
|I agree with Roman here, the code is not easily read. 
Two methods would probably be more understandable.
|Is this still relevant? Maybe rephrase it, so the message will reflect what was done.
|Call it checkQuotaValidation and override with a call for super in the extending classes.
|If that's the full message, I think it's fine.
|shouldn't there be a separate message for removal? ACTION_TYPE_FAILED_QUOTA_DEFAULT_CANNOT_BE_REMOVED
|Done
|Done
|Done
|this was all rewritten, I think you're looking at an older version.
|Done
|You mean a separate commit? I was meaning to do that, got committed here by mistake.
|Done
|you can extract this to method and reuse it.
|reuse the extracted method from the previous comment.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|ReplacementUtils is not available in that context.
We'll be able to use it when ValidationUtils will move to the core.utils package.  
I have changed the code to use String.format instead
|Moving ValidationUtils is not in the scope of the patch.
|Done
|Patchset 2 is better.
|This sounds a bit like you are migrating the cluster compatibility version and not the vm.
Maybe: &quot;Needed specifically to allow HE VM migration to a cluster with an increased compatibility version&quot;?
|Done
|there is a patch that removes it: https://gerrit.ovirt.org/#/c/61071/
|No, you were right. It should be removed from this patch since it already exists.
|origin type 5 is not relevant here?
|Maybe add a small explanation about what issue it fixes.
|Done
|+1 :-)
|Done
|I wanted the method to be usable when setting local maintenance to true (like when moving host to maintenance)
|moved it to HostedEngineHelper.
|Done
|Done
|Done
|Yes. This makes sense. 
Also, I'll add the error to the audit log in a similar way to ActivateVdsCommand so it's more visible to the user.
|Done
|Done
|Done
|Actually the logger errors don't stop the installation. They appear in the audit log, but the installation ends fine.
|Done
|Done
|you mean if ha client is null?
|Done
|there is a bug open to remove this piece of code: https://bugzilla.redhat.com/show_bug.cgi?id=1372237
I'll handle that in a later stage.
|Maybe we can have a fallback method. Adding a new interface file for each vdsm version after every api change that's made feels like excessive work in terms of upkeep. 
And I'm not sure but we'll probably need to have one for json and one for xml?
|Done
|Done
|Done
|Done
|missed it :-)
anyway I used your Optional class now.
|Done
|Done
|Done
|at this stage can't you use the new column to select the domains ids?
|please shorten the message.
|this doesn't sound quite right...
maybe: &quot;The remaining hosts cannot run the engine vm&quot;?
|same
|same
|same
|The shared list contains files that are stored in the configuration archive on the shared storage. The behavior for setting values in these files is different than with the dynamic files which are only stored locally. 
I don't think it's a good idea to combine those two lists together.
|Done
|I can't. This else is to find the config type for the key in case it wasn't passed.
|Done
|To delete the rest of the file, in case the new content is shorter for some reason than the previous. This shouldn't happen.
|Done
|Done
|Done
|Done
|added the supported types.
|Done
|it's being passed as None to the client.
|I think it's less readable.
|It's being called from the client where the config_type is always provided. It might be None, but it's there.
|Done
|Done
|Done
|Done
|I can add a default value, but I don't see much point to it, since it is passed from the client as None if the user didn't supply a type.
|Done
|Done
|I'll add it here and in the method help, later we could add a hosted-engine --get-config-types or something like that.
|Done
|Done
|Done
|it's being passed as None
|Done
|Done
|Done
|Done
|Maybe change the name to &quot;isHostSwappingMoreThanAllowed&quot; to be more accurate?
|Can this be null?
|Why did you change the original calculation method and replaced the available memory with the free memory?
|You have the header twice :-)
|Done
|Done
|Almost the same, the return values are different. 
I could add a common parent with a method just for the formatting of the error, but I'm not sure it's worth it.
|Done
|Putting everything in one procedure seems unreadable and also unrelated, since different tables are updated. Adding a new procedure that will update the db_generation for multiple vms makes more sense to me. However, I'm not sure how much of a performance hit there is in this case. Do devices frequently change on lots of vms?
|Done
|Done
|actually, maybe a comment that explains what this filtering does is enough? 
I'm having trouble finding a normal name that explains the meaning of this list :-)
|maybe vmsThatExistInDb? 
reportsOnExistingVmsInDb doesn't sound like it's a vms list.
|I think that vdsmVmsToMonitor is clearer, since it implies what is going to be done with those vms, and I added a comment explaining the filtering.
|Done
|Done
|not really... and you're right it's clearer in PollVmStatsRefresher. 
moved it.
|Done
|why not use:
for index, tune in enumerate(tunables)?
|Looks a little weird that something related to KeyLine implements something related to KeyValueLine, when later you have KeyValueLineWidget extending KeyLineWidget.
Is it possible to add a KeyLineModel and use it instead?
|if you are not adding extra functionality you can remove this
|same
|You can remove this.
|Why the sort? 
After you collect it to a set I'm not sure it's guaranteed to remain sorted.
|added a test to log warning messages
|not sure, but shouldn't the cascading in the db be enough to remove the entries?
|I would add a new db procedure to update all the labels at once per the vmId instead of updating each label separately.
|same
|again, I would prefer a single db procedure by the host id.
|same
|add a test to see the entries in the labels map table are cleared
|add a test where you have a vm (or host) with two labels and you update the vm to have one label.
|similar to line 760, bad merge?
|are you using hostModel anywhere?
|I would have renamed it to h, but I don't mind that too much.
|call it vm, easier to read
|call it host, easier to read.
|that's a good name. 
I'm just thinking about the comment above which states that the setters are not supposed to be used and are only here for GWT. 
This makes me think their names might be important, but I may be mistaken.
|shouldn't the setter be related to an existing field:  setVmIdMap?
|call it label please
|same
|this can be calculated once for this method
|move it to a separate line to keep consistency
|why is this by cluster name and the &quot;getHostList&quot; is by cluster id?
|call it label
|vmNames?
|hostNames?
|Done
|Patch Set 28: Code-Review+1
|Patch Set 31: Code-Review+1
|Patch Set 29:

(6 comments)
|Patch Set 31: Code-Review+1

(1 comment)
|Patch Set 20:

(5 comments)
|Patch Set 23: Code-Review+1
|Patch Set 9:

(2 comments)

Two small comments
|Patch Set 10: Code-Review+1
|Patch Set 10:

(8 comments)

some comments and questions
|Patch Set 27: Code-Review+1
|Patch Set 26: Code-Review+1
|Patch Set 18:

(4 comments)

I have some questions, can you take a look please?
|Patch Set 19:

(2 comments)
|Patch Set 21:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 2:

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(3 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

Removed the empty lines
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 4:

(1 comment)
|Patch Set 6:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Commit message was updated.
|Patch Set 3:

(5 comments)
|Patch Set 5: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1

(2 comments)
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Patch Set 9: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 8:

(2 comments)
|Patch Set 7: Code-Review+1
|Patch Set 6:

(2 comments)
|Patch Set 8:

(1 comment)
|Patch Set 7: Code-Review+1
|Patch Set 11: Code-Review+1
|Patch Set 14: Code-Review+1

(1 comment)
|Patch Set 15: Code-Review+1
|Patch Set 8:

(1 comment)
|Patch Set 9: Code-Review+1
|Patch Set 15:

(1 comment)
|Patch Set 15: Code-Review+1

(1 comment)
|Patch Set 17: Code-Review+1
|Patch Set 24: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(5 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Uploaded patch set 6: Patch Set 5 was rebased.
|Patch Set 1:

(1 comment)
|Patch Set 4: Code-Review+1
|Patch Set 11: Code-Review+1
|Patch Set 14:

(2 comments)
|Patch Set 17: Code-Review+1
|Patch Set 22: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(3 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 7:

(2 comments)
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1

(6 comments)
|Patch Set 7:

(1 comment)
|Uploaded patch set 10.
|Patch Set 9:

(1 comment)
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 11: Verified+1

(1 comment)
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13: Patch Set 12 was rebased.
|Uploaded patch set 14: Patch Set 13 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1:

I prefer to leave is as draft until I finish the verification, after that I'll publish.
|Patch Set 1: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 5: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: -Code-Review

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 5:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

there is a different fix for the upgrade issue here: https://gerrit.ovirt.org/#/c/62888/
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Reverted

This patchset was reverted in change: If918b11efb896a75be43404abe44415f2090fd4b
|Patch Set 5: Reverted

This patchset was reverted in change: Ib9e5dedccd81b9aa0b14e283136eb3fb2687cf03
|Patch Set 6: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 5: Code-Review+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: -Verified

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 3:

(5 comments)
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 4:

(3 comments)
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(3 comments)
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 3:

(3 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(1 comment)
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7:

(1 comment)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(4 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(3 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

It solves this bug for 4.0: https://bugzilla.redhat.com/1389326. 
I can add it to the commit.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 4: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2:

The new mom interface requires a new vdsm, but what controls the interface mom will use is the vdsm (mom.conf), and if we want to use the new functionality it needs to be set here.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4:

There is a method in HostedEngineHelper (isHostedEngineStorageDomain) that does exactly that. It might makes sense to remove it if you're going with the db change (or use it instead if it fits with your scenario).
|Patch Set 6:

(1 comment)
|Patch Set 9: Code-Review+1
|Patch Set 2:

(5 comments)
|Patch Set 3: Code-Review+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 5:

(1 comment)
|Uploaded patch set 7.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12.
|Patch Set 12: Verified+1

rerun-hooks: all
|Patch Set 12:

Rerun-Hooks: all
|Uploaded patch set 13.
|Patch Set 13: Code-Review+1
|Patch Set 13: -Code-Review Verified+1
|Uploaded patch set 14.
|Uploaded patch set 15.
|Uploaded patch set 16.
|Patch Set 15:

(3 comments)
|Patch Set 16: Code-Review+1
|Patch Set 16: -Code-Review Verified+1
|Abandoned
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(3 comments)
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 3: Verified-1
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Patch Set 6:

(2 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 6:

(2 comments)
|Patch Set 8: Verified+1
|Patch Set 9: Patch Set 8 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 4:

(2 comments)
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

(1 comment)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(3 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 5: Verified+1
|Patch Set 5:

(2 comments)
|Uploaded patch set 6.
|Patch Set 6: Verified+1

(3 comments)
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(3 comments)
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 11:

(3 comments)
|Patch Set 12: Code-Review+1
|Patch Set 5: Code-Review+1

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(1 comment)
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 6:

(1 comment)
|Patch Set 8: Patch Set 7 was rebased
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 10: Commit message was updated.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Putting everything in one procedure seems unreadable and also unrelated, since different tables are updated. 
Adding a new procedure that will update the db_generation for multiple vms makes more sense to me. 
However, I'm not sure how much of a performance hit there is in this case. Do devices frequently change on lots of vms?
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(2 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(2 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

(1 comment)
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 2:

(1 comment)
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Rerun-Hooks: all
|Patch Set 1: Verified+1
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 8:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 3:

(1 comment)
|Patch Set 10:

(2 comments)

is it possible to separate this to two patches? 
one that creates the new KeyWidget and one that uses it for the affinity labels ui?
|Patch Set 4:

(2 comments)
|Patch Set 7: Code-Review+1
|Patch Set 13: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Rerun-Hooks: all
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 3: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(5 comments)
|Patch Set 5:

(2 comments)
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 6: Code-Review+1
|Patch Set 3:

(1 comment)
|Patch Set 8: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 2:

(3 comments)
|Patch Set 2:

(1 comment)
|Patch Set 2:

(6 comments)
|Patch Set 2:

(2 comments)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1:

(1 comment)
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|done intentionally to avoid exceeding 55 chars. anyway I added the space.
|I actually checked and saw that in case of a failure while loading VMs from export domain, the returned VMs list is cleaned and empty, so nothing we should do there. See ImportVmCommand.java line 342.

only external providers should be handled and for those I'm not sure,  but I think we should check how it behaves before changing it. according to code they are handled the same but I'm not sure which types of errors are returned...is it right to clean lists each time loading is done for all external providers?
|Done
|Done
|Done
|Done. I created a separate method for the export domain listener.
|I could added this method to the vmTemplate class instead of duplicating it, but I'm not sure it's fine since vmTemplate is a backend class...
|no, this slash means there is a space before the bracket, i.e. &lt;space&gt;((Version:....)
|What do you mean? in TemplateListModel the Template's version is already displayed in a table under the title &quot;Version&quot;.
|Both GetVmsFromExternalProviderQueryParameters and GetVmsFromExternalProviderParameters classes are shared between &quot;FullData&quot; &amp; &quot;OnlyNames&quot; because I didn't think it is worth creating a new entity for adding the names list parameter. For the &quot;fulldata&quot; you need the names and therefore I left it for the &quot;OnlyNames&quot; also and you just pass null there while invoking the query from frontend.
|Why? 
Anyway, done.
|Done
|Done.
It's also used by VdsServerWrapper but it's not relevant since we don't use it.
|Done
|Done
|Done
|Done
|replace to new AsyncQuery&lt;&gt;(new AsyncCallback&lt;AppropriateTypeHere&gt;() - Done.
|There are many places in code that still uses:
query.asyncCallback = new AsyncCallback() 

The intention is to change them all?


Regarding getting the query from importVmsModel:
Since we are handlig a kind of a wizard with 2 dialogs here, I'm not sure that the stopProgress() should be done automatically by the model. 
There is a place that the stopProgress() is called manually in code (for cases I want to display a message in 1st dialog and not displaying the second dialog - cpu arch error or in case no vms left to be imported). And another thing is that there is still the backward compatibility flow that use the same model so I'm not sure about this change. It may be buggy here...
|Done
|Done
|Done
|Done
|Done
|Done
|it's needed to be tested according to DC version.
For DC version &lt; 4.1, we'll need to call the old getFullInfo query - because of backward compatibility.  
But what should be done in case of choosing the &quot;any data center&quot; value?
|Done
|Please see my previous answer....
|Done
|Please see my previous answer.
|Done
|Done
|Done
|Done
|Done
|but It works now - I checked it. It shouldn't work?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|* non, those messages appear in the import dialogs (first or second, depends on the message)
* details - fixed to lower case.
|Done
|where?
|Done
|Done
|Done.
I unified the 2 queries into one query named GetVmsFromExternalProviderQuery (as was before the change).

Now there is only one call to backend for the data center version done for choosing if to work with backward compatibility UI flow or with the new one.
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|agreed not to do that
|Done
|Done
|Done
|Done
|Done - 
in case of backward compatibility we log the running vms to log instead of audit log. 
Only in case of new api (while the vms list are the ones chosen by the user to be imported, we log to audit log)
|Done
|Done, renamed to GetNamesOfVmsFromExternalProviderSupported
|Done
|Done
|Done
|Done
|Done (good point).
|Done
|Done
|Done
|Done
|Done
|Before the change, the getReturnValue() was called inside the getVmsFromExternalProvider() method and returns an Object type and then there was a call to executeQueryCommand() which excepts an Object as a parameter. 
Since we didn't want to leave the return type as an Object and casting from/to Object is redundant here then I guess this is the preferable option. Any reason to split the getReturnValue/setReturnValue calls?
|Done
|Done.
from UI import aspect, you must choose a data center for importing, so data center can't be null. 

now that data center can't be null while running query from the AbstractVmProviderProxy either, let's remove the null checking for datacenter.
|For the import use case, the data center is currently essential for checking the cpu arch and for loading the relevant external providers. So I can implement it for future use for rest API but I prefer to do that in a separate patch while required and not change this current query which is currently for GUI only.
|Can you please clarify this comment? which other constructor?
|Done
|ok
|Done.
tried it and it is seams redundant and therefore removed.
|Done.
It doesn't produce a warning but I will change it to be on the safe side.
|Done
|Done
|Done
|Change checkbox default to &quot;true&quot;
|Done
|Done.
I prefer to rephrase to &quot;host of the hypervisor&quot;  because it can be either host ip or host name...
|This validation (which checks reg expression of: &quot;^[A-Za-z0-9_-]+(@[.A-Za-z0-9_-]+)?$&quot;), is not correct for kvm user name. 
I verified it with Shaharh. 
The user name should be any free text since we are not sure which chars are valid for the kvm username and there is no reason to limit.
|No need.

Reason: when we change the kvmRequiresAuthentication field, we also mark both kvm-user,kvm-password fields as IsChangeable=false/true accordingly.

And in validateEntity() method, for each field there is a check for getIsChangable() before running other validations.

So in case the kvmRequiresAuthentication==false, the entries are marked as isChangeable==false and the validation is not performed.
|Done
|Done
|The isRunOnlyIfAllValidationPass flag is used in code in other places/classes (backend &amp; frontend) so I prefer to avoid changing it locally here and replace it all together in a different patch with other boolean flags using the same terminology of isXXX).
|Done
|please see my previous comment
|please see my previous comment
|As the whole headless solution is based on, also here the getParameters().getRunOnceDisplayType() value determines the mode we are in for the backend: 
if null- should read videoType from DB since it is not set by frontend
if value is &quot;none&quot; - set this value to mark that we are in headless mode.
if has a value which is not &quot;none&quot; - use this value sent in parameters as the actual DisplayType for the video device.

This is required since in case of a headless VM required to run in RunOnce as non-headless, the displayType to run with is chosen by frontend.

so here I set the value of getVM().setDefaultDisplayType() in any case and as far as I checked, no logic or validation is affected. In infoBuilder.buildVmVideoCards() we are based in this value in order to know if to discard video devices (headless), read from DB (null) or read from vm (the value sent by frontend).
|Done
|Done
|Done.
You are right and I missed that. In case of non-headless, this check is redundant.
|The comment is confusing and I'll change it.

The problem with this code is that the VIDEO device appears in vmManagedDeviceMap is the value read from DB and it was written to ovf with the DB value for video device. 

The reason for that is that the Video device was not part of the devices list returned by getVmDevicesFieldsToUpdateOnNextRun() since it is not anotated in the parameters as a device to enable/disable (is is saved in static data).

So since the video device is saved with DB configuration and not the changed configuration for next run and since it caused me problems for the headless vms, I removed it temporarily from ovf till we will refactor and move the video device from static to dynamic data. It was anyway ignored by readovf which read the DisplayType value only.

I added a @todo.
|Done
|Done
|I know but since this refers to defaultDisplayType and not the devices and it can be marked as &quot;none&quot; but since one is based on defaultdisplaytype data member which is never assigned and the other place is based on supportedGraphicsAndDisplays() which can't be none then I'll remove those null checks.
|This lines check if the DisplayType value should be taken from DB or read from vm entity. 
In case we are not in runOnce mode or in case the vm.DisplaType==null, we should read the value from DB (as done till now).
|Done
|Done
|No reason. I added the check for headless before.
Done.
|you are right since it is checked before calling this method.
Done.
|I verified it and it works fine - I switched only video, only graphics and both and it works ok.
|Done
|Done
|Done
|will be solved in future patch while adding the rest api support
|will be solved in future patch while adding the rest api support
|Done
|sure, they are removed in the updateGraphicsDevice() method.
|Done
|import/export for headless VMs and templates were verified
|Done
|DisplayType.none was changed to null value instead of VmDeviceType.NONE
|In REST api we send display_type=null to commands in case we send/change the graphics_console type for new/existed VM and we need the engine to decide on display_type supported for changed graphics configuration.

We can use display_type=null for headless only in case we change the REST api implementation and add this logic (of choosing the right display_type) there.
|Done
|currently the usb option is greyed out when headless mode is set in ui. Anyway, I can omit those lines of changing it to disable value. 
Done.
|Done
|Done
|Done
|Done
|Done
|It can't (compilation error - contains() method can't be resolved...)
|same answer...
|Done
|same answer
|same answer
|Done
|Done
|Done
|Done
|Done
|Done.
|Done
|The cluster CV was null before the fix done at this line for using the effective CV instead of the vm's CV.

With this fix it works OK and as expected.

My comment in this context was that we still need to fix the ConfigValues.M64BitMaxMemorySizeInMB default value to an invalid one. 
This value may be used in case the effective returns null (it might happen according to the code. Jakub wrote that it won't.. not sure what happens in REST api etc) and for cases that no entry exists in vdc_options.
|In case getEffectiveCompatibilityVersion() returns null for some reason or in case the maxMemorySize value for the effectiveCompatabilityVersion doesn't exist in vdc_options then the value is taken from ConfigValues.

For ConfigValues.M64BitMaxMemorySizeInMB -  the default value is set to invalid very large value (268435456) so it should be changed to a valid value (4194304) (please see ConfigValues.java line 577).
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done.
|Done
|The line was removed since getCloneVmCommand was also handled in line # 1960.
|Done
|Done
|In general, two limitations exists while implementing this patch:
1. VdcActionUtils.canExecute() &amp; VdcActionUtils.canExecutePartially() methods get the getClass() of the entity (the &quot;type&quot; parameter) as a parameter and are based on it.

2. The GWT doesn't support reflection.

So based on those limitations, the solution includes:
1. Declare a new class for overriding the getStatus() method and not using an anonymous class.

2. Adding a new entry in VdcActionUtils._matrix for the VmWithStatusForExclusiveLock class

3. Add this class to the common package since used by VdcActionUtils.


Anyway, I put VmWithStatusForExclusiveLock in a separate class file under common.businessentities.
|Please note that I couldn't use an anonymous class declaration because of the lack of Reflection in GWT which is required in VdcActionUtils.
|please see my previous comment
|Done.

Regarding the ESX handling:
you are right and I thought on that but as I wrote on the patch commit message, other external providers should not be blocked in case of snapshot existence:
Xen - hasCurrentSnapshot() api is not supported.
KVM - all snapshots are collapsed by v2v before copying the disks so we don't want to block KVM vms with snapshots.

So there is no way but to block only ESX vms...
|Done
(libvirt hasCurrentSnapshot() method returns integer: 1 if current, 0 if not current, or -1 on error)
|I know but it seems more easy to read when it is done here in one place...
|Sure, sure.
this is my first patch for VDSM and my first patch with python so... there were things I learned to fix only after changes were uploaded. sorry for that.
|ok, since it requires changes in v2v and v2v_test in few places not related to this fix, I will leave it as is for now (i.e. conn.getType() == &quot;ESX&quot;)
|I just imitate the check done in 2 places in v2v code:
if conn.getType() == 'Xen' (lines 1075, 1225)

Anyway after this fix change the v2v_test failed. Maybe because the VMware url there starts with esx, e.g.:
v2v.get_external_vms('esx://mydomain'....)
|Done
|why is that? I will actually run the same code and just duplicate it to the new testGetExternalVMsWithSnapshots and testGetExternalVMsListWithSnapshot (I need to check both (ExternalVMs, ExternalVMsList) for backward).

Please note that the VM_SPECS array already included a VM with snapshot before my fix, that's why I fixed the existing tests in relevant places....
|Done.
Done.
|Done
|why not calling:
vmDevice.setDevice(displayType.getDefaultVmDeviceType().getName()) ?
|Done.
You are definitely right, the sysprep domain is a combo box and therefore the user can manually set a value there and it should be displayed there after enabling/disabling sysprep.
|Shouldn't we remove this if and call  getVmDeviceUtils().updateUsbSlots(..) anyway? 
Because you still want to update usb slots even if only spice configuration was changed.....
|Martin, Regarding the two possible options that you mentioned:
1) As mentioned by you, the problem of not removing those spicevmc CHANNEL devices is relevant for both VMs and Templates and should be fixed for both (I think those CHANNELs are created for Templates which are created from VMs that have them, but I'm not sure- need to check).
2) Who is responsible on creating those spiceVMC CHANNELs and is it related to the spice usb configuration? not sure on that.
|I think the problem here is with the device type. 

Please note that in updateUsbSlots() method we add/remove a SPICEVMC device of type=REDIR but the bug is dealing with SPICEVMC device of type=CHANNEL. 

AFAIK, the SPICEVMC of type CHANNEL is added only after running the VM and is not added by the engine (maybe by VDSM/libvirt), so I'm not sure who is responsible for removing it. 
Also, if you create a new VM with VNC console type (and not SPICE) and run it, then the SPICEVMC channel is not added
|o-&gt;O (removeLeftOverDevices)
|Please note that this doesn't handle templates, only VMs (while the original bug was opened to handle templates) - maybe it worth adding a remark in BZ saying that we won't remove spicevmc channels for templates..
|Done, thanks!
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done.

Only issue:
The AsciiDoc syntax for using lists (for The options are:...) doesn't work for me. I guess it's because it within a comment block. 
What is the syntax to do that within a comment?
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|1. the source host and &quot;migration failed&quot; are relevant since there might was a migration trial that failed before logging this

2. I leave &quot;stopping/migrating&quot; since maybe in next trial migration will succeed.

I just removed the &quot;since no host..&quot; section.
|Done
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 2:

(2 comments)
|Patch Set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Patch Set 4: Verified+1
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1

verified this patch on my engine
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Commit message was updated.
|Patch Set 2:

(4 comments)
|Uploaded patch set 4.
|Patch Set 5: Commit message was updated.
|Patch Set 5: Verified+1
|Patch Set 6: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Patch Set 3: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 5.
|Patch Set 5: Verified-1
|Patch Set 5:

the FindBugs failed because the following warning:
UIConstants.java:-1, SKIPPED_CLASS_TOO_BIG, Priority: Low 

What should I do to fix that?
|Uploaded patch set 6.
|Patch Set 7: Patch Set 6 was rebased
|Patch Set 7:

CI passed, Thanks.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8:

(7 comments)
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Patch Set 9:

(3 comments)
|Patch Set 9:

(2 comments)
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Uploaded patch set 13.
|Patch Set 14: Patch Set 13 was rebased
|Patch Set 14:

(39 comments)
|Patch Set 14: Verified+1
|Uploaded patch set 15.
|Patch Set 16: Patch Set 15 was rebased
|Uploaded patch set 17.
|Patch Set 18: Patch Set 17 was rebased
|Patch Set 18:

(6 comments)
|Uploaded patch set 19.
|Patch Set 20: Patch Set 19 was rebased
|Patch Set 20:

(1 comment)
|Patch Set 20: Verified+1
|Patch Set 20:

(1 comment)
|Uploaded patch set 21.
|Patch Set 21:

(2 comments)
|Patch Set 22: Patch Set 21 was rebased
|Patch Set 22: Verified+1
|Uploaded patch set 23.
|Patch Set 24: Patch Set 23 was rebased
|Patch Set 24:

(15 comments)
|Uploaded patch set 25.
|Patch Set 26: Patch Set 25 was rebased
|Patch Set 26:

(4 comments)
|Patch Set 26: Verified+1
|Uploaded patch set 27.
|Patch Set 27:

(7 comments)
|Patch Set 27: Verified+1
|Uploaded patch set 28.
|Patch Set 29: Patch Set 28 was rebased
|Patch Set 29: Verified+1

(5 comments)
|Uploaded patch set 30.
|Patch Set 30: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(1 comment)
|Patch Set 4:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Patch Set 2:

done (the bug was opened on the tooltip and that's why I added it to the subject but I don't want to split into 2 patches..)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(3 comments)
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

Hi Sahina,

I saw you are using the runMultipleAction() method with the isRunOnlyIfAllValidation flag set to true for Gluster.

For example- please see ClusterGeneralModel.java line 478

this flag wasn't supported till now (behaved as set to false) and this patch added the support for it. 

Can you please verify if it is a regression or not in all Gluster related calls.
If a regression - we need to change this flag value to false.

Thanks!
|Uploaded patch set 4.
|Patch Set 3:

(6 comments)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

I succeeded to check the import process start to end, so it is verified.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

Please note that there is currently a bug in master regarding the new list boxes mechanism of which no event is raised in case of choosing an empty/null entry in the list boxes (relevant for choosing the empty CCV). I informed Alexander Wels...
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Code-Review+1
|Patch Set 1:

There was a grey area in the upper top section of this dialog as common for all other webadmin dialogs for fixed fields. In this dialog it included the DataCenter, Source, External Providers fields. Please notice that the grey area is not displayed now with this patch fix.
|Uploaded patch set 1.
|Patch Set 1:

Verified but I still want to run some tests.

Please note that this patch doesn't include the following:
1) backend support for instance type handling (ui changes are there)
2) support new feature via REST api (backward compatibility should exist and I will re-test it again)
3) Run once is working but with a limitation of not choosing the display type (cirrus is chosen by default)
|Patch Set 1: Verified+1
|Patch Set 2: Commit message was updated.
|Uploaded patch set 3.
|Patch Set 3:

(13 comments)
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4:

(13 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 5:

(5 comments)
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Patch Set 2:

Please note that regardless to this bug, there is another issue in which you can't set the CCV of a VM to be none/empty via REST api.

According to Juan Hernández, in order to set the CCV for a VM to none/empty, you should send the following:
POST /ovirt-engine/api/vms/123
&lt;vm&gt;
  &lt;custom_comaptibility_version/&gt;
&lt;/vm&gt;

This doesn't work and in order to fix it, you should change both REST api code and backend code.
I can either open a separate bug or fix it as part of this patch. what is preferable?
|Uploaded patch set 3.
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 4:

(6 comments)
|Patch Set 4: Verified+1
|Uploaded patch set 5.
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1

(6 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1

(1 comment)
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 4:

(1 comment)
|Patch Set 4:

(1 comment)
|Patch Set 6: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(4 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(6 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 6.
|Patch Set 6:

(1 comment)
|Patch Set 6: Verified+1
|Patch Set 5: Code-Review+1

In that context, please note that I have already opened a bug for removing the display* params sent with VM.create api  - bug #1418187
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(2 comments)
|Patch Set 4: Patch Set 3 was rebased
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 7: Published edit on patch set 6.
|Patch Set 8: Published edit on patch set 7.
|Patch Set 9: Published edit on patch set 8.
|Uploaded patch set 10: Commit message was updated.
|Patch Set 10: Verified+1

(3 comments)
|Patch Set 5:

Please note that adding the videoDevice to managedDevices list was originally there even before the Headless changes:
please see https://gerrit.ovirt.org/#/c/67576/8/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/builder/vminfo/VmInfoBuilderImpl.java line 145.

So it was a bug even before my changes for the headless feature, right?
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(2 comments)
|Patch Set 3:

Tomas, can you please review this &quot;ugly solution&quot; patch and see if it's ok from UI aspect?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6: Patch Set 5 was rebased.
|Uploaded patch set 7.
|Patch Set 3:

(2 comments)
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Patch Set 12: Patch Set 11 was rebased
|Patch Set 12: Verified+1
|Patch Set 12:

(2 comments)
|Uploaded patch set 13.
|Patch Set 13: Verified+1

(3 comments)
|Uploaded patch set 14.
|Patch Set 14: Verified+1
|Patch Set 14:

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 5:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(1 comment)
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

You still need to remove the spicevmc channel. removeVideoDevices(..) just remove all devices of type VmDeviceGeneralType.VIDEO but not the spicevmc channel.
|Patch Set 2: Code-Review+1

My comment in BZ ttps://bugzilla.redhat.com/show_bug.cgi?id=1430688#c4 was just to describe how to reproduce and what is the different between that BZ#1430688 and BZ#1434161 (which seems a duplication bug at first glance).
Anyway, +1 since this patch fix that mentioned comment
|Patch Set 1:

(1 comment)
|Patch Set 1:

(2 comments)
|Patch Set 7:

(2 comments)
|Patch Set 10: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1

(15 comments)
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(3 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(2 comments)
|Uploaded patch set 5.
|Patch Set 5: Verified+1

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4: Commit message was updated.
|Uploaded patch set 5: Commit message was updated.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Uploaded patch set 7: Commit message was updated.
|Patch Set 7:

(2 comments)
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4: Commit message was updated.
|Patch Set 4: Verified+1
|Patch Set 5: Patch Set 4 was rebased
|Uploaded patch set 6.
|Patch Set 6: Verified+1

(2 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 3: Code-Review+1
|Patch Set 5:

Please consider removing null defensive code for VmDynamic#graphicsInfos also from RunVmValidator#getVmActiveGraphics()
|Patch Set 6:

My last comment here for removing null defensive code for VmDynamic#graphicsInfos also from RunVmValidator is already merged in a seperate patch: c6bc2f0f478af255c200678dfcbbeeac8249fbac
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 1:

(1 comment)
|I considered adding it there but thought that maybe this validation might be used elsewhere where spaces are fine, if it's unlikely I will move it there
|Done
|Nope, will remove
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Why not use the Map interface?
|I think it's also possible to use Collections.isEqualCollection() if we don't mind using 3rd party dependencies
|Done
|Wrapping with &quot;if (getParameters().getImportAsTemplate()) {}&quot; will do?
|It does not propagate because it does not use DiskImage in the constructor, but I'm removing the one on line 116
|Done
|Done
|Done
|Done
|I will send a separate patch with a fix, how about:
&quot;Fetch all images of a given type for the storage domain with the given ID&quot;?
|Done
|I think @Test is missing
|Done
|Apparently it is not possible to use views in the upgrade scripts since they are created later
|Why not List&lt;VDS&gt;?
|Done
|Done
|Done
|Done
|Done
|Done
|It is no longer used in RemoveSnapshotCommand, am I missing something?
|Done
|Done
|entries
|Done
|It's used again in line 275
|It's an intentional typo I made to check a strange failure that happened when I changed the name of the method to &quot;disk_operation_tests&quot; as Allon suggested in patchset 1. 
It looks like removing the word &quot;tests&quot; resolves this issue, but this requires some more investigation.
|DiskAllocationItemView is appended to this panel and is wrapped in &lt;Row&gt;, if I wrap this as well it messes up the UI and looks like this:
http://i.imgur.com/P8tJORG.png
|There is no bug, this is the engine patch that should fix this issue: https://gerrit.ovirt.org/#/c/77504/
|removed in patchset 3 :)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

&gt; Questions:
 &gt; 1. Does this affect EDITING a path as well?
 &gt; 2. What about the backend validation?
 &gt; 3. What about other file-based storage types? Wouldn't we want that
 &gt; check on those too?

1. It affects editing as well
2. Backend validation will be pushed soon
3. Looking at the GlusterFS and POSIXFS frontend validation it seems they only check for non-emptiness (GlusterStorageModel extends PosixStorageModel and does not have its own validation), same goes for their backend validations, should I add this validation to them as well?
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3: Code-Review+1
|Patch Set 3: -Code-Review
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4: -Verified

&gt; This would overrdie the compensation context in the normal flow
 &gt; (ctor with params and context) too.
 &gt; 
 &gt; The only thing that should be moved to postConstruct phase, IMHO,
 &gt; is setting the DAO.

Do you mean putting something like this:
            ((DefaultCompensationContext)this.context.getCompensationContext()).setBusinessEntitySnapshotDao(businessEntitySnapshotDao);

in postConstruct()?

Another option is to move the creation of the DefaultCompensationContext to an else block in postConstruct, since (if I'm not wrong) the if statement tests for the invocation of the ctor with the parameters and context
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(4 comments)
|Patch Set 2: Verified+1
|Patch Set 2:

&gt; Benny, it is probably asking too much, but would you be so kind to
 &gt; add similar examples to the Ruby and Java SDKs? Not a problem if
 &gt; you can't, just if you are interested and have some spare time.

Not problem at all, I'll try to have them pushed next week
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(3 comments)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Patch Set 3:

&gt; I have a weird question - correct me if I am wrong, but isn't the
 &gt; _remove_me_ prefix is an inner implementation of vdsm?
 &gt; I mean, before this patch, did the engine even know that this
 &gt; prefix exists?
 &gt; 
 &gt; If it is an inner implementation of vdsm, then maybe the right
 &gt; place to fix it is in vdsm, i.e make StorageDomain.getImages return
 &gt; only images that are not in the middle of a removal process
 &gt; (without the prefix).
 &gt; 
 &gt; Think of a scenario where Nir decided one day to replace it with
 &gt; &quot;__remove__me__now__&quot; prefix (because two underscores instead of
 &gt; one is the new awesome way to do it) - he won't tell you that he
 &gt; did that because it's an inner implementation of vdsm and then the
 &gt; bug will reoccur.

You are correct and initially I wanted to do the filtering in the VDSM (getImageList @ hsm.py) but after consulting with Maor and Liron they suggested to do it in the engine because of backward compatibility with older versions of the VDSM, and perhaps add the filtering to the VDSM as well, but I'll need Nir's opinion on this.
|Patch Set 3: -Verified
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

(2 comments)
|Patch Set 7: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 4: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4:

&gt; Benny, please make sure to verify thoroughly both in new block
 &gt; domain and in direct LUN creation

Fixed to work in direct LUN as well (behaved differently because it's single select)
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 7: Patch Set 6 was rebased
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3: Code-Review+1
|Patch Set 3: -Code-Review
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1

(4 comments)
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2:

&gt; (1 comment)
 &gt; 
 &gt; So what will the API get now?

For the scenario in the bug the message will be:
ovirtsdk4.Error: Fault reason is &quot;Operation Failed&quot;. Fault detail is &quot;connection refused (connection refused)&quot;. HTTP response code is 400.
|Patch Set 2:

(1 comment)
|Patch Set 2: Verified+1

(1 comment)
|Patch Set 2:

(1 comment)
|Patch Set 3: Code-Review+1
|Patch Set 2: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Uploaded patch set 4.
|Patch Set 5: Patch Set 4 was rebased
|Patch Set 6: Patch Set 5 was rebased
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 5: Commit message was updated.
|Patch Set 5: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit e210f3cb6ab51970a63025c491b7bfe28887c6c6
|Uploaded patch set 4: Commit message was updated.
|Patch Set 4: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3: Verified+1
|Uploaded patch set 4: Commit message was updated.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Abandoned
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Patch Set 5: Verified+1
|Patch Set 6: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 4fc2bb8e617ae30ebf2f0cefdc71f0ec20914c9c
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3:

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Cherry Picked from branch master.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 3: Patch Set 2 was rebased
|Abandoned
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 3: -Verified

I will submit a new patchset today
|Patch Set 3:

After talking with Ala, I'm not sure that max_size is relevant here since it was made for the case when copying a disk, not adding a disk and the user calling this should probably not take into account the provisioned_size is actually larger than what he set it to
|Patch Set 3:

&gt; &gt; After talking with Ala, I'm not sure that max_size is relevant
 &gt; here
 &gt; &gt; since it was made for the case when copying a disk, not adding a
 &gt; &gt; disk and the user calling this should probably not take into
 &gt; &gt; account the provisioned_size is actually larger than what he set
 &gt; it
 &gt; &gt; to
 &gt; 
 &gt; OK, so are the patches relevant or not?

Yes, they are relevant
|Abandoned

it is currently impossible to implement max_size in the engine
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Topic set to localdisk
|Patch Set 2: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Topic set to localdisk
|Patch Set 2: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Topic set to localdisk
|Patch Set 2: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Topic set to localdisk
|Patch Set 2: Verified+1
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Topic set to localdisk
|Uploaded patch set 3.
|Patch Set 3:

ci please build
|Patch Set 3: Verified+1
|Uploaded patch set 4: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1:

ci please build
|Uploaded patch set 2: Commit message was updated.
|Topic set to localdisk
|Uploaded patch set 3: Patch Set 2 was rebased.
|Patch Set 3:

ci please build
|Patch Set 3: Verified+1
|Uploaded patch set 4: Commit message was updated.
|Patch Set 1:

ci please build
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2:

Rerun-Hooks: all
|Patch Set 2: Verified+1
|Patch Set 2: Patch Set 1 was rebased
|Patch Set 2:

Rerun-Hooks: all
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

ci please build
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7: Commit message was updated.
|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 11.
|Uploaded patch set 12: Commit message was updated.
|Uploaded patch set 13.
|Uploaded patch set 14.
|Patch Set 15: Patch Set 14 was rebased
|Uploaded patch set 16.
|Uploaded patch set 17.
|Uploaded patch set 18.
|Patch Set 19: Patch Set 18 was rebased
|Uploaded patch set 20.
|Uploaded patch set 21.
|Uploaded patch set 22.
|Uploaded patch set 23.
|Uploaded patch set 24.
|Uploaded patch set 25.
|Uploaded patch set 26.
|Uploaded patch set 27.
|Uploaded patch set 28.
|Uploaded patch set 29.
|Uploaded patch set 30: Commit message was updated.
|Uploaded patch set 31.
|Uploaded patch set 32.
|Uploaded patch set 33.
|Uploaded patch set 34.
|Uploaded patch set 35.
|Patch Set 36: Patch Set 35 was rebased
|Patch Set 36: Verified+1
|Uploaded patch set 37: Patch Set 36 was rebased.
|Patch Set 37:

(9 comments)
|Uploaded patch set 38.
|Uploaded patch set 39.
|Uploaded patch set 40.
|Uploaded patch set 41.
|Patch Set 41: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 7: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2: Commit message was updated.
|Restored
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Patch Set 1:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Patch Set 2: Code-Review+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Topic set to live-storage-migration
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(2 comments)
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Patch Set 4: Cherry Picked

This patchset was cherry picked to branch ovirt-engine-4.1 as commit 56b42baf6534c403289146395450586f881d6a31
|Uploaded patch set 1.
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

(1 comment)
|Patch Set 2: Patch Set 1 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: -Verified
|Uploaded patch set 2: Commit message was updated.
|Patch Set 2: Verified+1
|Patch Set 3: Reverted

This patchset was reverted in change: I3f62543474173ed7c1f74981a35644c72b58f925
|Patch Set 3: Reverted

This patchset was reverted in change: Iec17742fab1417c2bb9b5a026280b870b9dcef95
|Patch Set 3: Reverted

This patchset was reverted in change: I36993e5ce84abfbb5d267590bd4075fec01ddb57
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3: Commit message was updated.
|Patch Set 4: Patch Set 3 was rebased
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Abandoned

Sent a new patchset to https://gerrit.ovirt.org/#/c/78210/
with changes according to Maor's comments, abandoning this
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

&gt; (as I commented on the 4.1 patch) not sure we want to default to
 &gt; all labels being no-wrap?
 &gt; 
 &gt; @Alexander, thoughts?

Daniel replied on the 4.1 patch:
&quot;@Greg - don't we want to avoid wrapping on all labels? I mean, do you recall whether we have any label in the UI that should support wrapping?&quot;
|Abandoned
|Uploaded patch set 1.
|Uploaded patch set 2.
|Should this be &quot;increase in traffic on the network&quot;?
|&quot;hot plugging a NIC&quot;
|Should this just be &quot;enables passthrough&quot;, no &quot;the&quot;? Also, &quot;an SR-IOV-enabled&quot;
|Just &quot;Passthrough&quot;?
|Wayward comma after &quot;marks&quot;. Should it be &quot;a `passthrough` NIC&quot;?
|&quot;from a request&quot;
|&quot;a virtual machine&quot;
|I'd take out &quot;admin&quot;, to avoid ambiguity (is it meant to be &quot;administrator's&quot; or &quot;administrative&quot;?).
|I'd change this to &quot;to and from&quot;, just because it sounds weird the other way around. Also, I'd remove &quot;the participated&quot; so it's just &quot;to and from virtual machines&quot;.
|Sorry - to clarify, what needed to change was not the hyphenation (which should, indeed, say &quot;SR-IOV-enabled&quot;), but the article (should be &quot;an&quot; not &quot;a&quot;).
|Should take out &quot;will&quot; from this sentence.
|Should &quot;engine&quot; here be {engine-name}?
|Please revisit this sentence. s/2/two; s/include/includes; I think, from context, that &quot;profiles&quot; is meant to be &quot;profile's&quot;; and since this is an example, perhaps &quot;Given&quot; should be &quot;If, for example,&quot;.
|Was this missed? (It looks fine, is just missing the updated tags)
|removal?
|Just &quot;the removal&quot; or &quot;the remove action&quot; should be fine, the rest is clear from context.
|Needs a comma after &quot;for example&quot;
|A comma after &quot;If not specified&quot; would be good, too.
|ID, in a sentence, should be caps.
|&quot;the system&quot;
|Don't need a capital H for hosts. This should either start with &quot;List&quot;, or the previous entry should start with &quot;Lists&quot;.
|s/Servie/Service
|Maybe &quot;how the migration is treated&quot; would be better?
|&quot;are allowed&quot;
|I prefer this without the &quot;is&quot;, actually.
|I like this better without &quot;is&quot;.
|Could make this one sentence: &quot;The DNS resolver configuration will be reported...&quot;
|The original text was more technically accurate. The network element is required in order to attach a network to a NIC, and it can have either an id or a name (&quot;network id=&quot; or &quot;network name=&quot;).
|s/newtwork/network
|Should have a comma after &quot;For example&quot;. Also, s/newtork/network
|Missing updated by docs tag
|Could make this one sentence: &quot;DNS resolver configuration will be reported...&quot;
|&quot;to which&quot; is actually more grammatically correct, but I'm not a stickler for that rule (it doesn't always work well).
|There's probably a nicer way to phrase this for docs than just my quick explanation of how it works. :P
|s/send/sent
|Should probably be &quot;and&quot;, since it does both.
|NIC should be capitalised.
|Doesn't enable the thing so much as it does the thing; i.e. &quot;Network filters filter packets etc.&quot; If that sounds a bit awkward, then &quot;Network filters allow you to filter etc.&quot;
|All network filter names should be in `` tags.
|Should start this sentence with a &quot;The&quot;.
|Should be &quot;represents&quot;. Also, what does this sentence actually mean? It's a bit awkward. Please revisit.
|Minus &quot;that&quot;
|Based on the new text, it looks like the original text was correct without &quot;that&quot;, i.e. It's describing what the network will be used for, not which network will be used for each thing.
|Minus &quot;that&quot;
|Minus &quot;that&quot;
|Previous version with &quot;a&quot; would be more accurate here, since a VM can have more than one NIC. Maybe &quot;Represents a virtual machine NIC&quot;?
|ID in a sentence should be in caps.
|The comma after &quot;deprecated&quot; should be a full stop or a semi colon instead.
|&quot;A link&quot;, to match item above.
|The suggested rewording doesn't seem to have been applied here.
|In an earlier comment, Juan suggested changing this to: &quot;Indicates if the pool should automatically distribute the disks of the virtual machines across the multiple storage domains where the template is copied.&quot; I agree with that, as it's more descriptive.
|The last line says &quot;If this attribute is `true`, then, when a virtual machine is added to the pool, the storage domain that has more free space.&quot;, but the sentence doesn't really finish. It looks to me like it should be &quot;If this attribute is `true`, then, when a virtual machine is added to the pool, the storage domain that has more free space is selected.&quot;
|Looks like this should end with &quot;is selected.&quot;
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Documentation+1
|Patch Set 2: Documentation+1
|Patch Set 2: Documentation+1
|Patch Set 2: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 2: Documentation+1
|Patch Set 2: Documentation+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

&gt; Tahlia, the documentation for the ProductInfo class has changed
 &gt; since you did this review. There are conflicts that prevent merging
 &gt; it now. Can you review it again and submit a new version of the
 &gt; patch?

Thanks, Juan. New patch submitted, abandoning this one.
|Abandoned

New up to date patch submitted instead of this one.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

Hi Idan, can you please review my updates to check that I haven't changed the technical accuracy?
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

Hi Tomas, I've updated this based on the assumption that this status refers to the host's power management device, rather than the status of the host itself. Please let me know if this is incorrect or if the wording should be different.
|Uploaded patch set 2.
|Patch Set 1:

Needs full stops; otherwise all good.
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 3:

(9 comments)

Hey Megan, a few comments:
|Patch Set 4:

(2 comments)
|Patch Set 5: Documentation+1
|Patch Set 1:

(2 comments)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(2 comments)
|Patch Set 1:

&gt; (2 comments)

Or &quot;the remove action&quot;
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(1 comment)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(2 comments)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(1 comment)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(2 comments)

Looks like there are white space issues after lines, too.
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(1 comment)

Some wayward white space (highlighted red in the diff).
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

Some white space (see red in diff); otherwise all good.
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(2 comments)
|Patch Set 2:

Approved (aside from one white space character), but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(3 comments)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 1:

(6 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Documentation+1

Added a couple of backticks, otherwise all good.
|Patch Set 1:

(7 comments)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 4:

(4 comments)
|Patch Set 5: Documentation+1
|Patch Set 1:

(4 comments)
|Patch Set 2:

Approved, but my account seems to have reverted back to not being able to add Documentation +1. Not sure why. 

Adding Juan to merge.
|Patch Set 3:

(2 comments)
|Patch Set 3:

(2 comments)

Sorry, here's some clarification:
|Uploaded patch set 4.
|Patch Set 4: Documentation+1

Made minor updates to new files.
|Uploaded patch set 4.
|Patch Set 4: Documentation+1

Minor edit. Added docs tags.
|Uploaded patch set 2.
|Patch Set 2: Documentation+1

Added docs edits.
|Uploaded patch set 4.
|Patch Set 4: Documentation+1

Minor edits; added docs tag
|Read-only is the correct spelling.
|I've switched the meaning back to the way it was originally written but will confirm with Marcin which way is correct.
|Hey Byron, 

enum should be expanded if it can't be removed.
|Hi Sahina, 

Could I please get some draft text for the type as a whole and the for options other than Gluster? 

Thanks, 
Megan
|Patch Set 1: Documentation+1

Changes look good to me.
|Patch Set 2: Documentation+1

Changes look good to me.
|Patch Set 3: Documentation+1

Changes look good.
|Patch Set 3: Documentation+1

Changes look good.
|Patch Set 1: Documentation+1

Documentation looks good to me.
|Patch Set 1: Documentation+1

Changes look good to me.
|Patch Set 1: Documentation+1

Changes look good.
|Patch Set 1: Documentation+1
|Uploaded patch set 1.
|Patch Set 1:

Hi Martin, Could you please check that my edits didn't change any of your intended meaning? Thanks, Megan
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1:

Hi Dominik and Marcin,
Could you please check that my edits didn't change any of your intended meaning? 
Thanks,
Megan
|Uploaded patch set 2.
|Patch Set 1:

(2 comments)
|Patch Set 1:

Marcin would you please confirm if &quot;Bond mode 4 is the 802.3ad standard, which is also called dynamic link aggregation.&quot; is correct?
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1:

(1 comment)
|Patch Set 2: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Patch Set 1: Documentation+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

Thanks Sahina. I'll review the pieces you added then leave the rest to be caught and filled in on the next docs day.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Documentation+1
|Uploaded patch set 4.
|Patch Set 4: Documentation+1
|Patch Set 1: Documentation+1
|Done
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

(1 comment)
|Uploaded patch set 4.
|Uploaded patch set 5: Commit message was updated.
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Uploaded patch set 7.
|Patch Set 7:

&gt; Is this a duplicate?

Yes, it seems to be. Must have missed it. Closing it.
|Abandoned
|Uploaded patch set 2.
|Uploaded patch set 1.
|Abandoned

Abandoning this commit, since https://gerrit.ovirt.org/#/c/75343/ is the relevant patch.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Abandoned

opened this patch since 77082 had outdated yarn files. Updated now, abandoning this.
|Uploaded patch set 1.
|Patch Set 1: Verified-1
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 1.
|Uploaded patch set 2: Patch Set 1 was rebased.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|After verifying it via mvn package and viewing the model.html, when pressing the link, it links here [1].
Inside the [] you should write the words appear as a link on the page.
i.e. [Cinder] would make the word &quot;Cinder&quot; into a link to [1] 

[1]
https://wiki.openstack.org/wiki/Cinder
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Do you suggest to add it to the documentation?
Or maybe not so users won't get involved with the configuration itself.
|Done
|I've change the relevant cases for this patch.

To Be Continued:
open a new patch regarding to all other cases.
|Done
|Done
|Done
|yes, done
|Done
|Can you please explain a bit more?

In case the configuration deals with dynamic IP addresses, do you suggest to add a note here says: &quot;dont forget to remove it once you done using this environment&quot;?
|replacing &quot;may&quot; with &quot;will&quot; will do the job.
|Done
|Done
|Done
|Done
|Nothing is wrong.
The &quot;ISCSI_SD_NAME&quot; shows more clearly it's an ISCSI storage domain.
|Done
|Same - just makes more clear that it deals with iSCSI SD.
|Done
|Changed according to Nir's suggestion.
|The API term is &quot;target&quot;.
Therefore I choose to replace it with &quot;TARGET_NAME&quot; (as showed on the UI)
|Changed according to Nir's suggestion.
|Done
|Done
|I've used the same terminology as used at all the other examples on the project. [1]

[1] https://github.com/oVirt/ovirt-engine-sdk/tree/master/sdk/examples
|Changed according to Ondra's suggestion.
|Done
|Done
|Done.
I've removed all the constants' occurrences,
|For making a partition between the types.StorageDomain constants and the types.LogicalUnit constants.
|Done
|Done
|Done
|Since DISK0 is being created as a part of the 'hotplug_disk' test, which comes some tests after the 'snapshots_merge' test, we can't use it for this case.
|Done
|Done
|Done
|Done
|Since we're dealing with disk guids instead of disk images, and regarding that 'setDisks' now gets Set&lt;Guid&gt; according to this patch, I thought that move is a right one.
|Done
|In order to stick the original code as much as I can, I've converted the loop into a stream, but used 'disksNotExistInDbIds' as List&lt;String&gt; instead of 'String' as suggested.
|Done
|Accidentally - left over from a change I did and forgot to change it back.
|We don't :)
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I will take care of it
|Done
|Done
|As we discussed on mail, I've created a new class named 'DiskExistenceValidator' which contains the 'diskImagesNotExist()' method.

This way we can avoid using an empty ArrayList on 'CreateAllSnapshotsForVmCommand'.

Also, I've added a new test for checking the 'diskImagesNotExist()' method.
|Done
|Done
|I thought that 'getParameters().getDiskIds()' doesn't need a parameter since it's a getter.
|Done
|Changed it, although it seems to me that disk ID is more unique then disk alias, and using it is unambiguous.
|Done
|Done
|Done
|Done
|Can you please explain?
|Done
|I supposed it is, but changed it anyway
|Done
|Done
|Done
|As a result of the import, you can change it to types.DiskStatus.OK
|Done
|Done
|I've followed validator/storage/DiskValidator#isDiskAttachedToVm.
|Since the 'disks' parameter can be a list of disks, in case of more than one disk is not attached, showing the error for each one disk at a time can be annoying, rather than showing one error for all those disks at once.
|Can we take in account removing that blank line?
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 1:

(11 comments)
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 3:

(6 comments)
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1:

(11 comments)
|Patch Set 2:

(1 comment)
|Uploaded patch set 3: Commit message was updated.
|Patch Set 3:

(1 comment)

Still need to verify it. (I've only based on the 'preview' plugin on IntelliJ).
Is there a way to verify the changes locally?
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(14 comments)
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 3.
|Patch Set 2:

(1 comment)
|Patch Set 3: Verified+1
|Patch Set 3:

(4 comments)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Work for me - running the OST env. on my host.
A verification for running the tests using jenkins is needed
|Abandoned

This is not the reason for the test's failure.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned
|Patch Set 1:

Since https://gerrit.ovirt.org/#/c/75500/ was merged, this patch can be abandoned.
|Patch Set 1: Verified-1

The storage team hasn't found a solution yet.
Therefore, it's a bit early to revert the 'skip' patch.
Since it still fails on both 4.1 and master suits, for now it's better to skip the test on both suites.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1:

Due to a known issue with the VMs on suite-3.6, the patch was only verified on 4.1 basic suite.
|Patch Set 1:

As mentioned on the commit message, according to the patch [1] which fixed the master suite, we applied it also on the other suites.

[1]
https://gerrit.ovirt.org/#/c/75500/
|Patch Set 1: Verified+1

The 3.6 deployment still crashes, so verification for 3.6 suite still needed.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

Not yet - once the VMs issue will be fixed I'll verify it.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6:

(8 comments)
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Uploaded patch set 8.
|Patch Set 7:

(16 comments)
|Patch Set 8: Verified+1
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 1.
|Patch Set 1:

(1 comment)
|Patch Set 1:

(4 comments)
|Uploaded patch set 2.
|Patch Set 2:

(2 comments)
|Uploaded patch set 3.
|Patch Set 3:

(1 comment)
|Uploaded patch set 4.
|Patch Set 4: Verified+1
|Patch Set 4:

Checked for:
UI: snapshots with image disks &amp; no disks.
SDK: direct lun disk(s), image(s), not exist disk(s)
|Patch Set 4:

(1 comment)
|Uploaded patch set 5: Commit message was updated.
|Patch Set 5:

(4 comments)
|Uploaded patch set 6: Commit message was updated.
|Uploaded patch set 7: Patch Set 6 was rebased.
|Uploaded patch set 8: Commit message was updated.
|Patch Set 3:

(1 comment)
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Verified: UI: created snapshots for 0/1 disk images
SDK: testes for 0/1/2 unattached disks.
|Uploaded patch set 2.
|Patch Set 2: Verified+1

Verified: UI: created snapshots for 0/1 disk images
SDK: testes for 0/1/2 unattached disks.
|Patch Set 2:

(1 comment)
|Patch Set 2:

(3 comments)
|Uploaded patch set 3: Commit message was updated.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Abandoned
|Patch Set 1: Code-Review+1

(1 comment)
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1:

A bugzilla bug was opened (and closed) regarding this patch:
https://bugzilla.redhat.com/show_bug.cgi?id=1461384
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

In order to verify this patch, and due to a known issue with 003_00_metrics_bootstrap.py test's failure, I've removed it locally.
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1:

No, there isn't after this patch.
|Patch Set 1:

In order to verify this patch, and due to a known issue with 003_00_metrics_bootstrap.py test's failure, I've removed it locally.
|Uploaded patch set 2.
|The result is not printed
|one parameter args is missing.
|This function should also be modified, since the parameter changes.
|Done
|Done
|The directory should be policy.d
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|Done
|I will remove this check in the new patch and let libvirt do it.
|Federico, thanks for ur comment. There actually exist the problem that tune info is lost.

Collecting blockIoTune in the vm stats thread is one solution. However, it may be not proper for the following reasons:
1. The tune info doesn't change frequently, and collecting it in vm stats thread may waste efforts. This info can be changed in self.conf each time it is set. 
2. It is saved in self.conf if tune info is included when vm is created as in patch http://gerrit.ovirt.org/#/c/14636/

There actually exist the problem that tune info is lost when vdsm crashes between set and save. This may be fixed by getting tune info from libvirt when vm is recovered after vdsm service is restarted.The implementation can be getting that info in _getUnderlyingDriveInfo. We may discussed on this for a better solution.
|Done
|Done
|Removed
|Removed
|Done
|Done
|Done
|Done
|In the new patch, I distinguish exception and non-exception error, and simplify the return value process. I will add a new function to define.py in a separate patch.
|Done
|Done
|Done
|Done
|This is not quite easy to follow. Could u change it a little bit?
|Giuseppe,
I agree ur idea to abstract some basic functions in utils. Is it better to use a base class which has setUp, assertOK and other basic functions? Any network or mom test can derived from that in utils. Where do you think is a better place for these derived class? Test file or util? I saw u put VdsProxy in the test file and later move them to util. Why?
|Done. Good catch.
|This part is replaced by filter function considering to make it more readable and simpler.
|This part is replaced by filter function considering to make it more readable and simpler.
|The name is quite confusing though vmsStats is not override since it use vmStats different from vmsStats. I have fixed this.
|I move this part to testBalloonShrink and testBalloonGrow since it is not used when running ksm test.
|Done
|Done
|Done
|MOM policy engine wake up every 10s, so in ksm it sleeps 10 secs. However, in balloon test it requires three times to get to the final value and should wait policy engine waking up three times, so I let it sleep 35 secs (The test may fail for exact 30s , so I add 5 secs ) .

I think this is a little long though it is right so I change the BalloonRatio for both grow and shrink to make it sleep less time. I also add slowtest decoration.
|If it is not root, it will raise Exception: No permission to read file: /etc/pki/vdsm/keys/vdsmkey.pem
|Sorry Guiseppe, I don't quite follow ur comment here. I slightly changed this part. I place arrange part in _prepare and act in _setPolicy. The final result is checked in _checkResult. Could u explain more to me? Thanks.
|Done
|Done
|SUCCESS is used in the new version. More work to move common functions into utils will be submitted in a new patch
|Done
|If filter is used, it requires two loops and maybe this way is simpler.
|Done
|Done
|Done
|Done
|sorry. I am not quite sure about this patch for libvirt requirement.
|The grow_guest function is invoked under condition host_free_percent&gt;=pressure_threshold(0.2). 
pressure_critial is 0.05, so host_free_percent&gt;pressure_criitial is always satisfied.
|If balloon is not enabled, the guest may be growed? Does this work as designed?
|Done
|Done
|I think this is all right, since policy.d contains only policies and no code resides in that directory. This is verified.
|The policy file may be named in a better way.
|Policies need to be cleared before load the initial policy. Otherwise, old policies may still exist.
|One minor question. What's the advantage of this method comparing with the original imp.find_module method?
|self.fields has be initialized in __init__
|Should print exist in test case?
|Could u remind me why do we need conf?
|Patch Set 6: I would prefer that you didn't submit this

(1 inline comment)


|Uploaded patch set 8.
|Patch Set 7: (3 inline comments)


|Patch Set 8: Verified

Add jsonrpc related code and fix some bugs in vdsClient.
|Uploaded patch set 9.
|Patch Set 9: Verified

This patch requires mom 0.3.2
|Uploaded patch set 10.
|Patch Set 9: (1 inline comment)


|Patch Set 10: Verified


|Uploaded patch set 11.
|Patch Set 10: (1 inline comment)


|Patch Set 11: Verified


|Patch Set 11:

Hi Dan, I think resetMomPolicy is useful in testing. We need to change(set) policy in such kind of testing and it is better to reset it to initial state after testing.
|Patch Set 11:

Dan, another advantage of resetPolicy is that it can reset policy to init state without restart vdsm.
|Patch Set 11:

The patch for balloon and ksm support http://gerrit.ovirt.org/#/c/16728/ relies on multipolicy. Ovirt 3.3 should support balloon and ksm.
This patch completes multi policy by adding APIs.
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Patch Set 12:

Dan, I have rebased this patch and added commit message details to it.
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Patch Set 13:

Dan, have rebased and retested.
|Uploaded patch set 14.
|Patch Set 14: Verified+1

The network functional tests fail and seem not related to this patch.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 3:

(1 comment)
|Patch Set 4: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Uploaded patch set 7.
|Patch Set 7: Verified


|Uploaded patch set 8.
|Uploaded patch set 9.
|Patch Set 9: Verified+1
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Patch Set 9:

(7 comments)
|Uploaded patch set 11.
|Patch Set 11: Verified+1
|Patch Set 10:

(6 comments)
|Uploaded patch set 12.
|Patch Set 12: Verified+1
|Uploaded patch set 13.
|Patch Set 13: Verified+1
|Uploaded patch set 14.
|Patch Set 13:

(16 comments)
|Patch Set 14: Verified+1
|Patch Set 14:

(2 comments)
|Abandoned
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Abandoned
|Patch Set 3:

(1 comment)

Only require some minor change.
|Abandoned

This is abandoned since the disk IO auto tuning is not adopted.
|Abandoned

This is abandoned since the disk IO auto tuning is not adopted.
|Uploaded patch set 2.
|Abandoned

This is abandoned since the dependency patch is abandoned.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Abandoned

This is abandoned since the disk IO auto tuning is not adopted.
|Abandoned

This is abandoned since the disk IO auto tuning is not adopted.
|Abandoned
|Uploaded patch set 2.
|Abandoned
|Patch Set 1: Verified+1
|Patch Set 2:

Thanks Antoni, It is good suggestion to use a decorator to implicitly refresh the stats.
|Patch Set 2:

Giuseppe, Thanks. I agree that it will be clearer if we split it. We may use one class VdsProxy and group the methods by functionality(e.g. net, storage, mom). Then we can call VdsProxy.net.method().
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 6.
|Patch Set 5: (2 inline comments)


|Patch Set 6: Verified


|Uploaded patch set 7.
|Patch Set 6: (12 inline comments)


|Patch Set 7: Verified


|Uploaded patch set 8.
|Uploaded patch set 9.
|Uploaded patch set 10.
|Patch Set 10: Verified+1
|Uploaded patch set 11.
|Patch Set 10:

(7 comments)
|Patch Set 11: Verified+1
|Patch Set 1: Verified+1
|Abandoned
|Patch Set 1: Verified+1
|Patch Set 1: Verified


|Patch Set 1:

Adam, never mind. I will abandon this.
|Abandoned

This bug has been fixed.
|Patch Set 1: (1 inline comment)


|Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)


|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Verified


|Patch Set 2:

Martin,
Thanks for ur comments. I understand that mom-0.3.2 still satisfies the &gt;= 0.3.1.1 condition. However, using mom-0.3.2 makes it easier without effort for additional patching on 0.3.1.1. Moreover, the reset policy API in mom-0.3.2 is needed in multi-policy support like in http://gerrit.ovirt.org/#/c/12466/ .
|Patch Set 1: (2 inline comments)


|Patch Set 5: Looks good to me, but someone else must approve


|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7: (1 inline comment)


|Patch Set 7:

This is abandoned since it has similar code in http://gerrit.ovirt.org/#/c/16728/
|Patch Set 5: Looks good to me, but someone else must approve

(1 inline comment)


|Uploaded patch set 7.
|Patch Set 7: Verified


|Patch Set 7:

This is abandoned since it has similar code in http://gerrit.ovirt.org/#/c/16728/
|Patch Set 3: I would prefer that you didn't submit this

It's better to put all the policies in a single directory.
This patch is expected to require mom 0.3.1 and Adam has tagged that.
|Patch Set 4:

I asked Adam to merge ur patch in http://gerrit.ovirt.org/#/c/15801/ yesterday. I guess he will retag it. U can check it and modify ur code accordingly.
|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)


|Uploaded patch set 3.
|Patch Set 3: Verified


|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)

One minor question.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)


|Uploaded patch set 2.
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Fails; I would prefer that you didn't submit this

(1 inline comment)

I think the reconfig should also be called in policy engine for load_policy, otherwise the test http://gerrit.ovirt.org/#/c/15476/ will fail due to no collectors obtained from policy it self.
|Uploaded patch set 2.
|Patch Set 2: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Uploaded patch set 2.
|Patch Set 2: (1 inline comment)


|Patch Set 1: Looks good to me, but someone else must approve


|Uploaded patch set 2.
|Patch Set 2: Looks good to me, but someone else must approve


|Patch Set 1:

Should the file mom/Policy/spark.py be modified? It is borrowed from other project and uses a different kind of code style.
|Uploaded patch set 2.
|Patch Set 2: I would prefer that you didn't submit this

Sorry Adam, it seems that when I pushed my patch, it refreshed all of your patches in wip it relies on. 

I give you -a since since I am not sure if the file mom/Policy/spark.py be modified? It is borrowed from other project.
|Patch Set 1:

This patch has been merged with &quot;vdsm: Add blkIoTune support at vm creation&quot;.
|Patch Set 1: Abandoned

Merged into &quot;vdsm: Add blkIoTune support at vm creation&quot;
|Uploaded patch set 9.
|Uploaded patch set 10.
|Uploaded patch set 13.
|Patch Set 13:

rebased and verified
|Patch Set 1: Verified


|Uploaded patch set 2.
|Patch Set 2: Verified

rebased and verified
|Uploaded patch set 3.
|Patch Set 3:

rebased and verified
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified

verified and rebased
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Patch Set 4: Verified


|Uploaded patch set 5.
|Patch Set 5: Verified

verified and rebased
|Uploaded patch set 6.
|Uploaded patch set 7.
|Patch Set 7:

rebased and verified.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Patch Set 6: No score


|Uploaded patch set 7.
|Patch Set 7:

rebased and verified
|Uploaded patch set 8.
|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Patch Set 6: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Uploaded patch set 2.
|Patch Set 1: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Uploaded patch set 6.
|Uploaded patch set 7.
|Uploaded patch set 8.
|Patch Set 8: Verified


|Uploaded patch set 2.
|Uploaded patch set 3.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified


|Done
|copy of console output:

downloadImage
	&lt;methodArgs&gt; &lt;spUUID&gt; &lt;sdUUID&gt; &lt;imgUUID&gt; [&lt;volUUID&gt;]
	Download an image from a remote endpoint using the specified methodArgs.
	Arguments:
	    methodArgs:    Python dictionary literal specifying the download
	                   method. The dictionary must be quoted (e.g.
	                   '{&quot;methodArgs&quot;: {&quot;url&quot;: ...}')
	                   Keys:
	                   - url:         url of the source image
	                   - headers:     dictionary of headers (optional)
	                   - method:      currently only &quot;http&quot; is supported
	    spUUID:        UUID of the Storage Pool associated with the Image
	    sdUUID:        UUID of the Storage Domain associated with the Image
	    imgUUID:       UUID of the Image
	    volUUID:       UUID of the Volume (optional)
	Returns: A task UUID
	Example:
	vdsClient -s 0 downloadImage \ 
	  {&quot;url&quot;: &quot;http://example.com/myimage&quot;, &quot;headers&quot;: {&quot;Foo&quot;: &quot;Bar&quot;}, \ 
	  &quot;method&quot;: &quot;http&quot;} spUUID sdUUID imgUUID
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

The only ways to make the documentation formatted properly are to either add commas at the end of each line or to add tabs at the beginning of each line. All of the other documentation in this file uses commas. See http://imgur.com/hSGZ5Ab

If neither tabs or commas are used, it looks like http://imgur.com/d4iqtvI - this makes it hard to determine which lines are documentation for downloadImage and which lines are other methods
|Uploaded patch set 3: Patch Set 2 was rebased.
|Uploaded patch set 4.
|Uploaded patch set 5.
|Patch Set 5: Verified+1
|Patch Set 5:

(1 comment)
|Uploaded patch set 6.
|Patch Set 6: Verified+1
|Patch Set 6: Code-Review+1
|Uploaded patch set 7.
|Patch Set 7: Verified+1
|Patch Set 7:

output can be seen at http://imgur.com/2qlkbfI
|Uploaded patch set 8.
|Patch Set 7:

(1 comment)

added quotes
|Patch Set 8: Verified+1

screenshot of output: http://i.imgur.com/YPwyCCI.png
|Patch Set 8:

Frankly, posting a clean image is better than text. It allows you to see *exactly* what I see, with no chance of font issues or anything else getting in the way. Thank you for your opinion, but I will continue to post screenshots. Other teams in oVirt use screenshots in gerrit as well.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2: Commit message was updated.
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Abandoned

abandoned. see https://gerrit.ovirt.org/#/c/37934/
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 2:

I've looked into tox / virtualenv. I'm not familiar with it, but trying to get up to speed.

If tox / virtualenv is the more pythonic way of doing it, then I think I lean towards that. From the doc: &quot;virtualenv creates a folder which contains all the necessary executables to use the packages that a Python project would need.&quot; Sounds like exactly what we're trying to achieve.

Federico, can you point us at the OpenStack code that uses it?

Abandoning this patch. Thanks!
|Abandoned
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Patch Set 1: Code-Review+1
|Uploaded patch set 1.
|Patch Set 1: Code-Review-1

We need more information from the reporter.
|Is it possible to mention here which elements are required when updating a disk attachment, as opposed to optional? For example:

&quot;When updating a disk attachment, the `bootable`, `interface`, and `disk` elements are required.&quot;
|Done
|Done
|Done
|Done
|Hmm, if I understand the concept correctly, it might be phrased like this:

&quot;The user provides the value in bytes, and the {engine-name} rounds the value down to the nearest lower MiB value.&quot;

Depending on whether we expect our average API user to understand that concept, you could also add the example you suggested:

&quot;For example, if the user enters a value of 1073741825 (1 GiB + 1 byte), then the {engine-name} will truncate that value to the nearest lower MiB boundary: in this case. 1073741825 (1 GiB).&quot;

(Assuming that &quot;1 Gib&quot; above is supposed to be &quot;1 GiB&quot;?)
|Can't seem to publish direct edits, so here they are, line by line:

* Indicates whether a template is allowed to be registered 
* with only some of its disks.
|* If this flag is `true`, the {engine-name} will not fail in the 
* validation process if an image is not found, but instead it will
* allow the template to be registered without the missing disks.
|* This is mainly used during registration of a template 
* when some of the storage domains are not available.
|We do use 'vNIC profile' quite frequently in our other documentation, so I think that works fine here as well.
|Uploaded patch set 1.
|Patch Set 2: Code-Review+1

Corrections look good.
|Patch Set 6:

(1 comment)

&gt; Lucy, I'm approving this change because we need to merge it. If
 &gt; there is anything to change in the documentation feel free to
 &gt; submit a new patch.

OK, sure. The base documentation looked fine to merge. I think additional information from Tal about which elements are required (vs optional) would be a useful addition; if you agree, and we can get that information, either docs or Tal can submit a new patch.
|Uploaded patch set 1.
|Uploaded patch set 6.
|Patch Set 6: Documentation+1

Thanks for confirming, Juan. 
A quick note for tracking purposes: I only updated the documentation that was identified as added by Jakub's patches. There were two other existing pieces in HostOperatingSystem.java that I did not edit (though they look OK to me).
|Patch Set 8: Documentation-1

I'm not sure what happened to the documentation updates. It looks like all of the changes were rolled back. Please let me know if you need me to apply them again.
|Patch Set 9: Documentation+1

Re-adding my +1 for the restored docs changes.
|Patch Set 1: Code-Review+1

Hi Juan,

Sorry for the delay on this one. The update looks good, and I can confirm that using dashes instead of slashes works with our tools.

Let me know if anything further is required here.
|Uploaded patch set 1.
|Patch Set 2: Published edit on patch set 1.
|Patch Set 2:

(4 comments)

Hi Juan,

Thanks for the review! I've made the changes you suggested (and updated the tag names in my other documents as well).

Just let me know if any further updates are required.
|Patch Set 3: Documentation+1

Thanks, Juan. Looks good to me.
|Patch Set 3: Published edit on patch set 2.
|Patch Set 3:

Made some minor updates to the spacing and numbering, so that the procedure for 'Requesting an authenticated session' renders correctly
|Patch Set 3: Documentation+1
|Patch Set 2: Documentation+1

Thanks, Juan. This should work well for pulling the same content downstream with different naming.
|Patch Set 2:

(1 comment)
|Patch Set 4:

(3 comments)

Made some suggestions for updating the phrasing.
|Patch Set 5: Documentation+1

Looks much better. Thanks, Maor!
|Patch Set 5: Documentation+1

Looks much better now. Thanks, Maor!
|Uploaded patch set 1.
|Uploaded patch set 1.
|Patch Set 5:

(1 comment)
|Uploaded patch set 1.
|Patch Set 3:

Sorry for the delay. I've asked Tahlia to take a look at this one.

I should also note, it appears that both Tahlia and I have lost our permissions to grant Documentation +1. Juan, can you help with that?
|Patch Set 2:

Hmm. I should have checked this earlier, sorry.

My email is incorrect. Should be lbopf@redhat.com (is currently written lbofp@redhat.com)

We also have another writer, Emma Heftman (eheftman@redhat.com), to add to the list. I didn't mention Emma yet, as I haven't introduced Emma to the processes for updating the REST API docs.

Juan, shall I submit a new patch for these two updates?
|Patch Set 1:

Thanks, Juan. I've asked Emma to create an account.

I can confirm that my email is now correct.
|Patch Set 1:

&gt; Lucy, I'd appreciate your teams' advice on the structure, wording,
 &gt; style, etc, of this document.

Sure. We're quite full up with GA work until the middle of next week, so I'll wait until then to ask a writer (or two) to review. If you need this merged earlier, we can arrange to review it in a new patch.
|Patch Set 2:

&gt; Lucy, is it of OK if we merge this now and review/modify it later?

No problem. We'll include reviewing this text as part of a catch-all 4.2 'upstreaming the SDK guides' bug.
|Patch Set 1:

The section was originally reviewed by Megan, and looks like the changes are minor. Megan, can you give the changes a quick look, and if all still seems OK, add your +1?
|Indentation is same as without spaces, but it can be confusing, so I will remove them.
|Uploaded patch set 1.
|Uploaded patch set 2.
|Patch Set 1: Verified+1
|Patch Set 2: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Patch Set 2: Verified+1
|Patch Set 2:

(1 comment)
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 1.
|Patch Set 1: Verified+1
|Uploaded patch set 2.
|Uploaded patch set 3.
|Patch Set 3: Verified+1

OpenStack Image provider added, imported and exported image.
OpenStack Volume added and attached.
|Uploaded patch set 4: Patch Set 3 was rebased.
|Uploaded patch set 5: Patch Set 4 was rebased.
|Uploaded patch set 1.
|Patch Set 1: Verified+1

Manually tested.
|Uploaded patch set 3.
|Patch Set 3: Verified+1
|Uploaded patch set 4.
|Patch Set 4: Verified+1
